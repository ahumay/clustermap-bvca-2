if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2322";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__14884__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__14884 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__14884__delegate.call(this, args);
    };
    G__14884.cljs$lang$maxFixedArity = 0;
    G__14884.cljs$lang$applyTo = function(arglist__14885) {
      var args = cljs.core.seq(arglist__14885);
      return G__14884__delegate(args);
    };
    G__14884.cljs$core$IFn$_invoke$arity$variadic = G__14884__delegate;
    return G__14884;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3546__auto__ = ty;
    if (cljs.core.truth_(and__3546__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3546__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4414__auto___14886 = len;
  var i_14887 = 0;
  while (true) {
    if (i_14887 < n__4414__auto___14886) {
      new_arr[i_14887] = arr[i_14887];
      var G__14888 = i_14887 + 1;
      i_14887 = G__14888;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__14889__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__14889 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__14889__delegate.call(this, array, i, idxs);
    };
    G__14889.cljs$lang$maxFixedArity = 2;
    G__14889.cljs$lang$applyTo = function(arglist__14890) {
      var array = cljs.core.first(arglist__14890);
      arglist__14890 = cljs.core.next(arglist__14890);
      var i = cljs.core.first(arglist__14890);
      var idxs = cljs.core.rest(arglist__14890);
      return G__14889__delegate(array, i, idxs);
    };
    G__14889.cljs$core$IFn$_invoke$arity$variadic = G__14889__delegate;
    return G__14889;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__14891__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__14891 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14891__delegate.call(this, array, idx, idx2, idxv);
    };
    G__14891.cljs$lang$maxFixedArity = 3;
    G__14891.cljs$lang$applyTo = function(arglist__14892) {
      var array = cljs.core.first(arglist__14892);
      arglist__14892 = cljs.core.next(arglist__14892);
      var idx = cljs.core.first(arglist__14892);
      arglist__14892 = cljs.core.next(arglist__14892);
      var idx2 = cljs.core.first(arglist__14892);
      var idxv = cljs.core.rest(arglist__14892);
      return G__14891__delegate(array, idx, idx2, idxv);
    };
    G__14891.cljs$core$IFn$_invoke$arity$variadic = G__14891__delegate;
    return G__14891;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj14894 = {};
  return obj14894;
}();
cljs.core.IFn = function() {
  var obj14896 = {};
  return obj14896;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = cljs.core._invoke[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._invoke["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj14898 = {};
  return obj14898;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3546__auto__ = value;
    if (and__3546__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4185__auto__ = value == null ? null : value;
    return function() {
      var or__3558__auto__ = cljs.core._clone[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._clone["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj14900 = {};
  return obj14900;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._count[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._count["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj14902 = {};
  return obj14902;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._empty[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._empty["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj14904 = {};
  return obj14904;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._conj[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._conj["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj14906 = {};
  return obj14906;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._nth[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._nth["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._nth[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._nth["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj14908 = {};
  return obj14908;
}();
cljs.core.ISeq = function() {
  var obj14910 = {};
  return obj14910;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._first[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._first["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._rest[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._rest["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj14912 = {};
  return obj14912;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._next[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._next["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj14914 = {};
  return obj14914;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._lookup[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._lookup["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._lookup[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._lookup["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj14916 = {};
  return obj14916;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj14918 = {};
  return obj14918;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._dissoc[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._dissoc["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj14920 = {};
  return obj14920;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._key[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._key["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._val[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._val["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj14922 = {};
  return obj14922;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._disjoin[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._disjoin["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj14924 = {};
  return obj14924;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._peek[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._peek["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._pop[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._pop["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj14926 = {};
  return obj14926;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc_n[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj14928 = {};
  return obj14928;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._deref[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._deref["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj14930 = {};
  return obj14930;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj14932 = {};
  return obj14932;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._meta[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._meta["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj14934 = {};
  return obj14934;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._with_meta[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._with_meta["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj14936 = {};
  return obj14936;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._reduce[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._reduce["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3546__auto__ = coll;
      if (and__3546__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4185__auto__ = coll == null ? null : coll;
      return function() {
        var or__3558__auto__ = cljs.core._reduce[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._reduce["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj14938 = {};
  return obj14938;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj14940 = {};
  return obj14940;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._equiv[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._equiv["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj14942 = {};
  return obj14942;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._hash[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._hash["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj14944 = {};
  return obj14944;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._seq[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._seq["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj14946 = {};
  return obj14946;
}();
cljs.core.IList = function() {
  var obj14948 = {};
  return obj14948;
}();
cljs.core.IRecord = function() {
  var obj14950 = {};
  return obj14950;
}();
cljs.core.IReversible = function() {
  var obj14952 = {};
  return obj14952;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._rseq[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._rseq["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj14954 = {};
  return obj14954;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._entry_key[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._entry_key["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._comparator[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._comparator["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj14956 = {};
  return obj14956;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3546__auto__ = writer;
    if (and__3546__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4185__auto__ = writer == null ? null : writer;
    return function() {
      var or__3558__auto__ = cljs.core._write[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._write["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3546__auto__ = writer;
    if (and__3546__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4185__auto__ = writer == null ? null : writer;
    return function() {
      var or__3558__auto__ = cljs.core._flush[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._flush["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj14958 = {};
  return obj14958;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._pr_writer[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj14960 = {};
  return obj14960;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3546__auto__ = d;
    if (and__3546__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4185__auto__ = d == null ? null : d;
    return function() {
      var or__3558__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj14962 = {};
  return obj14962;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs.core._notify_watches[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs.core._add_watch[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._add_watch["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = cljs.core._remove_watch[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj14964 = {};
  return obj14964;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._as_transient[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._as_transient["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj14966 = {};
  return obj14966;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj14968 = {};
  return obj14968;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj14970 = {};
  return obj14970;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj14972 = {};
  return obj14972;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj14974 = {};
  return obj14974;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3546__auto__ = tcoll;
    if (and__3546__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4185__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3558__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj14976 = {};
  return obj14976;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._compare[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._compare["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj14978 = {};
  return obj14978;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._drop_first[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._drop_first["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj14980 = {};
  return obj14980;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._chunked_first[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj14982 = {};
  return obj14982;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3546__auto__ = coll;
    if (and__3546__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4185__auto__ = coll == null ? null : coll;
    return function() {
      var or__3558__auto__ = cljs.core._chunked_next[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj14984 = {};
  return obj14984;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._name[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._name["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._namespace[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._namespace["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj14986 = {};
  return obj14986;
}();
cljs.core.IReset = function() {
  var obj14988 = {};
  return obj14988;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3546__auto__ = o;
    if (and__3546__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4185__auto__ = o == null ? null : o;
    return function() {
      var or__3558__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj14990 = {};
  return obj14990;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3546__auto__ = o;
      if (and__3546__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4185__auto__ = o == null ? null : o;
      return function() {
        var or__3558__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__14991 = i + 2;
        var G__14992 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__14991;
        h1 = G__14992;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj14994 = {};
  return obj14994;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__14995 = i + 1;
          var G__14996 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__14995;
          hash = G__14996;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj15000 = {};
      return obj15000;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__15002 = o;
    if (G__15002) {
      var bit__4201__auto__ = G__15002.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4201__auto__ || G__15002.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3546__auto__) {
        return b.ns;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3969__auto__ = self__._hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__15004 = null;
  var G__15004__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__15004__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__15004 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15004__2.call(this, self__, coll);
      case 3:
        return G__15004__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15004.cljs$core$IFn$_invoke$arity$2 = G__15004__2;
  G__15004.cljs$core$IFn$_invoke$arity$3 = G__15004__3;
  return G__15004;
}();
cljs.core.Symbol.prototype.apply = function(self__, args15003) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15003)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__15006 = value;
  if (G__15006) {
    var bit__4208__auto__ = G__15006.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4208__auto__ || G__15006.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__15006.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15006);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15006);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__15008 = coll;
      if (G__15008) {
        var bit__4201__auto__ = G__15008.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4201__auto__ || G__15008.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__15010 = coll;
      if (G__15010) {
        var bit__4201__auto__ = G__15010.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4201__auto__ || G__15010.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__15012 = coll;
      if (G__15012) {
        var bit__4201__auto__ = G__15012.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4201__auto__ || G__15012.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__15014 = coll;
      if (G__15014) {
        var bit__4201__auto__ = G__15014.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4201__auto__ || G__15014.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__15015__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__15016 = y;
            var G__15017 = cljs.core.first.call(null, more);
            var G__15018 = cljs.core.next.call(null, more);
            x = G__15016;
            y = G__15017;
            more = G__15018;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__15015 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15015__delegate.call(this, x, y, more);
    };
    G__15015.cljs$lang$maxFixedArity = 2;
    G__15015.cljs$lang$applyTo = function(arglist__15019) {
      var x = cljs.core.first(arglist__15019);
      arglist__15019 = cljs.core.next(arglist__15019);
      var y = cljs.core.first(arglist__15019);
      var more = cljs.core.rest(arglist__15019);
      return G__15015__delegate(x, y, more);
    };
    G__15015.cljs$core$IFn$_invoke$arity$variadic = G__15015__delegate;
    return G__15015;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__15020 = n + 1;
      var G__15021 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__15022 = cljs.core.next.call(null, coll__$1);
      n = G__15020;
      hash_code = G__15021;
      coll__$1 = G__15022;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__15023 = n + 1;
      var G__15024 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__15025 = cljs.core.next.call(null, coll__$1);
      n = G__15023;
      hash_code = G__15024;
      coll__$1 = G__15025;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__15026 = nval;
            var G__15027 = n + 1;
            val = G__15026;
            n = G__15027;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__15028 = nval;
          var G__15029 = n + 1;
          val__$1 = G__15028;
          n = G__15029;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__15030 = nval;
          var G__15031 = n + 1;
          val__$1 = G__15030;
          n = G__15031;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__15032 = nval;
            var G__15033 = n + 1;
            val = G__15032;
            n = G__15033;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__15034 = nval;
          var G__15035 = n + 1;
          val__$1 = G__15034;
          n = G__15035;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__15036 = nval;
          var G__15037 = n + 1;
          val__$1 = G__15036;
          n = G__15037;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__15039 = x;
  if (G__15039) {
    var bit__4208__auto__ = G__15039.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4208__auto__ || G__15039.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__15039.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__15039);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__15039);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__15041 = x;
  if (G__15041) {
    var bit__4208__auto__ = G__15041.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4208__auto__ || G__15041.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__15041.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__15041);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__15041);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__15042 = sn;
      s = G__15042;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__15043__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__15044 = conj.call(null, coll, x);
          var G__15045 = cljs.core.first.call(null, xs);
          var G__15046 = cljs.core.next.call(null, xs);
          coll = G__15044;
          x = G__15045;
          xs = G__15046;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__15043 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15043__delegate.call(this, coll, x, xs);
    };
    G__15043.cljs$lang$maxFixedArity = 2;
    G__15043.cljs$lang$applyTo = function(arglist__15047) {
      var coll = cljs.core.first(arglist__15047);
      arglist__15047 = cljs.core.next(arglist__15047);
      var x = cljs.core.first(arglist__15047);
      var xs = cljs.core.rest(arglist__15047);
      return G__15043__delegate(coll, x, xs);
    };
    G__15043.cljs$core$IFn$_invoke$arity$variadic = G__15043__delegate;
    return G__15043;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__15048 = cljs.core.next.call(null, s);
      var G__15049 = acc + 1;
      s = G__15048;
      acc = G__15049;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__15051 = coll;
      if (G__15051) {
        var bit__4201__auto__ = G__15051.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4201__auto__ || G__15051.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__15052 = cljs.core.next.call(null, coll);
              var G__15053 = n - 1;
              coll = G__15052;
              n = G__15053;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__15054 = cljs.core.next.call(null, coll);
              var G__15055 = n - 1;
              var G__15056 = not_found;
              coll = G__15054;
              n = G__15055;
              not_found = G__15056;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__15061 = coll;
          if (G__15061) {
            var bit__4201__auto__ = G__15061.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4201__auto__ || G__15061.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__15062 = coll;
                  if (G__15062) {
                    var bit__4208__auto__ = G__15062.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4208__auto__ || G__15062.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__15062.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__15062);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__15062);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__15063 = coll;
          if (G__15063) {
            var bit__4201__auto__ = G__15063.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4201__auto__ || G__15063.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__15064 = coll;
                  if (G__15064) {
                    var bit__4208__auto__ = G__15064.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4208__auto__ || G__15064.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__15064.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__15064);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__15064);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__15067 = o;
        if (G__15067) {
          var bit__4201__auto__ = G__15067.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4201__auto__ || G__15067.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__15068 = o;
        if (G__15068) {
          var bit__4201__auto__ = G__15068.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4201__auto__ || G__15068.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__15069__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__15070 = ret;
          var G__15071 = cljs.core.first.call(null, kvs);
          var G__15072 = cljs.core.second.call(null, kvs);
          var G__15073 = cljs.core.nnext.call(null, kvs);
          coll = G__15070;
          k = G__15071;
          v = G__15072;
          kvs = G__15073;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__15069 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15069__delegate.call(this, coll, k, v, kvs);
    };
    G__15069.cljs$lang$maxFixedArity = 3;
    G__15069.cljs$lang$applyTo = function(arglist__15074) {
      var coll = cljs.core.first(arglist__15074);
      arglist__15074 = cljs.core.next(arglist__15074);
      var k = cljs.core.first(arglist__15074);
      arglist__15074 = cljs.core.next(arglist__15074);
      var v = cljs.core.first(arglist__15074);
      var kvs = cljs.core.rest(arglist__15074);
      return G__15069__delegate(coll, k, v, kvs);
    };
    G__15069.cljs$core$IFn$_invoke$arity$variadic = G__15069__delegate;
    return G__15069;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__15075__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__15076 = ret;
            var G__15077 = cljs.core.first.call(null, ks);
            var G__15078 = cljs.core.next.call(null, ks);
            coll = G__15076;
            k = G__15077;
            ks = G__15078;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__15075 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15075__delegate.call(this, coll, k, ks);
    };
    G__15075.cljs$lang$maxFixedArity = 2;
    G__15075.cljs$lang$applyTo = function(arglist__15079) {
      var coll = cljs.core.first(arglist__15079);
      arglist__15079 = cljs.core.next(arglist__15079);
      var k = cljs.core.first(arglist__15079);
      var ks = cljs.core.rest(arglist__15079);
      return G__15075__delegate(coll, k, ks);
    };
    G__15075.cljs$core$IFn$_invoke$arity$variadic = G__15075__delegate;
    return G__15075;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3558__auto__ = goog.isFunction(f);
  if (or__3558__auto__) {
    return or__3558__auto__;
  } else {
    var G__15083 = f;
    if (G__15083) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto____$1 = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto____$1)) {
          return or__3558__auto____$1;
        } else {
          return G__15083.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__15083.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__15083);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__15083);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__15085 = null;
  var G__15085__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__15085__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__15085__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__15085__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__15085__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__15085__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__15085__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__15085__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__15085__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__15085__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__15085__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__15085__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__15085__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__15085__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__15085__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__15085__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__15085__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__15085__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__15085__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__15085__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__15085__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__15085__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__15085 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__15085__1.call(this, self__);
      case 2:
        return G__15085__2.call(this, self__, a);
      case 3:
        return G__15085__3.call(this, self__, a, b);
      case 4:
        return G__15085__4.call(this, self__, a, b, c);
      case 5:
        return G__15085__5.call(this, self__, a, b, c, d);
      case 6:
        return G__15085__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__15085__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__15085__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__15085__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__15085__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__15085__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__15085__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__15085__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__15085__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__15085__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__15085__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__15085__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__15085__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__15085__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__15085__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__15085__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__15085__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15085.cljs$core$IFn$_invoke$arity$1 = G__15085__1;
  G__15085.cljs$core$IFn$_invoke$arity$2 = G__15085__2;
  G__15085.cljs$core$IFn$_invoke$arity$3 = G__15085__3;
  G__15085.cljs$core$IFn$_invoke$arity$4 = G__15085__4;
  G__15085.cljs$core$IFn$_invoke$arity$5 = G__15085__5;
  G__15085.cljs$core$IFn$_invoke$arity$6 = G__15085__6;
  G__15085.cljs$core$IFn$_invoke$arity$7 = G__15085__7;
  G__15085.cljs$core$IFn$_invoke$arity$8 = G__15085__8;
  G__15085.cljs$core$IFn$_invoke$arity$9 = G__15085__9;
  G__15085.cljs$core$IFn$_invoke$arity$10 = G__15085__10;
  G__15085.cljs$core$IFn$_invoke$arity$11 = G__15085__11;
  G__15085.cljs$core$IFn$_invoke$arity$12 = G__15085__12;
  G__15085.cljs$core$IFn$_invoke$arity$13 = G__15085__13;
  G__15085.cljs$core$IFn$_invoke$arity$14 = G__15085__14;
  G__15085.cljs$core$IFn$_invoke$arity$15 = G__15085__15;
  G__15085.cljs$core$IFn$_invoke$arity$16 = G__15085__16;
  G__15085.cljs$core$IFn$_invoke$arity$17 = G__15085__17;
  G__15085.cljs$core$IFn$_invoke$arity$18 = G__15085__18;
  G__15085.cljs$core$IFn$_invoke$arity$19 = G__15085__19;
  G__15085.cljs$core$IFn$_invoke$arity$20 = G__15085__20;
  G__15085.cljs$core$IFn$_invoke$arity$21 = G__15085__21;
  G__15085.cljs$core$IFn$_invoke$arity$22 = G__15085__22;
  return G__15085;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args15084) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15084)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__15089 = o;
    if (G__15089) {
      var bit__4208__auto__ = G__15089.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4208__auto__ || G__15089.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__15089.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__15089);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__15089);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3546__auto__ = !(o == null);
    if (and__3546__auto__) {
      var G__15093 = o;
      if (G__15093) {
        var bit__4208__auto__ = G__15093.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4208__auto__ || G__15093.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__15093.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15093);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15093);
      }
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__15094__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__15095 = ret;
            var G__15096 = cljs.core.first.call(null, ks);
            var G__15097 = cljs.core.next.call(null, ks);
            coll = G__15095;
            k = G__15096;
            ks = G__15097;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__15094 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15094__delegate.call(this, coll, k, ks);
    };
    G__15094.cljs$lang$maxFixedArity = 2;
    G__15094.cljs$lang$applyTo = function(arglist__15098) {
      var coll = cljs.core.first(arglist__15098);
      arglist__15098 = cljs.core.next(arglist__15098);
      var k = cljs.core.first(arglist__15098);
      var ks = cljs.core.rest(arglist__15098);
      return G__15094__delegate(coll, k, ks);
    };
    G__15094.cljs$core$IFn$_invoke$arity$variadic = G__15094__delegate;
    return G__15094;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__15100 = x;
    if (G__15100) {
      var bit__4208__auto__ = G__15100.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4208__auto__ || G__15100.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__15100.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__15100);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__15100);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__15102 = x;
    if (G__15102) {
      var bit__4208__auto__ = G__15102.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4208__auto__ || G__15102.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__15102.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__15102);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__15102);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__15104 = x;
  if (G__15104) {
    var bit__4208__auto__ = G__15104.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4208__auto__ || G__15104.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__15104.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__15104);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__15104);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__15106 = x;
  if (G__15106) {
    var bit__4208__auto__ = G__15106.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4208__auto__ || G__15106.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__15106.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__15106);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__15106);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__15108 = x;
  if (G__15108) {
    var bit__4208__auto__ = G__15108.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4208__auto__ || G__15108.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__15108.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__15108);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__15108);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__15110 = x;
  if (G__15110) {
    var bit__4208__auto__ = G__15110.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4208__auto__ || G__15110.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__15110.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__15110);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__15110);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__15112 = x;
    if (G__15112) {
      var bit__4208__auto__ = G__15112.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4208__auto__ || G__15112.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__15112.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__15112);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__15112);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__15114 = x;
  if (G__15114) {
    var bit__4208__auto__ = G__15114.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4208__auto__ || G__15114.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__15114.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__15114);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__15114);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__15116 = x;
  if (G__15116) {
    var bit__4201__auto__ = G__15116.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4201__auto__ || G__15116.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj15120 = {};
    return obj15120;
  };
  var js_obj__1 = function() {
    var G__15121__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__15121 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__15121__delegate.call(this, keyvals);
    };
    G__15121.cljs$lang$maxFixedArity = 0;
    G__15121.cljs$lang$applyTo = function(arglist__15122) {
      var keyvals = cljs.core.seq(arglist__15122);
      return G__15121__delegate(keyvals);
    };
    G__15121.cljs$core$IFn$_invoke$arity$variadic = G__15121__delegate;
    return G__15121;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__15123 = i__$1 + 1;
      var G__15124 = j__$1 + 1;
      var G__15125 = len__$1 - 1;
      i__$1 = G__15123;
      j__$1 = G__15124;
      len__$1 = G__15125;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__15126 = i__$1 - 1;
      var G__15127 = j__$1 - 1;
      var G__15128 = len__$1 - 1;
      i__$1 = G__15126;
      j__$1 = G__15127;
      len__$1 = G__15128;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj15130 = {};
  return obj15130;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__15132 = s;
    if (G__15132) {
      var bit__4208__auto__ = G__15132.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4208__auto__ || G__15132.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__15132.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__15132);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__15132);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__15134 = s;
  if (G__15134) {
    var bit__4208__auto__ = G__15134.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4208__auto__ || G__15134.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__15134.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__15134);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__15134);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3558__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3558__auto__) {
    return or__3558__auto__;
  } else {
    var G__15138 = f;
    if (G__15138) {
      var bit__4208__auto__ = G__15138.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4208__auto__ || G__15138.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__15138.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__15138);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__15138);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__15139__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__15140 = cljs.core.conj.call(null, s, x__$1);
              var G__15141 = etc;
              s = G__15140;
              xs = G__15141;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__15139 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15139__delegate.call(this, x, y, more);
    };
    G__15139.cljs$lang$maxFixedArity = 2;
    G__15139.cljs$lang$applyTo = function(arglist__15142) {
      var x = cljs.core.first(arglist__15142);
      arglist__15142 = cljs.core.next(arglist__15142);
      var y = cljs.core.first(arglist__15142);
      var more = cljs.core.rest(arglist__15142);
      return G__15139__delegate(x, y, more);
    };
    G__15139.cljs$core$IFn$_invoke$arity$variadic = G__15139__delegate;
    return G__15139;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3558__auto__ = cljs.core.seq.call(null, coll);
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__15144 = x;
            if (G__15144) {
              var bit__4201__auto__ = G__15144.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4201__auto__ || G__15144.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__15145 = xs;
        var G__15146 = ys;
        var G__15147 = len;
        var G__15148 = n + 1;
        xs = G__15145;
        ys = G__15146;
        len = G__15147;
        n = G__15148;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__15149 = nval;
          var G__15150 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__15149;
          coll__$1 = G__15150;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__15153 = coll;
      if (G__15153) {
        var bit__4201__auto__ = G__15153.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4201__auto__ || G__15153.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__15154 = coll;
      if (G__15154) {
        var bit__4201__auto__ = G__15154.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4201__auto__ || G__15154.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.completing = function completing(f) {
  return function() {
    var G__15155 = null;
    var G__15155__0 = function() {
      return f.call(null);
    };
    var G__15155__1 = function(x) {
      return x;
    };
    var G__15155__2 = function(x, y) {
      return f.call(null, x, y);
    };
    G__15155 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__15155__0.call(this);
        case 1:
          return G__15155__1.call(this, x);
        case 2:
          return G__15155__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15155.cljs$core$IFn$_invoke$arity$0 = G__15155__0;
    G__15155.cljs$core$IFn$_invoke$arity$1 = G__15155__1;
    G__15155.cljs$core$IFn$_invoke$arity$2 = G__15155__2;
    return G__15155;
  }();
};
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, cljs.core.completing.call(null, f));
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    var ret__$1 = f__$1.call(null, cljs.core.reduced_QMARK_.call(null, ret) ? cljs.core.deref.call(null, ret) : ret);
    if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
      return cljs.core.deref.call(null, ret__$1);
    } else {
      return ret__$1;
    }
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__15156__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__15156 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15156__delegate.call(this, x, y, more);
    };
    G__15156.cljs$lang$maxFixedArity = 2;
    G__15156.cljs$lang$applyTo = function(arglist__15157) {
      var x = cljs.core.first(arglist__15157);
      arglist__15157 = cljs.core.next(arglist__15157);
      var y = cljs.core.first(arglist__15157);
      var more = cljs.core.rest(arglist__15157);
      return G__15156__delegate(x, y, more);
    };
    G__15156.cljs$core$IFn$_invoke$arity$variadic = G__15156__delegate;
    return G__15156;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__15158__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__15158 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15158__delegate.call(this, x, y, more);
    };
    G__15158.cljs$lang$maxFixedArity = 2;
    G__15158.cljs$lang$applyTo = function(arglist__15159) {
      var x = cljs.core.first(arglist__15159);
      arglist__15159 = cljs.core.next(arglist__15159);
      var y = cljs.core.first(arglist__15159);
      var more = cljs.core.rest(arglist__15159);
      return G__15158__delegate(x, y, more);
    };
    G__15158.cljs$core$IFn$_invoke$arity$variadic = G__15158__delegate;
    return G__15158;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__15160__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__15160 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15160__delegate.call(this, x, y, more);
    };
    G__15160.cljs$lang$maxFixedArity = 2;
    G__15160.cljs$lang$applyTo = function(arglist__15161) {
      var x = cljs.core.first(arglist__15161);
      arglist__15161 = cljs.core.next(arglist__15161);
      var y = cljs.core.first(arglist__15161);
      var more = cljs.core.rest(arglist__15161);
      return G__15160__delegate(x, y, more);
    };
    G__15160.cljs$core$IFn$_invoke$arity$variadic = G__15160__delegate;
    return G__15160;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__15162__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__15162 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15162__delegate.call(this, x, y, more);
    };
    G__15162.cljs$lang$maxFixedArity = 2;
    G__15162.cljs$lang$applyTo = function(arglist__15163) {
      var x = cljs.core.first(arglist__15163);
      arglist__15163 = cljs.core.next(arglist__15163);
      var y = cljs.core.first(arglist__15163);
      var more = cljs.core.rest(arglist__15163);
      return G__15162__delegate(x, y, more);
    };
    G__15162.cljs$core$IFn$_invoke$arity$variadic = G__15162__delegate;
    return G__15162;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__15164__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__15165 = y;
            var G__15166 = cljs.core.first.call(null, more);
            var G__15167 = cljs.core.next.call(null, more);
            x = G__15165;
            y = G__15166;
            more = G__15167;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__15164 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15164__delegate.call(this, x, y, more);
    };
    G__15164.cljs$lang$maxFixedArity = 2;
    G__15164.cljs$lang$applyTo = function(arglist__15168) {
      var x = cljs.core.first(arglist__15168);
      arglist__15168 = cljs.core.next(arglist__15168);
      var y = cljs.core.first(arglist__15168);
      var more = cljs.core.rest(arglist__15168);
      return G__15164__delegate(x, y, more);
    };
    G__15164.cljs$core$IFn$_invoke$arity$variadic = G__15164__delegate;
    return G__15164;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__15169__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__15170 = y;
            var G__15171 = cljs.core.first.call(null, more);
            var G__15172 = cljs.core.next.call(null, more);
            x = G__15170;
            y = G__15171;
            more = G__15172;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__15169 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15169__delegate.call(this, x, y, more);
    };
    G__15169.cljs$lang$maxFixedArity = 2;
    G__15169.cljs$lang$applyTo = function(arglist__15173) {
      var x = cljs.core.first(arglist__15173);
      arglist__15173 = cljs.core.next(arglist__15173);
      var y = cljs.core.first(arglist__15173);
      var more = cljs.core.rest(arglist__15173);
      return G__15169__delegate(x, y, more);
    };
    G__15169.cljs$core$IFn$_invoke$arity$variadic = G__15169__delegate;
    return G__15169;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__15174__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__15175 = y;
            var G__15176 = cljs.core.first.call(null, more);
            var G__15177 = cljs.core.next.call(null, more);
            x = G__15175;
            y = G__15176;
            more = G__15177;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__15174 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15174__delegate.call(this, x, y, more);
    };
    G__15174.cljs$lang$maxFixedArity = 2;
    G__15174.cljs$lang$applyTo = function(arglist__15178) {
      var x = cljs.core.first(arglist__15178);
      arglist__15178 = cljs.core.next(arglist__15178);
      var y = cljs.core.first(arglist__15178);
      var more = cljs.core.rest(arglist__15178);
      return G__15174__delegate(x, y, more);
    };
    G__15174.cljs$core$IFn$_invoke$arity$variadic = G__15174__delegate;
    return G__15174;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__15179__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__15180 = y;
            var G__15181 = cljs.core.first.call(null, more);
            var G__15182 = cljs.core.next.call(null, more);
            x = G__15180;
            y = G__15181;
            more = G__15182;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__15179 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15179__delegate.call(this, x, y, more);
    };
    G__15179.cljs$lang$maxFixedArity = 2;
    G__15179.cljs$lang$applyTo = function(arglist__15183) {
      var x = cljs.core.first(arglist__15183);
      arglist__15183 = cljs.core.next(arglist__15183);
      var y = cljs.core.first(arglist__15183);
      var more = cljs.core.rest(arglist__15183);
      return G__15179__delegate(x, y, more);
    };
    G__15179.cljs$core$IFn$_invoke$arity$variadic = G__15179__delegate;
    return G__15179;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3865__auto__ = x;
    var y__3866__auto__ = y;
    return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
  };
  var max__3 = function() {
    var G__15184__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3865__auto__ = x;
        var y__3866__auto__ = y;
        return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
      }(), more);
    };
    var G__15184 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15184__delegate.call(this, x, y, more);
    };
    G__15184.cljs$lang$maxFixedArity = 2;
    G__15184.cljs$lang$applyTo = function(arglist__15185) {
      var x = cljs.core.first(arglist__15185);
      arglist__15185 = cljs.core.next(arglist__15185);
      var y = cljs.core.first(arglist__15185);
      var more = cljs.core.rest(arglist__15185);
      return G__15184__delegate(x, y, more);
    };
    G__15184.cljs$core$IFn$_invoke$arity$variadic = G__15184__delegate;
    return G__15184;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3872__auto__ = x;
    var y__3873__auto__ = y;
    return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
  };
  var min__3 = function() {
    var G__15186__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3872__auto__ = x;
        var y__3873__auto__ = y;
        return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
      }(), more);
    };
    var G__15186 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15186__delegate.call(this, x, y, more);
    };
    G__15186.cljs$lang$maxFixedArity = 2;
    G__15186.cljs$lang$applyTo = function(arglist__15187) {
      var x = cljs.core.first(arglist__15187);
      arglist__15187 = cljs.core.next(arglist__15187);
      var y = cljs.core.first(arglist__15187);
      var more = cljs.core.rest(arglist__15187);
      return G__15186__delegate(x, y, more);
    };
    G__15186.cljs$core$IFn$_invoke$arity$variadic = G__15186__delegate;
    return G__15186;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__15188__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__15188 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15188__delegate.call(this, x, y, more);
    };
    G__15188.cljs$lang$maxFixedArity = 2;
    G__15188.cljs$lang$applyTo = function(arglist__15189) {
      var x = cljs.core.first(arglist__15189);
      arglist__15189 = cljs.core.next(arglist__15189);
      var y = cljs.core.first(arglist__15189);
      var more = cljs.core.rest(arglist__15189);
      return G__15188__delegate(x, y, more);
    };
    G__15188.cljs$core$IFn$_invoke$arity$variadic = G__15188__delegate;
    return G__15188;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__15190__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__15190 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15190__delegate.call(this, x, y, more);
    };
    G__15190.cljs$lang$maxFixedArity = 2;
    G__15190.cljs$lang$applyTo = function(arglist__15191) {
      var x = cljs.core.first(arglist__15191);
      arglist__15191 = cljs.core.next(arglist__15191);
      var y = cljs.core.first(arglist__15191);
      var more = cljs.core.rest(arglist__15191);
      return G__15190__delegate(x, y, more);
    };
    G__15190.cljs$core$IFn$_invoke$arity$variadic = G__15190__delegate;
    return G__15190;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__15192__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__15192 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15192__delegate.call(this, x, y, more);
    };
    G__15192.cljs$lang$maxFixedArity = 2;
    G__15192.cljs$lang$applyTo = function(arglist__15193) {
      var x = cljs.core.first(arglist__15193);
      arglist__15193 = cljs.core.next(arglist__15193);
      var y = cljs.core.first(arglist__15193);
      var more = cljs.core.rest(arglist__15193);
      return G__15192__delegate(x, y, more);
    };
    G__15192.cljs$core$IFn$_invoke$arity$variadic = G__15192__delegate;
    return G__15192;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__15194__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__15194 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15194__delegate.call(this, x, y, more);
    };
    G__15194.cljs$lang$maxFixedArity = 2;
    G__15194.cljs$lang$applyTo = function(arglist__15195) {
      var x = cljs.core.first(arglist__15195);
      arglist__15195 = cljs.core.next(arglist__15195);
      var y = cljs.core.first(arglist__15195);
      var more = cljs.core.rest(arglist__15195);
      return G__15194__delegate(x, y, more);
    };
    G__15194.cljs$core$IFn$_invoke$arity$variadic = G__15194__delegate;
    return G__15194;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__15196__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__15196 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15196__delegate.call(this, x, y, more);
    };
    G__15196.cljs$lang$maxFixedArity = 2;
    G__15196.cljs$lang$applyTo = function(arglist__15197) {
      var x = cljs.core.first(arglist__15197);
      arglist__15197 = cljs.core.next(arglist__15197);
      var y = cljs.core.first(arglist__15197);
      var more = cljs.core.rest(arglist__15197);
      return G__15196__delegate(x, y, more);
    };
    G__15196.cljs$core$IFn$_invoke$arity$variadic = G__15196__delegate;
    return G__15196;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__15198__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__15198 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15198__delegate.call(this, x, y, more);
    };
    G__15198.cljs$lang$maxFixedArity = 2;
    G__15198.cljs$lang$applyTo = function(arglist__15199) {
      var x = cljs.core.first(arglist__15199);
      arglist__15199 = cljs.core.next(arglist__15199);
      var y = cljs.core.first(arglist__15199);
      var more = cljs.core.rest(arglist__15199);
      return G__15198__delegate(x, y, more);
    };
    G__15198.cljs$core$IFn$_invoke$arity$variadic = G__15198__delegate;
    return G__15198;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__15200__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__15200 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15200__delegate.call(this, x, y, more);
    };
    G__15200.cljs$lang$maxFixedArity = 2;
    G__15200.cljs$lang$applyTo = function(arglist__15201) {
      var x = cljs.core.first(arglist__15201);
      arglist__15201 = cljs.core.next(arglist__15201);
      var y = cljs.core.first(arglist__15201);
      var more = cljs.core.rest(arglist__15201);
      return G__15200__delegate(x, y, more);
    };
    G__15200.cljs$core$IFn$_invoke$arity$variadic = G__15200__delegate;
    return G__15200;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__15202__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__15203 = y;
            var G__15204 = cljs.core.first.call(null, more);
            var G__15205 = cljs.core.next.call(null, more);
            x = G__15203;
            y = G__15204;
            more = G__15205;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__15202 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15202__delegate.call(this, x, y, more);
    };
    G__15202.cljs$lang$maxFixedArity = 2;
    G__15202.cljs$lang$applyTo = function(arglist__15206) {
      var x = cljs.core.first(arglist__15206);
      arglist__15206 = cljs.core.next(arglist__15206);
      var y = cljs.core.first(arglist__15206);
      var more = cljs.core.rest(arglist__15206);
      return G__15202__delegate(x, y, more);
    };
    G__15202.cljs$core$IFn$_invoke$arity$variadic = G__15202__delegate;
    return G__15202;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__15207 = n__$1 - 1;
      var G__15208 = cljs.core.next.call(null, xs);
      n__$1 = G__15207;
      xs = G__15208;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__15209__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__15210 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__15211 = cljs.core.next.call(null, more);
          sb = G__15210;
          more = G__15211;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__15209 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__15209__delegate.call(this, x, ys);
    };
    G__15209.cljs$lang$maxFixedArity = 1;
    G__15209.cljs$lang$applyTo = function(arglist__15212) {
      var x = cljs.core.first(arglist__15212);
      var ys = cljs.core.rest(arglist__15212);
      return G__15209__delegate(x, ys);
    };
    G__15209.cljs$core$IFn$_invoke$arity$variadic = G__15209__delegate;
    return G__15209;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__15213 = cljs.core.next.call(null, xs);
            var G__15214 = cljs.core.next.call(null, ys);
            xs = G__15213;
            ys = G__15214;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__15215 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__15216 = cljs.core.next.call(null, s);
        res = G__15215;
        s = G__15216;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__15217 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__15218 = cljs.core.next.call(null, s);
      h = G__15217;
      s = G__15218;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__15219 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__15220 = cljs.core.next.call(null, s__$1);
      h = G__15219;
      s__$1 = G__15220;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__15227_15233 = cljs.core.seq.call(null, fn_map);
  var chunk__15228_15234 = null;
  var count__15229_15235 = 0;
  var i__15230_15236 = 0;
  while (true) {
    if (i__15230_15236 < count__15229_15235) {
      var vec__15231_15237 = cljs.core._nth.call(null, chunk__15228_15234, i__15230_15236);
      var key_name_15238 = cljs.core.nth.call(null, vec__15231_15237, 0, null);
      var f_15239 = cljs.core.nth.call(null, vec__15231_15237, 1, null);
      var str_name_15240 = cljs.core.name.call(null, key_name_15238);
      obj[str_name_15240] = f_15239;
      var G__15241 = seq__15227_15233;
      var G__15242 = chunk__15228_15234;
      var G__15243 = count__15229_15235;
      var G__15244 = i__15230_15236 + 1;
      seq__15227_15233 = G__15241;
      chunk__15228_15234 = G__15242;
      count__15229_15235 = G__15243;
      i__15230_15236 = G__15244;
      continue;
    } else {
      var temp__4126__auto___15245 = cljs.core.seq.call(null, seq__15227_15233);
      if (temp__4126__auto___15245) {
        var seq__15227_15246__$1 = temp__4126__auto___15245;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15227_15246__$1)) {
          var c__4314__auto___15247 = cljs.core.chunk_first.call(null, seq__15227_15246__$1);
          var G__15248 = cljs.core.chunk_rest.call(null, seq__15227_15246__$1);
          var G__15249 = c__4314__auto___15247;
          var G__15250 = cljs.core.count.call(null, c__4314__auto___15247);
          var G__15251 = 0;
          seq__15227_15233 = G__15248;
          chunk__15228_15234 = G__15249;
          count__15229_15235 = G__15250;
          i__15230_15236 = G__15251;
          continue;
        } else {
          var vec__15232_15252 = cljs.core.first.call(null, seq__15227_15246__$1);
          var key_name_15253 = cljs.core.nth.call(null, vec__15232_15252, 0, null);
          var f_15254 = cljs.core.nth.call(null, vec__15232_15252, 1, null);
          var str_name_15255 = cljs.core.name.call(null, key_name_15253);
          obj[str_name_15255] = f_15254;
          var G__15256 = cljs.core.next.call(null, seq__15227_15246__$1);
          var G__15257 = null;
          var G__15258 = 0;
          var G__15259 = 0;
          seq__15227_15233 = G__15256;
          chunk__15228_15234 = G__15257;
          count__15229_15235 = G__15258;
          i__15230_15236 = G__15259;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__15261 = coll;
  if (G__15261) {
    var bit__4208__auto__ = G__15261.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4208__auto__ || G__15261.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__15261.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__15261);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__15261);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__15262 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__15262;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__15263 = i - 1;
        var G__15264 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__15263;
        r = G__15264;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__15265) {
    var xs = cljs.core.seq(arglist__15265);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3558__auto__ = coll == null;
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      var G__15269 = coll;
      if (G__15269) {
        var bit__4201__auto__ = G__15269.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4201__auto__ || G__15269.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__15271 = x;
  if (G__15271) {
    var bit__4208__auto__ = G__15271.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4208__auto__ || G__15271.cljs$core$IList$) {
      return true;
    } else {
      if (!G__15271.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__15271);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__15271);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__3969__auto__ = self__._hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__15273 = null;
  var G__15273__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__15273__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__15273 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15273__2.call(this, self__, coll);
      case 3:
        return G__15273__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15273.cljs$core$IFn$_invoke$arity$2 = G__15273__2;
  G__15273.cljs$core$IFn$_invoke$arity$3 = G__15273__3;
  return G__15273;
}();
cljs.core.Keyword.prototype.apply = function(self__, args15272) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15272)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__15275 = x;
    if (G__15275) {
      var bit__4201__auto__ = G__15275.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4201__auto__ || G__15275.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__15276 = ls.sval();
        ls = G__15276;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__15278 = s;
    if (G__15278) {
      var bit__4201__auto__ = G__15278.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4201__auto__ || G__15278.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__15279 = cljs.core.next.call(null, s__$1);
      s__$1 = G__15279;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_15280 = 0;
  var xs_15281 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_15281) {
      ret[i_15280] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_15281));
      var G__15282 = i_15280 + 1;
      var G__15283 = cljs.core.next.call(null, xs_15281);
      i_15280 = G__15282;
      xs_15281 = G__15283;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__15284 = i + 1;
          var G__15285 = cljs.core.next.call(null, s__$1);
          i = G__15284;
          s__$1 = G__15285;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___15286 = size;
      var i_15287 = 0;
      while (true) {
        if (i_15287 < n__4414__auto___15286) {
          a[i_15287] = init_val_or_seq;
          var G__15288 = i_15287 + 1;
          i_15287 = G__15288;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__15289 = i + 1;
          var G__15290 = cljs.core.next.call(null, s__$1);
          i = G__15289;
          s__$1 = G__15290;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___15291 = size;
      var i_15292 = 0;
      while (true) {
        if (i_15292 < n__4414__auto___15291) {
          a[i_15292] = init_val_or_seq;
          var G__15293 = i_15292 + 1;
          i_15292 = G__15293;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__15294 = i + 1;
          var G__15295 = cljs.core.next.call(null, s__$1);
          i = G__15294;
          s__$1 = G__15295;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___15296 = size;
      var i_15297 = 0;
      while (true) {
        if (i_15297 < n__4414__auto___15296) {
          a[i_15297] = init_val_or_seq;
          var G__15298 = i_15297 + 1;
          i_15297 = G__15298;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__15299 = i + 1;
          var G__15300 = cljs.core.next.call(null, s__$1);
          i = G__15299;
          s__$1 = G__15300;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4414__auto___15301 = size;
      var i_15302 = 0;
      while (true) {
        if (i_15302 < n__4414__auto___15301) {
          a[i_15302] = init_val_or_seq;
          var G__15303 = i_15302 + 1;
          i_15302 = G__15303;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__15304 = cljs.core.next.call(null, s__$1);
        var G__15305 = i - 1;
        var G__15306 = sum + 1;
        s__$1 = G__15304;
        i = G__15305;
        sum = G__15306;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__15307__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__15307 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15307__delegate.call(this, x, y, zs);
    };
    G__15307.cljs$lang$maxFixedArity = 2;
    G__15307.cljs$lang$applyTo = function(arglist__15308) {
      var x = cljs.core.first(arglist__15308);
      arglist__15308 = cljs.core.next(arglist__15308);
      var y = cljs.core.first(arglist__15308);
      var zs = cljs.core.rest(arglist__15308);
      return G__15307__delegate(x, y, zs);
    };
    G__15307.cljs$core$IFn$_invoke$arity$variadic = G__15307__delegate;
    return G__15307;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__15309__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__15309 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__15309__delegate.call(this, a, b, c, d, more);
    };
    G__15309.cljs$lang$maxFixedArity = 4;
    G__15309.cljs$lang$applyTo = function(arglist__15310) {
      var a = cljs.core.first(arglist__15310);
      arglist__15310 = cljs.core.next(arglist__15310);
      var b = cljs.core.first(arglist__15310);
      arglist__15310 = cljs.core.next(arglist__15310);
      var c = cljs.core.first(arglist__15310);
      arglist__15310 = cljs.core.next(arglist__15310);
      var d = cljs.core.first(arglist__15310);
      var more = cljs.core.rest(arglist__15310);
      return G__15309__delegate(a, b, c, d, more);
    };
    G__15309.cljs$core$IFn$_invoke$arity$variadic = G__15309__delegate;
    return G__15309;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__15311__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__15312 = ntcoll;
          var G__15313 = cljs.core.first.call(null, vals);
          var G__15314 = cljs.core.next.call(null, vals);
          tcoll = G__15312;
          val = G__15313;
          vals = G__15314;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__15311 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15311__delegate.call(this, tcoll, val, vals);
    };
    G__15311.cljs$lang$maxFixedArity = 2;
    G__15311.cljs$lang$applyTo = function(arglist__15315) {
      var tcoll = cljs.core.first(arglist__15315);
      arglist__15315 = cljs.core.next(arglist__15315);
      var val = cljs.core.first(arglist__15315);
      var vals = cljs.core.rest(arglist__15315);
      return G__15311__delegate(tcoll, val, vals);
    };
    G__15311.cljs$core$IFn$_invoke$arity$variadic = G__15311__delegate;
    return G__15311;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__15316__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__15317 = ntcoll;
          var G__15318 = cljs.core.first.call(null, kvs);
          var G__15319 = cljs.core.second.call(null, kvs);
          var G__15320 = cljs.core.nnext.call(null, kvs);
          tcoll = G__15317;
          key = G__15318;
          val = G__15319;
          kvs = G__15320;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__15316 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15316__delegate.call(this, tcoll, key, val, kvs);
    };
    G__15316.cljs$lang$maxFixedArity = 3;
    G__15316.cljs$lang$applyTo = function(arglist__15321) {
      var tcoll = cljs.core.first(arglist__15321);
      arglist__15321 = cljs.core.next(arglist__15321);
      var key = cljs.core.first(arglist__15321);
      arglist__15321 = cljs.core.next(arglist__15321);
      var val = cljs.core.first(arglist__15321);
      var kvs = cljs.core.rest(arglist__15321);
      return G__15316__delegate(tcoll, key, val, kvs);
    };
    G__15316.cljs$core$IFn$_invoke$arity$variadic = G__15316__delegate;
    return G__15316;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__15322__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__15323 = ntcoll;
          var G__15324 = cljs.core.first.call(null, ks);
          var G__15325 = cljs.core.next.call(null, ks);
          tcoll = G__15323;
          key = G__15324;
          ks = G__15325;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__15322 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15322__delegate.call(this, tcoll, key, ks);
    };
    G__15322.cljs$lang$maxFixedArity = 2;
    G__15322.cljs$lang$applyTo = function(arglist__15326) {
      var tcoll = cljs.core.first(arglist__15326);
      arglist__15326 = cljs.core.next(arglist__15326);
      var key = cljs.core.first(arglist__15326);
      var ks = cljs.core.rest(arglist__15326);
      return G__15322__delegate(tcoll, key, ks);
    };
    G__15322.cljs$core$IFn$_invoke$arity$variadic = G__15322__delegate;
    return G__15322;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__15327__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__15328 = ntcoll;
          var G__15329 = cljs.core.first.call(null, vals);
          var G__15330 = cljs.core.next.call(null, vals);
          tcoll = G__15328;
          val = G__15329;
          vals = G__15330;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__15327 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15327__delegate.call(this, tcoll, val, vals);
    };
    G__15327.cljs$lang$maxFixedArity = 2;
    G__15327.cljs$lang$applyTo = function(arglist__15331) {
      var tcoll = cljs.core.first(arglist__15331);
      arglist__15331 = cljs.core.next(arglist__15331);
      var val = cljs.core.first(arglist__15331);
      var vals = cljs.core.rest(arglist__15331);
      return G__15327__delegate(tcoll, val, vals);
    };
    G__15327.cljs$core$IFn$_invoke$arity$variadic = G__15327__delegate;
    return G__15327;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4458 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4458);
      } else {
        return f.call(null, a4458);
      }
    } else {
      var b4459 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4458, b4459);
        } else {
          return f.call(null, a4458, b4459);
        }
      } else {
        var c4460 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4458, b4459, c4460);
          } else {
            return f.call(null, a4458, b4459, c4460);
          }
        } else {
          var d4461 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4458, b4459, c4460, d4461);
            } else {
              return f.call(null, a4458, b4459, c4460, d4461);
            }
          } else {
            var e4462 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4458, b4459, c4460, d4461, e4462);
              } else {
                return f.call(null, a4458, b4459, c4460, d4461, e4462);
              }
            } else {
              var f4463 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4458, b4459, c4460, d4461, e4462, f4463);
                } else {
                  return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463);
                }
              } else {
                var g4464 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4458, b4459, c4460, d4461, e4462, f4463, g4464);
                  } else {
                    return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464);
                  }
                } else {
                  var h4465 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465);
                    } else {
                      return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465);
                    }
                  } else {
                    var i4466 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466);
                      } else {
                        return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466);
                      }
                    } else {
                      var j4467 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467);
                        } else {
                          return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467);
                        }
                      } else {
                        var k4468 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468);
                          } else {
                            return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468);
                          }
                        } else {
                          var l4469 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469);
                            } else {
                              return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469);
                            }
                          } else {
                            var m4470 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470);
                              } else {
                                return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470);
                              }
                            } else {
                              var n4471 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471);
                                } else {
                                  return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471);
                                }
                              } else {
                                var o4472 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472);
                                  } else {
                                    return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472);
                                  }
                                } else {
                                  var p4473 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473);
                                    } else {
                                      return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473);
                                    }
                                  } else {
                                    var q4474 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474);
                                      } else {
                                        return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474);
                                      }
                                    } else {
                                      var r4475 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475);
                                        } else {
                                          return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475);
                                        }
                                      } else {
                                        var s4476 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476);
                                          } else {
                                            return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476);
                                          }
                                        } else {
                                          var t4477 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476, t4477);
                                            } else {
                                              return f.call(null, a4458, b4459, c4460, d4461, e4462, f4463, g4464, h4465, i4466, j4467, k4468, l4469, m4470, n4471, o4472, p4473, q4474, r4475, s4476, t4477);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__15332__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__15332 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__15332__delegate.call(this, f, a, b, c, d, args);
    };
    G__15332.cljs$lang$maxFixedArity = 5;
    G__15332.cljs$lang$applyTo = function(arglist__15333) {
      var f = cljs.core.first(arglist__15333);
      arglist__15333 = cljs.core.next(arglist__15333);
      var a = cljs.core.first(arglist__15333);
      arglist__15333 = cljs.core.next(arglist__15333);
      var b = cljs.core.first(arglist__15333);
      arglist__15333 = cljs.core.next(arglist__15333);
      var c = cljs.core.first(arglist__15333);
      arglist__15333 = cljs.core.next(arglist__15333);
      var d = cljs.core.first(arglist__15333);
      var args = cljs.core.rest(arglist__15333);
      return G__15332__delegate(f, a, b, c, d, args);
    };
    G__15332.cljs$core$IFn$_invoke$arity$variadic = G__15332__delegate;
    return G__15332;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__15334__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__15334 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__15334__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__15334.cljs$lang$maxFixedArity = 6;
    G__15334.cljs$lang$applyTo = function(arglist__15335) {
      var obj = cljs.core.first(arglist__15335);
      arglist__15335 = cljs.core.next(arglist__15335);
      var f = cljs.core.first(arglist__15335);
      arglist__15335 = cljs.core.next(arglist__15335);
      var a = cljs.core.first(arglist__15335);
      arglist__15335 = cljs.core.next(arglist__15335);
      var b = cljs.core.first(arglist__15335);
      arglist__15335 = cljs.core.next(arglist__15335);
      var c = cljs.core.first(arglist__15335);
      arglist__15335 = cljs.core.next(arglist__15335);
      var d = cljs.core.first(arglist__15335);
      var args = cljs.core.rest(arglist__15335);
      return G__15334__delegate(obj, f, a, b, c, d, args);
    };
    G__15334.cljs$core$IFn$_invoke$arity$variadic = G__15334__delegate;
    return G__15334;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__15336__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__15336 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15336__delegate.call(this, x, y, more);
    };
    G__15336.cljs$lang$maxFixedArity = 2;
    G__15336.cljs$lang$applyTo = function(arglist__15337) {
      var x = cljs.core.first(arglist__15337);
      arglist__15337 = cljs.core.next(arglist__15337);
      var y = cljs.core.first(arglist__15337);
      var more = cljs.core.rest(arglist__15337);
      return G__15336__delegate(x, y, more);
    };
    G__15336.cljs$core$IFn$_invoke$arity$variadic = G__15336__delegate;
    return G__15336;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t15341 !== "undefined") {
  } else {
    cljs.core.t15341 = function(nil_iter, meta15342) {
      this.nil_iter = nil_iter;
      this.meta15342 = meta15342;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t15341.cljs$lang$type = true;
    cljs.core.t15341.cljs$lang$ctorStr = "cljs.core/t15341";
    cljs.core.t15341.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/t15341");
    };
    cljs.core.t15341.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t15341.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t15341.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t15341.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15343) {
      var self__ = this;
      var _15343__$1 = this;
      return self__.meta15342;
    };
    cljs.core.t15341.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15343, meta15342__$1) {
      var self__ = this;
      var _15343__$1 = this;
      return new cljs.core.t15341(self__.nil_iter, meta15342__$1);
    };
    cljs.core.__GT_t15341 = function __GT_t15341(nil_iter__$1, meta15342) {
      return new cljs.core.t15341(nil_iter__$1, meta15342);
    };
  }
  return new cljs.core.t15341(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, coll);
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = !(lt.stepper == null);
      if (and__3546__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3546__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__15344 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__15344;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4414__auto___15345 = self__.iters.length;
  var i_15346 = 0;
  while (true) {
    if (i_15346 < n__4414__auto___15345) {
      self__.nexts[i_15346] = self__.iters[i_15346].next();
      var G__15347 = i_15346 + 1;
      i_15346 = G__15347;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = !(lt.stepper == null);
      if (and__3546__auto__) {
        return this$.hasNext();
      } else {
        return and__3546__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__15348_15352 = cljs.core.seq.call(null, colls);
  var chunk__15349_15353 = null;
  var count__15350_15354 = 0;
  var i__15351_15355 = 0;
  while (true) {
    if (i__15351_15355 < count__15350_15354) {
      var coll_15356 = cljs.core._nth.call(null, chunk__15349_15353, i__15351_15355);
      iters.push(cljs.core.iter.call(null, coll_15356));
      var G__15357 = seq__15348_15352;
      var G__15358 = chunk__15349_15353;
      var G__15359 = count__15350_15354;
      var G__15360 = i__15351_15355 + 1;
      seq__15348_15352 = G__15357;
      chunk__15349_15353 = G__15358;
      count__15350_15354 = G__15359;
      i__15351_15355 = G__15360;
      continue;
    } else {
      var temp__4126__auto___15361 = cljs.core.seq.call(null, seq__15348_15352);
      if (temp__4126__auto___15361) {
        var seq__15348_15362__$1 = temp__4126__auto___15361;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15348_15362__$1)) {
          var c__4314__auto___15363 = cljs.core.chunk_first.call(null, seq__15348_15362__$1);
          var G__15364 = cljs.core.chunk_rest.call(null, seq__15348_15362__$1);
          var G__15365 = c__4314__auto___15363;
          var G__15366 = cljs.core.count.call(null, c__4314__auto___15363);
          var G__15367 = 0;
          seq__15348_15352 = G__15364;
          chunk__15349_15353 = G__15365;
          count__15350_15354 = G__15366;
          i__15351_15355 = G__15367;
          continue;
        } else {
          var coll_15368 = cljs.core.first.call(null, seq__15348_15362__$1);
          iters.push(cljs.core.iter.call(null, coll_15368));
          var G__15369 = cljs.core.next.call(null, seq__15348_15362__$1);
          var G__15370 = null;
          var G__15371 = 0;
          var G__15372 = 0;
          seq__15348_15352 = G__15369;
          chunk__15349_15353 = G__15370;
          count__15350_15354 = G__15371;
          i__15351_15355 = G__15372;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3558__auto__ = cljs.core.seq.call(null, coll);
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__15373__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__15373 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15373__delegate.call(this, xform, coll, colls);
    };
    G__15373.cljs$lang$maxFixedArity = 2;
    G__15373.cljs$lang$applyTo = function(arglist__15374) {
      var xform = cljs.core.first(arglist__15374);
      arglist__15374 = cljs.core.next(arglist__15374);
      var coll = cljs.core.first(arglist__15374);
      var colls = cljs.core.rest(arglist__15374);
      return G__15373__delegate(xform, coll, colls);
    };
    G__15373.cljs$core$IFn$_invoke$arity$variadic = G__15373__delegate;
    return G__15373;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__15375 = pred;
        var G__15376 = cljs.core.next.call(null, coll);
        pred = G__15375;
        coll = G__15376;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3558__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        var G__15377 = pred;
        var G__15378 = cljs.core.next.call(null, coll);
        pred = G__15377;
        coll = G__15378;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__15379 = null;
    var G__15379__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__15379__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__15379__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__15379__3 = function() {
      var G__15380__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__15380 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__15380__delegate.call(this, x, y, zs);
      };
      G__15380.cljs$lang$maxFixedArity = 2;
      G__15380.cljs$lang$applyTo = function(arglist__15381) {
        var x = cljs.core.first(arglist__15381);
        arglist__15381 = cljs.core.next(arglist__15381);
        var y = cljs.core.first(arglist__15381);
        var zs = cljs.core.rest(arglist__15381);
        return G__15380__delegate(x, y, zs);
      };
      G__15380.cljs$core$IFn$_invoke$arity$variadic = G__15380__delegate;
      return G__15380;
    }();
    G__15379 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__15379__0.call(this);
        case 1:
          return G__15379__1.call(this, x);
        case 2:
          return G__15379__2.call(this, x, y);
        default:
          return G__15379__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15379.cljs$lang$maxFixedArity = 2;
    G__15379.cljs$lang$applyTo = G__15379__3.cljs$lang$applyTo;
    G__15379.cljs$core$IFn$_invoke$arity$0 = G__15379__0;
    G__15379.cljs$core$IFn$_invoke$arity$1 = G__15379__1;
    G__15379.cljs$core$IFn$_invoke$arity$2 = G__15379__2;
    G__15379.cljs$core$IFn$_invoke$arity$variadic = G__15379__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__15379;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__15382__delegate = function(args) {
      return x;
    };
    var G__15382 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__15382__delegate.call(this, args);
    };
    G__15382.cljs$lang$maxFixedArity = 0;
    G__15382.cljs$lang$applyTo = function(arglist__15383) {
      var args = cljs.core.seq(arglist__15383);
      return G__15382__delegate(args);
    };
    G__15382.cljs$core$IFn$_invoke$arity$variadic = G__15382__delegate;
    return G__15382;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__15384 = null;
      var G__15384__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__15384__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__15384__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__15384__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__15384__4 = function() {
        var G__15385__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__15385 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15385__delegate.call(this, x, y, z, args);
        };
        G__15385.cljs$lang$maxFixedArity = 3;
        G__15385.cljs$lang$applyTo = function(arglist__15386) {
          var x = cljs.core.first(arglist__15386);
          arglist__15386 = cljs.core.next(arglist__15386);
          var y = cljs.core.first(arglist__15386);
          arglist__15386 = cljs.core.next(arglist__15386);
          var z = cljs.core.first(arglist__15386);
          var args = cljs.core.rest(arglist__15386);
          return G__15385__delegate(x, y, z, args);
        };
        G__15385.cljs$core$IFn$_invoke$arity$variadic = G__15385__delegate;
        return G__15385;
      }();
      G__15384 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15384__0.call(this);
          case 1:
            return G__15384__1.call(this, x);
          case 2:
            return G__15384__2.call(this, x, y);
          case 3:
            return G__15384__3.call(this, x, y, z);
          default:
            return G__15384__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15384.cljs$lang$maxFixedArity = 3;
      G__15384.cljs$lang$applyTo = G__15384__4.cljs$lang$applyTo;
      G__15384.cljs$core$IFn$_invoke$arity$0 = G__15384__0;
      G__15384.cljs$core$IFn$_invoke$arity$1 = G__15384__1;
      G__15384.cljs$core$IFn$_invoke$arity$2 = G__15384__2;
      G__15384.cljs$core$IFn$_invoke$arity$3 = G__15384__3;
      G__15384.cljs$core$IFn$_invoke$arity$variadic = G__15384__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15384;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__15387 = null;
      var G__15387__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__15387__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__15387__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__15387__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__15387__4 = function() {
        var G__15388__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__15388 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15388__delegate.call(this, x, y, z, args);
        };
        G__15388.cljs$lang$maxFixedArity = 3;
        G__15388.cljs$lang$applyTo = function(arglist__15389) {
          var x = cljs.core.first(arglist__15389);
          arglist__15389 = cljs.core.next(arglist__15389);
          var y = cljs.core.first(arglist__15389);
          arglist__15389 = cljs.core.next(arglist__15389);
          var z = cljs.core.first(arglist__15389);
          var args = cljs.core.rest(arglist__15389);
          return G__15388__delegate(x, y, z, args);
        };
        G__15388.cljs$core$IFn$_invoke$arity$variadic = G__15388__delegate;
        return G__15388;
      }();
      G__15387 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15387__0.call(this);
          case 1:
            return G__15387__1.call(this, x);
          case 2:
            return G__15387__2.call(this, x, y);
          case 3:
            return G__15387__3.call(this, x, y, z);
          default:
            return G__15387__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15387.cljs$lang$maxFixedArity = 3;
      G__15387.cljs$lang$applyTo = G__15387__4.cljs$lang$applyTo;
      G__15387.cljs$core$IFn$_invoke$arity$0 = G__15387__0;
      G__15387.cljs$core$IFn$_invoke$arity$1 = G__15387__1;
      G__15387.cljs$core$IFn$_invoke$arity$2 = G__15387__2;
      G__15387.cljs$core$IFn$_invoke$arity$3 = G__15387__3;
      G__15387.cljs$core$IFn$_invoke$arity$variadic = G__15387__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15387;
    }();
  };
  var comp__4 = function() {
    var G__15390__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__15391__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__15392 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__15393 = cljs.core.next.call(null, fs__$2);
                ret = G__15392;
                fs__$2 = G__15393;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__15391 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__15391__delegate.call(this, args);
          };
          G__15391.cljs$lang$maxFixedArity = 0;
          G__15391.cljs$lang$applyTo = function(arglist__15394) {
            var args = cljs.core.seq(arglist__15394);
            return G__15391__delegate(args);
          };
          G__15391.cljs$core$IFn$_invoke$arity$variadic = G__15391__delegate;
          return G__15391;
        }();
      }(fs__$1);
    };
    var G__15390 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15390__delegate.call(this, f1, f2, f3, fs);
    };
    G__15390.cljs$lang$maxFixedArity = 3;
    G__15390.cljs$lang$applyTo = function(arglist__15395) {
      var f1 = cljs.core.first(arglist__15395);
      arglist__15395 = cljs.core.next(arglist__15395);
      var f2 = cljs.core.first(arglist__15395);
      arglist__15395 = cljs.core.next(arglist__15395);
      var f3 = cljs.core.first(arglist__15395);
      var fs = cljs.core.rest(arglist__15395);
      return G__15390__delegate(f1, f2, f3, fs);
    };
    G__15390.cljs$core$IFn$_invoke$arity$variadic = G__15390__delegate;
    return G__15390;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__15396__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__15396 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__15396__delegate.call(this, args);
      };
      G__15396.cljs$lang$maxFixedArity = 0;
      G__15396.cljs$lang$applyTo = function(arglist__15397) {
        var args = cljs.core.seq(arglist__15397);
        return G__15396__delegate(args);
      };
      G__15396.cljs$core$IFn$_invoke$arity$variadic = G__15396__delegate;
      return G__15396;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__15398__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__15398 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__15398__delegate.call(this, args);
      };
      G__15398.cljs$lang$maxFixedArity = 0;
      G__15398.cljs$lang$applyTo = function(arglist__15399) {
        var args = cljs.core.seq(arglist__15399);
        return G__15398__delegate(args);
      };
      G__15398.cljs$core$IFn$_invoke$arity$variadic = G__15398__delegate;
      return G__15398;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__15400__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__15400 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__15400__delegate.call(this, args);
      };
      G__15400.cljs$lang$maxFixedArity = 0;
      G__15400.cljs$lang$applyTo = function(arglist__15401) {
        var args = cljs.core.seq(arglist__15401);
        return G__15400__delegate(args);
      };
      G__15400.cljs$core$IFn$_invoke$arity$variadic = G__15400__delegate;
      return G__15400;
    }();
  };
  var partial__5 = function() {
    var G__15402__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__15403__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__15403 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__15403__delegate.call(this, args);
        };
        G__15403.cljs$lang$maxFixedArity = 0;
        G__15403.cljs$lang$applyTo = function(arglist__15404) {
          var args = cljs.core.seq(arglist__15404);
          return G__15403__delegate(args);
        };
        G__15403.cljs$core$IFn$_invoke$arity$variadic = G__15403__delegate;
        return G__15403;
      }();
    };
    var G__15402 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__15402__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__15402.cljs$lang$maxFixedArity = 4;
    G__15402.cljs$lang$applyTo = function(arglist__15405) {
      var f = cljs.core.first(arglist__15405);
      arglist__15405 = cljs.core.next(arglist__15405);
      var arg1 = cljs.core.first(arglist__15405);
      arglist__15405 = cljs.core.next(arglist__15405);
      var arg2 = cljs.core.first(arglist__15405);
      arglist__15405 = cljs.core.next(arglist__15405);
      var arg3 = cljs.core.first(arglist__15405);
      var more = cljs.core.rest(arglist__15405);
      return G__15402__delegate(f, arg1, arg2, arg3, more);
    };
    G__15402.cljs$core$IFn$_invoke$arity$variadic = G__15402__delegate;
    return G__15402;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__15406 = null;
      var G__15406__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__15406__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__15406__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__15406__4 = function() {
        var G__15407__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__15407 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15407__delegate.call(this, a, b, c, ds);
        };
        G__15407.cljs$lang$maxFixedArity = 3;
        G__15407.cljs$lang$applyTo = function(arglist__15408) {
          var a = cljs.core.first(arglist__15408);
          arglist__15408 = cljs.core.next(arglist__15408);
          var b = cljs.core.first(arglist__15408);
          arglist__15408 = cljs.core.next(arglist__15408);
          var c = cljs.core.first(arglist__15408);
          var ds = cljs.core.rest(arglist__15408);
          return G__15407__delegate(a, b, c, ds);
        };
        G__15407.cljs$core$IFn$_invoke$arity$variadic = G__15407__delegate;
        return G__15407;
      }();
      G__15406 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__15406__1.call(this, a);
          case 2:
            return G__15406__2.call(this, a, b);
          case 3:
            return G__15406__3.call(this, a, b, c);
          default:
            return G__15406__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15406.cljs$lang$maxFixedArity = 3;
      G__15406.cljs$lang$applyTo = G__15406__4.cljs$lang$applyTo;
      G__15406.cljs$core$IFn$_invoke$arity$1 = G__15406__1;
      G__15406.cljs$core$IFn$_invoke$arity$2 = G__15406__2;
      G__15406.cljs$core$IFn$_invoke$arity$3 = G__15406__3;
      G__15406.cljs$core$IFn$_invoke$arity$variadic = G__15406__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15406;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__15409 = null;
      var G__15409__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__15409__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__15409__4 = function() {
        var G__15410__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__15410 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15410__delegate.call(this, a, b, c, ds);
        };
        G__15410.cljs$lang$maxFixedArity = 3;
        G__15410.cljs$lang$applyTo = function(arglist__15411) {
          var a = cljs.core.first(arglist__15411);
          arglist__15411 = cljs.core.next(arglist__15411);
          var b = cljs.core.first(arglist__15411);
          arglist__15411 = cljs.core.next(arglist__15411);
          var c = cljs.core.first(arglist__15411);
          var ds = cljs.core.rest(arglist__15411);
          return G__15410__delegate(a, b, c, ds);
        };
        G__15410.cljs$core$IFn$_invoke$arity$variadic = G__15410__delegate;
        return G__15410;
      }();
      G__15409 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__15409__2.call(this, a, b);
          case 3:
            return G__15409__3.call(this, a, b, c);
          default:
            return G__15409__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15409.cljs$lang$maxFixedArity = 3;
      G__15409.cljs$lang$applyTo = G__15409__4.cljs$lang$applyTo;
      G__15409.cljs$core$IFn$_invoke$arity$2 = G__15409__2;
      G__15409.cljs$core$IFn$_invoke$arity$3 = G__15409__3;
      G__15409.cljs$core$IFn$_invoke$arity$variadic = G__15409__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15409;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__15412 = null;
      var G__15412__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__15412__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__15412__4 = function() {
        var G__15413__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__15413 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15413__delegate.call(this, a, b, c, ds);
        };
        G__15413.cljs$lang$maxFixedArity = 3;
        G__15413.cljs$lang$applyTo = function(arglist__15414) {
          var a = cljs.core.first(arglist__15414);
          arglist__15414 = cljs.core.next(arglist__15414);
          var b = cljs.core.first(arglist__15414);
          arglist__15414 = cljs.core.next(arglist__15414);
          var c = cljs.core.first(arglist__15414);
          var ds = cljs.core.rest(arglist__15414);
          return G__15413__delegate(a, b, c, ds);
        };
        G__15413.cljs$core$IFn$_invoke$arity$variadic = G__15413__delegate;
        return G__15413;
      }();
      G__15412 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__15412__2.call(this, a, b);
          case 3:
            return G__15412__3.call(this, a, b, c);
          default:
            return G__15412__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15412.cljs$lang$maxFixedArity = 3;
      G__15412.cljs$lang$applyTo = G__15412__4.cljs$lang$applyTo;
      G__15412.cljs$core$IFn$_invoke$arity$2 = G__15412__2;
      G__15412.cljs$core$IFn$_invoke$arity$3 = G__15412__3;
      G__15412.cljs$core$IFn$_invoke$arity$variadic = G__15412__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15412;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___15415 = size;
          var i_15416 = 0;
          while (true) {
            if (i_15416 < n__4414__auto___15415) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_15416, cljs.core._nth.call(null, c, i_15416)));
              var G__15417 = i_15416 + 1;
              i_15416 = G__15417;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__15418 = null;
        var G__15418__0 = function() {
          return f1.call(null);
        };
        var G__15418__1 = function(result) {
          return f1.call(null, result);
        };
        var G__15418__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__15418 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15418__0.call(this);
            case 1:
              return G__15418__1.call(this, result);
            case 2:
              return G__15418__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15418.cljs$core$IFn$_invoke$arity$0 = G__15418__0;
        G__15418.cljs$core$IFn$_invoke$arity$1 = G__15418__1;
        G__15418.cljs$core$IFn$_invoke$arity$2 = G__15418__2;
        return G__15418;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___15419 = size;
          var i_15420 = 0;
          while (true) {
            if (i_15420 < n__4414__auto___15419) {
              var x_15421 = f.call(null, cljs.core._nth.call(null, c, i_15420));
              if (x_15421 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_15421);
              }
              var G__15422 = i_15420 + 1;
              i_15420 = G__15422;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__15423 = cljs.core.seq.call(null, self__.watches);
  var chunk__15424 = null;
  var count__15425 = 0;
  var i__15426 = 0;
  while (true) {
    if (i__15426 < count__15425) {
      var vec__15427 = cljs.core._nth.call(null, chunk__15424, i__15426);
      var key = cljs.core.nth.call(null, vec__15427, 0, null);
      var f = cljs.core.nth.call(null, vec__15427, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__15429 = seq__15423;
      var G__15430 = chunk__15424;
      var G__15431 = count__15425;
      var G__15432 = i__15426 + 1;
      seq__15423 = G__15429;
      chunk__15424 = G__15430;
      count__15425 = G__15431;
      i__15426 = G__15432;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15423);
      if (temp__4126__auto__) {
        var seq__15423__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15423__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15423__$1);
          var G__15433 = cljs.core.chunk_rest.call(null, seq__15423__$1);
          var G__15434 = c__4314__auto__;
          var G__15435 = cljs.core.count.call(null, c__4314__auto__);
          var G__15436 = 0;
          seq__15423 = G__15433;
          chunk__15424 = G__15434;
          count__15425 = G__15435;
          i__15426 = G__15436;
          continue;
        } else {
          var vec__15428 = cljs.core.first.call(null, seq__15423__$1);
          var key = cljs.core.nth.call(null, vec__15428, 0, null);
          var f = cljs.core.nth.call(null, vec__15428, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__15437 = cljs.core.next.call(null, seq__15423__$1);
          var G__15438 = null;
          var G__15439 = 0;
          var G__15440 = 0;
          seq__15423 = G__15437;
          chunk__15424 = G__15438;
          count__15425 = G__15439;
          i__15426 = G__15440;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__15444__delegate = function(x, p__15441) {
      var map__15443 = p__15441;
      var map__15443__$1 = cljs.core.seq_QMARK_.call(null, map__15443) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15443) : map__15443;
      var validator = cljs.core.get.call(null, map__15443__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__15443__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__15444 = function(x, var_args) {
      var p__15441 = null;
      if (arguments.length > 1) {
        p__15441 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__15444__delegate.call(this, x, p__15441);
    };
    G__15444.cljs$lang$maxFixedArity = 1;
    G__15444.cljs$lang$applyTo = function(arglist__15445) {
      var x = cljs.core.first(arglist__15445);
      var p__15441 = cljs.core.rest(arglist__15445);
      return G__15444__delegate(x, p__15441);
    };
    G__15444.cljs$core$IFn$_invoke$arity$variadic = G__15444__delegate;
    return G__15444;
  }();
  atom = function(x, var_args) {
    var p__15441 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__15446__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__15446 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__15446__delegate.call(this, a, f, x, y, more);
    };
    G__15446.cljs$lang$maxFixedArity = 4;
    G__15446.cljs$lang$applyTo = function(arglist__15447) {
      var a = cljs.core.first(arglist__15447);
      arglist__15447 = cljs.core.next(arglist__15447);
      var f = cljs.core.first(arglist__15447);
      arglist__15447 = cljs.core.next(arglist__15447);
      var x = cljs.core.first(arglist__15447);
      arglist__15447 = cljs.core.next(arglist__15447);
      var y = cljs.core.first(arglist__15447);
      var more = cljs.core.rest(arglist__15447);
      return G__15446__delegate(a, f, x, y, more);
    };
    G__15446.cljs$core$IFn$_invoke$arity$variadic = G__15446__delegate;
    return G__15446;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__15448 = null;
          var G__15448__0 = function() {
            return f1.call(null);
          };
          var G__15448__1 = function(result) {
            return f1.call(null, result);
          };
          var G__15448__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__15448 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15448__0.call(this);
              case 1:
                return G__15448__1.call(this, result);
              case 2:
                return G__15448__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15448.cljs$core$IFn$_invoke$arity$0 = G__15448__0;
          G__15448.cljs$core$IFn$_invoke$arity$1 = G__15448__1;
          G__15448.cljs$core$IFn$_invoke$arity$2 = G__15448__2;
          return G__15448;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4414__auto___15449 = size;
            var i_15450 = 0;
            while (true) {
              if (i_15450 < n__4414__auto___15449) {
                var x_15451 = f.call(null, idx + i_15450, cljs.core._nth.call(null, c, i_15450));
                if (x_15451 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_15451);
                }
                var G__15452 = i_15450 + 1;
                i_15450 = G__15452;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            return p.call(null, y);
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__15459__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__15459 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15459__delegate.call(this, x, y, z, args);
        };
        G__15459.cljs$lang$maxFixedArity = 3;
        G__15459.cljs$lang$applyTo = function(arglist__15460) {
          var x = cljs.core.first(arglist__15460);
          arglist__15460 = cljs.core.next(arglist__15460);
          var y = cljs.core.first(arglist__15460);
          arglist__15460 = cljs.core.next(arglist__15460);
          var z = cljs.core.first(arglist__15460);
          var args = cljs.core.rest(arglist__15460);
          return G__15459__delegate(x, y, z, args);
        };
        G__15459.cljs$core$IFn$_invoke$arity$variadic = G__15459__delegate;
        return G__15459;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                var and__3546__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3546__auto____$3)) {
                  var and__3546__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3546__auto____$4;
                  }
                } else {
                  return and__3546__auto____$3;
                }
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__15461__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__15453_SHARP_) {
            var and__3546__auto__ = p1.call(null, p1__15453_SHARP_);
            if (cljs.core.truth_(and__3546__auto__)) {
              return p2.call(null, p1__15453_SHARP_);
            } else {
              return and__3546__auto__;
            }
          }, args));
        };
        var G__15461 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15461__delegate.call(this, x, y, z, args);
        };
        G__15461.cljs$lang$maxFixedArity = 3;
        G__15461.cljs$lang$applyTo = function(arglist__15462) {
          var x = cljs.core.first(arglist__15462);
          arglist__15462 = cljs.core.next(arglist__15462);
          var y = cljs.core.first(arglist__15462);
          arglist__15462 = cljs.core.next(arglist__15462);
          var z = cljs.core.first(arglist__15462);
          var args = cljs.core.rest(arglist__15462);
          return G__15461__delegate(x, y, z, args);
        };
        G__15461.cljs$core$IFn$_invoke$arity$variadic = G__15461__delegate;
        return G__15461;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                var and__3546__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3546__auto____$3)) {
                  var and__3546__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3546__auto____$4;
                  }
                } else {
                  return and__3546__auto____$3;
                }
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3546__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3546__auto____$1)) {
              var and__3546__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3546__auto____$2)) {
                var and__3546__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3546__auto____$3)) {
                  var and__3546__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$4)) {
                    var and__3546__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3546__auto____$5)) {
                      var and__3546__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3546__auto____$6)) {
                        var and__3546__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3546__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3546__auto____$7;
                        }
                      } else {
                        return and__3546__auto____$6;
                      }
                    } else {
                      return and__3546__auto____$5;
                    }
                  } else {
                    return and__3546__auto____$4;
                  }
                } else {
                  return and__3546__auto____$3;
                }
              } else {
                return and__3546__auto____$2;
              }
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__15463__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__15454_SHARP_) {
            var and__3546__auto__ = p1.call(null, p1__15454_SHARP_);
            if (cljs.core.truth_(and__3546__auto__)) {
              var and__3546__auto____$1 = p2.call(null, p1__15454_SHARP_);
              if (cljs.core.truth_(and__3546__auto____$1)) {
                return p3.call(null, p1__15454_SHARP_);
              } else {
                return and__3546__auto____$1;
              }
            } else {
              return and__3546__auto__;
            }
          }, args));
        };
        var G__15463 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15463__delegate.call(this, x, y, z, args);
        };
        G__15463.cljs$lang$maxFixedArity = 3;
        G__15463.cljs$lang$applyTo = function(arglist__15464) {
          var x = cljs.core.first(arglist__15464);
          arglist__15464 = cljs.core.next(arglist__15464);
          var y = cljs.core.first(arglist__15464);
          arglist__15464 = cljs.core.next(arglist__15464);
          var z = cljs.core.first(arglist__15464);
          var args = cljs.core.rest(arglist__15464);
          return G__15463__delegate(x, y, z, args);
        };
        G__15463.cljs$core$IFn$_invoke$arity$variadic = G__15463__delegate;
        return G__15463;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__15465__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__15455_SHARP_) {
                return p1__15455_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__15456_SHARP_) {
                var and__3546__auto__ = p1__15456_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3546__auto__)) {
                  return p1__15456_SHARP_.call(null, y);
                } else {
                  return and__3546__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__15457_SHARP_) {
                var and__3546__auto__ = p1__15457_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3546__auto__)) {
                  var and__3546__auto____$1 = p1__15457_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3546__auto____$1)) {
                    return p1__15457_SHARP_.call(null, z);
                  } else {
                    return and__3546__auto____$1;
                  }
                } else {
                  return and__3546__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__15466__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__15458_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__15458_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__15466 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__15466__delegate.call(this, x, y, z, args);
            };
            G__15466.cljs$lang$maxFixedArity = 3;
            G__15466.cljs$lang$applyTo = function(arglist__15467) {
              var x = cljs.core.first(arglist__15467);
              arglist__15467 = cljs.core.next(arglist__15467);
              var y = cljs.core.first(arglist__15467);
              arglist__15467 = cljs.core.next(arglist__15467);
              var z = cljs.core.first(arglist__15467);
              var args = cljs.core.rest(arglist__15467);
              return G__15466__delegate(x, y, z, args);
            };
            G__15466.cljs$core$IFn$_invoke$arity$variadic = G__15466__delegate;
            return G__15466;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__15465 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15465__delegate.call(this, p1, p2, p3, ps);
    };
    G__15465.cljs$lang$maxFixedArity = 3;
    G__15465.cljs$lang$applyTo = function(arglist__15468) {
      var p1 = cljs.core.first(arglist__15468);
      arglist__15468 = cljs.core.next(arglist__15468);
      var p2 = cljs.core.first(arglist__15468);
      arglist__15468 = cljs.core.next(arglist__15468);
      var p3 = cljs.core.first(arglist__15468);
      var ps = cljs.core.rest(arglist__15468);
      return G__15465__delegate(p1, p2, p3, ps);
    };
    G__15465.cljs$core$IFn$_invoke$arity$variadic = G__15465__delegate;
    return G__15465;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3558__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3558__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__15475__delegate = function(x, y, z, args) {
          var or__3558__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__15475 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15475__delegate.call(this, x, y, z, args);
        };
        G__15475.cljs$lang$maxFixedArity = 3;
        G__15475.cljs$lang$applyTo = function(arglist__15476) {
          var x = cljs.core.first(arglist__15476);
          arglist__15476 = cljs.core.next(arglist__15476);
          var y = cljs.core.first(arglist__15476);
          arglist__15476 = cljs.core.next(arglist__15476);
          var z = cljs.core.first(arglist__15476);
          var args = cljs.core.rest(arglist__15476);
          return G__15475__delegate(x, y, z, args);
        };
        G__15475.cljs$core$IFn$_invoke$arity$variadic = G__15475__delegate;
        return G__15475;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              var or__3558__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3558__auto____$3)) {
                return or__3558__auto____$3;
              } else {
                var or__3558__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3558__auto____$4)) {
                  return or__3558__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__15477__delegate = function(x, y, z, args) {
          var or__3558__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3558__auto__) {
              return function(p1__15469_SHARP_) {
                var or__3558__auto____$1 = p1.call(null, p1__15469_SHARP_);
                if (cljs.core.truth_(or__3558__auto____$1)) {
                  return or__3558__auto____$1;
                } else {
                  return p2.call(null, p1__15469_SHARP_);
                }
              };
            }(or__3558__auto__), args);
          }
        };
        var G__15477 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15477__delegate.call(this, x, y, z, args);
        };
        G__15477.cljs$lang$maxFixedArity = 3;
        G__15477.cljs$lang$applyTo = function(arglist__15478) {
          var x = cljs.core.first(arglist__15478);
          arglist__15478 = cljs.core.next(arglist__15478);
          var y = cljs.core.first(arglist__15478);
          arglist__15478 = cljs.core.next(arglist__15478);
          var z = cljs.core.first(arglist__15478);
          var args = cljs.core.rest(arglist__15478);
          return G__15477__delegate(x, y, z, args);
        };
        G__15477.cljs$core$IFn$_invoke$arity$variadic = G__15477__delegate;
        return G__15477;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              var or__3558__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3558__auto____$3)) {
                return or__3558__auto____$3;
              } else {
                var or__3558__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3558__auto____$4)) {
                  return or__3558__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3558__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            var or__3558__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3558__auto____$2)) {
              return or__3558__auto____$2;
            } else {
              var or__3558__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3558__auto____$3)) {
                return or__3558__auto____$3;
              } else {
                var or__3558__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3558__auto____$4)) {
                  return or__3558__auto____$4;
                } else {
                  var or__3558__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3558__auto____$5)) {
                    return or__3558__auto____$5;
                  } else {
                    var or__3558__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3558__auto____$6)) {
                      return or__3558__auto____$6;
                    } else {
                      var or__3558__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3558__auto____$7)) {
                        return or__3558__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__15479__delegate = function(x, y, z, args) {
          var or__3558__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3558__auto__) {
              return function(p1__15470_SHARP_) {
                var or__3558__auto____$1 = p1.call(null, p1__15470_SHARP_);
                if (cljs.core.truth_(or__3558__auto____$1)) {
                  return or__3558__auto____$1;
                } else {
                  var or__3558__auto____$2 = p2.call(null, p1__15470_SHARP_);
                  if (cljs.core.truth_(or__3558__auto____$2)) {
                    return or__3558__auto____$2;
                  } else {
                    return p3.call(null, p1__15470_SHARP_);
                  }
                }
              };
            }(or__3558__auto__), args);
          }
        };
        var G__15479 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15479__delegate.call(this, x, y, z, args);
        };
        G__15479.cljs$lang$maxFixedArity = 3;
        G__15479.cljs$lang$applyTo = function(arglist__15480) {
          var x = cljs.core.first(arglist__15480);
          arglist__15480 = cljs.core.next(arglist__15480);
          var y = cljs.core.first(arglist__15480);
          arglist__15480 = cljs.core.next(arglist__15480);
          var z = cljs.core.first(arglist__15480);
          var args = cljs.core.rest(arglist__15480);
          return G__15479__delegate(x, y, z, args);
        };
        G__15479.cljs$core$IFn$_invoke$arity$variadic = G__15479__delegate;
        return G__15479;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__15481__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__15471_SHARP_) {
                return p1__15471_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__15472_SHARP_) {
                var or__3558__auto__ = p1__15472_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3558__auto__)) {
                  return or__3558__auto__;
                } else {
                  return p1__15472_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__15473_SHARP_) {
                var or__3558__auto__ = p1__15473_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3558__auto__)) {
                  return or__3558__auto__;
                } else {
                  var or__3558__auto____$1 = p1__15473_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3558__auto____$1)) {
                    return or__3558__auto____$1;
                  } else {
                    return p1__15473_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__15482__delegate = function(x, y, z, args) {
              var or__3558__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3558__auto__)) {
                return or__3558__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3558__auto__, ps__$1) {
                  return function(p1__15474_SHARP_) {
                    return cljs.core.some.call(null, p1__15474_SHARP_, args);
                  };
                }(or__3558__auto__, ps__$1), ps__$1);
              }
            };
            var G__15482 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__15482__delegate.call(this, x, y, z, args);
            };
            G__15482.cljs$lang$maxFixedArity = 3;
            G__15482.cljs$lang$applyTo = function(arglist__15483) {
              var x = cljs.core.first(arglist__15483);
              arglist__15483 = cljs.core.next(arglist__15483);
              var y = cljs.core.first(arglist__15483);
              arglist__15483 = cljs.core.next(arglist__15483);
              var z = cljs.core.first(arglist__15483);
              var args = cljs.core.rest(arglist__15483);
              return G__15482__delegate(x, y, z, args);
            };
            G__15482.cljs$core$IFn$_invoke$arity$variadic = G__15482__delegate;
            return G__15482;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__15481 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15481__delegate.call(this, p1, p2, p3, ps);
    };
    G__15481.cljs$lang$maxFixedArity = 3;
    G__15481.cljs$lang$applyTo = function(arglist__15484) {
      var p1 = cljs.core.first(arglist__15484);
      arglist__15484 = cljs.core.next(arglist__15484);
      var p2 = cljs.core.first(arglist__15484);
      arglist__15484 = cljs.core.next(arglist__15484);
      var p3 = cljs.core.first(arglist__15484);
      var ps = cljs.core.rest(arglist__15484);
      return G__15481__delegate(p1, p2, p3, ps);
    };
    G__15481.cljs$core$IFn$_invoke$arity$variadic = G__15481__delegate;
    return G__15481;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__15486 = null;
        var G__15486__0 = function() {
          return f1.call(null);
        };
        var G__15486__1 = function(result) {
          return f1.call(null, result);
        };
        var G__15486__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__15486__3 = function() {
          var G__15487__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__15487 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__15487__delegate.call(this, result, input, inputs);
          };
          G__15487.cljs$lang$maxFixedArity = 2;
          G__15487.cljs$lang$applyTo = function(arglist__15488) {
            var result = cljs.core.first(arglist__15488);
            arglist__15488 = cljs.core.next(arglist__15488);
            var input = cljs.core.first(arglist__15488);
            var inputs = cljs.core.rest(arglist__15488);
            return G__15487__delegate(result, input, inputs);
          };
          G__15487.cljs$core$IFn$_invoke$arity$variadic = G__15487__delegate;
          return G__15487;
        }();
        G__15486 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__15486__0.call(this);
            case 1:
              return G__15486__1.call(this, result);
            case 2:
              return G__15486__2.call(this, result, input);
            default:
              return G__15486__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15486.cljs$lang$maxFixedArity = 2;
        G__15486.cljs$lang$applyTo = G__15486__3.cljs$lang$applyTo;
        G__15486.cljs$core$IFn$_invoke$arity$0 = G__15486__0;
        G__15486.cljs$core$IFn$_invoke$arity$1 = G__15486__1;
        G__15486.cljs$core$IFn$_invoke$arity$2 = G__15486__2;
        G__15486.cljs$core$IFn$_invoke$arity$variadic = G__15486__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__15486;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___15489 = size;
          var i_15490 = 0;
          while (true) {
            if (i_15490 < n__4414__auto___15489) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_15490)));
              var G__15491 = i_15490 + 1;
              i_15490 = G__15491;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__15492__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__15485_SHARP_) {
          return cljs.core.apply.call(null, f, p1__15485_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__15492 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__15492__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__15492.cljs$lang$maxFixedArity = 4;
    G__15492.cljs$lang$applyTo = function(arglist__15493) {
      var f = cljs.core.first(arglist__15493);
      arglist__15493 = cljs.core.next(arglist__15493);
      var c1 = cljs.core.first(arglist__15493);
      arglist__15493 = cljs.core.next(arglist__15493);
      var c2 = cljs.core.first(arglist__15493);
      arglist__15493 = cljs.core.next(arglist__15493);
      var c3 = cljs.core.first(arglist__15493);
      var colls = cljs.core.rest(arglist__15493);
      return G__15492__delegate(f, c1, c2, c3, colls);
    };
    G__15492.cljs$core$IFn$_invoke$arity$variadic = G__15492__delegate;
    return G__15492;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__15494 = null;
          var G__15494__0 = function() {
            return f1.call(null);
          };
          var G__15494__1 = function(result) {
            return f1.call(null, result);
          };
          var G__15494__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__15494 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15494__0.call(this);
              case 1:
                return G__15494__1.call(this, result);
              case 2:
                return G__15494__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15494.cljs$core$IFn$_invoke$arity$0 = G__15494__0;
          G__15494.cljs$core$IFn$_invoke$arity$1 = G__15494__1;
          G__15494.cljs$core$IFn$_invoke$arity$2 = G__15494__2;
          return G__15494;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__15495 = null;
          var G__15495__0 = function() {
            return f1.call(null);
          };
          var G__15495__1 = function(result) {
            return f1.call(null, result);
          };
          var G__15495__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__15495 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15495__0.call(this);
              case 1:
                return G__15495__1.call(this, result);
              case 2:
                return G__15495__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15495.cljs$core$IFn$_invoke$arity$0 = G__15495__0;
          G__15495.cljs$core$IFn$_invoke$arity$1 = G__15495__1;
          G__15495.cljs$core$IFn$_invoke$arity$2 = G__15495__2;
          return G__15495;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__15496 = n__$1 - 1;
          var G__15497 = cljs.core.rest.call(null, s);
          n__$1 = G__15496;
          coll__$1 = G__15497;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__15498 = cljs.core.next.call(null, s);
      var G__15499 = cljs.core.next.call(null, lead);
      s = G__15498;
      lead = G__15499;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__15500 = null;
          var G__15500__0 = function() {
            return f1.call(null);
          };
          var G__15500__1 = function(result) {
            return f1.call(null, result);
          };
          var G__15500__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3546__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3546__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3546__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__15500 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15500__0.call(this);
              case 1:
                return G__15500__1.call(this, result);
              case 2:
                return G__15500__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15500.cljs$core$IFn$_invoke$arity$0 = G__15500__0;
          G__15500.cljs$core$IFn$_invoke$arity$1 = G__15500__1;
          G__15500.cljs$core$IFn$_invoke$arity$2 = G__15500__2;
          return G__15500;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = s;
          if (and__3546__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3546__auto__;
          }
        }())) {
          var G__15501 = pred__$1;
          var G__15502 = cljs.core.rest.call(null, s);
          pred__$1 = G__15501;
          coll__$1 = G__15502;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__15503__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__15503 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15503__delegate.call(this, c1, c2, colls);
    };
    G__15503.cljs$lang$maxFixedArity = 2;
    G__15503.cljs$lang$applyTo = function(arglist__15504) {
      var c1 = cljs.core.first(arglist__15504);
      arglist__15504 = cljs.core.next(arglist__15504);
      var c2 = cljs.core.first(arglist__15504);
      var colls = cljs.core.rest(arglist__15504);
      return G__15503__delegate(c1, c2, colls);
    };
    G__15503.cljs$core$IFn$_invoke$arity$variadic = G__15503__delegate;
    return G__15503;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__15505__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__15505 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__15505__delegate.call(this, f, coll, colls);
    };
    G__15505.cljs$lang$maxFixedArity = 2;
    G__15505.cljs$lang$applyTo = function(arglist__15506) {
      var f = cljs.core.first(arglist__15506);
      arglist__15506 = cljs.core.next(arglist__15506);
      var coll = cljs.core.first(arglist__15506);
      var colls = cljs.core.rest(arglist__15506);
      return G__15505__delegate(f, coll, colls);
    };
    G__15505.cljs$core$IFn$_invoke$arity$variadic = G__15505__delegate;
    return G__15505;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__15507 = null;
        var G__15507__0 = function() {
          return f1.call(null);
        };
        var G__15507__1 = function(result) {
          return f1.call(null, result);
        };
        var G__15507__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__15507 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15507__0.call(this);
            case 1:
              return G__15507__1.call(this, result);
            case 2:
              return G__15507__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15507.cljs$core$IFn$_invoke$arity$0 = G__15507__0;
        G__15507.cljs$core$IFn$_invoke$arity$1 = G__15507__1;
        G__15507.cljs$core$IFn$_invoke$arity$2 = G__15507__2;
        return G__15507;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4414__auto___15508 = size;
          var i_15509 = 0;
          while (true) {
            if (i_15509 < n__4414__auto___15508) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_15509)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_15509));
              } else {
              }
              var G__15510 = i_15509 + 1;
              i_15509 = G__15510;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__15511_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__15511_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__15514 = to;
        if (G__15514) {
          var bit__4201__auto__ = G__15514.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4201__auto__ || G__15514.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__15515 = to;
      if (G__15515) {
        var bit__4201__auto__ = G__15515.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4201__auto__ || G__15515.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__15516__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__15516 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__15516__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__15516.cljs$lang$maxFixedArity = 4;
    G__15516.cljs$lang$applyTo = function(arglist__15517) {
      var f = cljs.core.first(arglist__15517);
      arglist__15517 = cljs.core.next(arglist__15517);
      var c1 = cljs.core.first(arglist__15517);
      arglist__15517 = cljs.core.next(arglist__15517);
      var c2 = cljs.core.first(arglist__15517);
      arglist__15517 = cljs.core.next(arglist__15517);
      var c3 = cljs.core.first(arglist__15517);
      var colls = cljs.core.rest(arglist__15517);
      return G__15516__delegate(f, c1, c2, c3, colls);
    };
    G__15516.cljs$core$IFn$_invoke$arity$variadic = G__15516__delegate;
    return G__15516;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__15519 = m__$1;
          if (G__15519) {
            var bit__4208__auto__ = G__15519.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4208__auto__ || G__15519.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__15519.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__15519);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__15519);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__15520 = sentinel;
            var G__15521 = m__$2;
            var G__15522 = cljs.core.next.call(null, ks__$1);
            sentinel = G__15520;
            m__$1 = G__15521;
            ks__$1 = G__15522;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__15523, v) {
  var vec__15525 = p__15523;
  var k = cljs.core.nth.call(null, vec__15525, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__15525, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__15526, f) {
    var vec__15536 = p__15526;
    var k = cljs.core.nth.call(null, vec__15536, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15536, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__15527, f, a) {
    var vec__15537 = p__15527;
    var k = cljs.core.nth.call(null, vec__15537, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15537, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__15528, f, a, b) {
    var vec__15538 = p__15528;
    var k = cljs.core.nth.call(null, vec__15538, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15538, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__15529, f, a, b, c) {
    var vec__15539 = p__15529;
    var k = cljs.core.nth.call(null, vec__15539, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__15539, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__15541__delegate = function(m, p__15530, f, a, b, c, args) {
      var vec__15540 = p__15530;
      var k = cljs.core.nth.call(null, vec__15540, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__15540, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__15541 = function(m, p__15530, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__15541__delegate.call(this, m, p__15530, f, a, b, c, args);
    };
    G__15541.cljs$lang$maxFixedArity = 6;
    G__15541.cljs$lang$applyTo = function(arglist__15542) {
      var m = cljs.core.first(arglist__15542);
      arglist__15542 = cljs.core.next(arglist__15542);
      var p__15530 = cljs.core.first(arglist__15542);
      arglist__15542 = cljs.core.next(arglist__15542);
      var f = cljs.core.first(arglist__15542);
      arglist__15542 = cljs.core.next(arglist__15542);
      var a = cljs.core.first(arglist__15542);
      arglist__15542 = cljs.core.next(arglist__15542);
      var b = cljs.core.first(arglist__15542);
      arglist__15542 = cljs.core.next(arglist__15542);
      var c = cljs.core.first(arglist__15542);
      var args = cljs.core.rest(arglist__15542);
      return G__15541__delegate(m, p__15530, f, a, b, c, args);
    };
    G__15541.cljs$core$IFn$_invoke$arity$variadic = G__15541__delegate;
    return G__15541;
  }();
  update_in = function(m, p__15530, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__15530, f);
      case 4:
        return update_in__4.call(this, m, p__15530, f, a);
      case 5:
        return update_in__5.call(this, m, p__15530, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__15530, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__15530, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__15543 = ll - 5;
      var G__15544 = r;
      ll = G__15543;
      ret = G__15544;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__15545 = cljs.core.pv_aget.call(null, node, 0);
      var G__15546 = level - 5;
      node = G__15545;
      level = G__15546;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__15547 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__15548 = level - 5;
        node = G__15547;
        level = G__15548;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__15550 = j + 1;
              var G__15551 = init__$2;
              j = G__15550;
              init__$1 = G__15551;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__15552 = i + step_init[0];
        i = G__15552;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4414__auto___15553 = len;
    var i_15554 = 0;
    while (true) {
      if (i_15554 < n__4414__auto___15553) {
        new_tail[i_15554] = self__.tail[i_15554];
        var G__15555 = i_15554 + 1;
        i_15554 = G__15555;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__15556 = null;
  var G__15556__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15556__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15556 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15556__2.call(this, self__, k);
      case 3:
        return G__15556__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15556.cljs$core$IFn$_invoke$arity$2 = G__15556__2;
  G__15556.cljs$core$IFn$_invoke$arity$3 = G__15556__3;
  return G__15556;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args15549) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15549)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__15557 = i + 1;
        var G__15558 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__15557;
        out = G__15558;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__15559) {
    var args = cljs.core.seq(arglist__15559);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3865__auto__ = self__.end;
    var y__3866__auto__ = v_pos + 1;
    return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__15561 = null;
  var G__15561__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__15561__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__15561 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15561__2.call(this, self__, k);
      case 3:
        return G__15561__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15561.cljs$core$IFn$_invoke$arity$2 = G__15561__2;
  G__15561.cljs$core$IFn$_invoke$arity$3 = G__15561__3;
  return G__15561;
}();
cljs.core.Subvec.prototype.apply = function(self__, args15560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15560)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__15562 = meta;
      var G__15563 = v.v;
      var G__15564 = v.start + start;
      var G__15565 = v.start + end;
      var G__15566 = __hash;
      meta = G__15562;
      v = G__15563;
      start = G__15564;
      end = G__15565;
      __hash = G__15566;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj15570 = {};
    return obj15570;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__15571 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__15572 = level - 5;
        node = G__15571;
        level = G__15572;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__15574 = null;
  var G__15574__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15574__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15574 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15574__2.call(this, self__, k);
      case 3:
        return G__15574__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15574.cljs$core$IFn$_invoke$arity$2 = G__15574__2;
  G__15574.cljs$core$IFn$_invoke$arity$3 = G__15574__3;
  return G__15574;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args15573) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15573)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = self__.front;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3558__auto__ = self__.rear;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__15575 = i + incr;
        i = G__15575;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__15576 = i + 1;
      var G__15577 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__15576;
      out = G__15577;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj15581 = {};
    return obj15581;
  }();
  var l = ks.length;
  var i_15582 = 0;
  while (true) {
    if (i_15582 < l) {
      var k_15583 = ks[i_15582];
      new_obj[k_15583] = obj[k_15583];
      var G__15584 = i_15582 + 1;
      i_15582 = G__15584;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__15587 = cljs.core.rest.call(null, keys__$1);
        var G__15588 = init__$2;
        keys__$1 = G__15587;
        init__$1 = G__15588;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__15585_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15585_SHARP_, self__.strobj[p1__15585_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__15589 = null;
  var G__15589__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15589__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15589 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15589__2.call(this, self__, k);
      case 3:
        return G__15589__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15589.cljs$core$IFn$_invoke$arity$2 = G__15589__2;
  G__15589.cljs$core$IFn$_invoke$arity$3 = G__15589__3;
  return G__15589;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args15586) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15586)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj15591 = {};
  return obj15591;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__15592 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__15592, 0, null);
    var v = cljs.core.nth.call(null, vec__15592, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__15593 = i + 2;
        i = G__15593;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__15594 = i + 2;
        i = G__15594;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__15595 = i + 2;
        i = G__15595;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__15596 = i + 2;
        i = G__15596;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__15597 = i + 2;
        i = G__15597;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_15598 = 0;
  while (true) {
    if (i_15598 < l) {
      narr[i_15598] = arr[i_15598];
      var G__15599 = i_15598 + 1;
      i_15598 = G__15599;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15601 = cljs.core.seq.call(null, coll);
  var chunk__15602 = null;
  var count__15603 = 0;
  var i__15604 = 0;
  while (true) {
    if (i__15604 < count__15603) {
      var vec__15605 = cljs.core._nth.call(null, chunk__15602, i__15604);
      var k = cljs.core.nth.call(null, vec__15605, 0, null);
      var v = cljs.core.nth.call(null, vec__15605, 1, null);
      f.call(null, v, k);
      var G__15610 = seq__15601;
      var G__15611 = chunk__15602;
      var G__15612 = count__15603;
      var G__15613 = i__15604 + 1;
      seq__15601 = G__15610;
      chunk__15602 = G__15611;
      count__15603 = G__15612;
      i__15604 = G__15613;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15601);
      if (temp__4126__auto__) {
        var seq__15601__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15601__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15601__$1);
          var G__15614 = cljs.core.chunk_rest.call(null, seq__15601__$1);
          var G__15615 = c__4314__auto__;
          var G__15616 = cljs.core.count.call(null, c__4314__auto__);
          var G__15617 = 0;
          seq__15601 = G__15614;
          chunk__15602 = G__15615;
          count__15603 = G__15616;
          i__15604 = G__15617;
          continue;
        } else {
          var vec__15606 = cljs.core.first.call(null, seq__15601__$1);
          var k = cljs.core.nth.call(null, vec__15606, 0, null);
          var v = cljs.core.nth.call(null, vec__15606, 1, null);
          f.call(null, v, k);
          var G__15618 = cljs.core.next.call(null, seq__15601__$1);
          var G__15619 = null;
          var G__15620 = 0;
          var G__15621 = 0;
          seq__15601 = G__15618;
          chunk__15602 = G__15619;
          count__15603 = G__15620;
          i__15604 = G__15621;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__15622 = i + 2;
        var G__15623 = init__$2;
        i = G__15622;
        init__$1 = G__15623;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj15608 = {};
    return obj15608;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__15624 = s + 2;
            var G__15625 = d;
            s = G__15624;
            d = G__15625;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__15626 = s + 2;
            var G__15627 = d + 2;
            s = G__15626;
            d = G__15627;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__15609 = cljs.core.aclone.call(null, self__.arr);
        G__15609[idx + 1] = v;
        return G__15609;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__15628 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__15629 = cljs.core.next.call(null, es);
          ret = G__15628;
          es = G__15629;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__15630 = null;
  var G__15630__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15630__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15630 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15630__2.call(this, self__, k);
      case 3:
        return G__15630__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15630.cljs$core$IFn$_invoke$arity$2 = G__15630__2;
  G__15630.cljs$core$IFn$_invoke$arity$3 = G__15630__3;
  return G__15630;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args15600) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15600)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15631 = i + 2;
        var G__15632 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__15631;
        ret = G__15632;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__15633_15635 = self__.arr;
      G__15633_15635.pop();
      G__15633_15635.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__15634 = o;
      if (G__15634) {
        var bit__4208__auto__ = G__15634.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4208__auto__ || G__15634.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15634.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15634);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15634);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15636 = cljs.core.next.call(null, es);
          var G__15637 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__15636;
          tcoll__$2 = G__15637;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__15638 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__15639 = i + 2;
      out = G__15638;
      i = G__15639;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__15642 = cljs.core.aclone.call(null, arr);
    G__15642[i] = a;
    return G__15642;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__15643 = cljs.core.aclone.call(null, arr);
    G__15643[i] = a;
    G__15643[j] = b;
    return G__15643;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__15644 = i + 2;
        var G__15645 = init__$2;
        i = G__15644;
        init__$1 = G__15645;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_15646 = 0;
        var j_15647 = 0;
        while (true) {
          if (i_15646 < 32) {
            if ((self__.bitmap >>> i_15646 & 1) === 0) {
              var G__15648 = i_15646 + 1;
              var G__15649 = j_15647;
              i_15646 = G__15648;
              j_15647 = G__15649;
              continue;
            } else {
              nodes[i_15646] = !(self__.arr[j_15647] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_15647]), self__.arr[j_15647], self__.arr[j_15647 + 1], added_leaf_QMARK_) : self__.arr[j_15647 + 1];
              var G__15650 = i_15646 + 1;
              var G__15651 = j_15647 + 2;
              i_15646 = G__15650;
              j_15647 = G__15651;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_15652 = 0;
      var j_15653 = 0;
      while (true) {
        if (i_15652 < 32) {
          if ((self__.bitmap >>> i_15652 & 1) === 0) {
            var G__15654 = i_15652 + 1;
            var G__15655 = j_15653;
            i_15652 = G__15654;
            j_15653 = G__15655;
            continue;
          } else {
            nodes[i_15652] = !(self__.arr[j_15653] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_15653]), self__.arr[j_15653], self__.arr[j_15653 + 1], added_leaf_QMARK_) : self__.arr[j_15653 + 1];
            var G__15656 = i_15652 + 1;
            var G__15657 = j_15653 + 2;
            i_15652 = G__15656;
            j_15653 = G__15657;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__15658 = i + 1;
        var G__15659 = j + 2;
        var G__15660 = bitmap | 1 << i;
        i = G__15658;
        j = G__15659;
        bitmap = G__15660;
        continue;
      } else {
        var G__15661 = i + 1;
        var G__15662 = j;
        var G__15663 = bitmap;
        i = G__15661;
        j = G__15662;
        bitmap = G__15663;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__15664 = i + 1;
          var G__15665 = init__$2;
          i = G__15664;
          init__$1 = G__15665;
          continue;
        }
      } else {
        var G__15666 = i + 1;
        var G__15667 = init__$1;
        i = G__15666;
        init__$1 = G__15667;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__15668 = i + 2;
        i = G__15668;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__15669 = j + 2;
                j = G__15669;
                continue;
              }
            } else {
              var G__15670 = j + 2;
              j = G__15670;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__15671 = j + 1;
              j = G__15671;
              continue;
            }
          } else {
            var G__15672 = j + 1;
            j = G__15672;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15674 = cljs.core.seq.call(null, coll);
  var chunk__15675 = null;
  var count__15676 = 0;
  var i__15677 = 0;
  while (true) {
    if (i__15677 < count__15676) {
      var vec__15678 = cljs.core._nth.call(null, chunk__15675, i__15677);
      var k = cljs.core.nth.call(null, vec__15678, 0, null);
      var v = cljs.core.nth.call(null, vec__15678, 1, null);
      f.call(null, v, k);
      var G__15682 = seq__15674;
      var G__15683 = chunk__15675;
      var G__15684 = count__15676;
      var G__15685 = i__15677 + 1;
      seq__15674 = G__15682;
      chunk__15675 = G__15683;
      count__15676 = G__15684;
      i__15677 = G__15685;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15674);
      if (temp__4126__auto__) {
        var seq__15674__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15674__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15674__$1);
          var G__15686 = cljs.core.chunk_rest.call(null, seq__15674__$1);
          var G__15687 = c__4314__auto__;
          var G__15688 = cljs.core.count.call(null, c__4314__auto__);
          var G__15689 = 0;
          seq__15674 = G__15686;
          chunk__15675 = G__15687;
          count__15676 = G__15688;
          i__15677 = G__15689;
          continue;
        } else {
          var vec__15679 = cljs.core.first.call(null, seq__15674__$1);
          var k = cljs.core.nth.call(null, vec__15679, 0, null);
          var v = cljs.core.nth.call(null, vec__15679, 1, null);
          f.call(null, v, k);
          var G__15690 = cljs.core.next.call(null, seq__15674__$1);
          var G__15691 = null;
          var G__15692 = 0;
          var G__15693 = 0;
          seq__15674 = G__15690;
          chunk__15675 = G__15691;
          count__15676 = G__15692;
          i__15677 = G__15693;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj15681 = {};
    return obj15681;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__15694 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__15695 = cljs.core.next.call(null, es);
          ret = G__15694;
          es = G__15695;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__15696 = null;
  var G__15696__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15696__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15696 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15696__2.call(this, self__, k);
      case 3:
        return G__15696__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15696.cljs$core$IFn$_invoke$arity$2 = G__15696__2;
  G__15696.cljs$core$IFn$_invoke$arity$3 = G__15696__3;
  return G__15696;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args15673) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15673)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__15697 = i + 1;
      var G__15698 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__15697;
      out = G__15698;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__15699 = o;
      if (G__15699) {
        var bit__4208__auto__ = G__15699.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4208__auto__ || G__15699.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__15699.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15699);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__15699);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__15700 = cljs.core.next.call(null, es);
          var G__15701 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__15700;
          tcoll__$1 = G__15701;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__15702 = ascending_QMARK_ ? t.left : t.right;
      var G__15703 = cljs.core.conj.call(null, stack__$1, t);
      t = G__15702;
      stack__$1 = G__15703;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__15705 = null;
  var G__15705__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15705__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15705 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15705__2.call(this, self__, k);
      case 3:
        return G__15705__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15705.cljs$core$IFn$_invoke$arity$2 = G__15705__2;
  G__15705.cljs$core$IFn$_invoke$arity$3 = G__15705__3;
  return G__15705;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args15704) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15704)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__15707 = null;
  var G__15707__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15707__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15707 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15707__2.call(this, self__, k);
      case 3:
        return G__15707__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15707.cljs$core$IFn$_invoke$arity$2 = G__15707__2;
  G__15707.cljs$core$IFn$_invoke$arity$3 = G__15707__3;
  return G__15707;
}();
cljs.core.RedNode.prototype.apply = function(self__, args15706) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15706)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15709 = cljs.core.seq.call(null, coll);
  var chunk__15710 = null;
  var count__15711 = 0;
  var i__15712 = 0;
  while (true) {
    if (i__15712 < count__15711) {
      var vec__15713 = cljs.core._nth.call(null, chunk__15710, i__15712);
      var k = cljs.core.nth.call(null, vec__15713, 0, null);
      var v = cljs.core.nth.call(null, vec__15713, 1, null);
      f.call(null, v, k);
      var G__15715 = seq__15709;
      var G__15716 = chunk__15710;
      var G__15717 = count__15711;
      var G__15718 = i__15712 + 1;
      seq__15709 = G__15715;
      chunk__15710 = G__15716;
      count__15711 = G__15717;
      i__15712 = G__15718;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15709);
      if (temp__4126__auto__) {
        var seq__15709__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15709__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15709__$1);
          var G__15719 = cljs.core.chunk_rest.call(null, seq__15709__$1);
          var G__15720 = c__4314__auto__;
          var G__15721 = cljs.core.count.call(null, c__4314__auto__);
          var G__15722 = 0;
          seq__15709 = G__15719;
          chunk__15710 = G__15720;
          count__15711 = G__15721;
          i__15712 = G__15722;
          continue;
        } else {
          var vec__15714 = cljs.core.first.call(null, seq__15709__$1);
          var k = cljs.core.nth.call(null, vec__15714, 0, null);
          var v = cljs.core.nth.call(null, vec__15714, 1, null);
          f.call(null, v, k);
          var G__15723 = cljs.core.next.call(null, seq__15709__$1);
          var G__15724 = null;
          var G__15725 = 0;
          var G__15726 = 0;
          seq__15709 = G__15723;
          chunk__15710 = G__15724;
          count__15711 = G__15725;
          i__15712 = G__15726;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__15727 = t.left;
          t = G__15727;
          continue;
        } else {
          var G__15728 = t.right;
          t = G__15728;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__15729 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__15730 = cljs.core.next.call(null, es);
          ret = G__15729;
          es = G__15730;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__15731 = null;
  var G__15731__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15731__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15731 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15731__2.call(this, self__, k);
      case 3:
        return G__15731__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15731.cljs$core$IFn$_invoke$arity$2 = G__15731__2;
  G__15731.cljs$core$IFn$_invoke$arity$3 = G__15731__3;
  return G__15731;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args15708) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15708)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__15732 = cljs.core.conj.call(null, stack, t);
              var G__15733 = t.left;
              stack = G__15732;
              t = G__15733;
              continue;
            } else {
              var G__15734 = stack;
              var G__15735 = t.right;
              stack = G__15734;
              t = G__15735;
              continue;
            }
          } else {
            if (c > 0) {
              var G__15736 = cljs.core.conj.call(null, stack, t);
              var G__15737 = t.right;
              stack = G__15736;
              t = G__15737;
              continue;
            } else {
              var G__15738 = stack;
              var G__15739 = t.left;
              stack = G__15738;
              t = G__15739;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__15740 = cljs.core.nnext.call(null, in$);
        var G__15741 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15740;
        out = G__15741;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__15742) {
    var keyvals = cljs.core.seq(arglist__15742);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__15743) {
    var keyvals = cljs.core.seq(arglist__15743);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj15747 = {};
      return obj15747;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__15748 = cljs.core.nnext.call(null, kvs);
        kvs = G__15748;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__15749) {
    var keyvals = cljs.core.seq(arglist__15749);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__15750 = cljs.core.nnext.call(null, in$);
        var G__15751 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15750;
        out = G__15751;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__15752) {
    var keyvals = cljs.core.seq(arglist__15752);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__15753 = cljs.core.nnext.call(null, in$);
        var G__15754 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__15753;
        out = G__15754;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__15755) {
    var comparator = cljs.core.first(arglist__15755);
    var keyvals = cljs.core.rest(arglist__15755);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15756 = self__.mseq;
    if (G__15756) {
      var bit__4208__auto__ = G__15756.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__15756.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15756.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15756);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15756);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15757 = self__.mseq;
    if (G__15757) {
      var bit__4208__auto__ = G__15757.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__15757.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15757.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15757);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15757);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15758 = self__.mseq;
    if (G__15758) {
      var bit__4208__auto__ = G__15758.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__15758.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15758.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15758);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15758);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__15759 = self__.mseq;
    if (G__15759) {
      var bit__4208__auto__ = G__15759.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4208__auto__ || G__15759.cljs$core$INext$) {
        return true;
      } else {
        if (!G__15759.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15759);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__15759);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__15760_SHARP_, p2__15761_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3558__auto__ = p1__15760_SHARP_;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__15761_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__15762) {
    var maps = cljs.core.seq(arglist__15762);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3558__auto__ = m1;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__15763) {
    var f = cljs.core.first(arglist__15763);
    var maps = cljs.core.rest(arglist__15763);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__15764 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__15765 = cljs.core.next.call(null, keys);
      ret = G__15764;
      keys = G__15765;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15768 = cljs.core.seq.call(null, coll);
  var chunk__15769 = null;
  var count__15770 = 0;
  var i__15771 = 0;
  while (true) {
    if (i__15771 < count__15770) {
      var vec__15772 = cljs.core._nth.call(null, chunk__15769, i__15771);
      var k = cljs.core.nth.call(null, vec__15772, 0, null);
      var v = cljs.core.nth.call(null, vec__15772, 1, null);
      f.call(null, v, k);
      var G__15774 = seq__15768;
      var G__15775 = chunk__15769;
      var G__15776 = count__15770;
      var G__15777 = i__15771 + 1;
      seq__15768 = G__15774;
      chunk__15769 = G__15775;
      count__15770 = G__15776;
      i__15771 = G__15777;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15768);
      if (temp__4126__auto__) {
        var seq__15768__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15768__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15768__$1);
          var G__15778 = cljs.core.chunk_rest.call(null, seq__15768__$1);
          var G__15779 = c__4314__auto__;
          var G__15780 = cljs.core.count.call(null, c__4314__auto__);
          var G__15781 = 0;
          seq__15768 = G__15778;
          chunk__15769 = G__15779;
          count__15770 = G__15780;
          i__15771 = G__15781;
          continue;
        } else {
          var vec__15773 = cljs.core.first.call(null, seq__15768__$1);
          var k = cljs.core.nth.call(null, vec__15773, 0, null);
          var v = cljs.core.nth.call(null, vec__15773, 1, null);
          f.call(null, v, k);
          var G__15782 = cljs.core.next.call(null, seq__15768__$1);
          var G__15783 = null;
          var G__15784 = 0;
          var G__15785 = 0;
          seq__15768 = G__15782;
          chunk__15769 = G__15783;
          count__15770 = G__15784;
          i__15771 = G__15785;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__15766_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__15766_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__15786 = null;
  var G__15786__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15786__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15786 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15786__2.call(this, self__, k);
      case 3:
        return G__15786__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15786.cljs$core$IFn$_invoke$arity$2 = G__15786__2;
  G__15786.cljs$core$IFn$_invoke$arity$3 = G__15786__3;
  return G__15786;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args15767) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15767)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__15787 = i + 1;
        var G__15788 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__15787;
        out = G__15788;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__15789 = i + 1;
        var G__15790 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__15789;
        out = G__15790;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__15792 = null;
  var G__15792__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__15792__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__15792 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15792__2.call(this, self__, k);
      case 3:
        return G__15792__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15792.cljs$core$IFn$_invoke$arity$2 = G__15792__2;
  G__15792.cljs$core$IFn$_invoke$arity$3 = G__15792__3;
  return G__15792;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args15791) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15791)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__15795 = cljs.core.seq.call(null, coll);
  var chunk__15796 = null;
  var count__15797 = 0;
  var i__15798 = 0;
  while (true) {
    if (i__15798 < count__15797) {
      var vec__15799 = cljs.core._nth.call(null, chunk__15796, i__15798);
      var k = cljs.core.nth.call(null, vec__15799, 0, null);
      var v = cljs.core.nth.call(null, vec__15799, 1, null);
      f.call(null, v, k);
      var G__15801 = seq__15795;
      var G__15802 = chunk__15796;
      var G__15803 = count__15797;
      var G__15804 = i__15798 + 1;
      seq__15795 = G__15801;
      chunk__15796 = G__15802;
      count__15797 = G__15803;
      i__15798 = G__15804;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15795);
      if (temp__4126__auto__) {
        var seq__15795__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15795__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15795__$1);
          var G__15805 = cljs.core.chunk_rest.call(null, seq__15795__$1);
          var G__15806 = c__4314__auto__;
          var G__15807 = cljs.core.count.call(null, c__4314__auto__);
          var G__15808 = 0;
          seq__15795 = G__15805;
          chunk__15796 = G__15806;
          count__15797 = G__15807;
          i__15798 = G__15808;
          continue;
        } else {
          var vec__15800 = cljs.core.first.call(null, seq__15795__$1);
          var k = cljs.core.nth.call(null, vec__15800, 0, null);
          var v = cljs.core.nth.call(null, vec__15800, 1, null);
          f.call(null, v, k);
          var G__15809 = cljs.core.next.call(null, seq__15795__$1);
          var G__15810 = null;
          var G__15811 = 0;
          var G__15812 = 0;
          seq__15795 = G__15809;
          chunk__15796 = G__15810;
          count__15797 = G__15811;
          i__15798 = G__15812;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__15793_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__15793_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__15813 = null;
  var G__15813__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15813__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15813 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15813__2.call(this, self__, k);
      case 3:
        return G__15813__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15813.cljs$core$IFn$_invoke$arity$2 = G__15813__2;
  G__15813.cljs$core$IFn$_invoke$arity$3 = G__15813__3;
  return G__15813;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args15794) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15794)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4408__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4408__auto__.length) {
        var G__15814 = i + 1;
        var G__15815 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__15814;
        res = G__15815;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__15816 = cljs.core._next.call(null, in$__$1);
          var G__15817 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__15816;
          out = G__15817;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__15818__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__15818 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__15818__delegate.call(this, keys);
    };
    G__15818.cljs$lang$maxFixedArity = 0;
    G__15818.cljs$lang$applyTo = function(arglist__15819) {
      var keys = cljs.core.seq(arglist__15819);
      return G__15818__delegate(keys);
    };
    G__15818.cljs$core$IFn$_invoke$arity$variadic = G__15818__delegate;
    return G__15818;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__15820) {
    var keys = cljs.core.seq(arglist__15820);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__15821) {
    var comparator = cljs.core.first(arglist__15821);
    var keys = cljs.core.rest(arglist__15821);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__15822_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__15822_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__15822_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__15823_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__15823_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__15823_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__15830, seen__$1) {
        while (true) {
          var vec__15831 = p__15830;
          var f = cljs.core.nth.call(null, vec__15831, 0, null);
          var xs__$1 = vec__15831;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__15832 = cljs.core.rest.call(null, s);
              var G__15833 = seen__$1;
              p__15830 = G__15832;
              seen__$1 = G__15833;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__15834 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__15835 = cljs.core.next.call(null, s__$1);
      ret = G__15834;
      s__$1 = G__15835;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__15837 = x;
    if (G__15837) {
      var bit__4201__auto__ = G__15837.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4201__auto__ || G__15837.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__15838 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__15839 = cljs.core.next.call(null, ks);
      var G__15840 = cljs.core.next.call(null, vs);
      map = G__15838;
      ks = G__15839;
      vs = G__15840;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__15843__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15841_SHARP_, p2__15842_SHARP_) {
        return max_key.call(null, k, p1__15841_SHARP_, p2__15842_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__15843 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15843__delegate.call(this, k, x, y, more);
    };
    G__15843.cljs$lang$maxFixedArity = 3;
    G__15843.cljs$lang$applyTo = function(arglist__15844) {
      var k = cljs.core.first(arglist__15844);
      arglist__15844 = cljs.core.next(arglist__15844);
      var x = cljs.core.first(arglist__15844);
      arglist__15844 = cljs.core.next(arglist__15844);
      var y = cljs.core.first(arglist__15844);
      var more = cljs.core.rest(arglist__15844);
      return G__15843__delegate(k, x, y, more);
    };
    G__15843.cljs$core$IFn$_invoke$arity$variadic = G__15843__delegate;
    return G__15843;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__15847__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__15845_SHARP_, p2__15846_SHARP_) {
        return min_key.call(null, k, p1__15845_SHARP_, p2__15846_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__15847 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15847__delegate.call(this, k, x, y, more);
    };
    G__15847.cljs$lang$maxFixedArity = 3;
    G__15847.cljs$lang$applyTo = function(arglist__15848) {
      var k = cljs.core.first(arglist__15848);
      arglist__15848 = cljs.core.next(arglist__15848);
      var x = cljs.core.first(arglist__15848);
      arglist__15848 = cljs.core.next(arglist__15848);
      var y = cljs.core.first(arglist__15848);
      var more = cljs.core.rest(arglist__15848);
      return G__15847__delegate(k, x, y, more);
    };
    G__15847.cljs$core$IFn$_invoke$arity$variadic = G__15847__delegate;
    return G__15847;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__15849 = null;
          var G__15849__0 = function() {
            return f1.call(null);
          };
          var G__15849__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__15849__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__15849 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15849__0.call(this);
              case 1:
                return G__15849__1.call(this, result);
              case 2:
                return G__15849__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15849.cljs$core$IFn$_invoke$arity$0 = G__15849__0;
          G__15849.cljs$core$IFn$_invoke$arity$1 = G__15849__1;
          G__15849.cljs$core$IFn$_invoke$arity$2 = G__15849__2;
          return G__15849;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__15850 = null;
        var G__15850__0 = function() {
          return f1.call(null);
        };
        var G__15850__1 = function(result) {
          return f1.call(null, result);
        };
        var G__15850__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__15850 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15850__0.call(this);
            case 1:
              return G__15850__1.call(this, result);
            case 2:
              return G__15850__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15850.cljs$core$IFn$_invoke$arity$0 = G__15850__0;
        G__15850.cljs$core$IFn$_invoke$arity$1 = G__15850__1;
        G__15850.cljs$core$IFn$_invoke$arity$2 = G__15850__2;
        return G__15850;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15853 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__15853, 0, null);
        var s = vec__15853;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15854 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__15854, 0, null);
      var s = vec__15854;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__15857 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__15857, 0, null);
        var s = vec__15857;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__15858 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__15858, 0, null);
      var s = vec__15858;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__15859 = null;
          var G__15859__0 = function() {
            return f1.call(null);
          };
          var G__15859__1 = function(result) {
            return f1.call(null, result);
          };
          var G__15859__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__15859 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15859__0.call(this);
              case 1:
                return G__15859__1.call(this, result);
              case 2:
                return G__15859__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15859.cljs$core$IFn$_invoke$arity$0 = G__15859__0;
          G__15859.cljs$core$IFn$_invoke$arity$1 = G__15859__1;
          G__15859.cljs$core$IFn$_invoke$arity$2 = G__15859__2;
          return G__15859;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__15861 = null;
          var G__15861__0 = function() {
            return f1.call(null);
          };
          var G__15861__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__15861__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              a.add(input);
              return f1.call(null, result, v);
            }
          };
          G__15861 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15861__0.call(this);
              case 1:
                return G__15861__1.call(this, result);
              case 2:
                return G__15861__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15861.cljs$core$IFn$_invoke$arity$0 = G__15861__0;
          G__15861.cljs$core$IFn$_invoke$arity$1 = G__15861__1;
          G__15861.cljs$core$IFn$_invoke$arity$2 = G__15861__2;
          return G__15861;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__15860_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__15860_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__15872 = null;
      var G__15872__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__15872__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__15872__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__15872__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__15872__4 = function() {
        var G__15873__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__15873 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15873__delegate.call(this, x, y, z, args);
        };
        G__15873.cljs$lang$maxFixedArity = 3;
        G__15873.cljs$lang$applyTo = function(arglist__15874) {
          var x = cljs.core.first(arglist__15874);
          arglist__15874 = cljs.core.next(arglist__15874);
          var y = cljs.core.first(arglist__15874);
          arglist__15874 = cljs.core.next(arglist__15874);
          var z = cljs.core.first(arglist__15874);
          var args = cljs.core.rest(arglist__15874);
          return G__15873__delegate(x, y, z, args);
        };
        G__15873.cljs$core$IFn$_invoke$arity$variadic = G__15873__delegate;
        return G__15873;
      }();
      G__15872 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15872__0.call(this);
          case 1:
            return G__15872__1.call(this, x);
          case 2:
            return G__15872__2.call(this, x, y);
          case 3:
            return G__15872__3.call(this, x, y, z);
          default:
            return G__15872__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15872.cljs$lang$maxFixedArity = 3;
      G__15872.cljs$lang$applyTo = G__15872__4.cljs$lang$applyTo;
      G__15872.cljs$core$IFn$_invoke$arity$0 = G__15872__0;
      G__15872.cljs$core$IFn$_invoke$arity$1 = G__15872__1;
      G__15872.cljs$core$IFn$_invoke$arity$2 = G__15872__2;
      G__15872.cljs$core$IFn$_invoke$arity$3 = G__15872__3;
      G__15872.cljs$core$IFn$_invoke$arity$variadic = G__15872__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15872;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__15875 = null;
      var G__15875__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__15875__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__15875__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__15875__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__15875__4 = function() {
        var G__15876__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__15876 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15876__delegate.call(this, x, y, z, args);
        };
        G__15876.cljs$lang$maxFixedArity = 3;
        G__15876.cljs$lang$applyTo = function(arglist__15877) {
          var x = cljs.core.first(arglist__15877);
          arglist__15877 = cljs.core.next(arglist__15877);
          var y = cljs.core.first(arglist__15877);
          arglist__15877 = cljs.core.next(arglist__15877);
          var z = cljs.core.first(arglist__15877);
          var args = cljs.core.rest(arglist__15877);
          return G__15876__delegate(x, y, z, args);
        };
        G__15876.cljs$core$IFn$_invoke$arity$variadic = G__15876__delegate;
        return G__15876;
      }();
      G__15875 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15875__0.call(this);
          case 1:
            return G__15875__1.call(this, x);
          case 2:
            return G__15875__2.call(this, x, y);
          case 3:
            return G__15875__3.call(this, x, y, z);
          default:
            return G__15875__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15875.cljs$lang$maxFixedArity = 3;
      G__15875.cljs$lang$applyTo = G__15875__4.cljs$lang$applyTo;
      G__15875.cljs$core$IFn$_invoke$arity$0 = G__15875__0;
      G__15875.cljs$core$IFn$_invoke$arity$1 = G__15875__1;
      G__15875.cljs$core$IFn$_invoke$arity$2 = G__15875__2;
      G__15875.cljs$core$IFn$_invoke$arity$3 = G__15875__3;
      G__15875.cljs$core$IFn$_invoke$arity$variadic = G__15875__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15875;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__15878 = null;
      var G__15878__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__15878__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__15878__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__15878__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__15878__4 = function() {
        var G__15879__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__15879 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__15879__delegate.call(this, x, y, z, args);
        };
        G__15879.cljs$lang$maxFixedArity = 3;
        G__15879.cljs$lang$applyTo = function(arglist__15880) {
          var x = cljs.core.first(arglist__15880);
          arglist__15880 = cljs.core.next(arglist__15880);
          var y = cljs.core.first(arglist__15880);
          arglist__15880 = cljs.core.next(arglist__15880);
          var z = cljs.core.first(arglist__15880);
          var args = cljs.core.rest(arglist__15880);
          return G__15879__delegate(x, y, z, args);
        };
        G__15879.cljs$core$IFn$_invoke$arity$variadic = G__15879__delegate;
        return G__15879;
      }();
      G__15878 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__15878__0.call(this);
          case 1:
            return G__15878__1.call(this, x);
          case 2:
            return G__15878__2.call(this, x, y);
          case 3:
            return G__15878__3.call(this, x, y, z);
          default:
            return G__15878__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15878.cljs$lang$maxFixedArity = 3;
      G__15878.cljs$lang$applyTo = G__15878__4.cljs$lang$applyTo;
      G__15878.cljs$core$IFn$_invoke$arity$0 = G__15878__0;
      G__15878.cljs$core$IFn$_invoke$arity$1 = G__15878__1;
      G__15878.cljs$core$IFn$_invoke$arity$2 = G__15878__2;
      G__15878.cljs$core$IFn$_invoke$arity$3 = G__15878__3;
      G__15878.cljs$core$IFn$_invoke$arity$variadic = G__15878__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__15878;
    }();
  };
  var juxt__4 = function() {
    var G__15881__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__15882 = null;
          var G__15882__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__15862_SHARP_, p2__15863_SHARP_) {
                return cljs.core.conj.call(null, p1__15862_SHARP_, p2__15863_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15882__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__15864_SHARP_, p2__15865_SHARP_) {
                return cljs.core.conj.call(null, p1__15864_SHARP_, p2__15865_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15882__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__15866_SHARP_, p2__15867_SHARP_) {
                return cljs.core.conj.call(null, p1__15866_SHARP_, p2__15867_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15882__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__15868_SHARP_, p2__15869_SHARP_) {
                return cljs.core.conj.call(null, p1__15868_SHARP_, p2__15869_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__15882__4 = function() {
            var G__15883__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__15870_SHARP_, p2__15871_SHARP_) {
                  return cljs.core.conj.call(null, p1__15870_SHARP_, cljs.core.apply.call(null, p2__15871_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__15883 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__15883__delegate.call(this, x, y, z, args);
            };
            G__15883.cljs$lang$maxFixedArity = 3;
            G__15883.cljs$lang$applyTo = function(arglist__15884) {
              var x = cljs.core.first(arglist__15884);
              arglist__15884 = cljs.core.next(arglist__15884);
              var y = cljs.core.first(arglist__15884);
              arglist__15884 = cljs.core.next(arglist__15884);
              var z = cljs.core.first(arglist__15884);
              var args = cljs.core.rest(arglist__15884);
              return G__15883__delegate(x, y, z, args);
            };
            G__15883.cljs$core$IFn$_invoke$arity$variadic = G__15883__delegate;
            return G__15883;
          }();
          G__15882 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__15882__0.call(this);
              case 1:
                return G__15882__1.call(this, x);
              case 2:
                return G__15882__2.call(this, x, y);
              case 3:
                return G__15882__3.call(this, x, y, z);
              default:
                return G__15882__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15882.cljs$lang$maxFixedArity = 3;
          G__15882.cljs$lang$applyTo = G__15882__4.cljs$lang$applyTo;
          G__15882.cljs$core$IFn$_invoke$arity$0 = G__15882__0;
          G__15882.cljs$core$IFn$_invoke$arity$1 = G__15882__1;
          G__15882.cljs$core$IFn$_invoke$arity$2 = G__15882__2;
          G__15882.cljs$core$IFn$_invoke$arity$3 = G__15882__3;
          G__15882.cljs$core$IFn$_invoke$arity$variadic = G__15882__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__15882;
        }();
      }(fs__$1);
    };
    var G__15881 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__15881__delegate.call(this, f, g, h, fs);
    };
    G__15881.cljs$lang$maxFixedArity = 3;
    G__15881.cljs$lang$applyTo = function(arglist__15885) {
      var f = cljs.core.first(arglist__15885);
      arglist__15885 = cljs.core.next(arglist__15885);
      var g = cljs.core.first(arglist__15885);
      arglist__15885 = cljs.core.next(arglist__15885);
      var h = cljs.core.first(arglist__15885);
      var fs = cljs.core.rest(arglist__15885);
      return G__15881__delegate(f, g, h, fs);
    };
    G__15881.cljs$core$IFn$_invoke$arity$variadic = G__15881__delegate;
    return G__15881;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__15886 = cljs.core.next.call(null, coll);
        coll = G__15886;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__15887 = n - 1;
        var G__15888 = cljs.core.next.call(null, coll);
        n = G__15887;
        coll = G__15888;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__15890 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__15890, 0, null);
  var flags = cljs.core.nth.call(null, vec__15890, 1, null);
  var pattern = cljs.core.nth.call(null, vec__15890, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15892 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_15893__$1 = cljs.core.next.call(null, coll);
      var n_15894 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_15893__$1 && (n_15894 == null || !(n_15894 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_15893__$1), writer, opts);
          var G__15895 = cljs.core.next.call(null, coll_15893__$1);
          var G__15896 = n_15894 - 1;
          coll_15893__$1 = G__15895;
          n_15894 = G__15896;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_15893__$1) && n_15894 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15892;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15901 = cljs.core.seq.call(null, ss);
    var chunk__15902 = null;
    var count__15903 = 0;
    var i__15904 = 0;
    while (true) {
      if (i__15904 < count__15903) {
        var s = cljs.core._nth.call(null, chunk__15902, i__15904);
        cljs.core._write.call(null, writer, s);
        var G__15905 = seq__15901;
        var G__15906 = chunk__15902;
        var G__15907 = count__15903;
        var G__15908 = i__15904 + 1;
        seq__15901 = G__15905;
        chunk__15902 = G__15906;
        count__15903 = G__15907;
        i__15904 = G__15908;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__15901);
        if (temp__4126__auto__) {
          var seq__15901__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15901__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15901__$1);
            var G__15909 = cljs.core.chunk_rest.call(null, seq__15901__$1);
            var G__15910 = c__4314__auto__;
            var G__15911 = cljs.core.count.call(null, c__4314__auto__);
            var G__15912 = 0;
            seq__15901 = G__15909;
            chunk__15902 = G__15910;
            count__15903 = G__15911;
            i__15904 = G__15912;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__15901__$1);
            cljs.core._write.call(null, writer, s);
            var G__15913 = cljs.core.next.call(null, seq__15901__$1);
            var G__15914 = null;
            var G__15915 = 0;
            var G__15916 = 0;
            seq__15901 = G__15913;
            chunk__15902 = G__15914;
            count__15903 = G__15915;
            i__15904 = G__15916;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15917) {
    var writer = cljs.core.first(arglist__15917);
    var ss = cljs.core.rest(arglist__15917);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15919 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15919;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = function() {
            var G__15925 = obj;
            if (G__15925) {
              var bit__4208__auto__ = G__15925.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4208__auto__ || G__15925.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__15925.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15925);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__15925);
            }
          }();
          if (and__3546__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__15926 = obj;
            if (G__15926) {
              var bit__4201__auto__ = G__15926.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4201__auto__ || G__15926.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__15928 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__15928;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__15927 = obj;
                            if (G__15927) {
                              var bit__4208__auto__ = G__15927.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4208__auto__ || G__15927.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__15927.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__15927);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__15927);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__15933 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__15934 = null;
  var count__15935 = 0;
  var i__15936 = 0;
  while (true) {
    if (i__15936 < count__15935) {
      var obj = cljs.core._nth.call(null, chunk__15934, i__15936);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__15937 = seq__15933;
      var G__15938 = chunk__15934;
      var G__15939 = count__15935;
      var G__15940 = i__15936 + 1;
      seq__15933 = G__15937;
      chunk__15934 = G__15938;
      count__15935 = G__15939;
      i__15936 = G__15940;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15933);
      if (temp__4126__auto__) {
        var seq__15933__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15933__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__15933__$1);
          var G__15941 = cljs.core.chunk_rest.call(null, seq__15933__$1);
          var G__15942 = c__4314__auto__;
          var G__15943 = cljs.core.count.call(null, c__4314__auto__);
          var G__15944 = 0;
          seq__15933 = G__15941;
          chunk__15934 = G__15942;
          count__15935 = G__15943;
          i__15936 = G__15944;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__15933__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__15945 = cljs.core.next.call(null, seq__15933__$1);
          var G__15946 = null;
          var G__15947 = 0;
          var G__15948 = 0;
          seq__15933 = G__15945;
          chunk__15934 = G__15946;
          count__15935 = G__15947;
          i__15936 = G__15948;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15949) {
    var objs = cljs.core.seq(arglist__15949);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15950) {
    var objs = cljs.core.seq(arglist__15950);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15951) {
    var objs = cljs.core.seq(arglist__15951);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15952) {
    var objs = cljs.core.seq(arglist__15952);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15953) {
    var objs = cljs.core.seq(arglist__15953);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15954) {
    var objs = cljs.core.seq(arglist__15954);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15955) {
    var objs = cljs.core.seq(arglist__15955);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15956) {
    var objs = cljs.core.seq(arglist__15956);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15957) {
    var iref = cljs.core.first(arglist__15957);
    arglist__15957 = cljs.core.next(arglist__15957);
    var f = cljs.core.first(arglist__15957);
    var args = cljs.core.rest(arglist__15957);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__15958_SHARP_, p2__15959_SHARP_) {
    var ret = f1.call(null, p1__15958_SHARP_, p2__15959_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.flatmap = function() {
  var flatmap = null;
  var flatmap__1 = function(f) {
    return function(f1) {
      return function() {
        var G__15960 = null;
        var G__15960__0 = function() {
          return f1.call(null);
        };
        var G__15960__1 = function(result) {
          return f1.call(null, result);
        };
        var G__15960__2 = function(result, input) {
          return cljs.core.reduce.call(null, cljs.core.preserving_reduced.call(null, f1), result, f.call(null, input));
        };
        G__15960 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15960__0.call(this);
            case 1:
              return G__15960__1.call(this, result);
            case 2:
              return G__15960__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15960.cljs$core$IFn$_invoke$arity$0 = G__15960__0;
        G__15960.cljs$core$IFn$_invoke$arity$1 = G__15960__1;
        G__15960.cljs$core$IFn$_invoke$arity$2 = G__15960__2;
        return G__15960;
      }();
    };
  };
  var flatmap__2 = function(f, coll) {
    return cljs.core.sequence.call(null, flatmap.call(null, f), coll);
  };
  flatmap = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return flatmap__1.call(this, f);
      case 2:
        return flatmap__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatmap.cljs$core$IFn$_invoke$arity$1 = flatmap__1;
  flatmap.cljs$core$IFn$_invoke$arity$2 = flatmap__2;
  return flatmap;
}();
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__15961 = null;
          var G__15961__0 = function() {
            return f1.call(null);
          };
          var G__15961__1 = function(result) {
            return f1.call(null, result);
          };
          var G__15961__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__15961 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15961__0.call(this);
              case 1:
                return G__15961__1.call(this, result);
              case 2:
                return G__15961__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15961.cljs$core$IFn$_invoke$arity$0 = G__15961__0;
          G__15961.cljs$core$IFn$_invoke$arity$1 = G__15961__1;
          G__15961.cljs$core$IFn$_invoke$arity$2 = G__15961__2;
          return G__15961;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__15963_SHARP_, p2__15962_SHARP_) {
    return proc.call(null, p2__15962_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj15965 = {};
  return obj15965;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__15967 = k;
    if (G__15967) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__15967.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__15967.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15967);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15967);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__15981 = x;
      if (G__15981) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__15981.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__15981.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15981);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__15981);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj15983 = {};
              return obj15983;
            }();
            var seq__15984_15994 = cljs.core.seq.call(null, x);
            var chunk__15985_15995 = null;
            var count__15986_15996 = 0;
            var i__15987_15997 = 0;
            while (true) {
              if (i__15987_15997 < count__15986_15996) {
                var vec__15988_15998 = cljs.core._nth.call(null, chunk__15985_15995, i__15987_15997);
                var k_15999 = cljs.core.nth.call(null, vec__15988_15998, 0, null);
                var v_16000 = cljs.core.nth.call(null, vec__15988_15998, 1, null);
                m[cljs.core.key__GT_js.call(null, k_15999)] = clj__GT_js.call(null, v_16000);
                var G__16001 = seq__15984_15994;
                var G__16002 = chunk__15985_15995;
                var G__16003 = count__15986_15996;
                var G__16004 = i__15987_15997 + 1;
                seq__15984_15994 = G__16001;
                chunk__15985_15995 = G__16002;
                count__15986_15996 = G__16003;
                i__15987_15997 = G__16004;
                continue;
              } else {
                var temp__4126__auto___16005 = cljs.core.seq.call(null, seq__15984_15994);
                if (temp__4126__auto___16005) {
                  var seq__15984_16006__$1 = temp__4126__auto___16005;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__15984_16006__$1)) {
                    var c__4314__auto___16007 = cljs.core.chunk_first.call(null, seq__15984_16006__$1);
                    var G__16008 = cljs.core.chunk_rest.call(null, seq__15984_16006__$1);
                    var G__16009 = c__4314__auto___16007;
                    var G__16010 = cljs.core.count.call(null, c__4314__auto___16007);
                    var G__16011 = 0;
                    seq__15984_15994 = G__16008;
                    chunk__15985_15995 = G__16009;
                    count__15986_15996 = G__16010;
                    i__15987_15997 = G__16011;
                    continue;
                  } else {
                    var vec__15989_16012 = cljs.core.first.call(null, seq__15984_16006__$1);
                    var k_16013 = cljs.core.nth.call(null, vec__15989_16012, 0, null);
                    var v_16014 = cljs.core.nth.call(null, vec__15989_16012, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_16013)] = clj__GT_js.call(null, v_16014);
                    var G__16015 = cljs.core.next.call(null, seq__15984_16006__$1);
                    var G__16016 = null;
                    var G__16017 = 0;
                    var G__16018 = 0;
                    seq__15984_15994 = G__16015;
                    chunk__15985_15995 = G__16016;
                    count__15986_15996 = G__16017;
                    i__15987_15997 = G__16018;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__15990_16019 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__15991_16020 = null;
              var count__15992_16021 = 0;
              var i__15993_16022 = 0;
              while (true) {
                if (i__15993_16022 < count__15992_16021) {
                  var x_16023__$1 = cljs.core._nth.call(null, chunk__15991_16020, i__15993_16022);
                  arr.push(x_16023__$1);
                  var G__16024 = seq__15990_16019;
                  var G__16025 = chunk__15991_16020;
                  var G__16026 = count__15992_16021;
                  var G__16027 = i__15993_16022 + 1;
                  seq__15990_16019 = G__16024;
                  chunk__15991_16020 = G__16025;
                  count__15992_16021 = G__16026;
                  i__15993_16022 = G__16027;
                  continue;
                } else {
                  var temp__4126__auto___16028 = cljs.core.seq.call(null, seq__15990_16019);
                  if (temp__4126__auto___16028) {
                    var seq__15990_16029__$1 = temp__4126__auto___16028;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__15990_16029__$1)) {
                      var c__4314__auto___16030 = cljs.core.chunk_first.call(null, seq__15990_16029__$1);
                      var G__16031 = cljs.core.chunk_rest.call(null, seq__15990_16029__$1);
                      var G__16032 = c__4314__auto___16030;
                      var G__16033 = cljs.core.count.call(null, c__4314__auto___16030);
                      var G__16034 = 0;
                      seq__15990_16019 = G__16031;
                      chunk__15991_16020 = G__16032;
                      count__15992_16021 = G__16033;
                      i__15993_16022 = G__16034;
                      continue;
                    } else {
                      var x_16035__$1 = cljs.core.first.call(null, seq__15990_16029__$1);
                      arr.push(x_16035__$1);
                      var G__16036 = cljs.core.next.call(null, seq__15990_16029__$1);
                      var G__16037 = null;
                      var G__16038 = 0;
                      var G__16039 = 0;
                      seq__15990_16019 = G__16036;
                      chunk__15991_16020 = G__16037;
                      count__15992_16021 = G__16038;
                      i__15993_16022 = G__16039;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj16041 = {};
  return obj16041;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__16062__delegate = function(x, opts) {
      if (function() {
        var G__16052 = x;
        if (G__16052) {
          var bit__4208__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = bit__4208__auto__;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return G__16052.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__16052.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__16052);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__16052);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__16053 = opts;
          var map__16053__$1 = cljs.core.seq_QMARK_.call(null, map__16053) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16053) : map__16053;
          var keywordize_keys = cljs.core.get.call(null, map__16053__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__16053, map__16053__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4283__auto__ = function(map__16053, map__16053__$1, keywordize_keys, keyfn) {
                          return function iter__16058(s__16059) {
                            return new cljs.core.LazySeq(null, function(map__16053, map__16053__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__16059__$1 = s__16059;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__16059__$1);
                                  if (temp__4126__auto__) {
                                    var s__16059__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__16059__$2)) {
                                      var c__4281__auto__ = cljs.core.chunk_first.call(null, s__16059__$2);
                                      var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                      var b__16061 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                      if (function() {
                                        var i__16060 = 0;
                                        while (true) {
                                          if (i__16060 < size__4282__auto__) {
                                            var k = cljs.core._nth.call(null, c__4281__auto__, i__16060);
                                            cljs.core.chunk_append.call(null, b__16061, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__16063 = i__16060 + 1;
                                            i__16060 = G__16063;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16061), iter__16058.call(null, cljs.core.chunk_rest.call(null, s__16059__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16061), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__16059__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__16058.call(null, cljs.core.rest.call(null, s__16059__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__16053, map__16053__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__16053, map__16053__$1, keywordize_keys, keyfn);
                        return iter__4283__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__16053, map__16053__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__16062 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__16062__delegate.call(this, x, opts);
    };
    G__16062.cljs$lang$maxFixedArity = 1;
    G__16062.cljs$lang$applyTo = function(arglist__16064) {
      var x = cljs.core.first(arglist__16064);
      var opts = cljs.core.rest(arglist__16064);
      return G__16062__delegate(x, opts);
    };
    G__16062.cljs$core$IFn$_invoke$arity$variadic = G__16062__delegate;
    return G__16062;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__16065__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__16065 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__16065__delegate.call(this, args);
      };
      G__16065.cljs$lang$maxFixedArity = 0;
      G__16065.cljs$lang$applyTo = function(arglist__16066) {
        var args = cljs.core.seq(arglist__16066);
        return G__16065__delegate(args);
      };
      G__16065.cljs$core$IFn$_invoke$arity$variadic = G__16065__delegate;
      return G__16065;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__16067 = ret;
        f = G__16067;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__16068__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__16068 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__16068__delegate.call(this, f, args);
    };
    G__16068.cljs$lang$maxFixedArity = 1;
    G__16068.cljs$lang$applyTo = function(arglist__16069) {
      var f = cljs.core.first(arglist__16069);
      var args = cljs.core.rest(arglist__16069);
      return G__16068__delegate(f, args);
    };
    G__16068.cljs$core$IFn$_invoke$arity$variadic = G__16068__delegate;
    return G__16068;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__16070) {
    var f = cljs.core.first(arglist__16070);
    var args = cljs.core.rest(arglist__16070);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3558__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      var or__3558__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3558__auto____$1) {
        return or__3558__auto____$1;
      } else {
        var and__3546__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3546__auto__) {
          var and__3546__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3546__auto____$1) {
            var and__3546__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3546__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__16071 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__16072 = i + 1;
                  ret = G__16071;
                  i = G__16072;
                  continue;
                }
                break;
              }
            } else {
              return and__3546__auto____$2;
            }
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3558__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__16073_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__16073_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__16073_SHARP_), cljs.core.second.call(null, p1__16073_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__16074_SHARP_, p2__16075_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__16074_SHARP_, p2__16075_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3558__auto__ = cljs.core.truth_(function() {
    var and__3546__auto__ = xprefs;
    if (cljs.core.truth_(and__3546__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3546__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var or__3558__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__16076 = cljs.core.rest.call(null, ps);
          ps = G__16076;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3558__auto____$1)) {
      return or__3558__auto____$1;
    } else {
      var or__3558__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__16077 = cljs.core.rest.call(null, ps);
            ps = G__16077;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3558__auto____$2)) {
        return or__3558__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3558__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__16080) {
    var vec__16081 = p__16080;
    var k = cljs.core.nth.call(null, vec__16081, 0, null);
    var _ = cljs.core.nth.call(null, vec__16081, 1, null);
    var e = vec__16081;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3558__auto__ = be == null;
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj16083 = {};
  return obj16083;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._reset[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._reset["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._add_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._add_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._remove_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._remove_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._prefer_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._get_method[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._get_method["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._methods[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._methods["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3546__auto__ = mf;
    if (and__3546__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4185__auto__ = mf == null ? null : mf;
    return function() {
      var or__3558__auto__ = cljs.core._prefers[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core._prefers["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__16085 = null;
  var G__16085__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__16085__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__16085__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__16085__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__16085__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__16085__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__16085__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__16085__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__16085__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__16085__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__16085__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__16085__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__16085__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__16085__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__16085__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__16085__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__16085__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__16085__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__16085__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__16085__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__16085__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__16085 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__16085__2.call(this, self__, a);
      case 3:
        return G__16085__3.call(this, self__, a, b);
      case 4:
        return G__16085__4.call(this, self__, a, b, c);
      case 5:
        return G__16085__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16085__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16085__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16085__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16085__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16085__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16085__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16085__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16085__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16085__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16085__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16085__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16085__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16085__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16085__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16085__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16085__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16085__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16085.cljs$core$IFn$_invoke$arity$2 = G__16085__2;
  G__16085.cljs$core$IFn$_invoke$arity$3 = G__16085__3;
  G__16085.cljs$core$IFn$_invoke$arity$4 = G__16085__4;
  G__16085.cljs$core$IFn$_invoke$arity$5 = G__16085__5;
  G__16085.cljs$core$IFn$_invoke$arity$6 = G__16085__6;
  G__16085.cljs$core$IFn$_invoke$arity$7 = G__16085__7;
  G__16085.cljs$core$IFn$_invoke$arity$8 = G__16085__8;
  G__16085.cljs$core$IFn$_invoke$arity$9 = G__16085__9;
  G__16085.cljs$core$IFn$_invoke$arity$10 = G__16085__10;
  G__16085.cljs$core$IFn$_invoke$arity$11 = G__16085__11;
  G__16085.cljs$core$IFn$_invoke$arity$12 = G__16085__12;
  G__16085.cljs$core$IFn$_invoke$arity$13 = G__16085__13;
  G__16085.cljs$core$IFn$_invoke$arity$14 = G__16085__14;
  G__16085.cljs$core$IFn$_invoke$arity$15 = G__16085__15;
  G__16085.cljs$core$IFn$_invoke$arity$16 = G__16085__16;
  G__16085.cljs$core$IFn$_invoke$arity$17 = G__16085__17;
  G__16085.cljs$core$IFn$_invoke$arity$18 = G__16085__18;
  G__16085.cljs$core$IFn$_invoke$arity$19 = G__16085__19;
  G__16085.cljs$core$IFn$_invoke$arity$20 = G__16085__20;
  G__16085.cljs$core$IFn$_invoke$arity$21 = G__16085__21;
  G__16085.cljs$core$IFn$_invoke$arity$22 = G__16085__22;
  return G__16085;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args16084) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args16084)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__19512_SHARP_) {
      return max === p1__19512_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__19513__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__19513 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19513__delegate.call(this, s1, s2, sets);
    };
    G__19513.cljs$lang$maxFixedArity = 2;
    G__19513.cljs$lang$applyTo = function(arglist__19514) {
      var s1 = cljs.core.first(arglist__19514);
      arglist__19514 = cljs.core.next(arglist__19514);
      var s2 = cljs.core.first(arglist__19514);
      var sets = cljs.core.rest(arglist__19514);
      return G__19513__delegate(s1, s2, sets);
    };
    G__19513.cljs$core$IFn$_invoke$arity$variadic = G__19513__delegate;
    return G__19513;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__19516 = s2;
        var G__19517 = s1;
        s1 = G__19516;
        s2 = G__19517;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__19518__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__19515_SHARP_) {
        return-cljs.core.count.call(null, p1__19515_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__19518 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19518__delegate.call(this, s1, s2, sets);
    };
    G__19518.cljs$lang$maxFixedArity = 2;
    G__19518.cljs$lang$applyTo = function(arglist__19519) {
      var s1 = cljs.core.first(arglist__19519);
      arglist__19519 = cljs.core.next(arglist__19519);
      var s2 = cljs.core.first(arglist__19519);
      var sets = cljs.core.rest(arglist__19519);
      return G__19518__delegate(s1, s2, sets);
    };
    G__19518.cljs$core$IFn$_invoke$arity$variadic = G__19518__delegate;
    return G__19518;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__19520__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__19520 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19520__delegate.call(this, s1, s2, sets);
    };
    G__19520.cljs$lang$maxFixedArity = 2;
    G__19520.cljs$lang$applyTo = function(arglist__19521) {
      var s1 = cljs.core.first(arglist__19521);
      arglist__19521 = cljs.core.next(arglist__19521);
      var s2 = cljs.core.first(arglist__19521);
      var sets = cljs.core.rest(arglist__19521);
      return G__19520__delegate(s1, s2, sets);
    };
    G__19520.cljs$core$IFn$_invoke$arity$variadic = G__19520__delegate;
    return G__19520;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__19522_SHARP_) {
    return cljs.core.select_keys.call(null, p1__19522_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__19525) {
    var vec__19526 = p__19525;
    var old = cljs.core.nth.call(null, vec__19526, 0, null);
    var new$ = cljs.core.nth.call(null, vec__19526, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__19527_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__19527_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__19530) {
    var vec__19531 = p__19530;
    var k = cljs.core.nth.call(null, vec__19531, 0, null);
    var v = cljs.core.nth.call(null, vec__19531, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__19538 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__19538, 0, null);
      var s = cljs.core.nth.call(null, vec__19538, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__19538, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__19538, r, s, idx) {
              return function(p1__19532_SHARP_, p2__19533_SHARP_) {
                return cljs.core.conj.call(null, p1__19532_SHARP_, cljs.core.merge.call(null, p2__19533_SHARP_, x));
              };
            }(found, ks, vec__19538, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__19538, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__19539 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__19539, 0, null);
    var s = cljs.core.nth.call(null, vec__19539, 1, null);
    var k = cljs.core.nth.call(null, vec__19539, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__19539, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__19539, r, s, k, idx) {
            return function(p1__19534_SHARP_, p2__19535_SHARP_) {
              return cljs.core.conj.call(null, p1__19534_SHARP_, cljs.core.merge.call(null, p2__19535_SHARP_, x));
            };
          }(found, vec__19539, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__19539, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__19540_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__19540_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__19541_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__19541_SHARP_);
  }, set2);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__18745 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__18745;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__18749 = cljs.core._EQ_;
    var expr__18750 = limit;
    if (cljs.core.truth_(pred__18749.call(null, 1, expr__18750))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__18749.call(null, 2, expr__18750))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__18752 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__18753 = limit__$1 - 1;
            var G__18754 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__18752;
            limit__$1 = G__18753;
            parts = G__18754;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__18755 = index - 1;
        index = G__18755;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___18756 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___18756)) {
        var replacement_18757 = temp__4124__auto___18756;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_18757));
      } else {
        buffer.append(ch);
      }
      var G__18758 = index + 1;
      index = G__18758;
      continue;
    }
    break;
  }
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj19309 = {};
  return obj19309;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = sablono.util.to_str[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = sablono.util.to_str["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj19311 = {};
  return obj19311;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = sablono.util.to_uri[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = sablono.util.to_uri["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__19312) {
    var xs = cljs.core.seq(arglist__19312);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__19314 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__19314, 0, null);
    var words = cljs.core.nthnext.call(null, vec__19314, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.camel_case_keys = function camel_case_keys(m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    var ks = cljs.core.keys.call(null, m);
    var kmap = cljs.core.zipmap.call(null, ks, cljs.core.map.call(null, sablono.util.camel_case, ks));
    var G__19316 = clojure.set.rename_keys.call(null, m, kmap);
    var G__19316__$1 = cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.update_in.call(null, G__19316, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", -496642736)], null), camel_case_keys) : G__19316;
    return G__19316__$1;
  } else {
    return m;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__19317_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__19317_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19317_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__19317_SHARP_)) {
          return p1__19317_SHARP_;
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19317_SHARP_], null);
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", -2030961996), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__19318) {
    var maps = cljs.core.seq(arglist__19318);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__19322 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__19322, 0, null);
  var names = cljs.core.nth.call(null, vec__19322, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__19322, tag_name, names) {
    return function(p1__19319_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__19319_SHARP_));
    };
  }(matches, vec__19322, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__19322, tag_name, names) {
    return function(p1__19320_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__19320_SHARP_));
    };
  }(matches, vec__19322, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__19323) {
  var vec__19326 = p__19323;
  var tag = cljs.core.nth.call(null, vec__19326, 0, null);
  var content = cljs.core.nthnext.call(null, vec__19326, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  } else {
  }
  var vec__19327 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__19327, 0, null);
  var id = cljs.core.nth.call(null, vec__19327, 1, null);
  var class$ = cljs.core.nth.call(null, vec__19327, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "option", "option", 65132272), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return sablono.util.react_symbol.call(null, tag);
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj19305 = {};
  return obj19305;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), sablono.interpreter.input, new cljs.core.Keyword(null, "option", "option", 65132272), sablono.interpreter.option, new cljs.core.Keyword(null, "textarea", "textarea", -650375824), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__19307 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__19307, 0, null);
  var attrs = cljs.core.nth.call(null, vec__19307, 1, null);
  var content = cljs.core.nth.call(null, vec__19307, 2, null);
  var f = sablono.interpreter.dom_fn.call(null, tag);
  var js_attrs = sablono.interpreter.attributes.call(null, attrs);
  if (cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content))) {
    return f.call(null, js_attrs, sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)));
  } else {
    if (cljs.core.truth_(content)) {
      return cljs.core.apply.call(null, f, js_attrs, sablono.interpreter.interpret.call(null, content));
    } else {
      return f.call(null, js_attrs, null);
    }
  }
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__19196) {
    var vec__19197 = p__19196;
    var k = cljs.core.nth.call(null, vec__19197, 0, null);
    var v = cljs.core.nth.call(null, vec__19197, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__19200) {
    var vec__19201 = p__19200;
    var k = cljs.core.nth.call(null, vec__19201, 0, null);
    var v = cljs.core.nth.call(null, vec__19201, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__19204__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__19203 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__19203, 0, null);
        var body = cljs.core.nthnext.call(null, vec__19203, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__19204 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19204__delegate.call(this, args);
    };
    G__19204.cljs$lang$maxFixedArity = 0;
    G__19204.cljs$lang$applyTo = function(arglist__19205) {
      var args = cljs.core.seq(arglist__19205);
      return G__19204__delegate(args);
    };
    G__19204.cljs$core$IFn$_invoke$arity$variadic = G__19204__delegate;
    return G__19204;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4283__auto__ = function iter__19210(s__19211) {
    return new cljs.core.LazySeq(null, function() {
      var s__19211__$1 = s__19211;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__19211__$1);
        if (temp__4126__auto__) {
          var s__19211__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__19211__$2)) {
            var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19211__$2);
            var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
            var b__19213 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
            if (function() {
              var i__19212 = 0;
              while (true) {
                if (i__19212 < size__4282__auto__) {
                  var args = cljs.core._nth.call(null, c__4281__auto__, i__19212);
                  cljs.core.chunk_append.call(null, b__19213, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__19214 = i__19212 + 1;
                  i__19212 = G__19214;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19213), iter__19210.call(null, cljs.core.chunk_rest.call(null, s__19211__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19213), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__19211__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), iter__19210.call(null, cljs.core.rest.call(null, s__19211__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4283__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4283__auto__ = function iter__19219(s__19220) {
      return new cljs.core.LazySeq(null, function() {
        var s__19220__$1 = s__19220;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__19220__$1);
          if (temp__4126__auto__) {
            var s__19220__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19220__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19220__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__19222 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__19221 = 0;
                while (true) {
                  if (i__19221 < size__4282__auto__) {
                    var style = cljs.core._nth.call(null, c__4281__auto__, i__19221);
                    cljs.core.chunk_append.call(null, b__19222, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                    var G__19223 = i__19221 + 1;
                    i__19221 = G__19223;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19222), iter__19219.call(null, cljs.core.chunk_rest.call(null, s__19220__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19222), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__19220__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), iter__19219.call(null, 
              cljs.core.rest.call(null, s__19220__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__19224) {
    var styles = cljs.core.seq(arglist__19224);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to19225 = function() {
  var link_to19225__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to19225 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to19225__delegate.call(this, url, content);
  };
  link_to19225.cljs$lang$maxFixedArity = 1;
  link_to19225.cljs$lang$applyTo = function(arglist__19226) {
    var url = cljs.core.first(arglist__19226);
    var content = cljs.core.rest(arglist__19226);
    return link_to19225__delegate(url, content);
  };
  link_to19225.cljs$core$IFn$_invoke$arity$variadic = link_to19225__delegate;
  return link_to19225;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to19225);
sablono.core.mail_to19227 = function() {
  var mail_to19227__delegate = function(e_mail, p__19228) {
    var vec__19230 = p__19228;
    var content = cljs.core.nth.call(null, vec__19230, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3558__auto__ = content;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to19227 = function(e_mail, var_args) {
    var p__19228 = null;
    if (arguments.length > 1) {
      p__19228 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to19227__delegate.call(this, e_mail, p__19228);
  };
  mail_to19227.cljs$lang$maxFixedArity = 1;
  mail_to19227.cljs$lang$applyTo = function(arglist__19231) {
    var e_mail = cljs.core.first(arglist__19231);
    var p__19228 = cljs.core.rest(arglist__19231);
    return mail_to19227__delegate(e_mail, p__19228);
  };
  mail_to19227.cljs$core$IFn$_invoke$arity$variadic = mail_to19227__delegate;
  return mail_to19227;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to19227);
sablono.core.unordered_list19232 = function unordered_list19232(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__4283__auto__ = function iter__19237(s__19238) {
      return new cljs.core.LazySeq(null, function() {
        var s__19238__$1 = s__19238;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__19238__$1);
          if (temp__4126__auto__) {
            var s__19238__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19238__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19238__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__19240 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__19239 = 0;
                while (true) {
                  if (i__19239 < size__4282__auto__) {
                    var x = cljs.core._nth.call(null, c__4281__auto__, i__19239);
                    cljs.core.chunk_append.call(null, b__19240, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__19241 = i__19239 + 1;
                    i__19239 = G__19241;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19240), iter__19237.call(null, cljs.core.chunk_rest.call(null, s__19238__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19240), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__19238__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__19237.call(null, cljs.core.rest.call(null, s__19238__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list19232);
sablono.core.ordered_list19242 = function ordered_list19242(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__4283__auto__ = function iter__19247(s__19248) {
      return new cljs.core.LazySeq(null, function() {
        var s__19248__$1 = s__19248;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__19248__$1);
          if (temp__4126__auto__) {
            var s__19248__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19248__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19248__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__19250 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__19249 = 0;
                while (true) {
                  if (i__19249 < size__4282__auto__) {
                    var x = cljs.core._nth.call(null, c__4281__auto__, i__19249);
                    cljs.core.chunk_append.call(null, b__19250, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__19251 = i__19249 + 1;
                    i__19249 = G__19251;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19250), iter__19247.call(null, cljs.core.chunk_rest.call(null, s__19248__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19250), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__19248__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), iter__19247.call(null, cljs.core.rest.call(null, s__19248__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list19242);
sablono.core.image19252 = function() {
  var image19252 = null;
  var image19252__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image19252__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
  };
  image19252 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image19252__1.call(this, src);
      case 2:
        return image19252__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image19252.cljs$core$IFn$_invoke$arity$1 = image19252__1;
  image19252.cljs$core$IFn$_invoke$arity$2 = image19252__2;
  return image19252;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image19252);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__19253_SHARP_, p2__19254_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__19253_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__19254_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__19255_SHARP_, p2__19256_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__19255_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__19256_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  value], null)], null);
};
sablono.core.color_field19257 = function() {
  var color_field19257 = null;
  var color_field19257__1 = function(name__10239__auto__) {
    return color_field19257.call(null, name__10239__auto__, null);
  };
  var color_field19257__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1642760596, null)), name__10239__auto__, value__10240__auto__);
  };
  color_field19257 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field19257__1.call(this, name__10239__auto__);
      case 2:
        return color_field19257__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field19257.cljs$core$IFn$_invoke$arity$1 = color_field19257__1;
  color_field19257.cljs$core$IFn$_invoke$arity$2 = color_field19257__2;
  return color_field19257;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field19257);
sablono.core.date_field19258 = function() {
  var date_field19258 = null;
  var date_field19258__1 = function(name__10239__auto__) {
    return date_field19258.call(null, name__10239__auto__, null);
  };
  var date_field19258__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", 177097065, null)), name__10239__auto__, value__10240__auto__);
  };
  date_field19258 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field19258__1.call(this, name__10239__auto__);
      case 2:
        return date_field19258__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field19258.cljs$core$IFn$_invoke$arity$1 = date_field19258__1;
  date_field19258.cljs$core$IFn$_invoke$arity$2 = date_field19258__2;
  return date_field19258;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field19258);
sablono.core.datetime_field19259 = function() {
  var datetime_field19259 = null;
  var datetime_field19259__1 = function(name__10239__auto__) {
    return datetime_field19259.call(null, name__10239__auto__, null);
  };
  var datetime_field19259__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null)), name__10239__auto__, value__10240__auto__);
  };
  datetime_field19259 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field19259__1.call(this, name__10239__auto__);
      case 2:
        return datetime_field19259__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field19259.cljs$core$IFn$_invoke$arity$1 = datetime_field19259__1;
  datetime_field19259.cljs$core$IFn$_invoke$arity$2 = datetime_field19259__2;
  return datetime_field19259;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field19259);
sablono.core.datetime_local_field19260 = function() {
  var datetime_local_field19260 = null;
  var datetime_local_field19260__1 = function(name__10239__auto__) {
    return datetime_local_field19260.call(null, name__10239__auto__, null);
  };
  var datetime_local_field19260__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null)), name__10239__auto__, value__10240__auto__);
  };
  datetime_local_field19260 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field19260__1.call(this, name__10239__auto__);
      case 2:
        return datetime_local_field19260__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field19260.cljs$core$IFn$_invoke$arity$1 = datetime_local_field19260__1;
  datetime_local_field19260.cljs$core$IFn$_invoke$arity$2 = datetime_local_field19260__2;
  return datetime_local_field19260;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field19260);
sablono.core.email_field19261 = function() {
  var email_field19261 = null;
  var email_field19261__1 = function(name__10239__auto__) {
    return email_field19261.call(null, name__10239__auto__, null);
  };
  var email_field19261__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1238619063, null)), name__10239__auto__, value__10240__auto__);
  };
  email_field19261 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field19261__1.call(this, name__10239__auto__);
      case 2:
        return email_field19261__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field19261.cljs$core$IFn$_invoke$arity$1 = email_field19261__1;
  email_field19261.cljs$core$IFn$_invoke$arity$2 = email_field19261__2;
  return email_field19261;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field19261);
sablono.core.file_field19262 = function() {
  var file_field19262 = null;
  var file_field19262__1 = function(name__10239__auto__) {
    return file_field19262.call(null, name__10239__auto__, null);
  };
  var file_field19262__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", 370885649, null)), name__10239__auto__, value__10240__auto__);
  };
  file_field19262 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field19262__1.call(this, name__10239__auto__);
      case 2:
        return file_field19262__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field19262.cljs$core$IFn$_invoke$arity$1 = file_field19262__1;
  file_field19262.cljs$core$IFn$_invoke$arity$2 = file_field19262__2;
  return file_field19262;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field19262);
sablono.core.hidden_field19263 = function() {
  var hidden_field19263 = null;
  var hidden_field19263__1 = function(name__10239__auto__) {
    return hidden_field19263.call(null, name__10239__auto__, null);
  };
  var hidden_field19263__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null)), name__10239__auto__, value__10240__auto__);
  };
  hidden_field19263 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field19263__1.call(this, name__10239__auto__);
      case 2:
        return hidden_field19263__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field19263.cljs$core$IFn$_invoke$arity$1 = hidden_field19263__1;
  hidden_field19263.cljs$core$IFn$_invoke$arity$2 = hidden_field19263__2;
  return hidden_field19263;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field19263);
sablono.core.month_field19264 = function() {
  var month_field19264 = null;
  var month_field19264__1 = function(name__10239__auto__) {
    return month_field19264.call(null, name__10239__auto__, null);
  };
  var month_field19264__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -319717006, null)), name__10239__auto__, value__10240__auto__);
  };
  month_field19264 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field19264__1.call(this, name__10239__auto__);
      case 2:
        return month_field19264__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field19264.cljs$core$IFn$_invoke$arity$1 = month_field19264__1;
  month_field19264.cljs$core$IFn$_invoke$arity$2 = month_field19264__2;
  return month_field19264;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field19264);
sablono.core.number_field19265 = function() {
  var number_field19265 = null;
  var number_field19265__1 = function(name__10239__auto__) {
    return number_field19265.call(null, name__10239__auto__, null);
  };
  var number_field19265__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", -1084057331, null)), name__10239__auto__, value__10240__auto__);
  };
  number_field19265 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field19265__1.call(this, name__10239__auto__);
      case 2:
        return number_field19265__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field19265.cljs$core$IFn$_invoke$arity$1 = number_field19265__1;
  number_field19265.cljs$core$IFn$_invoke$arity$2 = number_field19265__2;
  return number_field19265;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field19265);
sablono.core.password_field19266 = function() {
  var password_field19266 = null;
  var password_field19266__1 = function(name__10239__auto__) {
    return password_field19266.call(null, name__10239__auto__, null);
  };
  var password_field19266__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", 2057553998, null)), name__10239__auto__, value__10240__auto__);
  };
  password_field19266 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field19266__1.call(this, name__10239__auto__);
      case 2:
        return password_field19266__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field19266.cljs$core$IFn$_invoke$arity$1 = password_field19266__1;
  password_field19266.cljs$core$IFn$_invoke$arity$2 = password_field19266__2;
  return password_field19266;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field19266);
sablono.core.range_field19267 = function() {
  var range_field19267 = null;
  var range_field19267__1 = function(name__10239__auto__) {
    return range_field19267.call(null, name__10239__auto__, null);
  };
  var range_field19267__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1014743483, null)), name__10239__auto__, value__10240__auto__);
  };
  range_field19267 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field19267__1.call(this, name__10239__auto__);
      case 2:
        return range_field19267__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field19267.cljs$core$IFn$_invoke$arity$1 = range_field19267__1;
  range_field19267.cljs$core$IFn$_invoke$arity$2 = range_field19267__2;
  return range_field19267;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field19267);
sablono.core.search_field19268 = function() {
  var search_field19268 = null;
  var search_field19268__1 = function(name__10239__auto__) {
    return search_field19268.call(null, name__10239__auto__, null);
  };
  var search_field19268__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", -1089495947, null)), name__10239__auto__, value__10240__auto__);
  };
  search_field19268 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field19268__1.call(this, name__10239__auto__);
      case 2:
        return search_field19268__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field19268.cljs$core$IFn$_invoke$arity$1 = search_field19268__1;
  search_field19268.cljs$core$IFn$_invoke$arity$2 = search_field19268__2;
  return search_field19268;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field19268);
sablono.core.tel_field19269 = function() {
  var tel_field19269 = null;
  var tel_field19269__1 = function(name__10239__auto__) {
    return tel_field19269.call(null, name__10239__auto__, null);
  };
  var tel_field19269__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null)), name__10239__auto__, value__10240__auto__);
  };
  tel_field19269 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field19269__1.call(this, name__10239__auto__);
      case 2:
        return tel_field19269__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field19269.cljs$core$IFn$_invoke$arity$1 = tel_field19269__1;
  tel_field19269.cljs$core$IFn$_invoke$arity$2 = tel_field19269__2;
  return tel_field19269;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field19269);
sablono.core.text_field19270 = function() {
  var text_field19270 = null;
  var text_field19270__1 = function(name__10239__auto__) {
    return text_field19270.call(null, name__10239__auto__, null);
  };
  var text_field19270__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -150030170, null)), name__10239__auto__, value__10240__auto__);
  };
  text_field19270 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field19270__1.call(this, name__10239__auto__);
      case 2:
        return text_field19270__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field19270.cljs$core$IFn$_invoke$arity$1 = text_field19270__1;
  text_field19270.cljs$core$IFn$_invoke$arity$2 = text_field19270__2;
  return text_field19270;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field19270);
sablono.core.time_field19271 = function() {
  var time_field19271 = null;
  var time_field19271__1 = function(name__10239__auto__) {
    return time_field19271.call(null, name__10239__auto__, null);
  };
  var time_field19271__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1268547887, null)), name__10239__auto__, value__10240__auto__);
  };
  time_field19271 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field19271__1.call(this, name__10239__auto__);
      case 2:
        return time_field19271__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field19271.cljs$core$IFn$_invoke$arity$1 = time_field19271__1;
  time_field19271.cljs$core$IFn$_invoke$arity$2 = time_field19271__2;
  return time_field19271;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field19271);
sablono.core.url_field19272 = function() {
  var url_field19272 = null;
  var url_field19272__1 = function(name__10239__auto__) {
    return url_field19272.call(null, name__10239__auto__, null);
  };
  var url_field19272__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", 1916828573, null)), name__10239__auto__, value__10240__auto__);
  };
  url_field19272 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field19272__1.call(this, name__10239__auto__);
      case 2:
        return url_field19272__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field19272.cljs$core$IFn$_invoke$arity$1 = url_field19272__1;
  url_field19272.cljs$core$IFn$_invoke$arity$2 = url_field19272__2;
  return url_field19272;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field19272);
sablono.core.week_field19273 = function() {
  var week_field19273 = null;
  var week_field19273__1 = function(name__10239__auto__) {
    return week_field19273.call(null, name__10239__auto__, null);
  };
  var week_field19273__2 = function(name__10239__auto__, value__10240__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", 314058249, null)), name__10239__auto__, value__10240__auto__);
  };
  week_field19273 = function(name__10239__auto__, value__10240__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field19273__1.call(this, name__10239__auto__);
      case 2:
        return week_field19273__2.call(this, name__10239__auto__, value__10240__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field19273.cljs$core$IFn$_invoke$arity$1 = week_field19273__1;
  week_field19273.cljs$core$IFn$_invoke$arity$2 = week_field19273__2;
  return week_field19273;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field19273);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box19274 = function() {
  var check_box19274 = null;
  var check_box19274__1 = function(name) {
    return check_box19274.call(null, name, null);
  };
  var check_box19274__2 = function(name, checked_QMARK_) {
    return check_box19274.call(null, name, checked_QMARK_, "true");
  };
  var check_box19274__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  check_box19274 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box19274__1.call(this, name);
      case 2:
        return check_box19274__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box19274__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box19274.cljs$core$IFn$_invoke$arity$1 = check_box19274__1;
  check_box19274.cljs$core$IFn$_invoke$arity$2 = check_box19274__2;
  check_box19274.cljs$core$IFn$_invoke$arity$3 = check_box19274__3;
  return check_box19274;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box19274);
sablono.core.radio_button19275 = function() {
  var radio_button19275 = null;
  var radio_button19275__1 = function(group) {
    return radio_button19275.call(null, group, null);
  };
  var radio_button19275__2 = function(group, checked_QMARK_) {
    return radio_button19275.call(null, group, checked_QMARK_, "true");
  };
  var radio_button19275__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
  };
  radio_button19275 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button19275__1.call(this, group);
      case 2:
        return radio_button19275__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button19275__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button19275.cljs$core$IFn$_invoke$arity$1 = radio_button19275__1;
  radio_button19275.cljs$core$IFn$_invoke$arity$2 = radio_button19275__2;
  radio_button19275.cljs$core$IFn$_invoke$arity$3 = radio_button19275__3;
  return radio_button19275;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button19275);
sablono.core.select_options19276 = function() {
  var select_options19276 = null;
  var select_options19276__1 = function(coll) {
    return select_options19276.call(null, coll, null);
  };
  var select_options19276__2 = function(coll, selected) {
    var iter__4283__auto__ = function iter__19285(s__19286) {
      return new cljs.core.LazySeq(null, function() {
        var s__19286__$1 = s__19286;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__19286__$1);
          if (temp__4126__auto__) {
            var s__19286__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__19286__$2)) {
              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19286__$2);
              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
              var b__19288 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
              if (function() {
                var i__19287 = 0;
                while (true) {
                  if (i__19287 < size__4282__auto__) {
                    var x = cljs.core._nth.call(null, c__4281__auto__, i__19287);
                    cljs.core.chunk_append.call(null, b__19288, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__19291 = x;
                      var text = cljs.core.nth.call(null, vec__19291, 0, null);
                      var val = cljs.core.nth.call(null, vec__19291, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__19291, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options19276.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__19293 = i__19287 + 1;
                    i__19287 = G__19293;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19288), iter__19285.call(null, cljs.core.chunk_rest.call(null, s__19286__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19288), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__19286__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__19292 = x;
                var text = cljs.core.nth.call(null, vec__19292, 0, null);
                var val = cljs.core.nth.call(null, vec__19292, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__19292, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), select_options19276.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 305978217), val, new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__19285.call(null, cljs.core.rest.call(null, s__19286__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4283__auto__.call(null, coll);
  };
  select_options19276 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options19276__1.call(this, coll);
      case 2:
        return select_options19276__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options19276.cljs$core$IFn$_invoke$arity$1 = select_options19276__1;
  select_options19276.cljs$core$IFn$_invoke$arity$2 = select_options19276__2;
  return select_options19276;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options19276);
sablono.core.drop_down19294 = function() {
  var drop_down19294 = null;
  var drop_down19294__2 = function(name, options) {
    return drop_down19294.call(null, name, options, null);
  };
  var drop_down19294__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down19294 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down19294__2.call(this, name, options);
      case 3:
        return drop_down19294__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down19294.cljs$core$IFn$_invoke$arity$2 = drop_down19294__2;
  drop_down19294.cljs$core$IFn$_invoke$arity$3 = drop_down19294__3;
  return drop_down19294;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down19294);
sablono.core.text_area19295 = function() {
  var text_area19295 = null;
  var text_area19295__1 = function(name) {
    return text_area19295.call(null, name, null);
  };
  var text_area19295__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), value], null)], null);
  };
  text_area19295 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area19295__1.call(this, name);
      case 2:
        return text_area19295__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area19295.cljs$core$IFn$_invoke$arity$1 = text_area19295__1;
  text_area19295.cljs$core$IFn$_invoke$arity$2 = text_area19295__2;
  return text_area19295;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area19295);
sablono.core.label19296 = function label19296(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label19296);
sablono.core.submit_button19297 = function submit_button19297(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button19297);
sablono.core.reset_button19298 = function reset_button19298(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button19298);
sablono.core.form_to19299 = function() {
  var form_to19299__delegate = function(p__19300, body) {
    var vec__19302 = p__19300;
    var method = cljs.core.nth.call(null, vec__19302, 0, null);
    var action = cljs.core.nth.call(null, vec__19302, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to19299 = function(p__19300, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to19299__delegate.call(this, p__19300, body);
  };
  form_to19299.cljs$lang$maxFixedArity = 1;
  form_to19299.cljs$lang$applyTo = function(arglist__19303) {
    var p__19300 = cljs.core.first(arglist__19303);
    var body = cljs.core.rest(arglist__19303);
    return form_to19299__delegate(p__19300, body);
  };
  form_to19299.cljs$core$IFn$_invoke$arity$variadic = form_to19299__delegate;
  return form_to19299;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to19299);
goog.provide("clustermap.routes");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("sablono.core");
goog.require("sablono.core");
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383)], 
null);
clustermap.routes.name_for = function name_for(type, obj) {
  return cljs.core.get.call(null, obj, cljs.core.get.call(null, clustermap.routes.type_name_keys, type));
};
clustermap.routes.portfolio_company_path = function portfolio_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/portfolio-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.investor_company_path = function investor_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/investor-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.constituency_path = function constituency_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/constituency/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.no_selection_path = function no_selection_path(view_id, _) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id));
};
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), clustermap.routes.portfolio_company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), clustermap.routes.investor_company_path, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), clustermap.routes.constituency_path, null, clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = function path_for(view_id, type, obj) {
  return cljs.core.apply.call(null, cljs.core.get.call(null, clustermap.routes.type_paths, type), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_id, obj], null));
};
clustermap.routes.link_for = function link_for(view_id, type, obj) {
  return React.DOM.a({"href":clustermap.routes.path_for.call(null, view_id, type, obj)}, sablono.interpreter.interpret.call(null, clustermap.routes.name_for.call(null, type, obj)));
};
clustermap.routes.path_for_view = function path_for_view(current_route_fn, view_id) {
  var r = current_route_fn.call(null);
  var comps = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#", cljs.core.name.call(null, view_id), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(r), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(r)], null);
  return clojure.string.join.call(null, "/", cljs.core.filter.call(null, cljs.core.identity, comps));
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj18720 = {};
  return obj18720;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3546__auto__ = port;
    if (and__3546__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4185__auto__ = port == null ? null : port;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj18722 = {};
  return obj18722;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3546__auto__ = port;
    if (and__3546__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4185__auto__ = port == null ? null : port;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj18724 = {};
  return obj18724;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3546__auto__ = chan;
    if (and__3546__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4185__auto__ = chan == null ? null : chan;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj18726 = {};
  return obj18726;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3546__auto__ = h;
    if (and__3546__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4185__auto__ = h == null ? null : h;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3546__auto__ = h;
    if (and__3546__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4185__auto__ = h == null ? null : h;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj18728 = {};
  return obj18728;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3546__auto__ = b;
    if (and__3546__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4185__auto__ = b == null ? null : b;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3546__auto__ = b;
    if (and__3546__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4185__auto__ = b == null ? null : b;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3546__auto__ = b;
    if (and__3546__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4185__auto__ = b == null ? null : b;
    return function() {
      var or__3558__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj18730 = {};
  return obj18730;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__18731 = cnt + 1;
      cnt = G__18731;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4414__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4414__auto__) {
      var v_18732 = this$.pop();
      if (keep_QMARK_.call(null, v_18732)) {
        this$.unshift(v_18732);
      } else {
      }
      var G__18733 = x + 1;
      x = G__18733;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_18734 = 0;
  while (true) {
    var m_18735 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_18735 == null) {
    } else {
      m_18735.call(null);
      if (count_18734 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__18736 = count_18734 + 1;
        count_18734 = G__18736;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3546__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t18740 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t18740 = function(val, box, meta18741) {
      this.val = val;
      this.box = box;
      this.meta18741 = meta18741;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t18740.cljs$lang$type = true;
    cljs.core.async.impl.channels.t18740.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t18740";
    cljs.core.async.impl.channels.t18740.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.channels/t18740");
    };
    cljs.core.async.impl.channels.t18740.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t18740.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18742) {
      var self__ = this;
      var _18742__$1 = this;
      return self__.meta18741;
    };
    cljs.core.async.impl.channels.t18740.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18742, meta18741__$1) {
      var self__ = this;
      var _18742__$1 = this;
      return new cljs.core.async.impl.channels.t18740(self__.val, self__.box, meta18741__$1);
    };
    cljs.core.async.impl.channels.__GT_t18740 = function __GT_t18740(val__$1, box__$1, meta18741) {
      return new cljs.core.async.impl.channels.t18740(val__$1, box__$1, meta18741);
    };
  }
  return new cljs.core.async.impl.channels.t18740(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4128__auto__, writer__4129__auto__, opts__4130__auto__) {
  return cljs.core._write.call(null, writer__4129__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_18743 = self__.takes.pop();
      if (taker_18743 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_18743)) {
          var take_cb_18744 = cljs.core.async.impl.protocols.commit.call(null, taker_18743);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_18744, taker_18743, this$__$1) {
            return function() {
              return take_cb_18744.call(null, null);
            };
          }(take_cb_18744, taker_18743, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t18667 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t18667 = function(f, fn_handler, meta18668) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta18668 = meta18668;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t18667.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t18667.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t18667";
    cljs.core.async.impl.ioc_helpers.t18667.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.ioc-helpers/t18667");
    };
    cljs.core.async.impl.ioc_helpers.t18667.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t18667.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t18667.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t18667.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18669) {
      var self__ = this;
      var _18669__$1 = this;
      return self__.meta18668;
    };
    cljs.core.async.impl.ioc_helpers.t18667.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18669, meta18668__$1) {
      var self__ = this;
      var _18669__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t18667(self__.f, self__.fn_handler, meta18668__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t18667 = function __GT_t18667(f__$1, fn_handler__$1, meta18668) {
      return new cljs.core.async.impl.ioc_helpers.t18667(f__$1, fn_handler__$1, meta18668);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t18667(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e18671) {
    if (e18671 instanceof Object) {
      var ex = e18671;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e18671;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_18674_18676 = state;
    statearr_18674_18676[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_18674_18676[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_18675_18677 = state;
    statearr_18675_18677[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_18675_18677[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_18680_18682 = state;
    statearr_18680_18682[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_18680_18682[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_18681_18683 = state;
    statearr_18681_18683[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_18681_18683[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__18684) {
    var map__18689 = p__18684;
    var map__18689__$1 = cljs.core.seq_QMARK_.call(null, map__18689) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18689) : map__18689;
    var opts = map__18689__$1;
    var statearr_18690_18693 = state;
    statearr_18690_18693[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__18689, map__18689__$1, opts) {
      return function(val) {
        var statearr_18691_18694 = state;
        statearr_18691_18694[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__18689, map__18689__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_18692_18695 = state;
      statearr_18692_18695[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__18684 = null;
    if (arguments.length > 3) {
      p__18684 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__18684);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__18696) {
    var state = cljs.core.first(arglist__18696);
    arglist__18696 = cljs.core.next(arglist__18696);
    var cont_block = cljs.core.first(arglist__18696);
    arglist__18696 = cljs.core.next(arglist__18696);
    var ports = cljs.core.first(arglist__18696);
    var p__18684 = cljs.core.rest(arglist__18696);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__18684);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4144__auto__, k__4145__auto__) {
  var self__ = this;
  var this__4144__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4144__auto____$1, k__4145__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4146__auto__, k18698, else__4147__auto__) {
  var self__ = this;
  var this__4146__auto____$1 = this;
  var G__18700 = k18698 instanceof cljs.core.Keyword ? k18698.fqn : null;
  switch(G__18700) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18698, else__4147__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4158__auto__, writer__4159__auto__, opts__4160__auto__) {
  var self__ = this;
  var this__4158__auto____$1 = this;
  var pr_pair__4161__auto__ = function(this__4158__auto____$1) {
    return function(keyval__4162__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, cljs.core.pr_writer, "", " ", "", opts__4160__auto__, keyval__4162__auto__);
    };
  }(this__4158__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4159__auto__, pr_pair__4161__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4160__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4142__auto__) {
  var self__ = this;
  var this__4142__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4138__auto__) {
  var self__ = this;
  var this__4138__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4148__auto__) {
  var self__ = this;
  var this__4148__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var h__3969__auto__ = self__.__hash;
  if (!(h__3969__auto__ == null)) {
    return h__3969__auto__;
  } else {
    var h__3969__auto____$1 = cljs.core.hash_imap.call(null, this__4139__auto____$1);
    self__.__hash = h__3969__auto____$1;
    return h__3969__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4140__auto__, other__4141__auto__) {
  var self__ = this;
  var this__4140__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = other__4141__auto__;
    if (cljs.core.truth_(and__3546__auto__)) {
      return this__4140__auto____$1.constructor === other__4141__auto__.constructor && cljs.core.equiv_map.call(null, this__4140__auto____$1, other__4141__auto__);
    } else {
      return and__3546__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4153__auto__, k__4154__auto__) {
  var self__ = this;
  var this__4153__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4154__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4153__auto____$1), self__.__meta), k__4154__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4154__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4151__auto__, k__4152__auto__, G__18697) {
  var self__ = this;
  var this__4151__auto____$1 = this;
  var pred__18701 = cljs.core.keyword_identical_QMARK_;
  var expr__18702 = k__4152__auto__;
  if (cljs.core.truth_(pred__18701.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__18702))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__18697, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18701.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__18702))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__18697, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__18701.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__18702))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__18697, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__18701.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__18702))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__18697, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__18701.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__18702))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__18697, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4152__auto__, G__18697), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4156__auto__) {
  var self__ = this;
  var this__4156__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4143__auto__, G__18697) {
  var self__ = this;
  var this__4143__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__18697, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4149__auto__, entry__4150__auto__) {
  var self__ = this;
  var this__4149__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4150__auto__)) {
    return cljs.core._assoc.call(null, this__4149__auto____$1, cljs.core._nth.call(null, entry__4150__auto__, 0), cljs.core._nth.call(null, entry__4150__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4149__auto____$1, entry__4150__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4178__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4178__auto__, writer__4179__auto__) {
  return cljs.core._write.call(null, writer__4179__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__18699) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__18699), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__18699), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__18699), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__18699), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__18699), null, cljs.core.dissoc.call(null, G__18699, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_18706 = state;
  statearr_18706[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_18706;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = exception;
      if (cljs.core.truth_(and__3546__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3546__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = exception;
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        var statearr_18712 = state;
        statearr_18712[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_18712[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_18712[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_18712[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_18712;
      } else {
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = exception;
          if (cljs.core.truth_(and__3546__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3546__auto__;
          }
        }())) {
          var statearr_18713_18717 = state;
          statearr_18713_18717[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__18718 = state;
          state = G__18718;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3546__auto__ = exception;
            if (cljs.core.truth_(and__3546__auto__)) {
              var and__3546__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3546__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3546__auto____$1;
              }
            } else {
              return and__3546__auto__;
            }
          }())) {
            var statearr_18714 = state;
            statearr_18714[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_18714[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_18714;
          } else {
            if (cljs.core.truth_(function() {
              var and__3546__auto__ = cljs.core.not.call(null, exception);
              if (and__3546__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3546__auto__;
              }
            }())) {
              var statearr_18715 = state;
              statearr_18715[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_18715[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_18715;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_18716 = state;
                statearr_18716[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_18716[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_18716;
              } else {
                throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__18640 = level + 1;
        level = G__18640;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_18641 = 0;
    while (true) {
      if (i_18641 < arr.length) {
        arr[i_18641] = null;
        var G__18642 = i_18641 + 1;
        i_18641 = G__18642;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__18643 = x_SINGLEQUOTE_;
                x__$1 = G__18643;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__18644 = x__$1;
        var G__18645 = k;
        var G__18646 = level - 1;
        var G__18647 = update;
        x = G__18644;
        k = G__18645;
        level = G__18646;
        update = G__18647;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_18648 = self__.level + 1;
      while (true) {
        if (i_18648 <= new_level + 1) {
          update[i_18648] = self__.header;
          var G__18649 = i_18648 + 1;
          i_18648 = G__18649;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_18650 = 0;
    while (true) {
      if (i_18650 <= self__.level) {
        var links_18651 = update[i_18650].forward;
        if (links_18651[i_18650] === x__$1) {
          links_18651[i_18650] = x__$1.forward[i_18650];
          var G__18652 = i_18650 + 1;
          i_18650 = G__18652;
          continue;
        } else {
          var G__18653 = i_18650 + 1;
          i_18650 = G__18653;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__18654 = x_SINGLEQUOTE_;
              x__$1 = G__18654;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__18655 = nx;
        var G__18656 = level__$1 - 1;
        x = G__18655;
        level__$1 = G__18656;
        continue;
      } else {
        var G__18657 = x;
        var G__18658 = level__$1 - 1;
        x = G__18657;
        level__$1 = G__18658;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__18659 = x_SINGLEQUOTE_;
              x__$1 = G__18659;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__18660 = nx;
        var G__18661 = level__$1 - 1;
        x = G__18660;
        level__$1 = G__18661;
        continue;
      } else {
        var G__18662 = x;
        var G__18663 = level__$1 - 1;
        x = G__18662;
        level__$1 = G__18663;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3558__auto__ = cljs.core.truth_(function() {
    var and__3546__auto__ = me;
    if (cljs.core.truth_(and__3546__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3546__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3558__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3558__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t16089 !== "undefined") {
  } else {
    cljs.core.async.t16089 = function(f, fn_handler, meta16090) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16090 = meta16090;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16089.cljs$lang$type = true;
    cljs.core.async.t16089.cljs$lang$ctorStr = "cljs.core.async/t16089";
    cljs.core.async.t16089.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16089");
    };
    cljs.core.async.t16089.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16089.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t16089.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t16089.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16091) {
      var self__ = this;
      var _16091__$1 = this;
      return self__.meta16090;
    };
    cljs.core.async.t16089.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16091, meta16090__$1) {
      var self__ = this;
      var _16091__$1 = this;
      return new cljs.core.async.t16089(self__.f, self__.fn_handler, meta16090__$1);
    };
    cljs.core.async.__GT_t16089 = function __GT_t16089(f__$1, fn_handler__$1, meta16090) {
      return new cljs.core.async.t16089(f__$1, fn_handler__$1, meta16090);
    };
  }
  return new cljs.core.async.t16089(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__16093 = buff;
  if (G__16093) {
    var bit__4208__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = bit__4208__auto__;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return G__16093.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__16093.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__16093);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__16093);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_16094 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_16094);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_16094, ret) {
          return function() {
            return fn1.call(null, val_16094);
          };
        }(val_16094, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = ret;
      if (cljs.core.truth_(and__3546__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3546__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4414__auto___16095 = n;
  var x_16096 = 0;
  while (true) {
    if (x_16096 < n__4414__auto___16095) {
      a[x_16096] = 0;
      var G__16097 = x_16096 + 1;
      x_16096 = G__16097;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__16098 = i + 1;
      i = G__16098;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t16102 !== "undefined") {
  } else {
    cljs.core.async.t16102 = function(flag, alt_flag, meta16103) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta16103 = meta16103;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16102.cljs$lang$type = true;
    cljs.core.async.t16102.cljs$lang$ctorStr = "cljs.core.async/t16102";
    cljs.core.async.t16102.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16102");
      };
    }(flag);
    cljs.core.async.t16102.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16102.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t16102.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t16102.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_16104) {
        var self__ = this;
        var _16104__$1 = this;
        return self__.meta16103;
      };
    }(flag);
    cljs.core.async.t16102.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_16104, meta16103__$1) {
        var self__ = this;
        var _16104__$1 = this;
        return new cljs.core.async.t16102(self__.flag, self__.alt_flag, meta16103__$1);
      };
    }(flag);
    cljs.core.async.__GT_t16102 = function(flag) {
      return function __GT_t16102(flag__$1, alt_flag__$1, meta16103) {
        return new cljs.core.async.t16102(flag__$1, alt_flag__$1, meta16103);
      };
    }(flag);
  }
  return new cljs.core.async.t16102(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t16108 !== "undefined") {
  } else {
    cljs.core.async.t16108 = function(cb, flag, alt_handler, meta16109) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta16109 = meta16109;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16108.cljs$lang$type = true;
    cljs.core.async.t16108.cljs$lang$ctorStr = "cljs.core.async/t16108";
    cljs.core.async.t16108.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16108");
    };
    cljs.core.async.t16108.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t16108.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t16108.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t16108.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16110) {
      var self__ = this;
      var _16110__$1 = this;
      return self__.meta16109;
    };
    cljs.core.async.t16108.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16110, meta16109__$1) {
      var self__ = this;
      var _16110__$1 = this;
      return new cljs.core.async.t16108(self__.cb, self__.flag, self__.alt_handler, meta16109__$1);
    };
    cljs.core.async.__GT_t16108 = function __GT_t16108(cb__$1, flag__$1, alt_handler__$1, meta16109) {
      return new cljs.core.async.t16108(cb__$1, flag__$1, alt_handler__$1, meta16109);
    };
  }
  return new cljs.core.async.t16108(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__16111_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16111_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3558__auto__ = wport;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__16112 = i + 1;
          i = G__16112;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3558__auto__ = ret;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3546__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3546__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3546__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__16113) {
    var map__16115 = p__16113;
    var map__16115__$1 = cljs.core.seq_QMARK_.call(null, map__16115) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16115) : map__16115;
    var opts = map__16115__$1;
    throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__16113 = null;
    if (arguments.length > 1) {
      p__16113 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__16113);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__16116) {
    var ports = cljs.core.first(arglist__16116);
    var p__16113 = cljs.core.rest(arglist__16116);
    return alts_BANG___delegate(ports, p__16113);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t16124 !== "undefined") {
  } else {
    cljs.core.async.t16124 = function(ch, f, map_LT_, meta16125) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta16125 = meta16125;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16124.cljs$lang$type = true;
    cljs.core.async.t16124.cljs$lang$ctorStr = "cljs.core.async/t16124";
    cljs.core.async.t16124.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16124");
    };
    cljs.core.async.t16124.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16124.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t16124.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16124.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t16127 !== "undefined") {
        } else {
          cljs.core.async.t16127 = function(fn1, _, meta16125, ch, f, map_LT_, meta16128) {
            this.fn1 = fn1;
            this._ = _;
            this.meta16125 = meta16125;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta16128 = meta16128;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t16127.cljs$lang$type = true;
          cljs.core.async.t16127.cljs$lang$ctorStr = "cljs.core.async/t16127";
          cljs.core.async.t16127.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
              return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16127");
            };
          }(___$1);
          cljs.core.async.t16127.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t16127.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t16127.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t16127.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__16117_SHARP_) {
                  return f1.call(null, p1__16117_SHARP_ == null ? null : self__.f.call(null, p1__16117_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t16127.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_16129) {
              var self__ = this;
              var _16129__$1 = this;
              return self__.meta16128;
            };
          }(___$1);
          cljs.core.async.t16127.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_16129, meta16128__$1) {
              var self__ = this;
              var _16129__$1 = this;
              return new cljs.core.async.t16127(self__.fn1, self__._, self__.meta16125, self__.ch, self__.f, self__.map_LT_, meta16128__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t16127 = function(___$1) {
            return function __GT_t16127(fn1__$1, ___$2, meta16125__$1, ch__$2, f__$2, map_LT___$2, meta16128) {
              return new cljs.core.async.t16127(fn1__$1, ___$2, meta16125__$1, ch__$2, f__$2, map_LT___$2, meta16128);
            };
          }(___$1);
        }
        return new cljs.core.async.t16127(fn1, ___$1, self__.meta16125, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = ret;
        if (cljs.core.truth_(and__3546__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3546__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t16124.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16124.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t16124.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16126) {
      var self__ = this;
      var _16126__$1 = this;
      return self__.meta16125;
    };
    cljs.core.async.t16124.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16126, meta16125__$1) {
      var self__ = this;
      var _16126__$1 = this;
      return new cljs.core.async.t16124(self__.ch, self__.f, self__.map_LT_, meta16125__$1);
    };
    cljs.core.async.__GT_t16124 = function __GT_t16124(ch__$1, f__$1, map_LT___$1, meta16125) {
      return new cljs.core.async.t16124(ch__$1, f__$1, map_LT___$1, meta16125);
    };
  }
  return new cljs.core.async.t16124(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t16133 !== "undefined") {
  } else {
    cljs.core.async.t16133 = function(ch, f, map_GT_, meta16134) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta16134 = meta16134;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16133.cljs$lang$type = true;
    cljs.core.async.t16133.cljs$lang$ctorStr = "cljs.core.async/t16133";
    cljs.core.async.t16133.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16133");
    };
    cljs.core.async.t16133.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16133.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t16133.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16133.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t16133.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16133.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t16133.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16135) {
      var self__ = this;
      var _16135__$1 = this;
      return self__.meta16134;
    };
    cljs.core.async.t16133.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16135, meta16134__$1) {
      var self__ = this;
      var _16135__$1 = this;
      return new cljs.core.async.t16133(self__.ch, self__.f, self__.map_GT_, meta16134__$1);
    };
    cljs.core.async.__GT_t16133 = function __GT_t16133(ch__$1, f__$1, map_GT___$1, meta16134) {
      return new cljs.core.async.t16133(ch__$1, f__$1, map_GT___$1, meta16134);
    };
  }
  return new cljs.core.async.t16133(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t16139 !== "undefined") {
  } else {
    cljs.core.async.t16139 = function(ch, p, filter_GT_, meta16140) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta16140 = meta16140;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t16139.cljs$lang$type = true;
    cljs.core.async.t16139.cljs$lang$ctorStr = "cljs.core.async/t16139";
    cljs.core.async.t16139.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t16139");
    };
    cljs.core.async.t16139.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t16139.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t16139.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t16139.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t16139.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t16139.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t16139.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16141) {
      var self__ = this;
      var _16141__$1 = this;
      return self__.meta16140;
    };
    cljs.core.async.t16139.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16141, meta16140__$1) {
      var self__ = this;
      var _16141__$1 = this;
      return new cljs.core.async.t16139(self__.ch, self__.p, self__.filter_GT_, meta16140__$1);
    };
    cljs.core.async.__GT_t16139 = function __GT_t16139(ch__$1, p__$1, filter_GT___$1, meta16140) {
      return new cljs.core.async.t16139(ch__$1, p__$1, filter_GT___$1, meta16140);
    };
  }
  return new cljs.core.async.t16139(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___16224 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___16224, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___16224, out) {
            return function(state_16203) {
              var state_val_16204 = state_16203[1];
              if (state_val_16204 === 7) {
                var inst_16199 = state_16203[2];
                var state_16203__$1 = state_16203;
                var statearr_16205_16225 = state_16203__$1;
                statearr_16205_16225[2] = inst_16199;
                statearr_16205_16225[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16204 === 1) {
                  var state_16203__$1 = state_16203;
                  var statearr_16206_16226 = state_16203__$1;
                  statearr_16206_16226[2] = null;
                  statearr_16206_16226[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16204 === 4) {
                    var inst_16185 = state_16203[7];
                    var inst_16185__$1 = state_16203[2];
                    var inst_16186 = inst_16185__$1 == null;
                    var state_16203__$1 = function() {
                      var statearr_16207 = state_16203;
                      statearr_16207[7] = inst_16185__$1;
                      return statearr_16207;
                    }();
                    if (cljs.core.truth_(inst_16186)) {
                      var statearr_16208_16227 = state_16203__$1;
                      statearr_16208_16227[1] = 5;
                    } else {
                      var statearr_16209_16228 = state_16203__$1;
                      statearr_16209_16228[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16204 === 6) {
                      var inst_16185 = state_16203[7];
                      var inst_16190 = p.call(null, inst_16185);
                      var state_16203__$1 = state_16203;
                      if (cljs.core.truth_(inst_16190)) {
                        var statearr_16210_16229 = state_16203__$1;
                        statearr_16210_16229[1] = 8;
                      } else {
                        var statearr_16211_16230 = state_16203__$1;
                        statearr_16211_16230[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16204 === 3) {
                        var inst_16201 = state_16203[2];
                        var state_16203__$1 = state_16203;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16203__$1, inst_16201);
                      } else {
                        if (state_val_16204 === 2) {
                          var state_16203__$1 = state_16203;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16203__$1, 4, ch);
                        } else {
                          if (state_val_16204 === 11) {
                            var inst_16193 = state_16203[2];
                            var state_16203__$1 = state_16203;
                            var statearr_16212_16231 = state_16203__$1;
                            statearr_16212_16231[2] = inst_16193;
                            statearr_16212_16231[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16204 === 9) {
                              var state_16203__$1 = state_16203;
                              var statearr_16213_16232 = state_16203__$1;
                              statearr_16213_16232[2] = null;
                              statearr_16213_16232[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16204 === 5) {
                                var inst_16188 = cljs.core.async.close_BANG_.call(null, out);
                                var state_16203__$1 = state_16203;
                                var statearr_16214_16233 = state_16203__$1;
                                statearr_16214_16233[2] = inst_16188;
                                statearr_16214_16233[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16204 === 10) {
                                  var inst_16196 = state_16203[2];
                                  var state_16203__$1 = function() {
                                    var statearr_16215 = state_16203;
                                    statearr_16215[8] = inst_16196;
                                    return statearr_16215;
                                  }();
                                  var statearr_16216_16234 = state_16203__$1;
                                  statearr_16216_16234[2] = null;
                                  statearr_16216_16234[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16204 === 8) {
                                    var inst_16185 = state_16203[7];
                                    var state_16203__$1 = state_16203;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16203__$1, 11, out, inst_16185);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___16224, out);
          return function(switch__5693__auto__, c__5708__auto___16224, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16220 = [null, null, null, null, null, null, null, null, null];
                statearr_16220[0] = state_machine__5694__auto__;
                statearr_16220[1] = 1;
                return statearr_16220;
              };
              var state_machine__5694__auto____1 = function(state_16203) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16203);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16221) {
                      if (e16221 instanceof Object) {
                        var ex__5697__auto__ = e16221;
                        var statearr_16222_16235 = state_16203;
                        statearr_16222_16235[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16203);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16221;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16236 = state_16203;
                    state_16203 = G__16236;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16203) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16203);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___16224, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_16223 = f__5709__auto__.call(null);
          statearr_16223[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___16224;
          return statearr_16223;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___16224, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_16388) {
            var state_val_16389 = state_16388[1];
            if (state_val_16389 === 7) {
              var inst_16384 = state_16388[2];
              var state_16388__$1 = state_16388;
              var statearr_16390_16427 = state_16388__$1;
              statearr_16390_16427[2] = inst_16384;
              statearr_16390_16427[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16389 === 20) {
                var inst_16359 = state_16388[7];
                var inst_16370 = state_16388[2];
                var inst_16371 = cljs.core.next.call(null, inst_16359);
                var inst_16345 = inst_16371;
                var inst_16346 = null;
                var inst_16347 = 0;
                var inst_16348 = 0;
                var state_16388__$1 = function() {
                  var statearr_16391 = state_16388;
                  statearr_16391[8] = inst_16345;
                  statearr_16391[9] = inst_16347;
                  statearr_16391[10] = inst_16370;
                  statearr_16391[11] = inst_16348;
                  statearr_16391[12] = inst_16346;
                  return statearr_16391;
                }();
                var statearr_16392_16428 = state_16388__$1;
                statearr_16392_16428[2] = null;
                statearr_16392_16428[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16389 === 1) {
                  var state_16388__$1 = state_16388;
                  var statearr_16393_16429 = state_16388__$1;
                  statearr_16393_16429[2] = null;
                  statearr_16393_16429[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16389 === 4) {
                    var inst_16334 = state_16388[13];
                    var inst_16334__$1 = state_16388[2];
                    var inst_16335 = inst_16334__$1 == null;
                    var state_16388__$1 = function() {
                      var statearr_16397 = state_16388;
                      statearr_16397[13] = inst_16334__$1;
                      return statearr_16397;
                    }();
                    if (cljs.core.truth_(inst_16335)) {
                      var statearr_16398_16430 = state_16388__$1;
                      statearr_16398_16430[1] = 5;
                    } else {
                      var statearr_16399_16431 = state_16388__$1;
                      statearr_16399_16431[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16389 === 15) {
                      var state_16388__$1 = state_16388;
                      var statearr_16400_16432 = state_16388__$1;
                      statearr_16400_16432[2] = null;
                      statearr_16400_16432[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16389 === 13) {
                        var inst_16345 = state_16388[8];
                        var inst_16347 = state_16388[9];
                        var inst_16348 = state_16388[11];
                        var inst_16346 = state_16388[12];
                        var inst_16355 = state_16388[2];
                        var inst_16356 = inst_16348 + 1;
                        var tmp16394 = inst_16345;
                        var tmp16395 = inst_16347;
                        var tmp16396 = inst_16346;
                        var inst_16345__$1 = tmp16394;
                        var inst_16346__$1 = tmp16396;
                        var inst_16347__$1 = tmp16395;
                        var inst_16348__$1 = inst_16356;
                        var state_16388__$1 = function() {
                          var statearr_16401 = state_16388;
                          statearr_16401[8] = inst_16345__$1;
                          statearr_16401[14] = inst_16355;
                          statearr_16401[9] = inst_16347__$1;
                          statearr_16401[11] = inst_16348__$1;
                          statearr_16401[12] = inst_16346__$1;
                          return statearr_16401;
                        }();
                        var statearr_16402_16433 = state_16388__$1;
                        statearr_16402_16433[2] = null;
                        statearr_16402_16433[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16389 === 6) {
                          var inst_16334 = state_16388[13];
                          var inst_16339 = f.call(null, inst_16334);
                          var inst_16344 = cljs.core.seq.call(null, inst_16339);
                          var inst_16345 = inst_16344;
                          var inst_16346 = null;
                          var inst_16347 = 0;
                          var inst_16348 = 0;
                          var state_16388__$1 = function() {
                            var statearr_16403 = state_16388;
                            statearr_16403[8] = inst_16345;
                            statearr_16403[9] = inst_16347;
                            statearr_16403[11] = inst_16348;
                            statearr_16403[12] = inst_16346;
                            return statearr_16403;
                          }();
                          var statearr_16404_16434 = state_16388__$1;
                          statearr_16404_16434[2] = null;
                          statearr_16404_16434[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16389 === 17) {
                            var inst_16359 = state_16388[7];
                            var inst_16363 = cljs.core.chunk_first.call(null, inst_16359);
                            var inst_16364 = cljs.core.chunk_rest.call(null, inst_16359);
                            var inst_16365 = cljs.core.count.call(null, inst_16363);
                            var inst_16345 = inst_16364;
                            var inst_16346 = inst_16363;
                            var inst_16347 = inst_16365;
                            var inst_16348 = 0;
                            var state_16388__$1 = function() {
                              var statearr_16405 = state_16388;
                              statearr_16405[8] = inst_16345;
                              statearr_16405[9] = inst_16347;
                              statearr_16405[11] = inst_16348;
                              statearr_16405[12] = inst_16346;
                              return statearr_16405;
                            }();
                            var statearr_16406_16435 = state_16388__$1;
                            statearr_16406_16435[2] = null;
                            statearr_16406_16435[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16389 === 3) {
                              var inst_16386 = state_16388[2];
                              var state_16388__$1 = state_16388;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16388__$1, inst_16386);
                            } else {
                              if (state_val_16389 === 12) {
                                var inst_16379 = state_16388[2];
                                var state_16388__$1 = state_16388;
                                var statearr_16407_16436 = state_16388__$1;
                                statearr_16407_16436[2] = inst_16379;
                                statearr_16407_16436[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16389 === 2) {
                                  var state_16388__$1 = state_16388;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16388__$1, 4, in$);
                                } else {
                                  if (state_val_16389 === 19) {
                                    var inst_16374 = state_16388[2];
                                    var state_16388__$1 = state_16388;
                                    var statearr_16408_16437 = state_16388__$1;
                                    statearr_16408_16437[2] = inst_16374;
                                    statearr_16408_16437[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16389 === 11) {
                                      var inst_16359 = state_16388[7];
                                      var inst_16345 = state_16388[8];
                                      var inst_16359__$1 = cljs.core.seq.call(null, inst_16345);
                                      var state_16388__$1 = function() {
                                        var statearr_16409 = state_16388;
                                        statearr_16409[7] = inst_16359__$1;
                                        return statearr_16409;
                                      }();
                                      if (inst_16359__$1) {
                                        var statearr_16410_16438 = state_16388__$1;
                                        statearr_16410_16438[1] = 14;
                                      } else {
                                        var statearr_16411_16439 = state_16388__$1;
                                        statearr_16411_16439[1] = 15;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16389 === 9) {
                                        var inst_16381 = state_16388[2];
                                        var state_16388__$1 = function() {
                                          var statearr_16412 = state_16388;
                                          statearr_16412[15] = inst_16381;
                                          return statearr_16412;
                                        }();
                                        var statearr_16413_16440 = state_16388__$1;
                                        statearr_16413_16440[2] = null;
                                        statearr_16413_16440[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16389 === 5) {
                                          var inst_16337 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_16388__$1 = state_16388;
                                          var statearr_16414_16441 = state_16388__$1;
                                          statearr_16414_16441[2] = inst_16337;
                                          statearr_16414_16441[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16389 === 14) {
                                            var inst_16359 = state_16388[7];
                                            var inst_16361 = cljs.core.chunked_seq_QMARK_.call(null, inst_16359);
                                            var state_16388__$1 = state_16388;
                                            if (inst_16361) {
                                              var statearr_16415_16442 = state_16388__$1;
                                              statearr_16415_16442[1] = 17;
                                            } else {
                                              var statearr_16416_16443 = state_16388__$1;
                                              statearr_16416_16443[1] = 18;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16389 === 16) {
                                              var inst_16377 = state_16388[2];
                                              var state_16388__$1 = state_16388;
                                              var statearr_16417_16444 = state_16388__$1;
                                              statearr_16417_16444[2] = inst_16377;
                                              statearr_16417_16444[1] = 12;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16389 === 10) {
                                                var inst_16348 = state_16388[11];
                                                var inst_16346 = state_16388[12];
                                                var inst_16353 = cljs.core._nth.call(null, inst_16346, inst_16348);
                                                var state_16388__$1 = state_16388;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16388__$1, 13, out, inst_16353);
                                              } else {
                                                if (state_val_16389 === 18) {
                                                  var inst_16359 = state_16388[7];
                                                  var inst_16368 = cljs.core.first.call(null, inst_16359);
                                                  var state_16388__$1 = state_16388;
                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16388__$1, 20, out, inst_16368);
                                                } else {
                                                  if (state_val_16389 === 8) {
                                                    var inst_16347 = state_16388[9];
                                                    var inst_16348 = state_16388[11];
                                                    var inst_16350 = inst_16348 < inst_16347;
                                                    var inst_16351 = inst_16350;
                                                    var state_16388__$1 = state_16388;
                                                    if (cljs.core.truth_(inst_16351)) {
                                                      var statearr_16418_16445 = state_16388__$1;
                                                      statearr_16418_16445[1] = 10;
                                                    } else {
                                                      var statearr_16419_16446 = state_16388__$1;
                                                      statearr_16419_16446[1] = 11;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_16423 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16423[0] = state_machine__5694__auto__;
              statearr_16423[1] = 1;
              return statearr_16423;
            };
            var state_machine__5694__auto____1 = function(state_16388) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_16388);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e16424) {
                    if (e16424 instanceof Object) {
                      var ex__5697__auto__ = e16424;
                      var statearr_16425_16447 = state_16388;
                      statearr_16425_16447[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16388);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16424;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16448 = state_16388;
                  state_16388 = G__16448;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_16388) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_16388);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_16426 = f__5709__auto__.call(null);
        statearr_16426[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_16426;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5708__auto___16529 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___16529) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___16529) {
            return function(state_16508) {
              var state_val_16509 = state_16508[1];
              if (state_val_16509 === 7) {
                var inst_16504 = state_16508[2];
                var state_16508__$1 = state_16508;
                var statearr_16510_16530 = state_16508__$1;
                statearr_16510_16530[2] = inst_16504;
                statearr_16510_16530[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16509 === 1) {
                  var state_16508__$1 = state_16508;
                  var statearr_16511_16531 = state_16508__$1;
                  statearr_16511_16531[2] = null;
                  statearr_16511_16531[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16509 === 4) {
                    var inst_16491 = state_16508[7];
                    var inst_16491__$1 = state_16508[2];
                    var inst_16492 = inst_16491__$1 == null;
                    var state_16508__$1 = function() {
                      var statearr_16512 = state_16508;
                      statearr_16512[7] = inst_16491__$1;
                      return statearr_16512;
                    }();
                    if (cljs.core.truth_(inst_16492)) {
                      var statearr_16513_16532 = state_16508__$1;
                      statearr_16513_16532[1] = 5;
                    } else {
                      var statearr_16514_16533 = state_16508__$1;
                      statearr_16514_16533[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16509 === 6) {
                      var inst_16491 = state_16508[7];
                      var state_16508__$1 = state_16508;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16508__$1, 11, to, inst_16491);
                    } else {
                      if (state_val_16509 === 3) {
                        var inst_16506 = state_16508[2];
                        var state_16508__$1 = state_16508;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16508__$1, inst_16506);
                      } else {
                        if (state_val_16509 === 2) {
                          var state_16508__$1 = state_16508;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16508__$1, 4, from);
                        } else {
                          if (state_val_16509 === 11) {
                            var inst_16501 = state_16508[2];
                            var state_16508__$1 = function() {
                              var statearr_16515 = state_16508;
                              statearr_16515[8] = inst_16501;
                              return statearr_16515;
                            }();
                            var statearr_16516_16534 = state_16508__$1;
                            statearr_16516_16534[2] = null;
                            statearr_16516_16534[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16509 === 9) {
                              var state_16508__$1 = state_16508;
                              var statearr_16517_16535 = state_16508__$1;
                              statearr_16517_16535[2] = null;
                              statearr_16517_16535[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16509 === 5) {
                                var state_16508__$1 = state_16508;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_16518_16536 = state_16508__$1;
                                  statearr_16518_16536[1] = 8;
                                } else {
                                  var statearr_16519_16537 = state_16508__$1;
                                  statearr_16519_16537[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16509 === 10) {
                                  var inst_16498 = state_16508[2];
                                  var state_16508__$1 = state_16508;
                                  var statearr_16520_16538 = state_16508__$1;
                                  statearr_16520_16538[2] = inst_16498;
                                  statearr_16520_16538[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16509 === 8) {
                                    var inst_16495 = cljs.core.async.close_BANG_.call(null, to);
                                    var state_16508__$1 = state_16508;
                                    var statearr_16521_16539 = state_16508__$1;
                                    statearr_16521_16539[2] = inst_16495;
                                    statearr_16521_16539[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___16529);
          return function(switch__5693__auto__, c__5708__auto___16529) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16525 = [null, null, null, null, null, null, null, null, null];
                statearr_16525[0] = state_machine__5694__auto__;
                statearr_16525[1] = 1;
                return statearr_16525;
              };
              var state_machine__5694__auto____1 = function(state_16508) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16508);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16526) {
                      if (e16526 instanceof Object) {
                        var ex__5697__auto__ = e16526;
                        var statearr_16527_16540 = state_16508;
                        statearr_16527_16540[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16508);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16526;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16541 = state_16508;
                    state_16508 = G__16541;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16508) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16508);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___16529);
        }();
        var state__5710__auto__ = function() {
          var statearr_16528 = f__5709__auto__.call(null);
          statearr_16528[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___16529;
          return statearr_16528;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___16529));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5708__auto___16628 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___16628, tc, fc) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___16628, tc, fc) {
            return function(state_16606) {
              var state_val_16607 = state_16606[1];
              if (state_val_16607 === 7) {
                var inst_16602 = state_16606[2];
                var state_16606__$1 = state_16606;
                var statearr_16608_16629 = state_16606__$1;
                statearr_16608_16629[2] = inst_16602;
                statearr_16608_16629[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16607 === 1) {
                  var state_16606__$1 = state_16606;
                  var statearr_16609_16630 = state_16606__$1;
                  statearr_16609_16630[2] = null;
                  statearr_16609_16630[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16607 === 4) {
                    var inst_16587 = state_16606[7];
                    var inst_16587__$1 = state_16606[2];
                    var inst_16588 = inst_16587__$1 == null;
                    var state_16606__$1 = function() {
                      var statearr_16610 = state_16606;
                      statearr_16610[7] = inst_16587__$1;
                      return statearr_16610;
                    }();
                    if (cljs.core.truth_(inst_16588)) {
                      var statearr_16611_16631 = state_16606__$1;
                      statearr_16611_16631[1] = 5;
                    } else {
                      var statearr_16612_16632 = state_16606__$1;
                      statearr_16612_16632[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16607 === 6) {
                      var inst_16587 = state_16606[7];
                      var inst_16593 = p.call(null, inst_16587);
                      var state_16606__$1 = state_16606;
                      if (cljs.core.truth_(inst_16593)) {
                        var statearr_16613_16633 = state_16606__$1;
                        statearr_16613_16633[1] = 9;
                      } else {
                        var statearr_16614_16634 = state_16606__$1;
                        statearr_16614_16634[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16607 === 3) {
                        var inst_16604 = state_16606[2];
                        var state_16606__$1 = state_16606;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16606__$1, inst_16604);
                      } else {
                        if (state_val_16607 === 2) {
                          var state_16606__$1 = state_16606;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16606__$1, 4, ch);
                        } else {
                          if (state_val_16607 === 11) {
                            var inst_16587 = state_16606[7];
                            var inst_16597 = state_16606[2];
                            var state_16606__$1 = state_16606;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16606__$1, 8, inst_16597, inst_16587);
                          } else {
                            if (state_val_16607 === 9) {
                              var state_16606__$1 = state_16606;
                              var statearr_16615_16635 = state_16606__$1;
                              statearr_16615_16635[2] = tc;
                              statearr_16615_16635[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16607 === 5) {
                                var inst_16590 = cljs.core.async.close_BANG_.call(null, tc);
                                var inst_16591 = cljs.core.async.close_BANG_.call(null, fc);
                                var state_16606__$1 = function() {
                                  var statearr_16616 = state_16606;
                                  statearr_16616[8] = inst_16590;
                                  return statearr_16616;
                                }();
                                var statearr_16617_16636 = state_16606__$1;
                                statearr_16617_16636[2] = inst_16591;
                                statearr_16617_16636[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16607 === 10) {
                                  var state_16606__$1 = state_16606;
                                  var statearr_16618_16637 = state_16606__$1;
                                  statearr_16618_16637[2] = fc;
                                  statearr_16618_16637[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16607 === 8) {
                                    var inst_16599 = state_16606[2];
                                    var state_16606__$1 = function() {
                                      var statearr_16619 = state_16606;
                                      statearr_16619[9] = inst_16599;
                                      return statearr_16619;
                                    }();
                                    var statearr_16620_16638 = state_16606__$1;
                                    statearr_16620_16638[2] = null;
                                    statearr_16620_16638[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___16628, tc, fc);
          return function(switch__5693__auto__, c__5708__auto___16628, tc, fc) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16624 = [null, null, null, null, null, null, null, null, null, null];
                statearr_16624[0] = state_machine__5694__auto__;
                statearr_16624[1] = 1;
                return statearr_16624;
              };
              var state_machine__5694__auto____1 = function(state_16606) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16606);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16625) {
                      if (e16625 instanceof Object) {
                        var ex__5697__auto__ = e16625;
                        var statearr_16626_16639 = state_16606;
                        statearr_16626_16639[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16606);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16625;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16640 = state_16606;
                    state_16606 = G__16640;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16606) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16606);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___16628, tc, fc);
        }();
        var state__5710__auto__ = function() {
          var statearr_16627 = f__5709__auto__.call(null);
          statearr_16627[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___16628;
          return statearr_16627;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___16628, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_16687) {
            var state_val_16688 = state_16687[1];
            if (state_val_16688 === 7) {
              var inst_16683 = state_16687[2];
              var state_16687__$1 = state_16687;
              var statearr_16689_16705 = state_16687__$1;
              statearr_16689_16705[2] = inst_16683;
              statearr_16689_16705[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16688 === 6) {
                var inst_16676 = state_16687[7];
                var inst_16673 = state_16687[8];
                var inst_16680 = f.call(null, inst_16673, inst_16676);
                var inst_16673__$1 = inst_16680;
                var state_16687__$1 = function() {
                  var statearr_16690 = state_16687;
                  statearr_16690[8] = inst_16673__$1;
                  return statearr_16690;
                }();
                var statearr_16691_16706 = state_16687__$1;
                statearr_16691_16706[2] = null;
                statearr_16691_16706[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16688 === 5) {
                  var inst_16673 = state_16687[8];
                  var state_16687__$1 = state_16687;
                  var statearr_16692_16707 = state_16687__$1;
                  statearr_16692_16707[2] = inst_16673;
                  statearr_16692_16707[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16688 === 4) {
                    var inst_16676 = state_16687[7];
                    var inst_16676__$1 = state_16687[2];
                    var inst_16677 = inst_16676__$1 == null;
                    var state_16687__$1 = function() {
                      var statearr_16693 = state_16687;
                      statearr_16693[7] = inst_16676__$1;
                      return statearr_16693;
                    }();
                    if (cljs.core.truth_(inst_16677)) {
                      var statearr_16694_16708 = state_16687__$1;
                      statearr_16694_16708[1] = 5;
                    } else {
                      var statearr_16695_16709 = state_16687__$1;
                      statearr_16695_16709[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16688 === 3) {
                      var inst_16685 = state_16687[2];
                      var state_16687__$1 = state_16687;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16687__$1, inst_16685);
                    } else {
                      if (state_val_16688 === 2) {
                        var state_16687__$1 = state_16687;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16687__$1, 4, ch);
                      } else {
                        if (state_val_16688 === 1) {
                          var inst_16673 = init;
                          var state_16687__$1 = function() {
                            var statearr_16696 = state_16687;
                            statearr_16696[8] = inst_16673;
                            return statearr_16696;
                          }();
                          var statearr_16697_16710 = state_16687__$1;
                          statearr_16697_16710[2] = null;
                          statearr_16697_16710[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_16701 = [null, null, null, null, null, null, null, null, null];
              statearr_16701[0] = state_machine__5694__auto__;
              statearr_16701[1] = 1;
              return statearr_16701;
            };
            var state_machine__5694__auto____1 = function(state_16687) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_16687);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e16702) {
                    if (e16702 instanceof Object) {
                      var ex__5697__auto__ = e16702;
                      var statearr_16703_16711 = state_16687;
                      statearr_16703_16711[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16687);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16702;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16712 = state_16687;
                  state_16687 = G__16712;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_16687) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_16687);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_16704 = f__5709__auto__.call(null);
        statearr_16704[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_16704;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__) {
            return function(state_16774) {
              var state_val_16775 = state_16774[1];
              if (state_val_16775 === 7) {
                var inst_16755 = state_16774[7];
                var inst_16760 = state_16774[2];
                var inst_16761 = cljs.core.next.call(null, inst_16755);
                var inst_16755__$1 = inst_16761;
                var state_16774__$1 = function() {
                  var statearr_16776 = state_16774;
                  statearr_16776[8] = inst_16760;
                  statearr_16776[7] = inst_16755__$1;
                  return statearr_16776;
                }();
                var statearr_16777_16795 = state_16774__$1;
                statearr_16777_16795[2] = null;
                statearr_16777_16795[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16775 === 1) {
                  var inst_16754 = cljs.core.seq.call(null, coll);
                  var inst_16755 = inst_16754;
                  var state_16774__$1 = function() {
                    var statearr_16778 = state_16774;
                    statearr_16778[7] = inst_16755;
                    return statearr_16778;
                  }();
                  var statearr_16779_16796 = state_16774__$1;
                  statearr_16779_16796[2] = null;
                  statearr_16779_16796[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16775 === 4) {
                    var inst_16755 = state_16774[7];
                    var inst_16758 = cljs.core.first.call(null, inst_16755);
                    var state_16774__$1 = state_16774;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16774__$1, 7, ch, inst_16758);
                  } else {
                    if (state_val_16775 === 6) {
                      var inst_16770 = state_16774[2];
                      var state_16774__$1 = state_16774;
                      var statearr_16780_16797 = state_16774__$1;
                      statearr_16780_16797[2] = inst_16770;
                      statearr_16780_16797[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16775 === 3) {
                        var inst_16772 = state_16774[2];
                        var state_16774__$1 = state_16774;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16774__$1, inst_16772);
                      } else {
                        if (state_val_16775 === 2) {
                          var inst_16755 = state_16774[7];
                          var state_16774__$1 = state_16774;
                          if (cljs.core.truth_(inst_16755)) {
                            var statearr_16781_16798 = state_16774__$1;
                            statearr_16781_16798[1] = 4;
                          } else {
                            var statearr_16782_16799 = state_16774__$1;
                            statearr_16782_16799[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16775 === 9) {
                            var state_16774__$1 = state_16774;
                            var statearr_16783_16800 = state_16774__$1;
                            statearr_16783_16800[2] = null;
                            statearr_16783_16800[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16775 === 5) {
                              var state_16774__$1 = state_16774;
                              if (cljs.core.truth_(close_QMARK_)) {
                                var statearr_16784_16801 = state_16774__$1;
                                statearr_16784_16801[1] = 8;
                              } else {
                                var statearr_16785_16802 = state_16774__$1;
                                statearr_16785_16802[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16775 === 10) {
                                var inst_16768 = state_16774[2];
                                var state_16774__$1 = state_16774;
                                var statearr_16786_16803 = state_16774__$1;
                                statearr_16786_16803[2] = inst_16768;
                                statearr_16786_16803[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16775 === 8) {
                                  var inst_16765 = cljs.core.async.close_BANG_.call(null, ch);
                                  var state_16774__$1 = state_16774;
                                  var statearr_16787_16804 = state_16774__$1;
                                  statearr_16787_16804[2] = inst_16765;
                                  statearr_16787_16804[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto__);
          return function(switch__5693__auto__, c__5708__auto__) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_16791 = [null, null, null, null, null, null, null, null, null];
                statearr_16791[0] = state_machine__5694__auto__;
                statearr_16791[1] = 1;
                return statearr_16791;
              };
              var state_machine__5694__auto____1 = function(state_16774) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_16774);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e16792) {
                      if (e16792 instanceof Object) {
                        var ex__5697__auto__ = e16792;
                        var statearr_16793_16805 = state_16774;
                        statearr_16793_16805[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16774);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16792;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16806 = state_16774;
                    state_16774 = G__16806;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_16774) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_16774);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__);
        }();
        var state__5710__auto__ = function() {
          var statearr_16794 = f__5709__auto__.call(null);
          statearr_16794[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_16794;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__));
    return c__5708__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj16808 = {};
  return obj16808;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3546__auto__ = _;
    if (and__3546__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4185__auto__ = _ == null ? null : _;
    return function() {
      var or__3558__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj16810 = {};
  return obj16810;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t17034 !== "undefined") {
    } else {
      cljs.core.async.t17034 = function(cs, ch, mult, meta17035) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta17035 = meta17035;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t17034.cljs$lang$type = true;
      cljs.core.async.t17034.cljs$lang$ctorStr = "cljs.core.async/t17034";
      cljs.core.async.t17034.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t17034");
        };
      }(cs);
      cljs.core.async.t17034.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t17034.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t17034.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t17034.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t17034.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17034.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t17034.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_17036) {
          var self__ = this;
          var _17036__$1 = this;
          return self__.meta17035;
        };
      }(cs);
      cljs.core.async.t17034.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_17036, meta17035__$1) {
          var self__ = this;
          var _17036__$1 = this;
          return new cljs.core.async.t17034(self__.cs, self__.ch, self__.mult, meta17035__$1);
        };
      }(cs);
      cljs.core.async.__GT_t17034 = function(cs) {
        return function __GT_t17034(cs__$1, ch__$1, mult__$1, meta17035) {
          return new cljs.core.async.t17034(cs__$1, ch__$1, mult__$1, meta17035);
        };
      }(cs);
    }
    return new cljs.core.async.t17034(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5708__auto___17257 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___17257, cs, m, dchan, dctr, done) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___17257, cs, m, dchan, dctr, done) {
          return function(state_17171) {
            var state_val_17172 = state_17171[1];
            if (state_val_17172 === 7) {
              var inst_17167 = state_17171[2];
              var state_17171__$1 = state_17171;
              var statearr_17173_17258 = state_17171__$1;
              statearr_17173_17258[2] = inst_17167;
              statearr_17173_17258[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17172 === 20) {
                var inst_17068 = state_17171[7];
                var inst_17078 = cljs.core.first.call(null, inst_17068);
                var inst_17079 = cljs.core.nth.call(null, inst_17078, 0, null);
                var inst_17080 = cljs.core.nth.call(null, inst_17078, 1, null);
                var state_17171__$1 = function() {
                  var statearr_17174 = state_17171;
                  statearr_17174[8] = inst_17079;
                  return statearr_17174;
                }();
                if (cljs.core.truth_(inst_17080)) {
                  var statearr_17175_17259 = state_17171__$1;
                  statearr_17175_17259[1] = 22;
                } else {
                  var statearr_17176_17260 = state_17171__$1;
                  statearr_17176_17260[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17172 === 27) {
                  var inst_17110 = state_17171[9];
                  var inst_17108 = state_17171[10];
                  var inst_17115 = cljs.core._nth.call(null, inst_17108, inst_17110);
                  var state_17171__$1 = function() {
                    var statearr_17177 = state_17171;
                    statearr_17177[11] = inst_17115;
                    return statearr_17177;
                  }();
                  var statearr_17178_17261 = state_17171__$1;
                  statearr_17178_17261[2] = null;
                  statearr_17178_17261[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17172 === 1) {
                    var state_17171__$1 = state_17171;
                    var statearr_17179_17262 = state_17171__$1;
                    statearr_17179_17262[2] = null;
                    statearr_17179_17262[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17172 === 24) {
                      var inst_17068 = state_17171[7];
                      var inst_17085 = state_17171[2];
                      var inst_17086 = cljs.core.next.call(null, inst_17068);
                      var inst_17048 = inst_17086;
                      var inst_17049 = null;
                      var inst_17050 = 0;
                      var inst_17051 = 0;
                      var state_17171__$1 = function() {
                        var statearr_17180 = state_17171;
                        statearr_17180[12] = inst_17049;
                        statearr_17180[13] = inst_17085;
                        statearr_17180[14] = inst_17051;
                        statearr_17180[15] = inst_17050;
                        statearr_17180[16] = inst_17048;
                        return statearr_17180;
                      }();
                      var statearr_17181_17263 = state_17171__$1;
                      statearr_17181_17263[2] = null;
                      statearr_17181_17263[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17172 === 39) {
                        var inst_17128 = state_17171[17];
                        var inst_17146 = state_17171[2];
                        var inst_17147 = cljs.core.next.call(null, inst_17128);
                        var inst_17107 = inst_17147;
                        var inst_17108 = null;
                        var inst_17109 = 0;
                        var inst_17110 = 0;
                        var state_17171__$1 = function() {
                          var statearr_17185 = state_17171;
                          statearr_17185[9] = inst_17110;
                          statearr_17185[18] = inst_17109;
                          statearr_17185[19] = inst_17146;
                          statearr_17185[20] = inst_17107;
                          statearr_17185[10] = inst_17108;
                          return statearr_17185;
                        }();
                        var statearr_17186_17264 = state_17171__$1;
                        statearr_17186_17264[2] = null;
                        statearr_17186_17264[1] = 25;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17172 === 4) {
                          var inst_17039 = state_17171[21];
                          var inst_17039__$1 = state_17171[2];
                          var inst_17040 = inst_17039__$1 == null;
                          var state_17171__$1 = function() {
                            var statearr_17187 = state_17171;
                            statearr_17187[21] = inst_17039__$1;
                            return statearr_17187;
                          }();
                          if (cljs.core.truth_(inst_17040)) {
                            var statearr_17188_17265 = state_17171__$1;
                            statearr_17188_17265[1] = 5;
                          } else {
                            var statearr_17189_17266 = state_17171__$1;
                            statearr_17189_17266[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17172 === 15) {
                            var inst_17049 = state_17171[12];
                            var inst_17051 = state_17171[14];
                            var inst_17050 = state_17171[15];
                            var inst_17048 = state_17171[16];
                            var inst_17064 = state_17171[2];
                            var inst_17065 = inst_17051 + 1;
                            var tmp17182 = inst_17049;
                            var tmp17183 = inst_17050;
                            var tmp17184 = inst_17048;
                            var inst_17048__$1 = tmp17184;
                            var inst_17049__$1 = tmp17182;
                            var inst_17050__$1 = tmp17183;
                            var inst_17051__$1 = inst_17065;
                            var state_17171__$1 = function() {
                              var statearr_17190 = state_17171;
                              statearr_17190[22] = inst_17064;
                              statearr_17190[12] = inst_17049__$1;
                              statearr_17190[14] = inst_17051__$1;
                              statearr_17190[15] = inst_17050__$1;
                              statearr_17190[16] = inst_17048__$1;
                              return statearr_17190;
                            }();
                            var statearr_17191_17267 = state_17171__$1;
                            statearr_17191_17267[2] = null;
                            statearr_17191_17267[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17172 === 21) {
                              var inst_17089 = state_17171[2];
                              var state_17171__$1 = state_17171;
                              var statearr_17192_17268 = state_17171__$1;
                              statearr_17192_17268[2] = inst_17089;
                              statearr_17192_17268[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17172 === 31) {
                                var inst_17115 = state_17171[11];
                                var inst_17116 = state_17171[2];
                                var inst_17117 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_17118 = cljs.core.async.untap_STAR_.call(null, m, inst_17115);
                                var state_17171__$1 = function() {
                                  var statearr_17193 = state_17171;
                                  statearr_17193[23] = inst_17116;
                                  statearr_17193[24] = inst_17117;
                                  return statearr_17193;
                                }();
                                var statearr_17194_17269 = state_17171__$1;
                                statearr_17194_17269[2] = inst_17118;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17171__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17172 === 32) {
                                  var inst_17115 = state_17171[11];
                                  var inst_17039 = state_17171[21];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17171, 31, Object, null, 30);
                                  var inst_17122 = cljs.core.async.put_BANG_.call(null, inst_17115, inst_17039, done);
                                  var state_17171__$1 = state_17171;
                                  var statearr_17195_17270 = state_17171__$1;
                                  statearr_17195_17270[2] = inst_17122;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17171__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17172 === 40) {
                                    var inst_17137 = state_17171[25];
                                    var inst_17138 = state_17171[2];
                                    var inst_17139 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_17140 = cljs.core.async.untap_STAR_.call(null, m, inst_17137);
                                    var state_17171__$1 = function() {
                                      var statearr_17196 = state_17171;
                                      statearr_17196[26] = inst_17139;
                                      statearr_17196[27] = inst_17138;
                                      return statearr_17196;
                                    }();
                                    var statearr_17197_17271 = state_17171__$1;
                                    statearr_17197_17271[2] = inst_17140;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17171__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17172 === 33) {
                                      var inst_17128 = state_17171[17];
                                      var inst_17130 = cljs.core.chunked_seq_QMARK_.call(null, inst_17128);
                                      var state_17171__$1 = state_17171;
                                      if (inst_17130) {
                                        var statearr_17198_17272 = state_17171__$1;
                                        statearr_17198_17272[1] = 36;
                                      } else {
                                        var statearr_17199_17273 = state_17171__$1;
                                        statearr_17199_17273[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17172 === 13) {
                                        var inst_17058 = state_17171[28];
                                        var inst_17061 = cljs.core.async.close_BANG_.call(null, inst_17058);
                                        var state_17171__$1 = state_17171;
                                        var statearr_17200_17274 = state_17171__$1;
                                        statearr_17200_17274[2] = inst_17061;
                                        statearr_17200_17274[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17172 === 22) {
                                          var inst_17079 = state_17171[8];
                                          var inst_17082 = cljs.core.async.close_BANG_.call(null, inst_17079);
                                          var state_17171__$1 = state_17171;
                                          var statearr_17201_17275 = state_17171__$1;
                                          statearr_17201_17275[2] = inst_17082;
                                          statearr_17201_17275[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17172 === 36) {
                                            var inst_17128 = state_17171[17];
                                            var inst_17132 = cljs.core.chunk_first.call(null, inst_17128);
                                            var inst_17133 = cljs.core.chunk_rest.call(null, inst_17128);
                                            var inst_17134 = cljs.core.count.call(null, inst_17132);
                                            var inst_17107 = inst_17133;
                                            var inst_17108 = inst_17132;
                                            var inst_17109 = inst_17134;
                                            var inst_17110 = 0;
                                            var state_17171__$1 = function() {
                                              var statearr_17202 = state_17171;
                                              statearr_17202[9] = inst_17110;
                                              statearr_17202[18] = inst_17109;
                                              statearr_17202[20] = inst_17107;
                                              statearr_17202[10] = inst_17108;
                                              return statearr_17202;
                                            }();
                                            var statearr_17203_17276 = state_17171__$1;
                                            statearr_17203_17276[2] = null;
                                            statearr_17203_17276[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17172 === 41) {
                                              var inst_17039 = state_17171[21];
                                              var inst_17137 = state_17171[25];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17171, 40, Object, null, 39);
                                              var inst_17144 = cljs.core.async.put_BANG_.call(null, inst_17137, inst_17039, done);
                                              var state_17171__$1 = state_17171;
                                              var statearr_17204_17277 = state_17171__$1;
                                              statearr_17204_17277[2] = inst_17144;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17171__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17172 === 43) {
                                                var state_17171__$1 = state_17171;
                                                var statearr_17205_17278 = state_17171__$1;
                                                statearr_17205_17278[2] = null;
                                                statearr_17205_17278[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17172 === 29) {
                                                  var inst_17155 = state_17171[2];
                                                  var state_17171__$1 = state_17171;
                                                  var statearr_17206_17279 = state_17171__$1;
                                                  statearr_17206_17279[2] = inst_17155;
                                                  statearr_17206_17279[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17172 === 44) {
                                                    var inst_17164 = state_17171[2];
                                                    var state_17171__$1 = function() {
                                                      var statearr_17207 = state_17171;
                                                      statearr_17207[29] = inst_17164;
                                                      return statearr_17207;
                                                    }();
                                                    var statearr_17208_17280 = state_17171__$1;
                                                    statearr_17208_17280[2] = null;
                                                    statearr_17208_17280[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17172 === 6) {
                                                      var inst_17099 = state_17171[30];
                                                      var inst_17098 = cljs.core.deref.call(null, cs);
                                                      var inst_17099__$1 = cljs.core.keys.call(null, inst_17098);
                                                      var inst_17100 = cljs.core.count.call(null, inst_17099__$1);
                                                      var inst_17101 = cljs.core.reset_BANG_.call(null, dctr, inst_17100);
                                                      var inst_17106 = cljs.core.seq.call(null, inst_17099__$1);
                                                      var inst_17107 = inst_17106;
                                                      var inst_17108 = null;
                                                      var inst_17109 = 0;
                                                      var inst_17110 = 0;
                                                      var state_17171__$1 = function() {
                                                        var statearr_17209 = state_17171;
                                                        statearr_17209[9] = inst_17110;
                                                        statearr_17209[18] = inst_17109;
                                                        statearr_17209[31] = inst_17101;
                                                        statearr_17209[20] = inst_17107;
                                                        statearr_17209[30] = inst_17099__$1;
                                                        statearr_17209[10] = inst_17108;
                                                        return statearr_17209;
                                                      }();
                                                      var statearr_17210_17281 = state_17171__$1;
                                                      statearr_17210_17281[2] = null;
                                                      statearr_17210_17281[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17172 === 28) {
                                                        var inst_17107 = state_17171[20];
                                                        var inst_17128 = state_17171[17];
                                                        var inst_17128__$1 = cljs.core.seq.call(null, inst_17107);
                                                        var state_17171__$1 = function() {
                                                          var statearr_17211 = state_17171;
                                                          statearr_17211[17] = inst_17128__$1;
                                                          return statearr_17211;
                                                        }();
                                                        if (inst_17128__$1) {
                                                          var statearr_17212_17282 = state_17171__$1;
                                                          statearr_17212_17282[1] = 33;
                                                        } else {
                                                          var statearr_17213_17283 = state_17171__$1;
                                                          statearr_17213_17283[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17172 === 25) {
                                                          var inst_17110 = state_17171[9];
                                                          var inst_17109 = state_17171[18];
                                                          var inst_17112 = inst_17110 < inst_17109;
                                                          var inst_17113 = inst_17112;
                                                          var state_17171__$1 = state_17171;
                                                          if (cljs.core.truth_(inst_17113)) {
                                                            var statearr_17214_17284 = state_17171__$1;
                                                            statearr_17214_17284[1] = 27;
                                                          } else {
                                                            var statearr_17215_17285 = state_17171__$1;
                                                            statearr_17215_17285[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17172 === 34) {
                                                            var state_17171__$1 = state_17171;
                                                            var statearr_17216_17286 = state_17171__$1;
                                                            statearr_17216_17286[2] = null;
                                                            statearr_17216_17286[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17172 === 17) {
                                                              var state_17171__$1 = state_17171;
                                                              var statearr_17217_17287 = state_17171__$1;
                                                              statearr_17217_17287[2] = null;
                                                              statearr_17217_17287[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17172 === 3) {
                                                                var inst_17169 = state_17171[2];
                                                                var state_17171__$1 = state_17171;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17171__$1, inst_17169);
                                                              } else {
                                                                if (state_val_17172 === 12) {
                                                                  var inst_17094 = state_17171[2];
                                                                  var state_17171__$1 = state_17171;
                                                                  var statearr_17218_17288 = state_17171__$1;
                                                                  statearr_17218_17288[2] = inst_17094;
                                                                  statearr_17218_17288[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_17172 === 2) {
                                                                    var state_17171__$1 = state_17171;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17171__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_17172 === 23) {
                                                                      var state_17171__$1 = state_17171;
                                                                      var statearr_17219_17289 = state_17171__$1;
                                                                      statearr_17219_17289[2] = null;
                                                                      statearr_17219_17289[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_17172 === 35) {
                                                                        var inst_17153 = state_17171[2];
                                                                        var state_17171__$1 = state_17171;
                                                                        var statearr_17220_17290 = state_17171__$1;
                                                                        statearr_17220_17290[2] = inst_17153;
                                                                        statearr_17220_17290[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_17172 === 19) {
                                                                          var inst_17068 = state_17171[7];
                                                                          var inst_17072 = cljs.core.chunk_first.call(null, inst_17068);
                                                                          var inst_17073 = cljs.core.chunk_rest.call(null, inst_17068);
                                                                          var inst_17074 = cljs.core.count.call(null, inst_17072);
                                                                          var inst_17048 = inst_17073;
                                                                          var inst_17049 = inst_17072;
                                                                          var inst_17050 = inst_17074;
                                                                          var inst_17051 = 0;
                                                                          var state_17171__$1 = function() {
                                                                            var statearr_17221 = state_17171;
                                                                            statearr_17221[12] = inst_17049;
                                                                            statearr_17221[14] = inst_17051;
                                                                            statearr_17221[15] = inst_17050;
                                                                            statearr_17221[16] = inst_17048;
                                                                            return statearr_17221;
                                                                          }();
                                                                          var statearr_17222_17291 = state_17171__$1;
                                                                          statearr_17222_17291[2] = null;
                                                                          statearr_17222_17291[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_17172 === 11) {
                                                                            var inst_17068 = state_17171[7];
                                                                            var inst_17048 = state_17171[16];
                                                                            var inst_17068__$1 = cljs.core.seq.call(null, inst_17048);
                                                                            var state_17171__$1 = function() {
                                                                              var statearr_17223 = state_17171;
                                                                              statearr_17223[7] = inst_17068__$1;
                                                                              return statearr_17223;
                                                                            }();
                                                                            if (inst_17068__$1) {
                                                                              var statearr_17224_17292 = state_17171__$1;
                                                                              statearr_17224_17292[1] = 16;
                                                                            } else {
                                                                              var statearr_17225_17293 = state_17171__$1;
                                                                              statearr_17225_17293[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_17172 === 9) {
                                                                              var inst_17096 = state_17171[2];
                                                                              var state_17171__$1 = state_17171;
                                                                              var statearr_17226_17294 = state_17171__$1;
                                                                              statearr_17226_17294[2] = inst_17096;
                                                                              statearr_17226_17294[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_17172 === 5) {
                                                                                var inst_17046 = cljs.core.deref.call(null, cs);
                                                                                var inst_17047 = cljs.core.seq.call(null, inst_17046);
                                                                                var inst_17048 = inst_17047;
                                                                                var inst_17049 = null;
                                                                                var inst_17050 = 0;
                                                                                var inst_17051 = 0;
                                                                                var state_17171__$1 = function() {
                                                                                  var statearr_17227 = state_17171;
                                                                                  statearr_17227[12] = inst_17049;
                                                                                  statearr_17227[14] = inst_17051;
                                                                                  statearr_17227[15] = inst_17050;
                                                                                  statearr_17227[16] = inst_17048;
                                                                                  return statearr_17227;
                                                                                }();
                                                                                var statearr_17228_17295 = state_17171__$1;
                                                                                statearr_17228_17295[2] = null;
                                                                                statearr_17228_17295[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_17172 === 14) {
                                                                                  var state_17171__$1 = state_17171;
                                                                                  var statearr_17229_17296 = state_17171__$1;
                                                                                  statearr_17229_17296[2] = null;
                                                                                  statearr_17229_17296[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_17172 === 45) {
                                                                                    var inst_17161 = state_17171[2];
                                                                                    var state_17171__$1 = state_17171;
                                                                                    var statearr_17230_17297 = state_17171__$1;
                                                                                    statearr_17230_17297[2] = inst_17161;
                                                                                    statearr_17230_17297[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_17172 === 26) {
                                                                                      var inst_17099 = state_17171[30];
                                                                                      var inst_17157 = state_17171[2];
                                                                                      var inst_17158 = cljs.core.seq.call(null, inst_17099);
                                                                                      var state_17171__$1 = function() {
                                                                                        var statearr_17231 = state_17171;
                                                                                        statearr_17231[32] = inst_17157;
                                                                                        return statearr_17231;
                                                                                      }();
                                                                                      if (inst_17158) {
                                                                                        var statearr_17232_17298 = state_17171__$1;
                                                                                        statearr_17232_17298[1] = 42;
                                                                                      } else {
                                                                                        var statearr_17233_17299 = state_17171__$1;
                                                                                        statearr_17233_17299[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_17172 === 16) {
                                                                                        var inst_17068 = state_17171[7];
                                                                                        var inst_17070 = cljs.core.chunked_seq_QMARK_.call(null, inst_17068);
                                                                                        var state_17171__$1 = state_17171;
                                                                                        if (inst_17070) {
                                                                                          var statearr_17237_17300 = state_17171__$1;
                                                                                          statearr_17237_17300[1] = 19;
                                                                                        } else {
                                                                                          var statearr_17238_17301 = state_17171__$1;
                                                                                          statearr_17238_17301[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_17172 === 38) {
                                                                                          var inst_17150 = state_17171[2];
                                                                                          var state_17171__$1 = state_17171;
                                                                                          var statearr_17239_17302 = state_17171__$1;
                                                                                          statearr_17239_17302[2] = inst_17150;
                                                                                          statearr_17239_17302[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_17172 === 30) {
                                                                                            var inst_17110 = state_17171[9];
                                                                                            var inst_17109 = state_17171[18];
                                                                                            var inst_17107 = state_17171[20];
                                                                                            var inst_17108 = state_17171[10];
                                                                                            var inst_17124 = state_17171[2];
                                                                                            var inst_17125 = inst_17110 + 1;
                                                                                            var tmp17234 = inst_17109;
                                                                                            var tmp17235 = inst_17107;
                                                                                            var tmp17236 = inst_17108;
                                                                                            var inst_17107__$1 = tmp17235;
                                                                                            var inst_17108__$1 = tmp17236;
                                                                                            var inst_17109__$1 = tmp17234;
                                                                                            var inst_17110__$1 = inst_17125;
                                                                                            var state_17171__$1 = function() {
                                                                                              var statearr_17240 = state_17171;
                                                                                              statearr_17240[9] = inst_17110__$1;
                                                                                              statearr_17240[33] = inst_17124;
                                                                                              statearr_17240[18] = inst_17109__$1;
                                                                                              statearr_17240[20] = inst_17107__$1;
                                                                                              statearr_17240[10] = inst_17108__$1;
                                                                                              return statearr_17240;
                                                                                            }();
                                                                                            var statearr_17241_17303 = state_17171__$1;
                                                                                            statearr_17241_17303[2] = null;
                                                                                            statearr_17241_17303[1] = 25;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_17172 === 10) {
                                                                                              var inst_17049 = state_17171[12];
                                                                                              var inst_17051 = state_17171[14];
                                                                                              var inst_17057 = cljs.core._nth.call(null, inst_17049, inst_17051);
                                                                                              var inst_17058 = cljs.core.nth.call(null, inst_17057, 0, null);
                                                                                              var inst_17059 = cljs.core.nth.call(null, inst_17057, 1, null);
                                                                                              var state_17171__$1 = function() {
                                                                                                var statearr_17242 = state_17171;
                                                                                                statearr_17242[28] = inst_17058;
                                                                                                return statearr_17242;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_17059)) {
                                                                                                var statearr_17243_17304 = state_17171__$1;
                                                                                                statearr_17243_17304[1] = 13;
                                                                                              } else {
                                                                                                var statearr_17244_17305 = state_17171__$1;
                                                                                                statearr_17244_17305[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_17172 === 18) {
                                                                                                var inst_17092 = state_17171[2];
                                                                                                var state_17171__$1 = state_17171;
                                                                                                var statearr_17245_17306 = state_17171__$1;
                                                                                                statearr_17245_17306[2] = inst_17092;
                                                                                                statearr_17245_17306[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_17172 === 42) {
                                                                                                  var state_17171__$1 = state_17171;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17171__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_17172 === 37) {
                                                                                                    var inst_17128 = state_17171[17];
                                                                                                    var inst_17137 = cljs.core.first.call(null, inst_17128);
                                                                                                    var state_17171__$1 = function() {
                                                                                                      var statearr_17246 = state_17171;
                                                                                                      statearr_17246[25] = inst_17137;
                                                                                                      return statearr_17246;
                                                                                                    }();
                                                                                                    var statearr_17247_17307 = state_17171__$1;
                                                                                                    statearr_17247_17307[2] = null;
                                                                                                    statearr_17247_17307[1] = 41;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_17172 === 8) {
                                                                                                      var inst_17051 = state_17171[14];
                                                                                                      var inst_17050 = state_17171[15];
                                                                                                      var inst_17053 = inst_17051 < inst_17050;
                                                                                                      var inst_17054 = inst_17053;
                                                                                                      var state_17171__$1 = state_17171;
                                                                                                      if (cljs.core.truth_(inst_17054)) {
                                                                                                        var statearr_17248_17308 = state_17171__$1;
                                                                                                        statearr_17248_17308[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_17249_17309 = state_17171__$1;
                                                                                                        statearr_17249_17309[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto___17257, cs, m, dchan, dctr, done);
        return function(switch__5693__auto__, c__5708__auto___17257, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_17253 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17253[0] = state_machine__5694__auto__;
              statearr_17253[1] = 1;
              return statearr_17253;
            };
            var state_machine__5694__auto____1 = function(state_17171) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_17171);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e17254) {
                    if (e17254 instanceof Object) {
                      var ex__5697__auto__ = e17254;
                      var statearr_17255_17310 = state_17171;
                      statearr_17255_17310[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17171);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17254;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17311 = state_17171;
                  state_17171 = G__17311;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_17171) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_17171);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___17257, cs, m, dchan, dctr, done);
      }();
      var state__5710__auto__ = function() {
        var statearr_17256 = f__5709__auto__.call(null);
        statearr_17256[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___17257;
        return statearr_17256;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___17257, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj17313 = {};
  return obj17313;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3546__auto__ = m;
    if (and__3546__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4185__auto__ = m == null ? null : m;
    return function() {
      var or__3558__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t17423 !== "undefined") {
    } else {
      cljs.core.async.t17423 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta17424) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta17424 = meta17424;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t17423.cljs$lang$type = true;
      cljs.core.async.t17423.cljs$lang$ctorStr = "cljs.core.async/t17423";
      cljs.core.async.t17423.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t17423");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t17423.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17423.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17425) {
          var self__ = this;
          var _17425__$1 = this;
          return self__.meta17424;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17423.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17425, meta17424__$1) {
          var self__ = this;
          var _17425__$1 = this;
          return new cljs.core.async.t17423(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta17424__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t17423 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t17423(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta17424) {
          return new cljs.core.async.t17423(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta17424);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t17423(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__5708__auto___17532 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___17532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___17532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_17490) {
            var state_val_17491 = state_17490[1];
            if (state_val_17491 === 7) {
              var inst_17439 = state_17490[7];
              var inst_17444 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17439);
              var state_17490__$1 = state_17490;
              var statearr_17492_17533 = state_17490__$1;
              statearr_17492_17533[2] = inst_17444;
              statearr_17492_17533[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17491 === 20) {
                var inst_17454 = state_17490[8];
                var state_17490__$1 = state_17490;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17490__$1, 23, out, inst_17454);
              } else {
                if (state_val_17491 === 1) {
                  var inst_17429 = state_17490[9];
                  var inst_17429__$1 = calc_state.call(null);
                  var inst_17430 = cljs.core.seq_QMARK_.call(null, inst_17429__$1);
                  var state_17490__$1 = function() {
                    var statearr_17493 = state_17490;
                    statearr_17493[9] = inst_17429__$1;
                    return statearr_17493;
                  }();
                  if (inst_17430) {
                    var statearr_17494_17534 = state_17490__$1;
                    statearr_17494_17534[1] = 2;
                  } else {
                    var statearr_17495_17535 = state_17490__$1;
                    statearr_17495_17535[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17491 === 4) {
                    var inst_17429 = state_17490[9];
                    var inst_17435 = state_17490[2];
                    var inst_17436 = cljs.core.get.call(null, inst_17435, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                    var inst_17437 = cljs.core.get.call(null, inst_17435, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                    var inst_17438 = cljs.core.get.call(null, inst_17435, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                    var inst_17439 = inst_17429;
                    var state_17490__$1 = function() {
                      var statearr_17496 = state_17490;
                      statearr_17496[10] = inst_17438;
                      statearr_17496[11] = inst_17437;
                      statearr_17496[7] = inst_17439;
                      statearr_17496[12] = inst_17436;
                      return statearr_17496;
                    }();
                    var statearr_17497_17536 = state_17490__$1;
                    statearr_17497_17536[2] = null;
                    statearr_17497_17536[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17491 === 15) {
                      var state_17490__$1 = state_17490;
                      var statearr_17498_17537 = state_17490__$1;
                      statearr_17498_17537[2] = null;
                      statearr_17498_17537[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17491 === 21) {
                        var state_17490__$1 = state_17490;
                        var statearr_17499_17538 = state_17490__$1;
                        statearr_17499_17538[2] = null;
                        statearr_17499_17538[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17491 === 13) {
                          var inst_17486 = state_17490[2];
                          var state_17490__$1 = state_17490;
                          var statearr_17500_17539 = state_17490__$1;
                          statearr_17500_17539[2] = inst_17486;
                          statearr_17500_17539[1] = 6;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17491 === 22) {
                            var inst_17447 = state_17490[13];
                            var inst_17483 = state_17490[2];
                            var inst_17439 = inst_17447;
                            var state_17490__$1 = function() {
                              var statearr_17501 = state_17490;
                              statearr_17501[14] = inst_17483;
                              statearr_17501[7] = inst_17439;
                              return statearr_17501;
                            }();
                            var statearr_17502_17540 = state_17490__$1;
                            statearr_17502_17540[2] = null;
                            statearr_17502_17540[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17491 === 6) {
                              var inst_17488 = state_17490[2];
                              var state_17490__$1 = state_17490;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17490__$1, inst_17488);
                            } else {
                              if (state_val_17491 === 17) {
                                var inst_17469 = state_17490[15];
                                var state_17490__$1 = state_17490;
                                var statearr_17503_17541 = state_17490__$1;
                                statearr_17503_17541[2] = inst_17469;
                                statearr_17503_17541[1] = 19;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17491 === 3) {
                                  var inst_17429 = state_17490[9];
                                  var state_17490__$1 = state_17490;
                                  var statearr_17504_17542 = state_17490__$1;
                                  statearr_17504_17542[2] = inst_17429;
                                  statearr_17504_17542[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17491 === 12) {
                                    var inst_17450 = state_17490[16];
                                    var inst_17469 = state_17490[15];
                                    var inst_17455 = state_17490[17];
                                    var inst_17469__$1 = inst_17450.call(null, inst_17455);
                                    var state_17490__$1 = function() {
                                      var statearr_17505 = state_17490;
                                      statearr_17505[15] = inst_17469__$1;
                                      return statearr_17505;
                                    }();
                                    if (cljs.core.truth_(inst_17469__$1)) {
                                      var statearr_17506_17543 = state_17490__$1;
                                      statearr_17506_17543[1] = 17;
                                    } else {
                                      var statearr_17507_17544 = state_17490__$1;
                                      statearr_17507_17544[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17491 === 2) {
                                      var inst_17429 = state_17490[9];
                                      var inst_17432 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17429);
                                      var state_17490__$1 = state_17490;
                                      var statearr_17508_17545 = state_17490__$1;
                                      statearr_17508_17545[2] = inst_17432;
                                      statearr_17508_17545[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17491 === 23) {
                                        var inst_17480 = state_17490[2];
                                        var state_17490__$1 = state_17490;
                                        var statearr_17509_17546 = state_17490__$1;
                                        statearr_17509_17546[2] = inst_17480;
                                        statearr_17509_17546[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17491 === 19) {
                                          var inst_17477 = state_17490[2];
                                          var state_17490__$1 = state_17490;
                                          if (cljs.core.truth_(inst_17477)) {
                                            var statearr_17510_17547 = state_17490__$1;
                                            statearr_17510_17547[1] = 20;
                                          } else {
                                            var statearr_17511_17548 = state_17490__$1;
                                            statearr_17511_17548[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17491 === 11) {
                                            var inst_17454 = state_17490[8];
                                            var inst_17460 = inst_17454 == null;
                                            var state_17490__$1 = state_17490;
                                            if (cljs.core.truth_(inst_17460)) {
                                              var statearr_17512_17549 = state_17490__$1;
                                              statearr_17512_17549[1] = 14;
                                            } else {
                                              var statearr_17513_17550 = state_17490__$1;
                                              statearr_17513_17550[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17491 === 9) {
                                              var inst_17447 = state_17490[13];
                                              var inst_17447__$1 = state_17490[2];
                                              var inst_17448 = cljs.core.get.call(null, inst_17447__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                              var inst_17449 = cljs.core.get.call(null, inst_17447__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                              var inst_17450 = cljs.core.get.call(null, inst_17447__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                              var state_17490__$1 = function() {
                                                var statearr_17514 = state_17490;
                                                statearr_17514[16] = inst_17450;
                                                statearr_17514[13] = inst_17447__$1;
                                                statearr_17514[18] = inst_17449;
                                                return statearr_17514;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_17490__$1, 10, inst_17448);
                                            } else {
                                              if (state_val_17491 === 5) {
                                                var inst_17439 = state_17490[7];
                                                var inst_17442 = cljs.core.seq_QMARK_.call(null, inst_17439);
                                                var state_17490__$1 = state_17490;
                                                if (inst_17442) {
                                                  var statearr_17515_17551 = state_17490__$1;
                                                  statearr_17515_17551[1] = 7;
                                                } else {
                                                  var statearr_17516_17552 = state_17490__$1;
                                                  statearr_17516_17552[1] = 8;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17491 === 14) {
                                                  var inst_17455 = state_17490[17];
                                                  var inst_17462 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_17455);
                                                  var state_17490__$1 = state_17490;
                                                  var statearr_17517_17553 = state_17490__$1;
                                                  statearr_17517_17553[2] = inst_17462;
                                                  statearr_17517_17553[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17491 === 16) {
                                                    var inst_17465 = state_17490[2];
                                                    var inst_17466 = calc_state.call(null);
                                                    var inst_17439 = inst_17466;
                                                    var state_17490__$1 = function() {
                                                      var statearr_17518 = state_17490;
                                                      statearr_17518[19] = inst_17465;
                                                      statearr_17518[7] = inst_17439;
                                                      return statearr_17518;
                                                    }();
                                                    var statearr_17519_17554 = state_17490__$1;
                                                    statearr_17519_17554[2] = null;
                                                    statearr_17519_17554[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17491 === 10) {
                                                      var inst_17455 = state_17490[17];
                                                      var inst_17454 = state_17490[8];
                                                      var inst_17453 = state_17490[2];
                                                      var inst_17454__$1 = cljs.core.nth.call(null, inst_17453, 0, null);
                                                      var inst_17455__$1 = cljs.core.nth.call(null, inst_17453, 1, null);
                                                      var inst_17456 = inst_17454__$1 == null;
                                                      var inst_17457 = cljs.core._EQ_.call(null, inst_17455__$1, change);
                                                      var inst_17458 = inst_17456 || inst_17457;
                                                      var state_17490__$1 = function() {
                                                        var statearr_17520 = state_17490;
                                                        statearr_17520[17] = inst_17455__$1;
                                                        statearr_17520[8] = inst_17454__$1;
                                                        return statearr_17520;
                                                      }();
                                                      if (cljs.core.truth_(inst_17458)) {
                                                        var statearr_17521_17555 = state_17490__$1;
                                                        statearr_17521_17555[1] = 11;
                                                      } else {
                                                        var statearr_17522_17556 = state_17490__$1;
                                                        statearr_17522_17556[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17491 === 18) {
                                                        var inst_17450 = state_17490[16];
                                                        var inst_17455 = state_17490[17];
                                                        var inst_17449 = state_17490[18];
                                                        var inst_17472 = cljs.core.empty_QMARK_.call(null, inst_17450);
                                                        var inst_17473 = inst_17449.call(null, inst_17455);
                                                        var inst_17474 = cljs.core.not.call(null, inst_17473);
                                                        var inst_17475 = inst_17472 && inst_17474;
                                                        var state_17490__$1 = state_17490;
                                                        var statearr_17523_17557 = state_17490__$1;
                                                        statearr_17523_17557[2] = inst_17475;
                                                        statearr_17523_17557[1] = 19;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17491 === 8) {
                                                          var inst_17439 = state_17490[7];
                                                          var state_17490__$1 = state_17490;
                                                          var statearr_17524_17558 = state_17490__$1;
                                                          statearr_17524_17558[2] = inst_17439;
                                                          statearr_17524_17558[1] = 9;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto___17532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__5693__auto__, c__5708__auto___17532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_17528 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17528[0] = state_machine__5694__auto__;
              statearr_17528[1] = 1;
              return statearr_17528;
            };
            var state_machine__5694__auto____1 = function(state_17490) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_17490);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e17529) {
                    if (e17529 instanceof Object) {
                      var ex__5697__auto__ = e17529;
                      var statearr_17530_17559 = state_17490;
                      statearr_17530_17559[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17490);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17529;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17560 = state_17490;
                  state_17490 = G__17560;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_17490) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_17490);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___17532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__5710__auto__ = function() {
        var statearr_17531 = f__5709__auto__.call(null);
        statearr_17531[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___17532;
        return statearr_17531;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___17532, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj17562 = {};
  return obj17562;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3546__auto__ = p;
    if (and__3546__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4185__auto__ = p == null ? null : p;
    return function() {
      var or__3558__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3546__auto__ = p;
    if (and__3546__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4185__auto__ = p == null ? null : p;
    return function() {
      var or__3558__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3546__auto__ = p;
      if (and__3546__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4185__auto__ = p == null ? null : p;
      return function() {
        var or__3558__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3546__auto__ = p;
      if (and__3546__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4185__auto__ = p == null ? null : p;
      return function() {
        var or__3558__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3558__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3558__auto__, mults) {
            return function(p1__17563_SHARP_) {
              if (cljs.core.truth_(p1__17563_SHARP_.call(null, topic))) {
                return p1__17563_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__17563_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3558__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t17688 !== "undefined") {
      } else {
        cljs.core.async.t17688 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta17689) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta17689 = meta17689;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t17688.cljs$lang$type = true;
        cljs.core.async.t17688.cljs$lang$ctorStr = "cljs.core.async/t17688";
        cljs.core.async.t17688.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
            return cljs.core._write.call(null, writer__4126__auto__, "cljs.core.async/t17688");
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t17688.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t17688.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_17690) {
            var self__ = this;
            var _17690__$1 = this;
            return self__.meta17689;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17688.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_17690, meta17689__$1) {
            var self__ = this;
            var _17690__$1 = this;
            return new cljs.core.async.t17688(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta17689__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t17688 = function(mults, ensure_mult) {
          return function __GT_t17688(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17689) {
            return new cljs.core.async.t17688(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17689);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t17688(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__5708__auto___17812 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___17812, mults, ensure_mult, p) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___17812, mults, ensure_mult, p) {
            return function(state_17764) {
              var state_val_17765 = state_17764[1];
              if (state_val_17765 === 7) {
                var inst_17760 = state_17764[2];
                var state_17764__$1 = state_17764;
                var statearr_17766_17813 = state_17764__$1;
                statearr_17766_17813[2] = inst_17760;
                statearr_17766_17813[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17765 === 20) {
                  var state_17764__$1 = state_17764;
                  var statearr_17767_17814 = state_17764__$1;
                  statearr_17767_17814[2] = null;
                  statearr_17767_17814[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17765 === 1) {
                    var state_17764__$1 = state_17764;
                    var statearr_17768_17815 = state_17764__$1;
                    statearr_17768_17815[2] = null;
                    statearr_17768_17815[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17765 === 24) {
                      var inst_17743 = state_17764[7];
                      var inst_17693 = state_17764[8];
                      var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17764, 23, Object, null, 22);
                      var inst_17750 = cljs.core.async.muxch_STAR_.call(null, inst_17743);
                      var state_17764__$1 = state_17764;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17764__$1, 25, inst_17750, inst_17693);
                    } else {
                      if (state_val_17765 === 4) {
                        var inst_17693 = state_17764[8];
                        var inst_17693__$1 = state_17764[2];
                        var inst_17694 = inst_17693__$1 == null;
                        var state_17764__$1 = function() {
                          var statearr_17769 = state_17764;
                          statearr_17769[8] = inst_17693__$1;
                          return statearr_17769;
                        }();
                        if (cljs.core.truth_(inst_17694)) {
                          var statearr_17770_17816 = state_17764__$1;
                          statearr_17770_17816[1] = 5;
                        } else {
                          var statearr_17771_17817 = state_17764__$1;
                          statearr_17771_17817[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17765 === 15) {
                          var inst_17735 = state_17764[2];
                          var state_17764__$1 = state_17764;
                          var statearr_17772_17818 = state_17764__$1;
                          statearr_17772_17818[2] = inst_17735;
                          statearr_17772_17818[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17765 === 21) {
                            var inst_17757 = state_17764[2];
                            var state_17764__$1 = function() {
                              var statearr_17773 = state_17764;
                              statearr_17773[9] = inst_17757;
                              return statearr_17773;
                            }();
                            var statearr_17774_17819 = state_17764__$1;
                            statearr_17774_17819[2] = null;
                            statearr_17774_17819[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17765 === 13) {
                              var inst_17717 = state_17764[10];
                              var inst_17719 = cljs.core.chunked_seq_QMARK_.call(null, inst_17717);
                              var state_17764__$1 = state_17764;
                              if (inst_17719) {
                                var statearr_17775_17820 = state_17764__$1;
                                statearr_17775_17820[1] = 16;
                              } else {
                                var statearr_17776_17821 = state_17764__$1;
                                statearr_17776_17821[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17765 === 22) {
                                var inst_17754 = state_17764[2];
                                var state_17764__$1 = state_17764;
                                var statearr_17777_17822 = state_17764__$1;
                                statearr_17777_17822[2] = inst_17754;
                                statearr_17777_17822[1] = 21;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17765 === 6) {
                                  var inst_17743 = state_17764[7];
                                  var inst_17741 = state_17764[11];
                                  var inst_17693 = state_17764[8];
                                  var inst_17741__$1 = topic_fn.call(null, inst_17693);
                                  var inst_17742 = cljs.core.deref.call(null, mults);
                                  var inst_17743__$1 = cljs.core.get.call(null, inst_17742, inst_17741__$1);
                                  var state_17764__$1 = function() {
                                    var statearr_17778 = state_17764;
                                    statearr_17778[7] = inst_17743__$1;
                                    statearr_17778[11] = inst_17741__$1;
                                    return statearr_17778;
                                  }();
                                  if (cljs.core.truth_(inst_17743__$1)) {
                                    var statearr_17779_17823 = state_17764__$1;
                                    statearr_17779_17823[1] = 19;
                                  } else {
                                    var statearr_17780_17824 = state_17764__$1;
                                    statearr_17780_17824[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17765 === 25) {
                                    var inst_17752 = state_17764[2];
                                    var state_17764__$1 = state_17764;
                                    var statearr_17781_17825 = state_17764__$1;
                                    statearr_17781_17825[2] = inst_17752;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17764__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17765 === 17) {
                                      var inst_17717 = state_17764[10];
                                      var inst_17726 = cljs.core.first.call(null, inst_17717);
                                      var inst_17727 = cljs.core.async.muxch_STAR_.call(null, inst_17726);
                                      var inst_17728 = cljs.core.async.close_BANG_.call(null, inst_17727);
                                      var inst_17729 = cljs.core.next.call(null, inst_17717);
                                      var inst_17703 = inst_17729;
                                      var inst_17704 = null;
                                      var inst_17705 = 0;
                                      var inst_17706 = 0;
                                      var state_17764__$1 = function() {
                                        var statearr_17782 = state_17764;
                                        statearr_17782[12] = inst_17706;
                                        statearr_17782[13] = inst_17728;
                                        statearr_17782[14] = inst_17704;
                                        statearr_17782[15] = inst_17703;
                                        statearr_17782[16] = inst_17705;
                                        return statearr_17782;
                                      }();
                                      var statearr_17783_17826 = state_17764__$1;
                                      statearr_17783_17826[2] = null;
                                      statearr_17783_17826[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17765 === 3) {
                                        var inst_17762 = state_17764[2];
                                        var state_17764__$1 = state_17764;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17764__$1, inst_17762);
                                      } else {
                                        if (state_val_17765 === 12) {
                                          var inst_17737 = state_17764[2];
                                          var state_17764__$1 = state_17764;
                                          var statearr_17784_17827 = state_17764__$1;
                                          statearr_17784_17827[2] = inst_17737;
                                          statearr_17784_17827[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17765 === 2) {
                                            var state_17764__$1 = state_17764;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17764__$1, 4, ch);
                                          } else {
                                            if (state_val_17765 === 23) {
                                              var inst_17741 = state_17764[11];
                                              var inst_17745 = state_17764[2];
                                              var inst_17746 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_17741);
                                              var state_17764__$1 = function() {
                                                var statearr_17785 = state_17764;
                                                statearr_17785[17] = inst_17745;
                                                return statearr_17785;
                                              }();
                                              var statearr_17786_17828 = state_17764__$1;
                                              statearr_17786_17828[2] = inst_17746;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17764__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17765 === 19) {
                                                var state_17764__$1 = state_17764;
                                                var statearr_17787_17829 = state_17764__$1;
                                                statearr_17787_17829[2] = null;
                                                statearr_17787_17829[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17765 === 11) {
                                                  var inst_17717 = state_17764[10];
                                                  var inst_17703 = state_17764[15];
                                                  var inst_17717__$1 = cljs.core.seq.call(null, inst_17703);
                                                  var state_17764__$1 = function() {
                                                    var statearr_17788 = state_17764;
                                                    statearr_17788[10] = inst_17717__$1;
                                                    return statearr_17788;
                                                  }();
                                                  if (inst_17717__$1) {
                                                    var statearr_17789_17830 = state_17764__$1;
                                                    statearr_17789_17830[1] = 13;
                                                  } else {
                                                    var statearr_17790_17831 = state_17764__$1;
                                                    statearr_17790_17831[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17765 === 9) {
                                                    var inst_17739 = state_17764[2];
                                                    var state_17764__$1 = state_17764;
                                                    var statearr_17791_17832 = state_17764__$1;
                                                    statearr_17791_17832[2] = inst_17739;
                                                    statearr_17791_17832[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17765 === 5) {
                                                      var inst_17700 = cljs.core.deref.call(null, mults);
                                                      var inst_17701 = cljs.core.vals.call(null, inst_17700);
                                                      var inst_17702 = cljs.core.seq.call(null, inst_17701);
                                                      var inst_17703 = inst_17702;
                                                      var inst_17704 = null;
                                                      var inst_17705 = 0;
                                                      var inst_17706 = 0;
                                                      var state_17764__$1 = function() {
                                                        var statearr_17792 = state_17764;
                                                        statearr_17792[12] = inst_17706;
                                                        statearr_17792[14] = inst_17704;
                                                        statearr_17792[15] = inst_17703;
                                                        statearr_17792[16] = inst_17705;
                                                        return statearr_17792;
                                                      }();
                                                      var statearr_17793_17833 = state_17764__$1;
                                                      statearr_17793_17833[2] = null;
                                                      statearr_17793_17833[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17765 === 14) {
                                                        var state_17764__$1 = state_17764;
                                                        var statearr_17797_17834 = state_17764__$1;
                                                        statearr_17797_17834[2] = null;
                                                        statearr_17797_17834[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17765 === 16) {
                                                          var inst_17717 = state_17764[10];
                                                          var inst_17721 = cljs.core.chunk_first.call(null, inst_17717);
                                                          var inst_17722 = cljs.core.chunk_rest.call(null, inst_17717);
                                                          var inst_17723 = cljs.core.count.call(null, inst_17721);
                                                          var inst_17703 = inst_17722;
                                                          var inst_17704 = inst_17721;
                                                          var inst_17705 = inst_17723;
                                                          var inst_17706 = 0;
                                                          var state_17764__$1 = function() {
                                                            var statearr_17798 = state_17764;
                                                            statearr_17798[12] = inst_17706;
                                                            statearr_17798[14] = inst_17704;
                                                            statearr_17798[15] = inst_17703;
                                                            statearr_17798[16] = inst_17705;
                                                            return statearr_17798;
                                                          }();
                                                          var statearr_17799_17835 = state_17764__$1;
                                                          statearr_17799_17835[2] = null;
                                                          statearr_17799_17835[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17765 === 10) {
                                                            var inst_17706 = state_17764[12];
                                                            var inst_17704 = state_17764[14];
                                                            var inst_17703 = state_17764[15];
                                                            var inst_17705 = state_17764[16];
                                                            var inst_17711 = cljs.core._nth.call(null, inst_17704, inst_17706);
                                                            var inst_17712 = cljs.core.async.muxch_STAR_.call(null, inst_17711);
                                                            var inst_17713 = cljs.core.async.close_BANG_.call(null, inst_17712);
                                                            var inst_17714 = inst_17706 + 1;
                                                            var tmp17794 = inst_17704;
                                                            var tmp17795 = inst_17703;
                                                            var tmp17796 = inst_17705;
                                                            var inst_17703__$1 = tmp17795;
                                                            var inst_17704__$1 = tmp17794;
                                                            var inst_17705__$1 = tmp17796;
                                                            var inst_17706__$1 = inst_17714;
                                                            var state_17764__$1 = function() {
                                                              var statearr_17800 = state_17764;
                                                              statearr_17800[12] = inst_17706__$1;
                                                              statearr_17800[14] = inst_17704__$1;
                                                              statearr_17800[15] = inst_17703__$1;
                                                              statearr_17800[16] = inst_17705__$1;
                                                              statearr_17800[18] = inst_17713;
                                                              return statearr_17800;
                                                            }();
                                                            var statearr_17801_17836 = state_17764__$1;
                                                            statearr_17801_17836[2] = null;
                                                            statearr_17801_17836[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17765 === 18) {
                                                              var inst_17732 = state_17764[2];
                                                              var state_17764__$1 = state_17764;
                                                              var statearr_17802_17837 = state_17764__$1;
                                                              statearr_17802_17837[2] = inst_17732;
                                                              statearr_17802_17837[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17765 === 8) {
                                                                var inst_17706 = state_17764[12];
                                                                var inst_17705 = state_17764[16];
                                                                var inst_17708 = inst_17706 < inst_17705;
                                                                var inst_17709 = inst_17708;
                                                                var state_17764__$1 = state_17764;
                                                                if (cljs.core.truth_(inst_17709)) {
                                                                  var statearr_17803_17838 = state_17764__$1;
                                                                  statearr_17803_17838[1] = 10;
                                                                } else {
                                                                  var statearr_17804_17839 = state_17764__$1;
                                                                  statearr_17804_17839[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___17812, mults, ensure_mult, p);
          return function(switch__5693__auto__, c__5708__auto___17812, mults, ensure_mult, p) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_17808 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_17808[0] = state_machine__5694__auto__;
                statearr_17808[1] = 1;
                return statearr_17808;
              };
              var state_machine__5694__auto____1 = function(state_17764) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_17764);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e17809) {
                      if (e17809 instanceof Object) {
                        var ex__5697__auto__ = e17809;
                        var statearr_17810_17840 = state_17764;
                        statearr_17810_17840[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17764);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17809;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17841 = state_17764;
                    state_17764 = G__17841;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_17764) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_17764);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___17812, mults, ensure_mult, p);
        }();
        var state__5710__auto__ = function() {
          var statearr_17811 = f__5709__auto__.call(null);
          statearr_17811[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___17812;
          return statearr_17811;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___17812, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5708__auto___17978 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___17978, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___17978, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_17948) {
              var state_val_17949 = state_17948[1];
              if (state_val_17949 === 7) {
                var state_17948__$1 = state_17948;
                var statearr_17950_17979 = state_17948__$1;
                statearr_17950_17979[2] = null;
                statearr_17950_17979[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17949 === 1) {
                  var state_17948__$1 = state_17948;
                  var statearr_17951_17980 = state_17948__$1;
                  statearr_17951_17980[2] = null;
                  statearr_17951_17980[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17949 === 4) {
                    var inst_17912 = state_17948[7];
                    var inst_17914 = inst_17912 < cnt;
                    var state_17948__$1 = state_17948;
                    if (cljs.core.truth_(inst_17914)) {
                      var statearr_17952_17981 = state_17948__$1;
                      statearr_17952_17981[1] = 6;
                    } else {
                      var statearr_17953_17982 = state_17948__$1;
                      statearr_17953_17982[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17949 === 15) {
                      var inst_17944 = state_17948[2];
                      var state_17948__$1 = state_17948;
                      var statearr_17954_17983 = state_17948__$1;
                      statearr_17954_17983[2] = inst_17944;
                      statearr_17954_17983[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17949 === 13) {
                        var inst_17937 = cljs.core.async.close_BANG_.call(null, out);
                        var state_17948__$1 = state_17948;
                        var statearr_17955_17984 = state_17948__$1;
                        statearr_17955_17984[2] = inst_17937;
                        statearr_17955_17984[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17949 === 6) {
                          var state_17948__$1 = state_17948;
                          var statearr_17956_17985 = state_17948__$1;
                          statearr_17956_17985[2] = null;
                          statearr_17956_17985[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17949 === 3) {
                            var inst_17946 = state_17948[2];
                            var state_17948__$1 = state_17948;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17948__$1, inst_17946);
                          } else {
                            if (state_val_17949 === 12) {
                              var inst_17934 = state_17948[8];
                              var inst_17934__$1 = state_17948[2];
                              var inst_17935 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_17934__$1);
                              var state_17948__$1 = function() {
                                var statearr_17957 = state_17948;
                                statearr_17957[8] = inst_17934__$1;
                                return statearr_17957;
                              }();
                              if (cljs.core.truth_(inst_17935)) {
                                var statearr_17958_17986 = state_17948__$1;
                                statearr_17958_17986[1] = 13;
                              } else {
                                var statearr_17959_17987 = state_17948__$1;
                                statearr_17959_17987[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17949 === 2) {
                                var inst_17911 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_17912 = 0;
                                var state_17948__$1 = function() {
                                  var statearr_17960 = state_17948;
                                  statearr_17960[9] = inst_17911;
                                  statearr_17960[7] = inst_17912;
                                  return statearr_17960;
                                }();
                                var statearr_17961_17988 = state_17948__$1;
                                statearr_17961_17988[2] = null;
                                statearr_17961_17988[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17949 === 11) {
                                  var inst_17912 = state_17948[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17948, 10, Object, null, 9);
                                  var inst_17921 = chs__$1.call(null, inst_17912);
                                  var inst_17922 = done.call(null, inst_17912);
                                  var inst_17923 = cljs.core.async.take_BANG_.call(null, inst_17921, inst_17922);
                                  var state_17948__$1 = state_17948;
                                  var statearr_17962_17989 = state_17948__$1;
                                  statearr_17962_17989[2] = inst_17923;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17948__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17949 === 9) {
                                    var inst_17912 = state_17948[7];
                                    var inst_17925 = state_17948[2];
                                    var inst_17926 = inst_17912 + 1;
                                    var inst_17912__$1 = inst_17926;
                                    var state_17948__$1 = function() {
                                      var statearr_17963 = state_17948;
                                      statearr_17963[7] = inst_17912__$1;
                                      statearr_17963[10] = inst_17925;
                                      return statearr_17963;
                                    }();
                                    var statearr_17964_17990 = state_17948__$1;
                                    statearr_17964_17990[2] = null;
                                    statearr_17964_17990[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17949 === 5) {
                                      var inst_17932 = state_17948[2];
                                      var state_17948__$1 = function() {
                                        var statearr_17965 = state_17948;
                                        statearr_17965[11] = inst_17932;
                                        return statearr_17965;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17948__$1, 12, dchan);
                                    } else {
                                      if (state_val_17949 === 14) {
                                        var inst_17934 = state_17948[8];
                                        var inst_17939 = cljs.core.apply.call(null, f, inst_17934);
                                        var state_17948__$1 = state_17948;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17948__$1, 16, out, inst_17939);
                                      } else {
                                        if (state_val_17949 === 16) {
                                          var inst_17941 = state_17948[2];
                                          var state_17948__$1 = function() {
                                            var statearr_17966 = state_17948;
                                            statearr_17966[12] = inst_17941;
                                            return statearr_17966;
                                          }();
                                          var statearr_17967_17991 = state_17948__$1;
                                          statearr_17967_17991[2] = null;
                                          statearr_17967_17991[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17949 === 10) {
                                            var inst_17916 = state_17948[2];
                                            var inst_17917 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_17948__$1 = function() {
                                              var statearr_17968 = state_17948;
                                              statearr_17968[13] = inst_17916;
                                              return statearr_17968;
                                            }();
                                            var statearr_17969_17992 = state_17948__$1;
                                            statearr_17969_17992[2] = inst_17917;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17948__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17949 === 8) {
                                              var inst_17930 = state_17948[2];
                                              var state_17948__$1 = state_17948;
                                              var statearr_17970_17993 = state_17948__$1;
                                              statearr_17970_17993[2] = inst_17930;
                                              statearr_17970_17993[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___17978, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__5693__auto__, c__5708__auto___17978, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_17974 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_17974[0] = state_machine__5694__auto__;
                statearr_17974[1] = 1;
                return statearr_17974;
              };
              var state_machine__5694__auto____1 = function(state_17948) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_17948);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e17975) {
                      if (e17975 instanceof Object) {
                        var ex__5697__auto__ = e17975;
                        var statearr_17976_17994 = state_17948;
                        statearr_17976_17994[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17948);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17975;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17995 = state_17948;
                    state_17948 = G__17995;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_17948) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_17948);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___17978, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__5710__auto__ = function() {
          var statearr_17977 = f__5709__auto__.call(null);
          statearr_17977[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___17978;
          return statearr_17977;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___17978, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___18103 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___18103, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___18103, out) {
            return function(state_18079) {
              var state_val_18080 = state_18079[1];
              if (state_val_18080 === 7) {
                var inst_18058 = state_18079[7];
                var inst_18059 = state_18079[8];
                var inst_18058__$1 = state_18079[2];
                var inst_18059__$1 = cljs.core.nth.call(null, inst_18058__$1, 0, null);
                var inst_18060 = cljs.core.nth.call(null, inst_18058__$1, 1, null);
                var inst_18061 = inst_18059__$1 == null;
                var state_18079__$1 = function() {
                  var statearr_18081 = state_18079;
                  statearr_18081[7] = inst_18058__$1;
                  statearr_18081[8] = inst_18059__$1;
                  statearr_18081[9] = inst_18060;
                  return statearr_18081;
                }();
                if (cljs.core.truth_(inst_18061)) {
                  var statearr_18082_18104 = state_18079__$1;
                  statearr_18082_18104[1] = 8;
                } else {
                  var statearr_18083_18105 = state_18079__$1;
                  statearr_18083_18105[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18080 === 1) {
                  var inst_18050 = cljs.core.vec.call(null, chs);
                  var inst_18051 = inst_18050;
                  var state_18079__$1 = function() {
                    var statearr_18084 = state_18079;
                    statearr_18084[10] = inst_18051;
                    return statearr_18084;
                  }();
                  var statearr_18085_18106 = state_18079__$1;
                  statearr_18085_18106[2] = null;
                  statearr_18085_18106[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18080 === 4) {
                    var inst_18051 = state_18079[10];
                    var state_18079__$1 = state_18079;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_18079__$1, 7, inst_18051);
                  } else {
                    if (state_val_18080 === 6) {
                      var inst_18075 = state_18079[2];
                      var state_18079__$1 = state_18079;
                      var statearr_18086_18107 = state_18079__$1;
                      statearr_18086_18107[2] = inst_18075;
                      statearr_18086_18107[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18080 === 3) {
                        var inst_18077 = state_18079[2];
                        var state_18079__$1 = state_18079;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18079__$1, inst_18077);
                      } else {
                        if (state_val_18080 === 2) {
                          var inst_18051 = state_18079[10];
                          var inst_18053 = cljs.core.count.call(null, inst_18051);
                          var inst_18054 = inst_18053 > 0;
                          var state_18079__$1 = state_18079;
                          if (cljs.core.truth_(inst_18054)) {
                            var statearr_18088_18108 = state_18079__$1;
                            statearr_18088_18108[1] = 4;
                          } else {
                            var statearr_18089_18109 = state_18079__$1;
                            statearr_18089_18109[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18080 === 11) {
                            var inst_18051 = state_18079[10];
                            var inst_18068 = state_18079[2];
                            var tmp18087 = inst_18051;
                            var inst_18051__$1 = tmp18087;
                            var state_18079__$1 = function() {
                              var statearr_18090 = state_18079;
                              statearr_18090[10] = inst_18051__$1;
                              statearr_18090[11] = inst_18068;
                              return statearr_18090;
                            }();
                            var statearr_18091_18110 = state_18079__$1;
                            statearr_18091_18110[2] = null;
                            statearr_18091_18110[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18080 === 9) {
                              var inst_18059 = state_18079[8];
                              var state_18079__$1 = state_18079;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18079__$1, 11, out, inst_18059);
                            } else {
                              if (state_val_18080 === 5) {
                                var inst_18073 = cljs.core.async.close_BANG_.call(null, out);
                                var state_18079__$1 = state_18079;
                                var statearr_18092_18111 = state_18079__$1;
                                statearr_18092_18111[2] = inst_18073;
                                statearr_18092_18111[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18080 === 10) {
                                  var inst_18071 = state_18079[2];
                                  var state_18079__$1 = state_18079;
                                  var statearr_18093_18112 = state_18079__$1;
                                  statearr_18093_18112[2] = inst_18071;
                                  statearr_18093_18112[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18080 === 8) {
                                    var inst_18051 = state_18079[10];
                                    var inst_18058 = state_18079[7];
                                    var inst_18059 = state_18079[8];
                                    var inst_18060 = state_18079[9];
                                    var inst_18063 = function() {
                                      var c = inst_18060;
                                      var v = inst_18059;
                                      var vec__18056 = inst_18058;
                                      var cs = inst_18051;
                                      return function(c, v, vec__18056, cs, inst_18051, inst_18058, inst_18059, inst_18060, state_val_18080, c__5708__auto___18103, out) {
                                        return function(p1__17996_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__17996_SHARP_);
                                        };
                                      }(c, v, vec__18056, cs, inst_18051, inst_18058, inst_18059, inst_18060, state_val_18080, c__5708__auto___18103, out);
                                    }();
                                    var inst_18064 = cljs.core.filterv.call(null, inst_18063, inst_18051);
                                    var inst_18051__$1 = inst_18064;
                                    var state_18079__$1 = function() {
                                      var statearr_18094 = state_18079;
                                      statearr_18094[10] = inst_18051__$1;
                                      return statearr_18094;
                                    }();
                                    var statearr_18095_18113 = state_18079__$1;
                                    statearr_18095_18113[2] = null;
                                    statearr_18095_18113[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___18103, out);
          return function(switch__5693__auto__, c__5708__auto___18103, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_18099 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18099[0] = state_machine__5694__auto__;
                statearr_18099[1] = 1;
                return statearr_18099;
              };
              var state_machine__5694__auto____1 = function(state_18079) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_18079);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e18100) {
                      if (e18100 instanceof Object) {
                        var ex__5697__auto__ = e18100;
                        var statearr_18101_18114 = state_18079;
                        statearr_18101_18114[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18079);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18100;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18115 = state_18079;
                    state_18079 = G__18115;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_18079) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_18079);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___18103, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_18102 = f__5709__auto__.call(null);
          statearr_18102[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___18103;
          return statearr_18102;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___18103, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___18208 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___18208, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___18208, out) {
            return function(state_18185) {
              var state_val_18186 = state_18185[1];
              if (state_val_18186 === 7) {
                var inst_18167 = state_18185[7];
                var inst_18167__$1 = state_18185[2];
                var inst_18168 = inst_18167__$1 == null;
                var inst_18169 = cljs.core.not.call(null, inst_18168);
                var state_18185__$1 = function() {
                  var statearr_18187 = state_18185;
                  statearr_18187[7] = inst_18167__$1;
                  return statearr_18187;
                }();
                if (inst_18169) {
                  var statearr_18188_18209 = state_18185__$1;
                  statearr_18188_18209[1] = 8;
                } else {
                  var statearr_18189_18210 = state_18185__$1;
                  statearr_18189_18210[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18186 === 1) {
                  var inst_18162 = 0;
                  var state_18185__$1 = function() {
                    var statearr_18190 = state_18185;
                    statearr_18190[8] = inst_18162;
                    return statearr_18190;
                  }();
                  var statearr_18191_18211 = state_18185__$1;
                  statearr_18191_18211[2] = null;
                  statearr_18191_18211[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18186 === 4) {
                    var state_18185__$1 = state_18185;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18185__$1, 7, ch);
                  } else {
                    if (state_val_18186 === 6) {
                      var inst_18180 = state_18185[2];
                      var state_18185__$1 = state_18185;
                      var statearr_18192_18212 = state_18185__$1;
                      statearr_18192_18212[2] = inst_18180;
                      statearr_18192_18212[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18186 === 3) {
                        var inst_18182 = state_18185[2];
                        var inst_18183 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18185__$1 = function() {
                          var statearr_18193 = state_18185;
                          statearr_18193[9] = inst_18182;
                          return statearr_18193;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18185__$1, inst_18183);
                      } else {
                        if (state_val_18186 === 2) {
                          var inst_18162 = state_18185[8];
                          var inst_18164 = inst_18162 < n;
                          var state_18185__$1 = state_18185;
                          if (cljs.core.truth_(inst_18164)) {
                            var statearr_18194_18213 = state_18185__$1;
                            statearr_18194_18213[1] = 4;
                          } else {
                            var statearr_18195_18214 = state_18185__$1;
                            statearr_18195_18214[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18186 === 11) {
                            var inst_18162 = state_18185[8];
                            var inst_18172 = state_18185[2];
                            var inst_18173 = inst_18162 + 1;
                            var inst_18162__$1 = inst_18173;
                            var state_18185__$1 = function() {
                              var statearr_18196 = state_18185;
                              statearr_18196[8] = inst_18162__$1;
                              statearr_18196[10] = inst_18172;
                              return statearr_18196;
                            }();
                            var statearr_18197_18215 = state_18185__$1;
                            statearr_18197_18215[2] = null;
                            statearr_18197_18215[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18186 === 9) {
                              var state_18185__$1 = state_18185;
                              var statearr_18198_18216 = state_18185__$1;
                              statearr_18198_18216[2] = null;
                              statearr_18198_18216[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18186 === 5) {
                                var state_18185__$1 = state_18185;
                                var statearr_18199_18217 = state_18185__$1;
                                statearr_18199_18217[2] = null;
                                statearr_18199_18217[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18186 === 10) {
                                  var inst_18177 = state_18185[2];
                                  var state_18185__$1 = state_18185;
                                  var statearr_18200_18218 = state_18185__$1;
                                  statearr_18200_18218[2] = inst_18177;
                                  statearr_18200_18218[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18186 === 8) {
                                    var inst_18167 = state_18185[7];
                                    var state_18185__$1 = state_18185;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18185__$1, 11, out, inst_18167);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___18208, out);
          return function(switch__5693__auto__, c__5708__auto___18208, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_18204 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_18204[0] = state_machine__5694__auto__;
                statearr_18204[1] = 1;
                return statearr_18204;
              };
              var state_machine__5694__auto____1 = function(state_18185) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_18185);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e18205) {
                      if (e18205 instanceof Object) {
                        var ex__5697__auto__ = e18205;
                        var statearr_18206_18219 = state_18185;
                        statearr_18206_18219[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18185);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18205;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18220 = state_18185;
                    state_18185 = G__18220;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_18185) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_18185);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___18208, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_18207 = f__5709__auto__.call(null);
          statearr_18207[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___18208;
          return statearr_18207;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___18208, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___18317 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___18317, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___18317, out) {
            return function(state_18292) {
              var state_val_18293 = state_18292[1];
              if (state_val_18293 === 7) {
                var inst_18287 = state_18292[2];
                var state_18292__$1 = state_18292;
                var statearr_18294_18318 = state_18292__$1;
                statearr_18294_18318[2] = inst_18287;
                statearr_18294_18318[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18293 === 1) {
                  var inst_18269 = null;
                  var state_18292__$1 = function() {
                    var statearr_18295 = state_18292;
                    statearr_18295[7] = inst_18269;
                    return statearr_18295;
                  }();
                  var statearr_18296_18319 = state_18292__$1;
                  statearr_18296_18319[2] = null;
                  statearr_18296_18319[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18293 === 4) {
                    var inst_18272 = state_18292[8];
                    var inst_18272__$1 = state_18292[2];
                    var inst_18273 = inst_18272__$1 == null;
                    var inst_18274 = cljs.core.not.call(null, inst_18273);
                    var state_18292__$1 = function() {
                      var statearr_18297 = state_18292;
                      statearr_18297[8] = inst_18272__$1;
                      return statearr_18297;
                    }();
                    if (inst_18274) {
                      var statearr_18298_18320 = state_18292__$1;
                      statearr_18298_18320[1] = 5;
                    } else {
                      var statearr_18299_18321 = state_18292__$1;
                      statearr_18299_18321[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18293 === 6) {
                      var state_18292__$1 = state_18292;
                      var statearr_18300_18322 = state_18292__$1;
                      statearr_18300_18322[2] = null;
                      statearr_18300_18322[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18293 === 3) {
                        var inst_18289 = state_18292[2];
                        var inst_18290 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18292__$1 = function() {
                          var statearr_18301 = state_18292;
                          statearr_18301[9] = inst_18289;
                          return statearr_18301;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18292__$1, inst_18290);
                      } else {
                        if (state_val_18293 === 2) {
                          var state_18292__$1 = state_18292;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18292__$1, 4, ch);
                        } else {
                          if (state_val_18293 === 11) {
                            var inst_18272 = state_18292[8];
                            var inst_18281 = state_18292[2];
                            var inst_18269 = inst_18272;
                            var state_18292__$1 = function() {
                              var statearr_18302 = state_18292;
                              statearr_18302[10] = inst_18281;
                              statearr_18302[7] = inst_18269;
                              return statearr_18302;
                            }();
                            var statearr_18303_18323 = state_18292__$1;
                            statearr_18303_18323[2] = null;
                            statearr_18303_18323[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18293 === 9) {
                              var inst_18272 = state_18292[8];
                              var state_18292__$1 = state_18292;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18292__$1, 11, out, inst_18272);
                            } else {
                              if (state_val_18293 === 5) {
                                var inst_18272 = state_18292[8];
                                var inst_18269 = state_18292[7];
                                var inst_18276 = cljs.core._EQ_.call(null, inst_18272, inst_18269);
                                var state_18292__$1 = state_18292;
                                if (inst_18276) {
                                  var statearr_18305_18324 = state_18292__$1;
                                  statearr_18305_18324[1] = 8;
                                } else {
                                  var statearr_18306_18325 = state_18292__$1;
                                  statearr_18306_18325[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18293 === 10) {
                                  var inst_18284 = state_18292[2];
                                  var state_18292__$1 = state_18292;
                                  var statearr_18307_18326 = state_18292__$1;
                                  statearr_18307_18326[2] = inst_18284;
                                  statearr_18307_18326[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18293 === 8) {
                                    var inst_18269 = state_18292[7];
                                    var tmp18304 = inst_18269;
                                    var inst_18269__$1 = tmp18304;
                                    var state_18292__$1 = function() {
                                      var statearr_18308 = state_18292;
                                      statearr_18308[7] = inst_18269__$1;
                                      return statearr_18308;
                                    }();
                                    var statearr_18309_18327 = state_18292__$1;
                                    statearr_18309_18327[2] = null;
                                    statearr_18309_18327[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___18317, out);
          return function(switch__5693__auto__, c__5708__auto___18317, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_18313 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_18313[0] = state_machine__5694__auto__;
                statearr_18313[1] = 1;
                return statearr_18313;
              };
              var state_machine__5694__auto____1 = function(state_18292) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_18292);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e18314) {
                      if (e18314 instanceof Object) {
                        var ex__5697__auto__ = e18314;
                        var statearr_18315_18328 = state_18292;
                        statearr_18315_18328[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18292);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18314;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18329 = state_18292;
                    state_18292 = G__18329;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_18292) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_18292);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___18317, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_18316 = f__5709__auto__.call(null);
          statearr_18316[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___18317;
          return statearr_18316;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___18317, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___18464 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___18464, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___18464, out) {
            return function(state_18434) {
              var state_val_18435 = state_18434[1];
              if (state_val_18435 === 7) {
                var inst_18430 = state_18434[2];
                var state_18434__$1 = state_18434;
                var statearr_18436_18465 = state_18434__$1;
                statearr_18436_18465[2] = inst_18430;
                statearr_18436_18465[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18435 === 1) {
                  var inst_18397 = new Array(n);
                  var inst_18398 = inst_18397;
                  var inst_18399 = 0;
                  var state_18434__$1 = function() {
                    var statearr_18437 = state_18434;
                    statearr_18437[7] = inst_18398;
                    statearr_18437[8] = inst_18399;
                    return statearr_18437;
                  }();
                  var statearr_18438_18466 = state_18434__$1;
                  statearr_18438_18466[2] = null;
                  statearr_18438_18466[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18435 === 4) {
                    var inst_18402 = state_18434[9];
                    var inst_18402__$1 = state_18434[2];
                    var inst_18403 = inst_18402__$1 == null;
                    var inst_18404 = cljs.core.not.call(null, inst_18403);
                    var state_18434__$1 = function() {
                      var statearr_18439 = state_18434;
                      statearr_18439[9] = inst_18402__$1;
                      return statearr_18439;
                    }();
                    if (inst_18404) {
                      var statearr_18440_18467 = state_18434__$1;
                      statearr_18440_18467[1] = 5;
                    } else {
                      var statearr_18441_18468 = state_18434__$1;
                      statearr_18441_18468[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18435 === 15) {
                      var inst_18424 = state_18434[2];
                      var state_18434__$1 = state_18434;
                      var statearr_18442_18469 = state_18434__$1;
                      statearr_18442_18469[2] = inst_18424;
                      statearr_18442_18469[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18435 === 13) {
                        var state_18434__$1 = state_18434;
                        var statearr_18443_18470 = state_18434__$1;
                        statearr_18443_18470[2] = null;
                        statearr_18443_18470[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18435 === 6) {
                          var inst_18399 = state_18434[8];
                          var inst_18420 = inst_18399 > 0;
                          var state_18434__$1 = state_18434;
                          if (cljs.core.truth_(inst_18420)) {
                            var statearr_18444_18471 = state_18434__$1;
                            statearr_18444_18471[1] = 12;
                          } else {
                            var statearr_18445_18472 = state_18434__$1;
                            statearr_18445_18472[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18435 === 3) {
                            var inst_18432 = state_18434[2];
                            var state_18434__$1 = state_18434;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18434__$1, inst_18432);
                          } else {
                            if (state_val_18435 === 12) {
                              var inst_18398 = state_18434[7];
                              var inst_18422 = cljs.core.vec.call(null, inst_18398);
                              var state_18434__$1 = state_18434;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18434__$1, 15, out, inst_18422);
                            } else {
                              if (state_val_18435 === 2) {
                                var state_18434__$1 = state_18434;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18434__$1, 4, ch);
                              } else {
                                if (state_val_18435 === 11) {
                                  var inst_18414 = state_18434[2];
                                  var inst_18415 = new Array(n);
                                  var inst_18398 = inst_18415;
                                  var inst_18399 = 0;
                                  var state_18434__$1 = function() {
                                    var statearr_18446 = state_18434;
                                    statearr_18446[7] = inst_18398;
                                    statearr_18446[10] = inst_18414;
                                    statearr_18446[8] = inst_18399;
                                    return statearr_18446;
                                  }();
                                  var statearr_18447_18473 = state_18434__$1;
                                  statearr_18447_18473[2] = null;
                                  statearr_18447_18473[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18435 === 9) {
                                    var inst_18398 = state_18434[7];
                                    var inst_18412 = cljs.core.vec.call(null, inst_18398);
                                    var state_18434__$1 = state_18434;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18434__$1, 11, out, inst_18412);
                                  } else {
                                    if (state_val_18435 === 5) {
                                      var inst_18402 = state_18434[9];
                                      var inst_18398 = state_18434[7];
                                      var inst_18399 = state_18434[8];
                                      var inst_18407 = state_18434[11];
                                      var inst_18406 = inst_18398[inst_18399] = inst_18402;
                                      var inst_18407__$1 = inst_18399 + 1;
                                      var inst_18408 = inst_18407__$1 < n;
                                      var state_18434__$1 = function() {
                                        var statearr_18448 = state_18434;
                                        statearr_18448[12] = inst_18406;
                                        statearr_18448[11] = inst_18407__$1;
                                        return statearr_18448;
                                      }();
                                      if (cljs.core.truth_(inst_18408)) {
                                        var statearr_18449_18474 = state_18434__$1;
                                        statearr_18449_18474[1] = 8;
                                      } else {
                                        var statearr_18450_18475 = state_18434__$1;
                                        statearr_18450_18475[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18435 === 14) {
                                        var inst_18427 = state_18434[2];
                                        var inst_18428 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_18434__$1 = function() {
                                          var statearr_18452 = state_18434;
                                          statearr_18452[13] = inst_18427;
                                          return statearr_18452;
                                        }();
                                        var statearr_18453_18476 = state_18434__$1;
                                        statearr_18453_18476[2] = inst_18428;
                                        statearr_18453_18476[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18435 === 10) {
                                          var inst_18418 = state_18434[2];
                                          var state_18434__$1 = state_18434;
                                          var statearr_18454_18477 = state_18434__$1;
                                          statearr_18454_18477[2] = inst_18418;
                                          statearr_18454_18477[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18435 === 8) {
                                            var inst_18398 = state_18434[7];
                                            var inst_18407 = state_18434[11];
                                            var tmp18451 = inst_18398;
                                            var inst_18398__$1 = tmp18451;
                                            var inst_18399 = inst_18407;
                                            var state_18434__$1 = function() {
                                              var statearr_18455 = state_18434;
                                              statearr_18455[7] = inst_18398__$1;
                                              statearr_18455[8] = inst_18399;
                                              return statearr_18455;
                                            }();
                                            var statearr_18456_18478 = state_18434__$1;
                                            statearr_18456_18478[2] = null;
                                            statearr_18456_18478[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___18464, out);
          return function(switch__5693__auto__, c__5708__auto___18464, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_18460 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18460[0] = state_machine__5694__auto__;
                statearr_18460[1] = 1;
                return statearr_18460;
              };
              var state_machine__5694__auto____1 = function(state_18434) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_18434);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e18461) {
                      if (e18461 instanceof Object) {
                        var ex__5697__auto__ = e18461;
                        var statearr_18462_18479 = state_18434;
                        statearr_18462_18479[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18434);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18461;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18480 = state_18434;
                    state_18434 = G__18480;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_18434) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_18434);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___18464, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_18463 = f__5709__auto__.call(null);
          statearr_18463[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___18464;
          return statearr_18463;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___18464, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5708__auto___18623 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___18623, out) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___18623, out) {
            return function(state_18593) {
              var state_val_18594 = state_18593[1];
              if (state_val_18594 === 7) {
                var inst_18589 = state_18593[2];
                var state_18593__$1 = state_18593;
                var statearr_18595_18624 = state_18593__$1;
                statearr_18595_18624[2] = inst_18589;
                statearr_18595_18624[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18594 === 1) {
                  var inst_18552 = [];
                  var inst_18553 = inst_18552;
                  var inst_18554 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_18593__$1 = function() {
                    var statearr_18596 = state_18593;
                    statearr_18596[7] = inst_18553;
                    statearr_18596[8] = inst_18554;
                    return statearr_18596;
                  }();
                  var statearr_18597_18625 = state_18593__$1;
                  statearr_18597_18625[2] = null;
                  statearr_18597_18625[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18594 === 4) {
                    var inst_18557 = state_18593[9];
                    var inst_18557__$1 = state_18593[2];
                    var inst_18558 = inst_18557__$1 == null;
                    var inst_18559 = cljs.core.not.call(null, inst_18558);
                    var state_18593__$1 = function() {
                      var statearr_18598 = state_18593;
                      statearr_18598[9] = inst_18557__$1;
                      return statearr_18598;
                    }();
                    if (inst_18559) {
                      var statearr_18599_18626 = state_18593__$1;
                      statearr_18599_18626[1] = 5;
                    } else {
                      var statearr_18600_18627 = state_18593__$1;
                      statearr_18600_18627[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18594 === 15) {
                      var inst_18583 = state_18593[2];
                      var state_18593__$1 = state_18593;
                      var statearr_18601_18628 = state_18593__$1;
                      statearr_18601_18628[2] = inst_18583;
                      statearr_18601_18628[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18594 === 13) {
                        var state_18593__$1 = state_18593;
                        var statearr_18602_18629 = state_18593__$1;
                        statearr_18602_18629[2] = null;
                        statearr_18602_18629[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18594 === 6) {
                          var inst_18553 = state_18593[7];
                          var inst_18578 = inst_18553.length;
                          var inst_18579 = inst_18578 > 0;
                          var state_18593__$1 = state_18593;
                          if (cljs.core.truth_(inst_18579)) {
                            var statearr_18603_18630 = state_18593__$1;
                            statearr_18603_18630[1] = 12;
                          } else {
                            var statearr_18604_18631 = state_18593__$1;
                            statearr_18604_18631[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18594 === 3) {
                            var inst_18591 = state_18593[2];
                            var state_18593__$1 = state_18593;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18593__$1, inst_18591);
                          } else {
                            if (state_val_18594 === 12) {
                              var inst_18553 = state_18593[7];
                              var inst_18581 = cljs.core.vec.call(null, inst_18553);
                              var state_18593__$1 = state_18593;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18593__$1, 15, out, inst_18581);
                            } else {
                              if (state_val_18594 === 2) {
                                var state_18593__$1 = state_18593;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18593__$1, 4, ch);
                              } else {
                                if (state_val_18594 === 11) {
                                  var inst_18557 = state_18593[9];
                                  var inst_18561 = state_18593[10];
                                  var inst_18571 = state_18593[2];
                                  var inst_18572 = [];
                                  var inst_18573 = inst_18572.push(inst_18557);
                                  var inst_18553 = inst_18572;
                                  var inst_18554 = inst_18561;
                                  var state_18593__$1 = function() {
                                    var statearr_18605 = state_18593;
                                    statearr_18605[11] = inst_18571;
                                    statearr_18605[7] = inst_18553;
                                    statearr_18605[12] = inst_18573;
                                    statearr_18605[8] = inst_18554;
                                    return statearr_18605;
                                  }();
                                  var statearr_18606_18632 = state_18593__$1;
                                  statearr_18606_18632[2] = null;
                                  statearr_18606_18632[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18594 === 9) {
                                    var inst_18553 = state_18593[7];
                                    var inst_18569 = cljs.core.vec.call(null, inst_18553);
                                    var state_18593__$1 = state_18593;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18593__$1, 11, out, inst_18569);
                                  } else {
                                    if (state_val_18594 === 5) {
                                      var inst_18557 = state_18593[9];
                                      var inst_18554 = state_18593[8];
                                      var inst_18561 = state_18593[10];
                                      var inst_18561__$1 = f.call(null, inst_18557);
                                      var inst_18562 = cljs.core._EQ_.call(null, inst_18561__$1, inst_18554);
                                      var inst_18563 = cljs.core.keyword_identical_QMARK_.call(null, inst_18554, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_18564 = inst_18562 || inst_18563;
                                      var state_18593__$1 = function() {
                                        var statearr_18607 = state_18593;
                                        statearr_18607[10] = inst_18561__$1;
                                        return statearr_18607;
                                      }();
                                      if (cljs.core.truth_(inst_18564)) {
                                        var statearr_18608_18633 = state_18593__$1;
                                        statearr_18608_18633[1] = 8;
                                      } else {
                                        var statearr_18609_18634 = state_18593__$1;
                                        statearr_18609_18634[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18594 === 14) {
                                        var inst_18586 = state_18593[2];
                                        var inst_18587 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_18593__$1 = function() {
                                          var statearr_18611 = state_18593;
                                          statearr_18611[13] = inst_18586;
                                          return statearr_18611;
                                        }();
                                        var statearr_18612_18635 = state_18593__$1;
                                        statearr_18612_18635[2] = inst_18587;
                                        statearr_18612_18635[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18594 === 10) {
                                          var inst_18576 = state_18593[2];
                                          var state_18593__$1 = state_18593;
                                          var statearr_18613_18636 = state_18593__$1;
                                          statearr_18613_18636[2] = inst_18576;
                                          statearr_18613_18636[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18594 === 8) {
                                            var inst_18557 = state_18593[9];
                                            var inst_18553 = state_18593[7];
                                            var inst_18561 = state_18593[10];
                                            var inst_18566 = inst_18553.push(inst_18557);
                                            var tmp18610 = inst_18553;
                                            var inst_18553__$1 = tmp18610;
                                            var inst_18554 = inst_18561;
                                            var state_18593__$1 = function() {
                                              var statearr_18614 = state_18593;
                                              statearr_18614[14] = inst_18566;
                                              statearr_18614[7] = inst_18553__$1;
                                              statearr_18614[8] = inst_18554;
                                              return statearr_18614;
                                            }();
                                            var statearr_18615_18637 = state_18593__$1;
                                            statearr_18615_18637[2] = null;
                                            statearr_18615_18637[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___18623, out);
          return function(switch__5693__auto__, c__5708__auto___18623, out) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_18619 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18619[0] = state_machine__5694__auto__;
                statearr_18619[1] = 1;
                return statearr_18619;
              };
              var state_machine__5694__auto____1 = function(state_18593) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_18593);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e18620) {
                      if (e18620 instanceof Object) {
                        var ex__5697__auto__ = e18620;
                        var statearr_18621_18638 = state_18593;
                        statearr_18621_18638[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18593);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18620;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18639 = state_18593;
                    state_18593 = G__18639;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_18593) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_18593);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___18623, out);
        }();
        var state__5710__auto__ = function() {
          var statearr_18622 = f__5709__auto__.call(null);
          statearr_18622[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___18623;
          return statearr_18622;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___18623, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("clustermap.api");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIo");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.api.AJAX = function() {
  var AJAX__delegate = function(url, p__8557) {
    var map__8561 = p__8557;
    var map__8561__$1 = cljs.core.seq_QMARK_.call(null, map__8561) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8561) : map__8561;
    var opts = map__8561__$1;
    var content = cljs.core.get.call(null, map__8561__$1, new cljs.core.Keyword(null, "content", "content", 15833224));
    var method = cljs.core.get.call(null, map__8561__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
    var raw = cljs.core.get.call(null, map__8561__$1, new cljs.core.Keyword(null, "raw", "raw", 1604651272));
    var comm = cljs.core.async.chan.call(null, 1);
    goog.net.XhrIo.send(url, function(comm, map__8561, map__8561__$1, opts, content, method, raw) {
      return function(event) {
        cljs.core.async.put_BANG_.call(null, comm, function(comm, map__8561, map__8561__$1, opts, content, method, raw) {
          return function(d) {
            if (cljs.core.truth_(raw)) {
              return d;
            } else {
              return cljs.core.js__GT_clj.call(null, d, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
            }
          };
        }(comm, map__8561, map__8561__$1, opts, content, method, raw).call(null, JSON.parse(event.target.getResponseText())["data"]));
        return cljs.core.async.close_BANG_.call(null, comm);
      };
    }(comm, map__8561, map__8561__$1, opts, content, method, raw), function() {
      var or__3558__auto__ = function() {
        var G__8563 = method;
        var G__8563__$1 = G__8563 == null ? null : cljs.core.name.call(null, G__8563);
        var G__8563__$2 = G__8563__$1 == null ? null : clojure.string.upper_case.call(null, G__8563__$1);
        return G__8563__$2;
      }();
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return "GET";
      }
    }(), cljs.core.truth_(content) ? JSON.stringify(cljs.core.clj__GT_js.call(null, content)) : null, cljs.core.truth_(content) ? cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["Content-Type", "application/json"], null)) : null);
    return comm;
  };
  var AJAX = function(url, var_args) {
    var p__8557 = null;
    if (arguments.length > 1) {
      p__8557 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return AJAX__delegate.call(this, url, p__8557);
  };
  AJAX.cljs$lang$maxFixedArity = 1;
  AJAX.cljs$lang$applyTo = function(arglist__8564) {
    var url = cljs.core.first(arglist__8564);
    var p__8557 = cljs.core.rest(arglist__8564);
    return AJAX__delegate(url, p__8557);
  };
  AJAX.cljs$core$IFn$_invoke$arity$variadic = AJAX__delegate;
  return AJAX;
}();
clustermap.api.GET = function() {
  var GET__delegate = function(url, p__8565) {
    var map__8567 = p__8565;
    var map__8567__$1 = cljs.core.seq_QMARK_.call(null, map__8567) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8567) : map__8567;
    var opts = map__8567__$1;
    return cljs.core.apply.call(null, clustermap.api.AJAX, url, cljs.core.apply.call(null, cljs.core.concat, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "method", "method", 55703592), "GET"], null))));
  };
  var GET = function(url, var_args) {
    var p__8565 = null;
    if (arguments.length > 1) {
      p__8565 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return GET__delegate.call(this, url, p__8565);
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__8568) {
    var url = cljs.core.first(arglist__8568);
    var p__8565 = cljs.core.rest(arglist__8568);
    return GET__delegate(url, p__8565);
  };
  GET.cljs$core$IFn$_invoke$arity$variadic = GET__delegate;
  return GET;
}();
clustermap.api.POST = function() {
  var POST__delegate = function(url, content, p__8569) {
    var map__8571 = p__8569;
    var map__8571__$1 = cljs.core.seq_QMARK_.call(null, map__8571) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8571) : map__8571;
    var opts = map__8571__$1;
    return cljs.core.apply.call(null, clustermap.api.AJAX, url, cljs.core.apply.call(null, cljs.core.concat, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "content", "content", 15833224), content], null))));
  };
  var POST = function(url, content, var_args) {
    var p__8569 = null;
    if (arguments.length > 2) {
      p__8569 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return POST__delegate.call(this, url, content, p__8569);
  };
  POST.cljs$lang$maxFixedArity = 2;
  POST.cljs$lang$applyTo = function(arglist__8572) {
    var url = cljs.core.first(arglist__8572);
    arglist__8572 = cljs.core.next(arglist__8572);
    var content = cljs.core.first(arglist__8572);
    var p__8569 = cljs.core.rest(arglist__8572);
    return POST__delegate(url, content, p__8569);
  };
  POST.cljs$core$IFn$_invoke$arity$variadic = POST__delegate;
  return POST;
}();
clustermap.api.PUT = function() {
  var PUT__delegate = function(url, content, p__8573) {
    var map__8575 = p__8573;
    var map__8575__$1 = cljs.core.seq_QMARK_.call(null, map__8575) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8575) : map__8575;
    var opts = map__8575__$1;
    return cljs.core.apply.call(null, clustermap.api.AJAX, url, cljs.core.apply.call(null, cljs.core.concat, cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "PUT", new cljs.core.Keyword(null, "content", "content", 15833224), content], null))));
  };
  var PUT = function(url, content, var_args) {
    var p__8573 = null;
    if (arguments.length > 2) {
      p__8573 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return PUT__delegate.call(this, url, content, p__8573);
  };
  PUT.cljs$lang$maxFixedArity = 2;
  PUT.cljs$lang$applyTo = function(arglist__8576) {
    var url = cljs.core.first(arglist__8576);
    arglist__8576 = cljs.core.next(arglist__8576);
    var content = cljs.core.first(arglist__8576);
    var p__8573 = cljs.core.rest(arglist__8576);
    return PUT__delegate(url, content, p__8573);
  };
  PUT.cljs$core$IFn$_invoke$arity$variadic = PUT__delegate;
  return PUT;
}();
clustermap.api.ordered_api_results = function ordered_api_results(ocomm, handler) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_8711) {
            var state_val_8712 = state_8711[1];
            if (state_val_8712 === 7) {
              var inst_8668 = state_8711[7];
              var inst_8667 = state_8711[2];
              var inst_8668__$1 = cljs.core.nth.call(null, inst_8667, 0, null);
              var inst_8669 = cljs.core.nth.call(null, inst_8667, 1, null);
              var inst_8670 = cljs.core.sequential_QMARK_.call(null, inst_8668__$1);
              var state_8711__$1 = function() {
                var statearr_8713 = state_8711;
                statearr_8713[8] = inst_8669;
                statearr_8713[7] = inst_8668__$1;
                return statearr_8713;
              }();
              if (inst_8670) {
                var statearr_8714_8749 = state_8711__$1;
                statearr_8714_8749[1] = 8;
              } else {
                var statearr_8715_8750 = state_8711__$1;
                statearr_8715_8750[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_8712 === 20) {
                var inst_8668 = state_8711[7];
                var state_8711__$1 = state_8711;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8711__$1, 23, inst_8668);
              } else {
                if (state_val_8712 === 1) {
                  var state_8711__$1 = state_8711;
                  var statearr_8716_8751 = state_8711__$1;
                  statearr_8716_8751[2] = null;
                  statearr_8716_8751[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_8712 === 4) {
                    var state_8711__$1 = state_8711;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8711__$1, 7, ocomm);
                  } else {
                    if (state_val_8712 === 15) {
                      var inst_8691 = state_8711[2];
                      var state_8711__$1 = state_8711;
                      var statearr_8717_8752 = state_8711__$1;
                      statearr_8717_8752[2] = inst_8691;
                      statearr_8717_8752[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_8712 === 21) {
                        var state_8711__$1 = state_8711;
                        var statearr_8718_8753 = state_8711__$1;
                        statearr_8718_8753[2] = null;
                        statearr_8718_8753[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_8712 === 13) {
                          var inst_8674 = state_8711[9];
                          var state_8711__$1 = state_8711;
                          var statearr_8719_8754 = state_8711__$1;
                          statearr_8719_8754[2] = inst_8674;
                          statearr_8719_8754[1] = 15;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_8712 === 22) {
                            var inst_8700 = state_8711[2];
                            var state_8711__$1 = state_8711;
                            var statearr_8720_8755 = state_8711__$1;
                            statearr_8720_8755[2] = inst_8700;
                            statearr_8720_8755[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_8712 === 6) {
                              var inst_8707 = state_8711[2];
                              var state_8711__$1 = state_8711;
                              var statearr_8721_8756 = state_8711__$1;
                              statearr_8721_8756[2] = inst_8707;
                              statearr_8721_8756[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_8712 === 17) {
                                var state_8711__$1 = state_8711;
                                var statearr_8722_8757 = state_8711__$1;
                                statearr_8722_8757[2] = null;
                                statearr_8722_8757[1] = 18;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_8712 === 3) {
                                  var inst_8709 = state_8711[2];
                                  var state_8711__$1 = state_8711;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8711__$1, inst_8709);
                                } else {
                                  if (state_val_8712 === 12) {
                                    var inst_8693 = state_8711[2];
                                    var state_8711__$1 = state_8711;
                                    var statearr_8723_8758 = state_8711__$1;
                                    statearr_8723_8758[2] = inst_8693;
                                    statearr_8723_8758[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_8712 === 2) {
                                      var state_8711__$1 = state_8711;
                                      var statearr_8724_8759 = state_8711__$1;
                                      statearr_8724_8759[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_8712 === 23) {
                                        var inst_8697 = state_8711[2];
                                        var state_8711__$1 = state_8711;
                                        var statearr_8726_8760 = state_8711__$1;
                                        statearr_8726_8760[2] = inst_8697;
                                        statearr_8726_8760[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_8712 === 19) {
                                          var inst_8684 = state_8711[2];
                                          var state_8711__$1 = state_8711;
                                          var statearr_8727_8761 = state_8711__$1;
                                          statearr_8727_8761[2] = inst_8684;
                                          statearr_8727_8761[1] = 18;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_8712 === 11) {
                                            var inst_8673 = state_8711[10];
                                            var inst_8676 = cljs.core.empty_QMARK_.call(null, inst_8673);
                                            var state_8711__$1 = state_8711;
                                            if (inst_8676) {
                                              var statearr_8728_8762 = state_8711__$1;
                                              statearr_8728_8762[1] = 13;
                                            } else {
                                              var statearr_8729_8763 = state_8711__$1;
                                              statearr_8729_8763[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_8712 === 9) {
                                              var inst_8668 = state_8711[7];
                                              var state_8711__$1 = state_8711;
                                              if (cljs.core.truth_(inst_8668)) {
                                                var statearr_8730_8764 = state_8711__$1;
                                                statearr_8730_8764[1] = 20;
                                              } else {
                                                var statearr_8731_8765 = state_8711__$1;
                                                statearr_8731_8765[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_8712 === 5) {
                                                var state_8711__$1 = state_8711;
                                                var statearr_8732_8766 = state_8711__$1;
                                                statearr_8732_8766[2] = null;
                                                statearr_8732_8766[1] = 6;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_8712 === 14) {
                                                  var inst_8673 = state_8711[10];
                                                  var inst_8679 = cljs.core.rest.call(null, inst_8673);
                                                  var inst_8680 = cljs.core.first.call(null, inst_8673);
                                                  var state_8711__$1 = function() {
                                                    var statearr_8733 = state_8711;
                                                    statearr_8733[11] = inst_8679;
                                                    return statearr_8733;
                                                  }();
                                                  if (cljs.core.truth_(inst_8680)) {
                                                    var statearr_8734_8767 = state_8711__$1;
                                                    statearr_8734_8767[1] = 16;
                                                  } else {
                                                    var statearr_8735_8768 = state_8711__$1;
                                                    statearr_8735_8768[1] = 17;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_8712 === 16) {
                                                    var inst_8673 = state_8711[10];
                                                    var inst_8682 = cljs.core.first.call(null, inst_8673);
                                                    var state_8711__$1 = state_8711;
                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8711__$1, 19, inst_8682);
                                                  } else {
                                                    if (state_val_8712 === 10) {
                                                      var inst_8669 = state_8711[8];
                                                      var inst_8702 = state_8711[2];
                                                      var inst_8703 = cljs.core.apply.call(null, handler, inst_8702, inst_8669);
                                                      var state_8711__$1 = function() {
                                                        var statearr_8736 = state_8711;
                                                        statearr_8736[12] = inst_8703;
                                                        return statearr_8736;
                                                      }();
                                                      var statearr_8737_8769 = state_8711__$1;
                                                      statearr_8737_8769[2] = null;
                                                      statearr_8737_8769[1] = 2;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_8712 === 18) {
                                                        var inst_8674 = state_8711[9];
                                                        var inst_8679 = state_8711[11];
                                                        var inst_8687 = state_8711[2];
                                                        var inst_8688 = cljs.core.conj.call(null, inst_8674, inst_8687);
                                                        var inst_8673 = inst_8679;
                                                        var inst_8674__$1 = inst_8688;
                                                        var state_8711__$1 = function() {
                                                          var statearr_8738 = state_8711;
                                                          statearr_8738[10] = inst_8673;
                                                          statearr_8738[9] = inst_8674__$1;
                                                          return statearr_8738;
                                                        }();
                                                        var statearr_8739_8770 = state_8711__$1;
                                                        statearr_8739_8770[2] = null;
                                                        statearr_8739_8770[1] = 11;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_8712 === 8) {
                                                          var inst_8668 = state_8711[7];
                                                          var inst_8672 = cljs.core.PersistentVector.EMPTY;
                                                          var inst_8673 = inst_8668;
                                                          var inst_8674 = inst_8672;
                                                          var state_8711__$1 = function() {
                                                            var statearr_8740 = state_8711;
                                                            statearr_8740[10] = inst_8673;
                                                            statearr_8740[9] = inst_8674;
                                                            return statearr_8740;
                                                          }();
                                                          var statearr_8741_8771 = state_8711__$1;
                                                          statearr_8741_8771[2] = null;
                                                          statearr_8741_8771[1] = 11;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_8745 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_8745[0] = state_machine__5694__auto__;
              statearr_8745[1] = 1;
              return statearr_8745;
            };
            var state_machine__5694__auto____1 = function(state_8711) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_8711);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e8746) {
                    if (e8746 instanceof Object) {
                      var ex__5697__auto__ = e8746;
                      var statearr_8747_8772 = state_8711;
                      statearr_8747_8772[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8711);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8746;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__8773 = state_8711;
                  state_8711 = G__8773;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_8711) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_8711);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_8748 = f__5709__auto__.call(null);
        statearr_8748[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_8748;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.api.ordered_api = function ordered_api(request_handler, result_handler) {
  var ocomm = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
  var _ = clustermap.api.ordered_api_results.call(null, ocomm, result_handler);
  return function(ocomm, _) {
    return function() {
      var G__8776__delegate = function(req_args) {
        var temp__4124__auto__ = cljs.core.apply.call(null, request_handler, req_args);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var r = temp__4124__auto__;
          var rseq = cljs.core.sequential_QMARK_.call(null, r) ? r : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
          var vec__8775 = rseq;
          var rcomm = cljs.core.nth.call(null, vec__8775, 0, null);
          var result_handler_args = cljs.core.nthnext.call(null, vec__8775, 1);
          return cljs.core.async.put_BANG_.call(null, ocomm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rcomm, result_handler_args], null));
        } else {
          return null;
        }
      };
      var G__8776 = function(var_args) {
        var req_args = null;
        if (arguments.length > 0) {
          req_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__8776__delegate.call(this, req_args);
      };
      G__8776.cljs$lang$maxFixedArity = 0;
      G__8776.cljs$lang$applyTo = function(arglist__8777) {
        var req_args = cljs.core.seq(arglist__8777);
        return G__8776__delegate(req_args);
      };
      G__8776.cljs$core$IFn$_invoke$arity$variadic = G__8776__delegate;
      return G__8776;
    }();
  }(ocomm, _);
};
clustermap.api.log_api = function() {
  var log_api__delegate = function(f, args) {
    var ch = cljs.core.apply.call(null, f, args);
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, ch) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, ch) {
            return function(state_8795) {
              var state_val_8796 = state_8795[1];
              if (state_val_8796 === 2) {
                var inst_8792 = state_8795[2];
                var inst_8793 = console.log(inst_8792);
                var state_8795__$1 = state_8795;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8795__$1, inst_8793);
              } else {
                if (state_val_8796 === 1) {
                  var state_8795__$1 = state_8795;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8795__$1, 2, ch);
                } else {
                  return null;
                }
              }
            };
          }(c__5708__auto__, ch);
          return function(switch__5693__auto__, c__5708__auto__, ch) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_8800 = [null, null, null, null, null, null, null];
                statearr_8800[0] = state_machine__5694__auto__;
                statearr_8800[1] = 1;
                return statearr_8800;
              };
              var state_machine__5694__auto____1 = function(state_8795) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_8795);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e8801) {
                      if (e8801 instanceof Object) {
                        var ex__5697__auto__ = e8801;
                        var statearr_8802_8804 = state_8795;
                        statearr_8802_8804[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8795);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e8801;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__8805 = state_8795;
                    state_8795 = G__8805;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_8795) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_8795);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, ch);
        }();
        var state__5710__auto__ = function() {
          var statearr_8803 = f__5709__auto__.call(null);
          statearr_8803[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_8803;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, ch));
    return c__5708__auto__;
  };
  var log_api = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return log_api__delegate.call(this, f, args);
  };
  log_api.cljs$lang$maxFixedArity = 1;
  log_api.cljs$lang$applyTo = function(arglist__8806) {
    var f = cljs.core.first(arglist__8806);
    var args = cljs.core.rest(arglist__8806);
    return log_api__delegate(f, args);
  };
  log_api.cljs$core$IFn$_invoke$arity$variadic = log_api__delegate;
  return log_api;
}();
clustermap.api.map_json_params = function map_json_params(m) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__8809) {
    var vec__8810 = p__8809;
    var k = cljs.core.nth.call(null, vec__8810, 0, null);
    var v = cljs.core.nth.call(null, vec__8810, 1, null);
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(JSON.stringify(cljs.core.clj__GT_js.call(null, v)));
  }, m));
};
clustermap.api.fetch = function fetch(comm) {
  var r = cljs.core.atom.call(null, null);
  var c__5708__auto___8837 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___8837, r) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___8837, r) {
          return function(state_8828) {
            var state_val_8829 = state_8828[1];
            if (state_val_8829 === 2) {
              var inst_8825 = state_8828[2];
              var inst_8826 = cljs.core.reset_BANG_.call(null, r, inst_8825);
              var state_8828__$1 = state_8828;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8828__$1, inst_8826);
            } else {
              if (state_val_8829 === 1) {
                var state_8828__$1 = state_8828;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8828__$1, 2, comm);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto___8837, r);
        return function(switch__5693__auto__, c__5708__auto___8837, r) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_8833 = [null, null, null, null, null, null, null];
              statearr_8833[0] = state_machine__5694__auto__;
              statearr_8833[1] = 1;
              return statearr_8833;
            };
            var state_machine__5694__auto____1 = function(state_8828) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_8828);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e8834) {
                    if (e8834 instanceof Object) {
                      var ex__5697__auto__ = e8834;
                      var statearr_8835_8838 = state_8828;
                      statearr_8835_8838[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8828);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8834;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__8839 = state_8828;
                  state_8828 = G__8839;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_8828) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_8828);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___8837, r);
      }();
      var state__5710__auto__ = function() {
        var statearr_8836 = f__5709__auto__.call(null);
        statearr_8836[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___8837;
        return statearr_8836;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___8837, r));
  return r;
};
clustermap.api.api_prefix = config.api.prefix;
clustermap.api.boundarylines = function() {
  var boundarylines__delegate = function(id, tolerance, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundarylines/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tolerance), opts);
  };
  var boundarylines = function(id, tolerance, var_args) {
    var opts = null;
    if (arguments.length > 2) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return boundarylines__delegate.call(this, id, tolerance, opts);
  };
  boundarylines.cljs$lang$maxFixedArity = 2;
  boundarylines.cljs$lang$applyTo = function(arglist__8840) {
    var id = cljs.core.first(arglist__8840);
    arglist__8840 = cljs.core.next(arglist__8840);
    var tolerance = cljs.core.first(arglist__8840);
    var opts = cljs.core.rest(arglist__8840);
    return boundarylines__delegate(id, tolerance, opts);
  };
  boundarylines.cljs$core$IFn$_invoke$arity$variadic = boundarylines__delegate;
  return boundarylines;
}();
clustermap.api.boundaryline_collection_index = function() {
  var boundaryline_collection_index__delegate = function(id, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundaryline-collection-index/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, id)), opts);
  };
  var boundaryline_collection_index = function(id, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return boundaryline_collection_index__delegate.call(this, id, opts);
  };
  boundaryline_collection_index.cljs$lang$maxFixedArity = 1;
  boundaryline_collection_index.cljs$lang$applyTo = function(arglist__8841) {
    var id = cljs.core.first(arglist__8841);
    var opts = cljs.core.rest(arglist__8841);
    return boundaryline_collection_index__delegate(id, opts);
  };
  boundaryline_collection_index.cljs$core$IFn$_invoke$arity$variadic = boundaryline_collection_index__delegate;
  return boundaryline_collection_index;
}();
clustermap.api.boundaryline_set = function() {
  var boundaryline_set__delegate = function(ids, tolerance, opts) {
    return cljs.core.apply.call(null, clustermap.api.POST, "/api/boundaryline-set", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ids", "ids", -998535796), ids, new cljs.core.Keyword(null, "tolerance", "tolerance", 406811818), tolerance], null), opts);
  };
  var boundaryline_set = function(ids, tolerance, var_args) {
    var opts = null;
    if (arguments.length > 2) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return boundaryline_set__delegate.call(this, ids, tolerance, opts);
  };
  boundaryline_set.cljs$lang$maxFixedArity = 2;
  boundaryline_set.cljs$lang$applyTo = function(arglist__8842) {
    var ids = cljs.core.first(arglist__8842);
    arglist__8842 = cljs.core.next(arglist__8842);
    var tolerance = cljs.core.first(arglist__8842);
    var opts = cljs.core.rest(arglist__8842);
    return boundaryline_set__delegate(ids, tolerance, opts);
  };
  boundaryline_set.cljs$core$IFn$_invoke$arity$variadic = boundaryline_set__delegate;
  return boundaryline_set;
}();
clustermap.api.boundaryline_collection_view = function() {
  var boundaryline_collection_view__delegate = function(collection_id, tolerance, bounds, p__8843) {
    var map__8845 = p__8843;
    var map__8845__$1 = cljs.core.seq_QMARK_.call(null, map__8845) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8845) : map__8845;
    var opts = map__8845__$1;
    var boundaryline_ids = cljs.core.get.call(null, map__8845__$1, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869));
    var opts__$1 = cljs.core.flatten.call(null, cljs.core.seq.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869))));
    return cljs.core.apply.call(null, clustermap.api.POST, "/api/boundaryline-collection-view/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, collection_id)) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tolerance), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), boundaryline_ids], null), opts__$1);
  };
  var boundaryline_collection_view = function(collection_id, tolerance, bounds, var_args) {
    var p__8843 = null;
    if (arguments.length > 3) {
      p__8843 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return boundaryline_collection_view__delegate.call(this, collection_id, tolerance, bounds, p__8843);
  };
  boundaryline_collection_view.cljs$lang$maxFixedArity = 3;
  boundaryline_collection_view.cljs$lang$applyTo = function(arglist__8846) {
    var collection_id = cljs.core.first(arglist__8846);
    arglist__8846 = cljs.core.next(arglist__8846);
    var tolerance = cljs.core.first(arglist__8846);
    arglist__8846 = cljs.core.next(arglist__8846);
    var bounds = cljs.core.first(arglist__8846);
    var p__8843 = cljs.core.rest(arglist__8846);
    return boundaryline_collection_view__delegate(collection_id, tolerance, bounds, p__8843);
  };
  boundaryline_collection_view.cljs$core$IFn$_invoke$arity$variadic = boundaryline_collection_view__delegate;
  return boundaryline_collection_view;
}();
clustermap.api.boundaryline_aggregation = function() {
  var boundaryline_aggregation__delegate = function(index, type, blcoll, attr, filter, bounds, p__8847) {
    var vec__8849 = p__8847;
    var type_ids = cljs.core.nth.call(null, vec__8849, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/boundaryline-agg/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(blcoll) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(attr) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "filter", "filter", -948537934), filter, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null));
  };
  var boundaryline_aggregation = function(index, type, blcoll, attr, filter, bounds, var_args) {
    var p__8847 = null;
    if (arguments.length > 6) {
      p__8847 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
    }
    return boundaryline_aggregation__delegate.call(this, index, type, blcoll, attr, filter, bounds, p__8847);
  };
  boundaryline_aggregation.cljs$lang$maxFixedArity = 6;
  boundaryline_aggregation.cljs$lang$applyTo = function(arglist__8850) {
    var index = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var type = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var blcoll = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var attr = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var filter = cljs.core.first(arglist__8850);
    arglist__8850 = cljs.core.next(arglist__8850);
    var bounds = cljs.core.first(arglist__8850);
    var p__8847 = cljs.core.rest(arglist__8850);
    return boundaryline_aggregation__delegate(index, type, blcoll, attr, filter, bounds, p__8847);
  };
  boundaryline_aggregation.cljs$core$IFn$_invoke$arity$variadic = boundaryline_aggregation__delegate;
  return boundaryline_aggregation;
}();
clustermap.api.summary_stats = function() {
  var summary_stats__delegate = function(index, type, statsattrs, filter, bounds, p__8851) {
    var vec__8853 = p__8851;
    var type_ids = cljs.core.nth.call(null, vec__8853, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/summary-stats/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "statsattrs", "statsattrs", 1724366357), statsattrs, new cljs.core.Keyword(null, 
    "filter", "filter", -948537934), filter, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null));
  };
  var summary_stats = function(index, type, statsattrs, filter, bounds, var_args) {
    var p__8851 = null;
    if (arguments.length > 5) {
      p__8851 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return summary_stats__delegate.call(this, index, type, statsattrs, filter, bounds, p__8851);
  };
  summary_stats.cljs$lang$maxFixedArity = 5;
  summary_stats.cljs$lang$applyTo = function(arglist__8854) {
    var index = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var type = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var statsattrs = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var filter = cljs.core.first(arglist__8854);
    arglist__8854 = cljs.core.next(arglist__8854);
    var bounds = cljs.core.first(arglist__8854);
    var p__8851 = cljs.core.rest(arglist__8854);
    return summary_stats__delegate(index, type, statsattrs, filter, bounds, p__8851);
  };
  summary_stats.cljs$core$IFn$_invoke$arity$variadic = summary_stats__delegate;
  return summary_stats;
}();
clustermap.api.location_lists = function() {
  var location_lists__delegate = function(index, type, location_attr, attrs, max_count, filter, bounds, p__8855) {
    var vec__8857 = p__8855;
    var type_ids = cljs.core.nth.call(null, vec__8857, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/location-lists/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(location_attr) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max-count", 
    "max-count", 1539185305), max_count, new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), attrs, new cljs.core.Keyword(null, "filter", "filter", -948537934), filter, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null));
  };
  var location_lists = function(index, type, location_attr, attrs, max_count, filter, bounds, var_args) {
    var p__8855 = null;
    if (arguments.length > 7) {
      p__8855 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 7), 0);
    }
    return location_lists__delegate.call(this, index, type, location_attr, attrs, max_count, filter, bounds, p__8855);
  };
  location_lists.cljs$lang$maxFixedArity = 7;
  location_lists.cljs$lang$applyTo = function(arglist__8858) {
    var index = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var type = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var location_attr = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var attrs = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var max_count = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var filter = cljs.core.first(arglist__8858);
    arglist__8858 = cljs.core.next(arglist__8858);
    var bounds = cljs.core.first(arglist__8858);
    var p__8855 = cljs.core.rest(arglist__8858);
    return location_lists__delegate(index, type, location_attr, attrs, max_count, filter, bounds, p__8855);
  };
  location_lists.cljs$core$IFn$_invoke$arity$variadic = location_lists__delegate;
  return location_lists;
}();
clustermap.api.simple_table = function() {
  var simple_table__delegate = function(index, type, filter_spec, bounds, sort_spec, from, size, p__8859) {
    var vec__8861 = p__8859;
    var type_ids = cljs.core.nth.call(null, vec__8861, 0, null);
    return clustermap.api.POST.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/simple-table/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "filter", "filter", -948537934), filter_spec, new cljs.core.Keyword(null, 
    "bounds", "bounds", 1691609455), bounds, new cljs.core.Keyword(null, "sort", "sort", 953465918), sort_spec, new cljs.core.Keyword(null, "from", "from", 1815293044), from, new cljs.core.Keyword(null, "size", "size", 1098693007), size], null));
  };
  var simple_table = function(index, type, filter_spec, bounds, sort_spec, from, size, var_args) {
    var p__8859 = null;
    if (arguments.length > 7) {
      p__8859 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 7), 0);
    }
    return simple_table__delegate.call(this, index, type, filter_spec, bounds, sort_spec, from, size, p__8859);
  };
  simple_table.cljs$lang$maxFixedArity = 7;
  simple_table.cljs$lang$applyTo = function(arglist__8862) {
    var index = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var type = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var filter_spec = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var bounds = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var sort_spec = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var from = cljs.core.first(arglist__8862);
    arglist__8862 = cljs.core.next(arglist__8862);
    var size = cljs.core.first(arglist__8862);
    var p__8859 = cljs.core.rest(arglist__8862);
    return simple_table__delegate(index, type, filter_spec, bounds, sort_spec, from, size, p__8859);
  };
  simple_table.cljs$core$IFn$_invoke$arity$variadic = simple_table__delegate;
  return simple_table;
}();
goog.provide("clustermap.boundarylines");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.api");
goog.require("clustermap.api");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.boundarylines.zoom_tolerances = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [7, .01], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, .002], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 3E-4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, 0], null)], null);
clustermap.boundarylines.ideal_tolerance = function ideal_tolerance(zoom) {
  var or__3558__auto__ = cljs.core.some.call(null, function(p__12948) {
    var vec__12949 = p__12948;
    var z = cljs.core.nth.call(null, vec__12949, 0, null);
    var t = cljs.core.nth.call(null, vec__12949, 1, null);
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = z;
      if (cljs.core.truth_(and__3546__auto__)) {
        return zoom <= z;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return t;
    } else {
      return null;
    }
  }, clustermap.boundarylines.zoom_tolerances);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return 0;
  }
};
clustermap.boundarylines.best_available_tolerance = function best_available_tolerance(zoom, available_tolerances) {
  var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
  var coarser = cljs.core.reverse.call(null, cljs.core.filter.call(null, function(i_tol) {
    return function(t) {
      return t > i_tol;
    };
  }(i_tol), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances)));
  var finer = cljs.core.filter.call(null, function(i_tol, coarser) {
    return function(t) {
      return t < i_tol;
    };
  }(i_tol, coarser), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances));
  var avail_set = cljs.core.set.call(null, available_tolerances);
  var or__3558__auto__ = cljs.core.get.call(null, avail_set, i_tol);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    var or__3558__auto____$1 = cljs.core.some.call(null, avail_set, finer);
    if (cljs.core.truth_(or__3558__auto____$1)) {
      return or__3558__auto____$1;
    } else {
      return cljs.core.some.call(null, avail_set, coarser);
    }
  }
};
clustermap.boundarylines.make_sequential = function make_sequential(x) {
  if (x == null) {
    return null;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return x;
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
    }
  }
};
clustermap.boundarylines.cache_boundarylines = function cache_boundarylines(app_state, boundarylines_path, collection_boundarylines_path, boundarylines) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var collection_boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, collection_boundarylines_path);
  var seq__12954 = cljs.core.seq.call(null, boundarylines);
  var chunk__12955 = null;
  var count__12956 = 0;
  var i__12957 = 0;
  while (true) {
    if (i__12957 < count__12956) {
      var bl = cljs.core._nth.call(null, chunk__12955, i__12957);
      var boundaryline_id_12958 = bl["id"];
      var tolerance_12959 = bl["tolerance"];
      var general_cache_path_12960 = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_12958, tolerance_12959], null));
      var collection_cache_path_12961 = cljs.core.truth_(collection_boundarylines_path__$1) ? cljs.core.concat.call(null, collection_boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_12958, tolerance_12959], null)) : null;
      cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, general_cache_path_12960, function(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12958, tolerance_12959, general_cache_path_12960, collection_cache_path_12961, bl, boundarylines_path__$1, collection_boundarylines_path__$1) {
        return function(old) {
          return bl;
        };
      }(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12958, tolerance_12959, general_cache_path_12960, collection_cache_path_12961, bl, boundarylines_path__$1, collection_boundarylines_path__$1));
      if (cljs.core.truth_(collection_cache_path_12961)) {
        cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, collection_cache_path_12961, function(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12958, tolerance_12959, general_cache_path_12960, collection_cache_path_12961, bl, boundarylines_path__$1, collection_boundarylines_path__$1) {
          return function(old) {
            return bl;
          };
        }(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12958, tolerance_12959, general_cache_path_12960, collection_cache_path_12961, bl, boundarylines_path__$1, collection_boundarylines_path__$1));
      } else {
      }
      var G__12962 = seq__12954;
      var G__12963 = chunk__12955;
      var G__12964 = count__12956;
      var G__12965 = i__12957 + 1;
      seq__12954 = G__12962;
      chunk__12955 = G__12963;
      count__12956 = G__12964;
      i__12957 = G__12965;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__12954);
      if (temp__4126__auto__) {
        var seq__12954__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12954__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__12954__$1);
          var G__12966 = cljs.core.chunk_rest.call(null, seq__12954__$1);
          var G__12967 = c__4314__auto__;
          var G__12968 = cljs.core.count.call(null, c__4314__auto__);
          var G__12969 = 0;
          seq__12954 = G__12966;
          chunk__12955 = G__12967;
          count__12956 = G__12968;
          i__12957 = G__12969;
          continue;
        } else {
          var bl = cljs.core.first.call(null, seq__12954__$1);
          var boundaryline_id_12970 = bl["id"];
          var tolerance_12971 = bl["tolerance"];
          var general_cache_path_12972 = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_12970, tolerance_12971], null));
          var collection_cache_path_12973 = cljs.core.truth_(collection_boundarylines_path__$1) ? cljs.core.concat.call(null, collection_boundarylines_path__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id_12970, tolerance_12971], null)) : null;
          cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, general_cache_path_12972, function(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12970, tolerance_12971, general_cache_path_12972, collection_cache_path_12973, bl, seq__12954__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1) {
            return function(old) {
              return bl;
            };
          }(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12970, tolerance_12971, general_cache_path_12972, collection_cache_path_12973, bl, seq__12954__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1));
          if (cljs.core.truth_(collection_cache_path_12973)) {
            cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, collection_cache_path_12973, function(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12970, tolerance_12971, general_cache_path_12972, collection_cache_path_12973, bl, seq__12954__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1) {
              return function(old) {
                return bl;
              };
            }(seq__12954, chunk__12955, count__12956, i__12957, boundaryline_id_12970, tolerance_12971, general_cache_path_12972, collection_cache_path_12973, bl, seq__12954__$1, temp__4126__auto__, boundarylines_path__$1, collection_boundarylines_path__$1));
          } else {
          }
          var G__12974 = cljs.core.next.call(null, seq__12954__$1);
          var G__12975 = null;
          var G__12976 = 0;
          var G__12977 = 0;
          seq__12954 = G__12974;
          chunk__12955 = G__12975;
          count__12956 = G__12976;
          i__12957 = G__12977;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.boundarylines.fetch_boundarylines = function() {
  var fetch_boundarylines__delegate = function(app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, p__12978) {
    var map__12994 = p__12978;
    var map__12994__$1 = cljs.core.seq_QMARK_.call(null, map__12994) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12994) : map__12994;
    var bounds = cljs.core.get.call(null, map__12994__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
    var boundaryline_ids = cljs.core.get.call(null, map__12994__$1, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869));
    var comm = clustermap.api.boundaryline_collection_view.call(null, collection_id, tolerance, bounds, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), boundaryline_ids, new cljs.core.Keyword(null, "raw", "raw", 1604651272), true);
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, comm, map__12994, map__12994__$1, bounds, boundaryline_ids) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, comm, map__12994, map__12994__$1, bounds, boundaryline_ids) {
            return function(state_12999) {
              var state_val_13000 = state_12999[1];
              if (state_val_13000 === 2) {
                var inst_12996 = state_12999[2];
                var inst_12997 = clustermap.boundarylines.cache_boundarylines.call(null, app_state, boundarylines_path, collection_boundarylines_path, inst_12996);
                var state_12999__$1 = function() {
                  var statearr_13001 = state_12999;
                  statearr_13001[7] = inst_12997;
                  return statearr_13001;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12999__$1, true);
              } else {
                if (state_val_13000 === 1) {
                  var state_12999__$1 = state_12999;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12999__$1, 2, comm);
                } else {
                  return null;
                }
              }
            };
          }(c__5708__auto__, comm, map__12994, map__12994__$1, bounds, boundaryline_ids);
          return function(switch__5693__auto__, c__5708__auto__, comm, map__12994, map__12994__$1, bounds, boundaryline_ids) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_13005 = [null, null, null, null, null, null, null, null];
                statearr_13005[0] = state_machine__5694__auto__;
                statearr_13005[1] = 1;
                return statearr_13005;
              };
              var state_machine__5694__auto____1 = function(state_12999) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_12999);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e13006) {
                      if (e13006 instanceof Object) {
                        var ex__5697__auto__ = e13006;
                        var statearr_13007_13009 = state_12999;
                        statearr_13007_13009[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12999);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13006;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13010 = state_12999;
                    state_12999 = G__13010;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_12999) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_12999);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, comm, map__12994, map__12994__$1, bounds, boundaryline_ids);
        }();
        var state__5710__auto__ = function() {
          var statearr_13008 = f__5709__auto__.call(null);
          statearr_13008[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_13008;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, comm, map__12994, map__12994__$1, bounds, boundaryline_ids));
    return c__5708__auto__;
  };
  var fetch_boundarylines = function(app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, var_args) {
    var p__12978 = null;
    if (arguments.length > 5) {
      p__12978 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return fetch_boundarylines__delegate.call(this, app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, p__12978);
  };
  fetch_boundarylines.cljs$lang$maxFixedArity = 5;
  fetch_boundarylines.cljs$lang$applyTo = function(arglist__13011) {
    var app_state = cljs.core.first(arglist__13011);
    arglist__13011 = cljs.core.next(arglist__13011);
    var boundarylines_path = cljs.core.first(arglist__13011);
    arglist__13011 = cljs.core.next(arglist__13011);
    var collection_boundarylines_path = cljs.core.first(arglist__13011);
    arglist__13011 = cljs.core.next(arglist__13011);
    var collection_id = cljs.core.first(arglist__13011);
    arglist__13011 = cljs.core.next(arglist__13011);
    var tolerance = cljs.core.first(arglist__13011);
    var p__12978 = cljs.core.rest(arglist__13011);
    return fetch_boundarylines__delegate(app_state, boundarylines_path, collection_boundarylines_path, collection_id, tolerance, p__12978);
  };
  fetch_boundarylines.cljs$core$IFn$_invoke$arity$variadic = fetch_boundarylines__delegate;
  return fetch_boundarylines;
}();
clustermap.boundarylines.fetch_from_index = function fetch_from_index(index, boundaryline_id) {
  var default_bl = cljs.core.truth_(index) ? index[cljs.core.name.call(null, boundaryline_id)] : null;
  var default_tol = cljs.core.truth_(default_bl) ? default_bl["tolerance"] : null;
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = default_bl;
    if (cljs.core.truth_(and__3546__auto__)) {
      return default_tol;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_tol, default_bl], null);
  } else {
    return null;
  }
};
clustermap.boundarylines.best_version = function best_version(collection_index, collection_cache, general_cache, zoom, boundaryline_id) {
  var bl_versions = function() {
    var or__3558__auto__ = cljs.core.get.call(null, collection_cache, boundaryline_id);
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.get.call(null, general_cache, boundaryline_id);
    }
  }();
  var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
  var use_tol = clustermap.boundarylines.best_available_tolerance.call(null, zoom, cljs.core.keys.call(null, bl_versions));
  var use_bl = cljs.core.get.call(null, bl_versions, use_tol);
  if (cljs.core.truth_(use_bl)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [use_tol, use_bl], null);
  } else {
    return clustermap.boundarylines.fetch_from_index.call(null, collection_index, boundaryline_id);
  }
};
clustermap.boundarylines.get_or_fetch_best_boundarylines = function() {
  var get_or_fetch_best_boundarylines__delegate = function(app_state, boundarylines_path, collection_id, bounds, zoom, p__13012) {
    var map__13017 = p__13012;
    var map__13017__$1 = cljs.core.seq_QMARK_.call(null, map__13017) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13017) : map__13017;
    var boundaryline_ids = cljs.core.get.call(null, map__13017__$1, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869));
    var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
    var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
    var general_cache_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)], null));
    var general_cache = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), general_cache_path);
    var collection_path = cljs.core.truth_(collection_id) ? cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null)) : null;
    var collection_index_path = cljs.core.truth_(collection_id) ? cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "index", "index", -1531685915)], null)) : null;
    var collection_index = cljs.core.truth_(collection_id) ? cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), collection_index_path) : null;
    var collection_cache_path = cljs.core.truth_(collection_path) ? cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)], null)) : null;
    var collection_cache = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), collection_cache_path);
    var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
    var best_versions = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, map__13017, map__13017__$1, boundaryline_ids) {
      return function(blid) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [blid, clustermap.boundarylines.best_version.call(null, collection_index, collection_cache, general_cache, zoom, blid)], null);
      };
    }(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, map__13017, map__13017__$1, boundaryline_ids), boundaryline_ids));
    var required = cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, best_versions, map__13017, map__13017__$1, boundaryline_ids) {
      return function(p__13018) {
        var vec__13019 = p__13018;
        var blid = cljs.core.nth.call(null, vec__13019, 0, null);
        var vec__13020 = cljs.core.nth.call(null, vec__13019, 1, null);
        var tol = cljs.core.nth.call(null, vec__13020, 0, null);
        var bl = cljs.core.nth.call(null, vec__13020, 1, null);
        return cljs.core.not_EQ_.call(null, tol, i_tol);
      };
    }(boundarylines_path__$1, all_collections_path, general_cache_path, general_cache, collection_path, collection_index_path, collection_index, collection_cache_path, collection_cache, i_tol, best_versions, map__13017, map__13017__$1, boundaryline_ids), best_versions));
    var notify_chan = cljs.core.truth_(cljs.core.not_empty.call(null, required)) ? clustermap.boundarylines.fetch_boundarylines.call(null, app_state, general_cache_path, collection_cache_path, collection_id, i_tol, new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), required, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds) : null;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [best_versions, notify_chan], null);
  };
  var get_or_fetch_best_boundarylines = function(app_state, boundarylines_path, collection_id, bounds, zoom, var_args) {
    var p__13012 = null;
    if (arguments.length > 5) {
      p__13012 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
    }
    return get_or_fetch_best_boundarylines__delegate.call(this, app_state, boundarylines_path, collection_id, bounds, zoom, p__13012);
  };
  get_or_fetch_best_boundarylines.cljs$lang$maxFixedArity = 5;
  get_or_fetch_best_boundarylines.cljs$lang$applyTo = function(arglist__13021) {
    var app_state = cljs.core.first(arglist__13021);
    arglist__13021 = cljs.core.next(arglist__13021);
    var boundarylines_path = cljs.core.first(arglist__13021);
    arglist__13021 = cljs.core.next(arglist__13021);
    var collection_id = cljs.core.first(arglist__13021);
    arglist__13021 = cljs.core.next(arglist__13021);
    var bounds = cljs.core.first(arglist__13021);
    arglist__13021 = cljs.core.next(arglist__13021);
    var zoom = cljs.core.first(arglist__13021);
    var p__13012 = cljs.core.rest(arglist__13021);
    return get_or_fetch_best_boundarylines__delegate(app_state, boundarylines_path, collection_id, bounds, zoom, p__13012);
  };
  get_or_fetch_best_boundarylines.cljs$core$IFn$_invoke$arity$variadic = get_or_fetch_best_boundarylines__delegate;
  return get_or_fetch_best_boundarylines;
}();
clustermap.boundarylines.boundaryline_collection_rtree = function boundaryline_collection_rtree(app_state, boundarylines_path, collection_id) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
  var collection_path = cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null));
  var rtree_path = cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rtree", "rtree", -82448827)], null));
  cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rtree_path, function(boundarylines_path__$1, all_collections_path, collection_path, rtree_path) {
    return function(old) {
      if (cljs.core.truth_(old)) {
        return old;
      } else {
        return new RTree(10);
      }
    };
  }(boundarylines_path__$1, all_collections_path, collection_path, rtree_path));
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), rtree_path);
};
clustermap.boundarylines.rtree_index = function rtree_index(rtree, js_index) {
  var keys = Object.keys(js_index);
  var features = [];
  var js_feature_coll = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), "FeatureCollection"], null));
  var _ = js_feature_coll["features"] = features;
  var seq__13026_13030 = cljs.core.seq.call(null, keys);
  var chunk__13027_13031 = null;
  var count__13028_13032 = 0;
  var i__13029_13033 = 0;
  while (true) {
    if (i__13029_13033 < count__13028_13032) {
      var k_13034 = cljs.core._nth.call(null, chunk__13027_13031, i__13029_13033);
      var obj_13035 = js_index[k_13034];
      var geom_13036 = obj_13035["geojson"];
      var feature_13037 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "Feature", new cljs.core.Keyword(null, "properties", "properties", 685819552), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), obj_13035["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), obj_13035["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
      1525822383), obj_13035["compact_name"]], null)], null));
      var __13038__$1 = feature_13037["geometry"] = geom_13036;
      var __13039__$2 = feature_13037["properties"]["index_object"] = obj_13035;
      features.push(feature_13037);
      var G__13040 = seq__13026_13030;
      var G__13041 = chunk__13027_13031;
      var G__13042 = count__13028_13032;
      var G__13043 = i__13029_13033 + 1;
      seq__13026_13030 = G__13040;
      chunk__13027_13031 = G__13041;
      count__13028_13032 = G__13042;
      i__13029_13033 = G__13043;
      continue;
    } else {
      var temp__4126__auto___13044 = cljs.core.seq.call(null, seq__13026_13030);
      if (temp__4126__auto___13044) {
        var seq__13026_13045__$1 = temp__4126__auto___13044;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13026_13045__$1)) {
          var c__4314__auto___13046 = cljs.core.chunk_first.call(null, seq__13026_13045__$1);
          var G__13047 = cljs.core.chunk_rest.call(null, seq__13026_13045__$1);
          var G__13048 = c__4314__auto___13046;
          var G__13049 = cljs.core.count.call(null, c__4314__auto___13046);
          var G__13050 = 0;
          seq__13026_13030 = G__13047;
          chunk__13027_13031 = G__13048;
          count__13028_13032 = G__13049;
          i__13029_13033 = G__13050;
          continue;
        } else {
          var k_13051 = cljs.core.first.call(null, seq__13026_13045__$1);
          var obj_13052 = js_index[k_13051];
          var geom_13053 = obj_13052["geojson"];
          var feature_13054 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "Feature", new cljs.core.Keyword(null, "properties", "properties", 685819552), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), obj_13052["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), obj_13052["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
          1525822383), obj_13052["compact_name"]], null)], null));
          var __13055__$1 = feature_13054["geometry"] = geom_13053;
          var __13056__$2 = feature_13054["properties"]["index_object"] = obj_13052;
          features.push(feature_13054);
          var G__13057 = cljs.core.next.call(null, seq__13026_13045__$1);
          var G__13058 = null;
          var G__13059 = 0;
          var G__13060 = 0;
          seq__13026_13030 = G__13057;
          chunk__13027_13031 = G__13058;
          count__13028_13032 = G__13059;
          i__13029_13033 = G__13060;
          continue;
        }
      } else {
      }
    }
    break;
  }
  rtree.geoJSON(js_feature_coll);
  return rtree;
};
clustermap.boundarylines.fetch_boundaryline_collection_index = function fetch_boundaryline_collection_index(app_state, boundarylines_path, collection_id) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
  var collection_path = cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null));
  var index_path = cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "index", "index", -1531685915)], null));
  var index = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), index_path);
  var rtree = clustermap.boundarylines.boundaryline_collection_rtree.call(null, app_state, boundarylines_path__$1, collection_id);
  if (cljs.core.truth_(index)) {
    return null;
  } else {
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
            return function(state_13103) {
              var state_val_13104 = state_13103[1];
              if (state_val_13104 === 5) {
                var inst_13101 = state_13103[2];
                var state_13103__$1 = state_13103;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13103__$1, inst_13101);
              } else {
                if (state_val_13104 === 4) {
                  var state_13103__$1 = state_13103;
                  var statearr_13105_13117 = state_13103__$1;
                  statearr_13105_13117[2] = null;
                  statearr_13105_13117[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13104 === 3) {
                    var inst_13091 = state_13103[7];
                    var inst_13098 = clustermap.boundarylines.rtree_index.call(null, rtree, inst_13091);
                    var state_13103__$1 = state_13103;
                    var statearr_13106_13118 = state_13103__$1;
                    statearr_13106_13118[2] = inst_13098;
                    statearr_13106_13118[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13104 === 2) {
                      var inst_13091 = state_13103[7];
                      var inst_13091__$1 = state_13103[2];
                      var inst_13092 = function() {
                        var bl_coll_index = inst_13091__$1;
                        return function(bl_coll_index, inst_13091, inst_13091__$1, state_val_13104, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
                          return function(old) {
                            if (cljs.core.truth_(old)) {
                              return old;
                            } else {
                              return bl_coll_index;
                            }
                          };
                        }(bl_coll_index, inst_13091, inst_13091__$1, state_val_13104, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree);
                      }();
                      var inst_13093 = cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, index_path, inst_13092);
                      var inst_13094 = cljs.core.deref.call(null, app_state);
                      var inst_13095 = cljs.core.get_in.call(null, inst_13094, index_path);
                      var inst_13096 = cljs.core._EQ_.call(null, inst_13095, inst_13091__$1);
                      var state_13103__$1 = function() {
                        var statearr_13107 = state_13103;
                        statearr_13107[7] = inst_13091__$1;
                        statearr_13107[8] = inst_13093;
                        return statearr_13107;
                      }();
                      if (inst_13096) {
                        var statearr_13108_13119 = state_13103__$1;
                        statearr_13108_13119[1] = 3;
                      } else {
                        var statearr_13109_13120 = state_13103__$1;
                        statearr_13109_13120[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13104 === 1) {
                        var inst_13089 = clustermap.api.boundaryline_collection_index.call(null, collection_id, new cljs.core.Keyword(null, "raw", "raw", 1604651272), true);
                        var state_13103__$1 = state_13103;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13103__$1, 2, inst_13089);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree);
          return function(switch__5693__auto__, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_13113 = [null, null, null, null, null, null, null, null, null];
                statearr_13113[0] = state_machine__5694__auto__;
                statearr_13113[1] = 1;
                return statearr_13113;
              };
              var state_machine__5694__auto____1 = function(state_13103) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_13103);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e13114) {
                      if (e13114 instanceof Object) {
                        var ex__5697__auto__ = e13114;
                        var statearr_13115_13121 = state_13103;
                        statearr_13115_13121[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13103);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e13114;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__13122 = state_13103;
                    state_13103 = G__13122;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_13103) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_13103);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree);
        }();
        var state__5710__auto__ = function() {
          var statearr_13116 = f__5709__auto__.call(null);
          statearr_13116[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_13116;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, boundarylines_path__$1, all_collections_path, collection_path, index_path, index, rtree));
    return c__5708__auto__;
  }
};
clustermap.boundarylines.point_in_boundarylines = function point_in_boundarylines(app_state, boundarylines_path, collection_id, x, y) {
  var boundarylines_path__$1 = clustermap.boundarylines.make_sequential.call(null, boundarylines_path);
  var all_collections_path = cljs.core.concat.call(null, boundarylines_path__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505)], null));
  var collection_path = cljs.core.concat.call(null, all_collections_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [collection_id], null));
  var rtree_path = cljs.core.concat.call(null, collection_path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rtree", "rtree", -82448827)], null));
  var rtree = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), rtree_path);
  var hits = cljs.core.truth_(rtree) ? rtree.search(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y, new cljs.core.Keyword(null, "w", "w", 354169001), 0, new cljs.core.Keyword(null, "h", "h", 1109658740), 0], null))) : null;
  return cljs.core.map.call(null, function(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits) {
    return function(hit) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), hit.properties.id, new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383), hit.properties.compact_name], null);
    };
  }(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits), cljs.core.filter.call(null, function(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits) {
    return function(hit) {
      return gju.pointInPolygon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "Point", new cljs.core.Keyword(null, "coordinates", "coordinates", -1225332668), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)], null)), hit.geometry);
    };
  }(boundarylines_path__$1, all_collections_path, collection_path, rtree_path, rtree, hits), function() {
    var or__3558__auto__ = hits;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }()));
};
goog.provide("clustermap.formats.color");
goog.require("cljs.core");
clustermap.formats.color.rgb = function rgb(col) {
  var vec__14653 = col;
  var _ = cljs.core.nth.call(null, vec__14653, 0, null);
  var r1 = cljs.core.nth.call(null, vec__14653, 1, null);
  var r2 = cljs.core.nth.call(null, vec__14653, 2, null);
  var g1 = cljs.core.nth.call(null, vec__14653, 3, null);
  var g2 = cljs.core.nth.call(null, vec__14653, 4, null);
  var b1 = cljs.core.nth.call(null, vec__14653, 5, null);
  var b2 = cljs.core.nth.call(null, vec__14653, 6, null);
  var r = Number.parseInt("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r2), 16);
  var g = Number.parseInt("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(g1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(g2), 16);
  var b = Number.parseInt("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b2), 16);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, g, b], null);
};
clustermap.formats.color.is_light_color_QMARK_ = function is_light_color_QMARK_(col) {
  var vec__14655 = clustermap.formats.color.rgb.call(null, col);
  var r = cljs.core.nth.call(null, vec__14655, 0, null);
  var g = cljs.core.nth.call(null, vec__14655, 1, null);
  var b = cljs.core.nth.call(null, vec__14655, 2, null);
  return r + g + b > 128 * 3;
};
clustermap.formats.color.stand_out_color = function stand_out_color(col) {
  var vec__14657 = clustermap.formats.color.rgb.call(null, col);
  var r = cljs.core.nth.call(null, vec__14657, 0, null);
  var g = cljs.core.nth.call(null, vec__14657, 1, null);
  var b = cljs.core.nth.call(null, vec__14657, 2, null);
  var lightness = Math.ceil(Math.pow(Math.E, Math.log(r * g * b) / 3));
  var standout = 255 - lightness;
  var hex = standout < 16 ? "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(standout.toString(16)) : standout.toString(16);
  return "#" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex);
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if (!uris.length) {
    return;
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
  if (isAnotherModuleLoading) {
    return;
  }
  uris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var uri = uris.shift();
    var deferred = goog.net.jsloader.load(uri, opt_options);
    if (uris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
  };
  popAndLoadNextScript();
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  goog.dom.setProperties(script, {"type":"text/javascript", "charset":"UTF-8", "src":uri});
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.load(uri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == "SCRIPT") {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    var outerRole = this.channel_.getRole() == CrossPageChannelRole.OUTER;
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = (payload.split(DirectTransport.MESSAGE_DELIMITER_));
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return{"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  var safeStyle = new goog.html.SafeStyle;
  safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return safeStyle;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-.%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.VALUE_RE_ = /^[-.%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0, UNKNOWN:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return!goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    url = goog.html.SafeUrl.normalize_(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.normalize_ = function(url) {
  try {
    var normalized = encodeURI(url);
  } catch (e) {
    return goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return normalized.replace(goog.html.SafeUrl.NORMALIZE_MATCHER_, function(match) {
    return goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_[match];
  });
};
goog.html.SafeUrl.NORMALIZE_MATCHER_ = /[()']|%5B|%5D|%25/g;
goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_ = {"'":"%27", "(":"%28", ")":"%29", "%5B":"[", "%5D":"]", "%25":"%"};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet("link", "script", "style");
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toLowerCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      if (value instanceof goog.string.Const) {
        value = goog.string.Const.unwrap(value);
      } else {
        if (name.toLowerCase() == "style") {
          value = goog.html.SafeHtml.getStyleValue_(value);
        } else {
          if (/^on/i.test(name)) {
            throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
                throw Error('Attribute "' + name + '" requires goog.string.Const or goog.html.SafeUrl value, "' + value + '" given.');
              }
            }
          }
        }
      }
      goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
      result += " " + name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
    }
  }
  var content = opt_content;
  if (!goog.isDef(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  var safeHtml = new goog.html.SafeHtml;
  safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  safeHtml.dir_ = dir;
  return safeHtml;
};
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.dom.safe");
goog.require("goog.events");
goog.require("goog.html.SafeHtml");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    goog.dom.safe.setInnerHtml(div, goog.html.SafeHtml.create("iframe", {"onload":goog.string.Const.from("this.xpcOnload()")}));
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported((this.peerWindowObject_))) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
goog.require("goog.events");
clojure.browser.event.IEventType = function() {
  var obj19705 = {};
  return obj19705;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clojure$browser$event$IEventType$event_types$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clojure$browser$event$IEventType$event_types$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__19706) {
      var vec__19707 = p__19706;
      var k = cljs.core.nth.call(null, vec__19707, 0, null);
      var v = cljs.core.nth.call(null, vec__19707, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
if (typeof Element !== "undefined") {
  Element.prototype.clojure$browser$event$IEventType$ = true;
  Element.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
    var this$__$1 = this;
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
      return function(p__19708) {
        var vec__19709 = p__19708;
        var k = cljs.core.nth.call(null, vec__19709, 0, null);
        var v = cljs.core.nth.call(null, vec__19709, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
      };
    }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
  };
} else {
}
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.json");
goog.require("goog.json");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__19710) {
  var vec__19711 = p__19710;
  var k = cljs.core.nth.call(null, vec__19711, 0, null);
  var v = cljs.core.nth.call(null, vec__19711, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj19713 = {};
  return obj19713;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.connect[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clojure.browser.net.close[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clojure.browser.net.close["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__19714) {
      var vec__19715 = p__19714;
      var k = cljs.core.nth.call(null, vec__19715, 0, null);
      var v = cljs.core.nth.call(null, vec__19715, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__19716) {
  var vec__19717 = p__19716;
  var k = cljs.core.nth.call(null, vec__19717, 0, null);
  var v = cljs.core.nth.call(null, vec__19717, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj19719 = {};
  return obj19719;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close();
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__19725) {
      var vec__19726 = p__19725;
      var k = cljs.core.nth.call(null, vec__19726, 0, null);
      var v = cljs.core.nth.call(null, vec__19726, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__19727 = sum;
        G__19727[field] = v;
        return G__19727;
      } else {
        return sum;
      }
    }, function() {
      var obj19729 = {};
      return obj19729;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_autoReconnect, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  this.autoReconnect_ = goog.isDef(opt_autoReconnect) ? opt_autoReconnect : true;
  this.getNextReconnect_ = opt_getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1E3;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1E3;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return!!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1E3);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  var message = event.data;
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(message));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = (event.data);
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (goog.isDefAndNotNull(this.reconnectTimer_)) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
goog.provide("weasel.impls.websocket");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("goog.net.WebSocket");
goog.require("goog.net.WebSocket");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
weasel.impls.websocket.IWebSocket = function() {
  var obj19731 = {};
  return obj19731;
}();
weasel.impls.websocket.open_QMARK_ = function open_QMARK_(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = weasel.impls.websocket.open_QMARK_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = weasel.impls.websocket.open_QMARK_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
        }
      }
    }().call(null, this$);
  }
};
weasel.impls.websocket.websocket_connection = function() {
  var websocket_connection = null;
  var websocket_connection__0 = function() {
    return websocket_connection.call(null, null, null);
  };
  var websocket_connection__1 = function(auto_reconnect_QMARK_) {
    return websocket_connection.call(null, auto_reconnect_QMARK_, null);
  };
  var websocket_connection__2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
  };
  websocket_connection = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    switch(arguments.length) {
      case 0:
        return websocket_connection__0.call(this);
      case 1:
        return websocket_connection__1.call(this, auto_reconnect_QMARK_);
      case 2:
        return websocket_connection__2.call(this, auto_reconnect_QMARK_, next_reconnect_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  websocket_connection.cljs$core$IFn$_invoke$arity$0 = websocket_connection__0;
  websocket_connection.cljs$core$IFn$_invoke$arity$1 = websocket_connection__1;
  websocket_connection.cljs$core$IFn$_invoke$arity$2 = websocket_connection__2;
  return websocket_connection;
}();
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$ = true;
goog.net.WebSocket.prototype.clojure$browser$event$IEventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__19732) {
      var vec__19733 = p__19732;
      var k = cljs.core.nth.call(null, vec__19733, 0, null);
      var v = cljs.core.nth.call(null, vec__19733, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = true;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$ = true;
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj19390 = {};
  return obj19390;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3546__auto__ = reader;
    if (and__3546__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4185__auto__ = reader == null ? null : reader;
    return function() {
      var or__3558__auto__ = cljs.reader.read_char[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.reader.read_char["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3546__auto__ = reader;
    if (and__3546__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4185__auto__ = reader == null ? null : reader;
    return function() {
      var or__3558__auto__ = cljs.reader.unread[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.reader.unread["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3558__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__19391) {
    var rdr = cljs.core.first(arglist__19391);
    var msg = cljs.core.rest(arglist__19391);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3546__auto__ = !(ch === "#");
  if (and__3546__auto__) {
    var and__3546__auto____$1 = !(ch === "'");
    if (and__3546__auto____$1) {
      var and__3546__auto____$2 = !(ch === ":");
      if (and__3546__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3546__auto____$2;
      }
    } else {
      return and__3546__auto____$1;
    }
  } else {
    return and__3546__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__19392 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__19393 = cljs.reader.read_char.call(null, rdr);
      sb = G__19392;
      ch = G__19393;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var zero = groups[2];
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__19394 = cljs.reader.read_char.call(null, rdr);
      ch = G__19394;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__19395 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__19395;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__19396 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__19396;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = ch == null;
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3558__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__19397 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__19398 = cljs.reader.read_char.call(null, reader);
      buffer = G__19397;
      ch = G__19398;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__19399 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__19400 = cljs.reader.read_char.call(null, reader);
        buffer = G__19399;
        ch = G__19400;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__19401 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__19402 = cljs.reader.read_char.call(null, reader);
          buffer = G__19401;
          ch = G__19402;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__19407 = function() {
            var G__19405 = buffer;
            G__19405.append(nch);
            return G__19405;
          }();
          var G__19408 = cljs.reader.read_char.call(null, reader);
          buffer = G__19407;
          ch = G__19408;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__19409 = function() {
            var G__19406 = buffer;
            G__19406.append(ch);
            return G__19406;
          }();
          var G__19410 = cljs.reader.read_char.call(null, reader);
          buffer = G__19409;
          ch = G__19410;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        return not_found;
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__19412 = o;
    if (G__19412) {
      var bit__4208__auto__ = G__19412.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4208__auto__ || G__19412.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__19412.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19412);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19412);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__19413 = reader;
        var G__19414 = eof_is_error;
        var G__19415 = sentinel;
        var G__19416 = is_recursive;
        reader = G__19413;
        eof_is_error = G__19414;
        sentinel = G__19415;
        is_recursive = G__19416;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__19417 = cljs.reader.read_comment.call(null, reader, ch);
          var G__19418 = eof_is_error;
          var G__19419 = sentinel;
          var G__19420 = is_recursive;
          reader = G__19417;
          eof_is_error = G__19418;
          sentinel = G__19419;
          is_recursive = G__19420;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__19421 = reader;
            var G__19422 = eof_is_error;
            var G__19423 = sentinel;
            var G__19424 = is_recursive;
            reader = G__19421;
            eof_is_error = G__19422;
            sentinel = G__19423;
            is_recursive = G__19424;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__19425 = b.append("0");
          b = G__19425;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg) + " Failed:  " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(low) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(high));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__19427 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__19427, 0, null);
  var years = cljs.core.nth.call(null, vec__19427, 1, null);
  var months = cljs.core.nth.call(null, vec__19427, 2, null);
  var days = cljs.core.nth.call(null, vec__19427, 3, null);
  var hours = cljs.core.nth.call(null, vec__19427, 4, null);
  var minutes = cljs.core.nth.call(null, vec__19427, 5, null);
  var seconds = cljs.core.nth.call(null, vec__19427, 6, null);
  var fraction = cljs.core.nth.call(null, vec__19427, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__19427, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__19427, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__19427, 10, null);
  var v = vec__19427;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3558__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__19429 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__19429, 0, null);
    var months = cljs.core.nth.call(null, vec__19429, 1, null);
    var days = cljs.core.nth.call(null, vec__19429, 2, null);
    var hours = cljs.core.nth.call(null, vec__19429, 3, null);
    var minutes = cljs.core.nth.call(null, vec__19429, 4, null);
    var seconds = cljs.core.nth.call(null, vec__19429, 5, null);
    var ms = cljs.core.nth.call(null, vec__19429, 6, null);
    var offset = cljs.core.nth.call(null, vec__19429, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__19442_19454 = cljs.core.seq.call(null, form);
    var chunk__19443_19455 = null;
    var count__19444_19456 = 0;
    var i__19445_19457 = 0;
    while (true) {
      if (i__19445_19457 < count__19444_19456) {
        var x_19458 = cljs.core._nth.call(null, chunk__19443_19455, i__19445_19457);
        arr.push(x_19458);
        var G__19459 = seq__19442_19454;
        var G__19460 = chunk__19443_19455;
        var G__19461 = count__19444_19456;
        var G__19462 = i__19445_19457 + 1;
        seq__19442_19454 = G__19459;
        chunk__19443_19455 = G__19460;
        count__19444_19456 = G__19461;
        i__19445_19457 = G__19462;
        continue;
      } else {
        var temp__4126__auto___19463 = cljs.core.seq.call(null, seq__19442_19454);
        if (temp__4126__auto___19463) {
          var seq__19442_19464__$1 = temp__4126__auto___19463;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19442_19464__$1)) {
            var c__4314__auto___19465 = cljs.core.chunk_first.call(null, seq__19442_19464__$1);
            var G__19466 = cljs.core.chunk_rest.call(null, seq__19442_19464__$1);
            var G__19467 = c__4314__auto___19465;
            var G__19468 = cljs.core.count.call(null, c__4314__auto___19465);
            var G__19469 = 0;
            seq__19442_19454 = G__19466;
            chunk__19443_19455 = G__19467;
            count__19444_19456 = G__19468;
            i__19445_19457 = G__19469;
            continue;
          } else {
            var x_19470 = cljs.core.first.call(null, seq__19442_19464__$1);
            arr.push(x_19470);
            var G__19471 = cljs.core.next.call(null, seq__19442_19464__$1);
            var G__19472 = null;
            var G__19473 = 0;
            var G__19474 = 0;
            seq__19442_19454 = G__19471;
            chunk__19443_19455 = G__19472;
            count__19444_19456 = G__19473;
            i__19445_19457 = G__19474;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj19447 = {};
        return obj19447;
      }();
      var seq__19448_19475 = cljs.core.seq.call(null, form);
      var chunk__19449_19476 = null;
      var count__19450_19477 = 0;
      var i__19451_19478 = 0;
      while (true) {
        if (i__19451_19478 < count__19450_19477) {
          var vec__19452_19479 = cljs.core._nth.call(null, chunk__19449_19476, i__19451_19478);
          var k_19480 = cljs.core.nth.call(null, vec__19452_19479, 0, null);
          var v_19481 = cljs.core.nth.call(null, vec__19452_19479, 1, null);
          obj[cljs.core.name.call(null, k_19480)] = v_19481;
          var G__19482 = seq__19448_19475;
          var G__19483 = chunk__19449_19476;
          var G__19484 = count__19450_19477;
          var G__19485 = i__19451_19478 + 1;
          seq__19448_19475 = G__19482;
          chunk__19449_19476 = G__19483;
          count__19450_19477 = G__19484;
          i__19451_19478 = G__19485;
          continue;
        } else {
          var temp__4126__auto___19486 = cljs.core.seq.call(null, seq__19448_19475);
          if (temp__4126__auto___19486) {
            var seq__19448_19487__$1 = temp__4126__auto___19486;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__19448_19487__$1)) {
              var c__4314__auto___19488 = cljs.core.chunk_first.call(null, seq__19448_19487__$1);
              var G__19489 = cljs.core.chunk_rest.call(null, seq__19448_19487__$1);
              var G__19490 = c__4314__auto___19488;
              var G__19491 = cljs.core.count.call(null, c__4314__auto___19488);
              var G__19492 = 0;
              seq__19448_19475 = G__19489;
              chunk__19449_19476 = G__19490;
              count__19450_19477 = G__19491;
              i__19451_19478 = G__19492;
              continue;
            } else {
              var vec__19453_19493 = cljs.core.first.call(null, seq__19448_19487__$1);
              var k_19494 = cljs.core.nth.call(null, vec__19453_19493, 0, null);
              var v_19495 = cljs.core.nth.call(null, vec__19453_19493, 1, null);
              obj[cljs.core.name.call(null, k_19494)] = v_19495;
              var G__19496 = cljs.core.next.call(null, seq__19448_19487__$1);
              var G__19497 = null;
              var G__19498 = 0;
              var G__19499 = 0;
              seq__19448_19475 = G__19496;
              chunk__19449_19476 = G__19497;
              count__19450_19477 = G__19498;
              i__19451_19478 = G__19499;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, "JS literal expects a vector or map containing only string or unqualified keyword keys");
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("weasel.repl");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.browser.event");
goog.require("weasel.impls.websocket");
goog.require("weasel.impls.websocket");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
weasel.repl.ws_connection = cljs.core.atom.call(null, null);
weasel.repl.alive_QMARK_ = function alive_QMARK_() {
  return!(cljs.core.deref.call(null, weasel.repl.ws_connection) == null);
};
weasel.repl.process_message = function() {
  var method_table__4424__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4425__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4426__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4427__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4428__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("process-message", new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4428__auto__, method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__);
}();
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "error", "error", -978969032), function(message) {
  return console.error("Websocket REPL error " + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(message)));
});
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "eval-js", "eval-js", 760905924), function(message) {
  var code = (new cljs.core.Keyword(null, "code", "code", 1586293142)).cljs$core$IFn$_invoke$arity$1(message);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "value", "value", 305978217), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(code))], null);
    } catch (e19697) {
      if (e19697 instanceof Error) {
        var e = e19697;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
      } else {
        var e = e19697;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "exception", "exception", -335277064), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", -95588394), "No stacktrace available."], null);
      }
    }
  }()], null);
});
weasel.repl.repl_print = function repl_print(x) {
  var temp__4124__auto__ = cljs.core.deref.call(null, weasel.repl.ws_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, cljs.core.deref.call(null, weasel.repl.ws_connection), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "print", "print", 1299562414), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.pr_str.call(null, x)], null));
  } else {
    return null;
  }
};
weasel.repl.connect = function() {
  var connect__delegate = function(repl_server_url, p__19698) {
    var map__19701 = p__19698;
    var map__19701__$1 = cljs.core.seq_QMARK_.call(null, map__19701) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19701) : map__19701;
    var on_close = cljs.core.get.call(null, map__19701__$1, new cljs.core.Keyword(null, "on-close", "on-close", -761178394));
    var on_error = cljs.core.get.call(null, map__19701__$1, new cljs.core.Keyword(null, "on-error", "on-error", 1728533530));
    var on_open = cljs.core.get.call(null, map__19701__$1, new cljs.core.Keyword(null, "on-open", "on-open", -1391088163));
    var verbose = cljs.core.get.call(null, map__19701__$1, new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), true);
    var repl_connection = weasel.impls.websocket.websocket_connection.call(null);
    cljs.core.swap_BANG_.call(null, weasel.repl.ws_connection, cljs.core.constantly.call(null, repl_connection));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "opened", "opened", -1451743091), function(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        clojure.browser.net.transmit.call(null, repl_connection, cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "ready", "ready", 1086465795)], null)));
        if (cljs.core.truth_(verbose)) {
          console.info("Opened Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_open)) {
          return on_open.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "message", "message", -406056002), function(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        var map__19702 = cljs.reader.read_string.call(null, evt.message);
        var map__19702__$1 = cljs.core.seq_QMARK_.call(null, map__19702) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19702) : map__19702;
        var message = map__19702__$1;
        var op = cljs.core.get.call(null, map__19702__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
        var response = cljs.core.pr_str.call(null, weasel.repl.process_message.call(null, message));
        return clojure.browser.net.transmit.call(null, repl_connection, response);
      };
    }(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "closed", "closed", -919675359), function(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        cljs.core.reset_BANG_.call(null, weasel.repl.ws_connection, null);
        if (cljs.core.truth_(verbose)) {
          console.info("Closed Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_close)) {
          return on_close.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "error", "error", -978969032), function(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        if (cljs.core.truth_(verbose)) {
          console.error("WebSocket error", evt);
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_error)) {
          return on_error.call(null, evt);
        } else {
          return null;
        }
      };
    }(repl_connection, map__19701, map__19701__$1, on_close, on_error, on_open, verbose));
    return clojure.browser.net.connect.call(null, repl_connection, repl_server_url);
  };
  var connect = function(repl_server_url, var_args) {
    var p__19698 = null;
    if (arguments.length > 1) {
      p__19698 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return connect__delegate.call(this, repl_server_url, p__19698);
  };
  connect.cljs$lang$maxFixedArity = 1;
  connect.cljs$lang$applyTo = function(arglist__19703) {
    var repl_server_url = cljs.core.first(arglist__19703);
    var p__19698 = cljs.core.rest(arglist__19703);
    return connect__delegate(repl_server_url, p__19698);
  };
  connect.cljs$core$IFn$_invoke$arity$variadic = connect__delegate;
  return connect;
}();
goog.provide("clustermap.ordered_resource");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.ordered_resource.IOrderedResource = function() {
  var obj14759 = {};
  return obj14759;
}();
clustermap.ordered_resource.add_request = function add_request(this$, ch) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clustermap$ordered_resource$IOrderedResource$add_request$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clustermap$ordered_resource$IOrderedResource$add_request$arity$2(this$, ch);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clustermap.ordered_resource.add_request[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clustermap.ordered_resource.add_request["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOrderedResource.add-request", this$);
        }
      }
    }().call(null, this$, ch);
  }
};
clustermap.ordered_resource.get_response_chan = function get_response_chan(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clustermap$ordered_resource$IOrderedResource$get_response_chan$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clustermap$ordered_resource$IOrderedResource$get_response_chan$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clustermap.ordered_resource.get_response_chan[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clustermap.ordered_resource.get_response_chan["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOrderedResource.get-response-chan", this$);
        }
      }
    }().call(null, this$);
  }
};
clustermap.ordered_resource.close = function close(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.clustermap$ordered_resource$IOrderedResource$close$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.clustermap$ordered_resource$IOrderedResource$close$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = clustermap.ordered_resource.close[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = clustermap.ordered_resource.close["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOrderedResource.close", this$);
        }
      }
    }().call(null, this$);
  }
};
clustermap.ordered_resource.DiscardStaleResource = function(name, ticket, response_chan) {
  this.name = name;
  this.ticket = ticket;
  this.response_chan = response_chan;
};
clustermap.ordered_resource.DiscardStaleResource.cljs$lang$type = true;
clustermap.ordered_resource.DiscardStaleResource.cljs$lang$ctorStr = "clustermap.ordered-resource/DiscardStaleResource";
clustermap.ordered_resource.DiscardStaleResource.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "clustermap.ordered-resource/DiscardStaleResource");
};
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$ = true;
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$add_request$arity$2 = function(this$, ch) {
  var self__ = this;
  var this$__$1 = this;
  var rq_ticket = cljs.core.swap_BANG_.call(null, self__.ticket, cljs.core.inc);
  var c__5708__auto___14788 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___14788, rq_ticket, this$__$1) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto___14788, rq_ticket, this$__$1) {
          return function(state_14774) {
            var state_val_14775 = state_14774[1];
            if (state_val_14775 === 6) {
              var inst_14766 = state_14774[2];
              var state_14774__$1 = state_14774;
              var statearr_14776_14789 = state_14774__$1;
              statearr_14776_14789[2] = inst_14766;
              statearr_14776_14789[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14775 === 5) {
                var inst_14772 = state_14774[2];
                var state_14774__$1 = state_14774;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14774__$1, inst_14772);
              } else {
                if (state_val_14775 === 4) {
                  var inst_14768 = cljs.core.deref.call(null, self__.ticket);
                  var inst_14769 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + ": discarded result " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(inst_14768);
                  var inst_14770 = console.log(inst_14769);
                  var state_14774__$1 = state_14774;
                  var statearr_14777_14790 = state_14774__$1;
                  statearr_14777_14790[2] = inst_14770;
                  statearr_14777_14790[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14775 === 3) {
                    var inst_14761 = state_14774[7];
                    var state_14774__$1 = state_14774;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14774__$1, 6, self__.response_chan, inst_14761);
                  } else {
                    if (state_val_14775 === 2) {
                      var inst_14761 = state_14774[2];
                      var inst_14762 = cljs.core.deref.call(null, self__.ticket);
                      var inst_14763 = cljs.core._EQ_.call(null, rq_ticket, inst_14762);
                      var state_14774__$1 = function() {
                        var statearr_14778 = state_14774;
                        statearr_14778[7] = inst_14761;
                        return statearr_14778;
                      }();
                      if (inst_14763) {
                        var statearr_14779_14791 = state_14774__$1;
                        statearr_14779_14791[1] = 3;
                      } else {
                        var statearr_14780_14792 = state_14774__$1;
                        statearr_14780_14792[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14775 === 1) {
                        var state_14774__$1 = state_14774;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14774__$1, 2, ch);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto___14788, rq_ticket, this$__$1);
        return function(switch__5693__auto__, c__5708__auto___14788, rq_ticket, this$__$1) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_14784 = [null, null, null, null, null, null, null, null];
              statearr_14784[0] = state_machine__5694__auto__;
              statearr_14784[1] = 1;
              return statearr_14784;
            };
            var state_machine__5694__auto____1 = function(state_14774) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_14774);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e14785) {
                    if (e14785 instanceof Object) {
                      var ex__5697__auto__ = e14785;
                      var statearr_14786_14793 = state_14774;
                      statearr_14786_14793[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14774);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14785;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14794 = state_14774;
                  state_14774 = G__14794;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_14774) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_14774);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto___14788, rq_ticket, this$__$1);
      }();
      var state__5710__auto__ = function() {
        var statearr_14787 = f__5709__auto__.call(null);
        statearr_14787[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___14788;
        return statearr_14787;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto___14788, rq_ticket, this$__$1));
  return null;
};
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$get_response_chan$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.response_chan;
};
clustermap.ordered_resource.DiscardStaleResource.prototype.clustermap$ordered_resource$IOrderedResource$close$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.async.close_BANG_.call(null, self__.response_chan);
};
clustermap.ordered_resource.__GT_DiscardStaleResource = function __GT_DiscardStaleResource(name, ticket, response_chan) {
  return new clustermap.ordered_resource.DiscardStaleResource(name, ticket, response_chan);
};
clustermap.ordered_resource.make_discard_stale_resource = function make_discard_stale_resource(name) {
  return new clustermap.ordered_resource.DiscardStaleResource(name, cljs.core.atom.call(null, 0), cljs.core.async.chan.call(null));
};
clustermap.ordered_resource.api_call = function() {
  var api_call__delegate = function(ordered_resource, api_fn, args) {
    return clustermap.ordered_resource.add_request.call(null, ordered_resource, cljs.core.apply.call(null, api_fn, args));
  };
  var api_call = function(ordered_resource, api_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return api_call__delegate.call(this, ordered_resource, api_fn, args);
  };
  api_call.cljs$lang$maxFixedArity = 2;
  api_call.cljs$lang$applyTo = function(arglist__14795) {
    var ordered_resource = cljs.core.first(arglist__14795);
    arglist__14795 = cljs.core.next(arglist__14795);
    var api_fn = cljs.core.first(arglist__14795);
    var args = cljs.core.rest(arglist__14795);
    return api_call__delegate(ordered_resource, api_fn, args);
  };
  api_call.cljs$core$IFn$_invoke$arity$variadic = api_call__delegate;
  return api_call;
}();
clustermap.ordered_resource.retrieve_responses = function retrieve_responses(ordered_resource, f) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_14851) {
            var state_val_14852 = state_14851[1];
            if (state_val_14852 === 7) {
              var inst_14842 = state_14851[2];
              var state_14851__$1 = state_14851;
              if (cljs.core.truth_(inst_14842)) {
                var statearr_14853_14872 = state_14851__$1;
                statearr_14853_14872[1] = 8;
              } else {
                var statearr_14854_14873 = state_14851__$1;
                statearr_14854_14873[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14852 === 1) {
                var state_14851__$1 = state_14851;
                var statearr_14855_14874 = state_14851__$1;
                statearr_14855_14874[2] = null;
                statearr_14855_14874[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14852 === 4) {
                  var inst_14837 = state_14851[7];
                  var inst_14837__$1 = state_14851[2];
                  var state_14851__$1 = function() {
                    var statearr_14856 = state_14851;
                    statearr_14856[7] = inst_14837__$1;
                    return statearr_14856;
                  }();
                  if (cljs.core.truth_(inst_14837__$1)) {
                    var statearr_14857_14875 = state_14851__$1;
                    statearr_14857_14875[1] = 5;
                  } else {
                    var statearr_14858_14876 = state_14851__$1;
                    statearr_14858_14876[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14852 === 6) {
                    var state_14851__$1 = state_14851;
                    var statearr_14859_14877 = state_14851__$1;
                    statearr_14859_14877[2] = null;
                    statearr_14859_14877[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14852 === 3) {
                      var inst_14849 = state_14851[2];
                      var state_14851__$1 = state_14851;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14851__$1, inst_14849);
                    } else {
                      if (state_val_14852 === 2) {
                        var inst_14835 = clustermap.ordered_resource.get_response_chan.call(null, ordered_resource);
                        var state_14851__$1 = state_14851;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14851__$1, 4, inst_14835);
                      } else {
                        if (state_val_14852 === 9) {
                          var state_14851__$1 = state_14851;
                          var statearr_14860_14878 = state_14851__$1;
                          statearr_14860_14878[2] = null;
                          statearr_14860_14878[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14852 === 5) {
                            var inst_14837 = state_14851[7];
                            var inst_14839 = f.call(null, inst_14837);
                            var state_14851__$1 = function() {
                              var statearr_14861 = state_14851;
                              statearr_14861[8] = inst_14839;
                              return statearr_14861;
                            }();
                            var statearr_14862_14879 = state_14851__$1;
                            statearr_14862_14879[2] = true;
                            statearr_14862_14879[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14852 === 10) {
                              var inst_14847 = state_14851[2];
                              var state_14851__$1 = state_14851;
                              var statearr_14863_14880 = state_14851__$1;
                              statearr_14863_14880[2] = inst_14847;
                              statearr_14863_14880[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14852 === 8) {
                                var state_14851__$1 = state_14851;
                                var statearr_14864_14881 = state_14851__$1;
                                statearr_14864_14881[2] = null;
                                statearr_14864_14881[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_14868 = [null, null, null, null, null, null, null, null, null];
              statearr_14868[0] = state_machine__5694__auto__;
              statearr_14868[1] = 1;
              return statearr_14868;
            };
            var state_machine__5694__auto____1 = function(state_14851) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_14851);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e14869) {
                    if (e14869 instanceof Object) {
                      var ex__5697__auto__ = e14869;
                      var statearr_14870_14882 = state_14851;
                      statearr_14870_14882[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14851);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14869;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14883 = state_14851;
                  state_14851 = G__14883;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_14851) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_14851);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_14871 = f__5709__auto__.call(null);
        statearr_14871[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_14871;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var a = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__18759) {
    var opts__9486__auto__ = cljs.core.first(arglist__18759);
    var children__9487__auto__ = cljs.core.rest(arglist__18759);
    return a__delegate(opts__9486__auto__, children__9487__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var abbr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__18760) {
    var opts__9486__auto__ = cljs.core.first(arglist__18760);
    var children__9487__auto__ = cljs.core.rest(arglist__18760);
    return abbr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var address = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__18761) {
    var opts__9486__auto__ = cljs.core.first(arglist__18761);
    var children__9487__auto__ = cljs.core.rest(arglist__18761);
    return address__delegate(opts__9486__auto__, children__9487__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var area = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__18762) {
    var opts__9486__auto__ = cljs.core.first(arglist__18762);
    var children__9487__auto__ = cljs.core.rest(arglist__18762);
    return area__delegate(opts__9486__auto__, children__9487__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var article = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__18763) {
    var opts__9486__auto__ = cljs.core.first(arglist__18763);
    var children__9487__auto__ = cljs.core.rest(arglist__18763);
    return article__delegate(opts__9486__auto__, children__9487__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var aside = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__18764) {
    var opts__9486__auto__ = cljs.core.first(arglist__18764);
    var children__9487__auto__ = cljs.core.rest(arglist__18764);
    return aside__delegate(opts__9486__auto__, children__9487__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var audio = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__18765) {
    var opts__9486__auto__ = cljs.core.first(arglist__18765);
    var children__9487__auto__ = cljs.core.rest(arglist__18765);
    return audio__delegate(opts__9486__auto__, children__9487__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var b = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__18766) {
    var opts__9486__auto__ = cljs.core.first(arglist__18766);
    var children__9487__auto__ = cljs.core.rest(arglist__18766);
    return b__delegate(opts__9486__auto__, children__9487__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var base = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__18767) {
    var opts__9486__auto__ = cljs.core.first(arglist__18767);
    var children__9487__auto__ = cljs.core.rest(arglist__18767);
    return base__delegate(opts__9486__auto__, children__9487__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var bdi = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__18768) {
    var opts__9486__auto__ = cljs.core.first(arglist__18768);
    var children__9487__auto__ = cljs.core.rest(arglist__18768);
    return bdi__delegate(opts__9486__auto__, children__9487__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var bdo = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__18769) {
    var opts__9486__auto__ = cljs.core.first(arglist__18769);
    var children__9487__auto__ = cljs.core.rest(arglist__18769);
    return bdo__delegate(opts__9486__auto__, children__9487__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var big = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__18770) {
    var opts__9486__auto__ = cljs.core.first(arglist__18770);
    var children__9487__auto__ = cljs.core.rest(arglist__18770);
    return big__delegate(opts__9486__auto__, children__9487__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var blockquote = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__18771) {
    var opts__9486__auto__ = cljs.core.first(arglist__18771);
    var children__9487__auto__ = cljs.core.rest(arglist__18771);
    return blockquote__delegate(opts__9486__auto__, children__9487__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var body = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__18772) {
    var opts__9486__auto__ = cljs.core.first(arglist__18772);
    var children__9487__auto__ = cljs.core.rest(arglist__18772);
    return body__delegate(opts__9486__auto__, children__9487__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var br = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__18773) {
    var opts__9486__auto__ = cljs.core.first(arglist__18773);
    var children__9487__auto__ = cljs.core.rest(arglist__18773);
    return br__delegate(opts__9486__auto__, children__9487__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var button = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__18774) {
    var opts__9486__auto__ = cljs.core.first(arglist__18774);
    var children__9487__auto__ = cljs.core.rest(arglist__18774);
    return button__delegate(opts__9486__auto__, children__9487__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var canvas = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__18775) {
    var opts__9486__auto__ = cljs.core.first(arglist__18775);
    var children__9487__auto__ = cljs.core.rest(arglist__18775);
    return canvas__delegate(opts__9486__auto__, children__9487__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var caption = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__18776) {
    var opts__9486__auto__ = cljs.core.first(arglist__18776);
    var children__9487__auto__ = cljs.core.rest(arglist__18776);
    return caption__delegate(opts__9486__auto__, children__9487__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var cite = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__18777) {
    var opts__9486__auto__ = cljs.core.first(arglist__18777);
    var children__9487__auto__ = cljs.core.rest(arglist__18777);
    return cite__delegate(opts__9486__auto__, children__9487__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var code = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__18778) {
    var opts__9486__auto__ = cljs.core.first(arglist__18778);
    var children__9487__auto__ = cljs.core.rest(arglist__18778);
    return code__delegate(opts__9486__auto__, children__9487__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var col = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__18779) {
    var opts__9486__auto__ = cljs.core.first(arglist__18779);
    var children__9487__auto__ = cljs.core.rest(arglist__18779);
    return col__delegate(opts__9486__auto__, children__9487__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var colgroup = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__18780) {
    var opts__9486__auto__ = cljs.core.first(arglist__18780);
    var children__9487__auto__ = cljs.core.rest(arglist__18780);
    return colgroup__delegate(opts__9486__auto__, children__9487__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var data = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__18781) {
    var opts__9486__auto__ = cljs.core.first(arglist__18781);
    var children__9487__auto__ = cljs.core.rest(arglist__18781);
    return data__delegate(opts__9486__auto__, children__9487__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var datalist = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__18782) {
    var opts__9486__auto__ = cljs.core.first(arglist__18782);
    var children__9487__auto__ = cljs.core.rest(arglist__18782);
    return datalist__delegate(opts__9486__auto__, children__9487__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dd = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__18783) {
    var opts__9486__auto__ = cljs.core.first(arglist__18783);
    var children__9487__auto__ = cljs.core.rest(arglist__18783);
    return dd__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var del = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__18784) {
    var opts__9486__auto__ = cljs.core.first(arglist__18784);
    var children__9487__auto__ = cljs.core.rest(arglist__18784);
    return del__delegate(opts__9486__auto__, children__9487__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dfn = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__18785) {
    var opts__9486__auto__ = cljs.core.first(arglist__18785);
    var children__9487__auto__ = cljs.core.rest(arglist__18785);
    return dfn__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var div = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__18786) {
    var opts__9486__auto__ = cljs.core.first(arglist__18786);
    var children__9487__auto__ = cljs.core.rest(arglist__18786);
    return div__delegate(opts__9486__auto__, children__9487__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dl = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__18787) {
    var opts__9486__auto__ = cljs.core.first(arglist__18787);
    var children__9487__auto__ = cljs.core.rest(arglist__18787);
    return dl__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var dt = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__18788) {
    var opts__9486__auto__ = cljs.core.first(arglist__18788);
    var children__9487__auto__ = cljs.core.rest(arglist__18788);
    return dt__delegate(opts__9486__auto__, children__9487__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var em = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__18789) {
    var opts__9486__auto__ = cljs.core.first(arglist__18789);
    var children__9487__auto__ = cljs.core.rest(arglist__18789);
    return em__delegate(opts__9486__auto__, children__9487__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var embed = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__18790) {
    var opts__9486__auto__ = cljs.core.first(arglist__18790);
    var children__9487__auto__ = cljs.core.rest(arglist__18790);
    return embed__delegate(opts__9486__auto__, children__9487__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var fieldset = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__18791) {
    var opts__9486__auto__ = cljs.core.first(arglist__18791);
    var children__9487__auto__ = cljs.core.rest(arglist__18791);
    return fieldset__delegate(opts__9486__auto__, children__9487__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var figcaption = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__18792) {
    var opts__9486__auto__ = cljs.core.first(arglist__18792);
    var children__9487__auto__ = cljs.core.rest(arglist__18792);
    return figcaption__delegate(opts__9486__auto__, children__9487__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var figure = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__18793) {
    var opts__9486__auto__ = cljs.core.first(arglist__18793);
    var children__9487__auto__ = cljs.core.rest(arglist__18793);
    return figure__delegate(opts__9486__auto__, children__9487__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var footer = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__18794) {
    var opts__9486__auto__ = cljs.core.first(arglist__18794);
    var children__9487__auto__ = cljs.core.rest(arglist__18794);
    return footer__delegate(opts__9486__auto__, children__9487__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var form = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__18795) {
    var opts__9486__auto__ = cljs.core.first(arglist__18795);
    var children__9487__auto__ = cljs.core.rest(arglist__18795);
    return form__delegate(opts__9486__auto__, children__9487__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h1 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__18796) {
    var opts__9486__auto__ = cljs.core.first(arglist__18796);
    var children__9487__auto__ = cljs.core.rest(arglist__18796);
    return h1__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h2 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__18797) {
    var opts__9486__auto__ = cljs.core.first(arglist__18797);
    var children__9487__auto__ = cljs.core.rest(arglist__18797);
    return h2__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h3 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__18798) {
    var opts__9486__auto__ = cljs.core.first(arglist__18798);
    var children__9487__auto__ = cljs.core.rest(arglist__18798);
    return h3__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h4 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__18799) {
    var opts__9486__auto__ = cljs.core.first(arglist__18799);
    var children__9487__auto__ = cljs.core.rest(arglist__18799);
    return h4__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h5 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__18800) {
    var opts__9486__auto__ = cljs.core.first(arglist__18800);
    var children__9487__auto__ = cljs.core.rest(arglist__18800);
    return h5__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var h6 = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__18801) {
    var opts__9486__auto__ = cljs.core.first(arglist__18801);
    var children__9487__auto__ = cljs.core.rest(arglist__18801);
    return h6__delegate(opts__9486__auto__, children__9487__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var head = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__18802) {
    var opts__9486__auto__ = cljs.core.first(arglist__18802);
    var children__9487__auto__ = cljs.core.rest(arglist__18802);
    return head__delegate(opts__9486__auto__, children__9487__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var header = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__18803) {
    var opts__9486__auto__ = cljs.core.first(arglist__18803);
    var children__9487__auto__ = cljs.core.rest(arglist__18803);
    return header__delegate(opts__9486__auto__, children__9487__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var hr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__18804) {
    var opts__9486__auto__ = cljs.core.first(arglist__18804);
    var children__9487__auto__ = cljs.core.rest(arglist__18804);
    return hr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var html = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__18805) {
    var opts__9486__auto__ = cljs.core.first(arglist__18805);
    var children__9487__auto__ = cljs.core.rest(arglist__18805);
    return html__delegate(opts__9486__auto__, children__9487__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var i = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__18806) {
    var opts__9486__auto__ = cljs.core.first(arglist__18806);
    var children__9487__auto__ = cljs.core.rest(arglist__18806);
    return i__delegate(opts__9486__auto__, children__9487__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var iframe = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__18807) {
    var opts__9486__auto__ = cljs.core.first(arglist__18807);
    var children__9487__auto__ = cljs.core.rest(arglist__18807);
    return iframe__delegate(opts__9486__auto__, children__9487__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var img = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__18808) {
    var opts__9486__auto__ = cljs.core.first(arglist__18808);
    var children__9487__auto__ = cljs.core.rest(arglist__18808);
    return img__delegate(opts__9486__auto__, children__9487__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ins = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__18809) {
    var opts__9486__auto__ = cljs.core.first(arglist__18809);
    var children__9487__auto__ = cljs.core.rest(arglist__18809);
    return ins__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var kbd = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__18810) {
    var opts__9486__auto__ = cljs.core.first(arglist__18810);
    var children__9487__auto__ = cljs.core.rest(arglist__18810);
    return kbd__delegate(opts__9486__auto__, children__9487__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var keygen = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__18811) {
    var opts__9486__auto__ = cljs.core.first(arglist__18811);
    var children__9487__auto__ = cljs.core.rest(arglist__18811);
    return keygen__delegate(opts__9486__auto__, children__9487__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var label = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__18812) {
    var opts__9486__auto__ = cljs.core.first(arglist__18812);
    var children__9487__auto__ = cljs.core.rest(arglist__18812);
    return label__delegate(opts__9486__auto__, children__9487__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var legend = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__18813) {
    var opts__9486__auto__ = cljs.core.first(arglist__18813);
    var children__9487__auto__ = cljs.core.rest(arglist__18813);
    return legend__delegate(opts__9486__auto__, children__9487__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var li = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__18814) {
    var opts__9486__auto__ = cljs.core.first(arglist__18814);
    var children__9487__auto__ = cljs.core.rest(arglist__18814);
    return li__delegate(opts__9486__auto__, children__9487__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var link = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__18815) {
    var opts__9486__auto__ = cljs.core.first(arglist__18815);
    var children__9487__auto__ = cljs.core.rest(arglist__18815);
    return link__delegate(opts__9486__auto__, children__9487__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var main = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__18816) {
    var opts__9486__auto__ = cljs.core.first(arglist__18816);
    var children__9487__auto__ = cljs.core.rest(arglist__18816);
    return main__delegate(opts__9486__auto__, children__9487__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var map = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__18817) {
    var opts__9486__auto__ = cljs.core.first(arglist__18817);
    var children__9487__auto__ = cljs.core.rest(arglist__18817);
    return map__delegate(opts__9486__auto__, children__9487__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var mark = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__18818) {
    var opts__9486__auto__ = cljs.core.first(arglist__18818);
    var children__9487__auto__ = cljs.core.rest(arglist__18818);
    return mark__delegate(opts__9486__auto__, children__9487__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var menu = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__18819) {
    var opts__9486__auto__ = cljs.core.first(arglist__18819);
    var children__9487__auto__ = cljs.core.rest(arglist__18819);
    return menu__delegate(opts__9486__auto__, children__9487__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var menuitem = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__18820) {
    var opts__9486__auto__ = cljs.core.first(arglist__18820);
    var children__9487__auto__ = cljs.core.rest(arglist__18820);
    return menuitem__delegate(opts__9486__auto__, children__9487__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var meta = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__18821) {
    var opts__9486__auto__ = cljs.core.first(arglist__18821);
    var children__9487__auto__ = cljs.core.rest(arglist__18821);
    return meta__delegate(opts__9486__auto__, children__9487__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var meter = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__18822) {
    var opts__9486__auto__ = cljs.core.first(arglist__18822);
    var children__9487__auto__ = cljs.core.rest(arglist__18822);
    return meter__delegate(opts__9486__auto__, children__9487__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var nav = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__18823) {
    var opts__9486__auto__ = cljs.core.first(arglist__18823);
    var children__9487__auto__ = cljs.core.rest(arglist__18823);
    return nav__delegate(opts__9486__auto__, children__9487__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var noscript = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__18824) {
    var opts__9486__auto__ = cljs.core.first(arglist__18824);
    var children__9487__auto__ = cljs.core.rest(arglist__18824);
    return noscript__delegate(opts__9486__auto__, children__9487__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var object = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__18825) {
    var opts__9486__auto__ = cljs.core.first(arglist__18825);
    var children__9487__auto__ = cljs.core.rest(arglist__18825);
    return object__delegate(opts__9486__auto__, children__9487__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ol = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__18826) {
    var opts__9486__auto__ = cljs.core.first(arglist__18826);
    var children__9487__auto__ = cljs.core.rest(arglist__18826);
    return ol__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var optgroup = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__18827) {
    var opts__9486__auto__ = cljs.core.first(arglist__18827);
    var children__9487__auto__ = cljs.core.rest(arglist__18827);
    return optgroup__delegate(opts__9486__auto__, children__9487__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var output = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__18828) {
    var opts__9486__auto__ = cljs.core.first(arglist__18828);
    var children__9487__auto__ = cljs.core.rest(arglist__18828);
    return output__delegate(opts__9486__auto__, children__9487__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var p = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__18829) {
    var opts__9486__auto__ = cljs.core.first(arglist__18829);
    var children__9487__auto__ = cljs.core.rest(arglist__18829);
    return p__delegate(opts__9486__auto__, children__9487__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var param = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__18830) {
    var opts__9486__auto__ = cljs.core.first(arglist__18830);
    var children__9487__auto__ = cljs.core.rest(arglist__18830);
    return param__delegate(opts__9486__auto__, children__9487__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var pre = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__18831) {
    var opts__9486__auto__ = cljs.core.first(arglist__18831);
    var children__9487__auto__ = cljs.core.rest(arglist__18831);
    return pre__delegate(opts__9486__auto__, children__9487__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var progress = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__18832) {
    var opts__9486__auto__ = cljs.core.first(arglist__18832);
    var children__9487__auto__ = cljs.core.rest(arglist__18832);
    return progress__delegate(opts__9486__auto__, children__9487__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var q = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__18833) {
    var opts__9486__auto__ = cljs.core.first(arglist__18833);
    var children__9487__auto__ = cljs.core.rest(arglist__18833);
    return q__delegate(opts__9486__auto__, children__9487__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var rp = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__18834) {
    var opts__9486__auto__ = cljs.core.first(arglist__18834);
    var children__9487__auto__ = cljs.core.rest(arglist__18834);
    return rp__delegate(opts__9486__auto__, children__9487__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var rt = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__18835) {
    var opts__9486__auto__ = cljs.core.first(arglist__18835);
    var children__9487__auto__ = cljs.core.rest(arglist__18835);
    return rt__delegate(opts__9486__auto__, children__9487__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ruby = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__18836) {
    var opts__9486__auto__ = cljs.core.first(arglist__18836);
    var children__9487__auto__ = cljs.core.rest(arglist__18836);
    return ruby__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var s = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__18837) {
    var opts__9486__auto__ = cljs.core.first(arglist__18837);
    var children__9487__auto__ = cljs.core.rest(arglist__18837);
    return s__delegate(opts__9486__auto__, children__9487__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var samp = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__18838) {
    var opts__9486__auto__ = cljs.core.first(arglist__18838);
    var children__9487__auto__ = cljs.core.rest(arglist__18838);
    return samp__delegate(opts__9486__auto__, children__9487__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var script = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__18839) {
    var opts__9486__auto__ = cljs.core.first(arglist__18839);
    var children__9487__auto__ = cljs.core.rest(arglist__18839);
    return script__delegate(opts__9486__auto__, children__9487__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var section = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__18840) {
    var opts__9486__auto__ = cljs.core.first(arglist__18840);
    var children__9487__auto__ = cljs.core.rest(arglist__18840);
    return section__delegate(opts__9486__auto__, children__9487__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var select = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__18841) {
    var opts__9486__auto__ = cljs.core.first(arglist__18841);
    var children__9487__auto__ = cljs.core.rest(arglist__18841);
    return select__delegate(opts__9486__auto__, children__9487__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var small = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__18842) {
    var opts__9486__auto__ = cljs.core.first(arglist__18842);
    var children__9487__auto__ = cljs.core.rest(arglist__18842);
    return small__delegate(opts__9486__auto__, children__9487__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var source = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__18843) {
    var opts__9486__auto__ = cljs.core.first(arglist__18843);
    var children__9487__auto__ = cljs.core.rest(arglist__18843);
    return source__delegate(opts__9486__auto__, children__9487__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var span = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__18844) {
    var opts__9486__auto__ = cljs.core.first(arglist__18844);
    var children__9487__auto__ = cljs.core.rest(arglist__18844);
    return span__delegate(opts__9486__auto__, children__9487__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var strong = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__18845) {
    var opts__9486__auto__ = cljs.core.first(arglist__18845);
    var children__9487__auto__ = cljs.core.rest(arglist__18845);
    return strong__delegate(opts__9486__auto__, children__9487__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var style = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__18846) {
    var opts__9486__auto__ = cljs.core.first(arglist__18846);
    var children__9487__auto__ = cljs.core.rest(arglist__18846);
    return style__delegate(opts__9486__auto__, children__9487__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var sub = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__18847) {
    var opts__9486__auto__ = cljs.core.first(arglist__18847);
    var children__9487__auto__ = cljs.core.rest(arglist__18847);
    return sub__delegate(opts__9486__auto__, children__9487__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var summary = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__18848) {
    var opts__9486__auto__ = cljs.core.first(arglist__18848);
    var children__9487__auto__ = cljs.core.rest(arglist__18848);
    return summary__delegate(opts__9486__auto__, children__9487__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var sup = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__18849) {
    var opts__9486__auto__ = cljs.core.first(arglist__18849);
    var children__9487__auto__ = cljs.core.rest(arglist__18849);
    return sup__delegate(opts__9486__auto__, children__9487__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var table = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__18850) {
    var opts__9486__auto__ = cljs.core.first(arglist__18850);
    var children__9487__auto__ = cljs.core.rest(arglist__18850);
    return table__delegate(opts__9486__auto__, children__9487__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tbody = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__18851) {
    var opts__9486__auto__ = cljs.core.first(arglist__18851);
    var children__9487__auto__ = cljs.core.rest(arglist__18851);
    return tbody__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var td = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__18852) {
    var opts__9486__auto__ = cljs.core.first(arglist__18852);
    var children__9487__auto__ = cljs.core.rest(arglist__18852);
    return td__delegate(opts__9486__auto__, children__9487__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tfoot = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__18853) {
    var opts__9486__auto__ = cljs.core.first(arglist__18853);
    var children__9487__auto__ = cljs.core.rest(arglist__18853);
    return tfoot__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var th = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__18854) {
    var opts__9486__auto__ = cljs.core.first(arglist__18854);
    var children__9487__auto__ = cljs.core.rest(arglist__18854);
    return th__delegate(opts__9486__auto__, children__9487__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var thead = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__18855) {
    var opts__9486__auto__ = cljs.core.first(arglist__18855);
    var children__9487__auto__ = cljs.core.rest(arglist__18855);
    return thead__delegate(opts__9486__auto__, children__9487__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var time = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__18856) {
    var opts__9486__auto__ = cljs.core.first(arglist__18856);
    var children__9487__auto__ = cljs.core.rest(arglist__18856);
    return time__delegate(opts__9486__auto__, children__9487__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var title = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__18857) {
    var opts__9486__auto__ = cljs.core.first(arglist__18857);
    var children__9487__auto__ = cljs.core.rest(arglist__18857);
    return title__delegate(opts__9486__auto__, children__9487__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__18858) {
    var opts__9486__auto__ = cljs.core.first(arglist__18858);
    var children__9487__auto__ = cljs.core.rest(arglist__18858);
    return tr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var track = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__18859) {
    var opts__9486__auto__ = cljs.core.first(arglist__18859);
    var children__9487__auto__ = cljs.core.rest(arglist__18859);
    return track__delegate(opts__9486__auto__, children__9487__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var u = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__18860) {
    var opts__9486__auto__ = cljs.core.first(arglist__18860);
    var children__9487__auto__ = cljs.core.rest(arglist__18860);
    return u__delegate(opts__9486__auto__, children__9487__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ul = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__18861) {
    var opts__9486__auto__ = cljs.core.first(arglist__18861);
    var children__9487__auto__ = cljs.core.rest(arglist__18861);
    return ul__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var var$ = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__18862) {
    var opts__9486__auto__ = cljs.core.first(arglist__18862);
    var children__9487__auto__ = cljs.core.rest(arglist__18862);
    return var$__delegate(opts__9486__auto__, children__9487__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var video = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__18863) {
    var opts__9486__auto__ = cljs.core.first(arglist__18863);
    var children__9487__auto__ = cljs.core.rest(arglist__18863);
    return video__delegate(opts__9486__auto__, children__9487__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var wbr = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__18864) {
    var opts__9486__auto__ = cljs.core.first(arglist__18864);
    var children__9487__auto__ = cljs.core.rest(arglist__18864);
    return wbr__delegate(opts__9486__auto__, children__9487__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var circle = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__18865) {
    var opts__9486__auto__ = cljs.core.first(arglist__18865);
    var children__9487__auto__ = cljs.core.rest(arglist__18865);
    return circle__delegate(opts__9486__auto__, children__9487__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var ellipse = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__18866) {
    var opts__9486__auto__ = cljs.core.first(arglist__18866);
    var children__9487__auto__ = cljs.core.rest(arglist__18866);
    return ellipse__delegate(opts__9486__auto__, children__9487__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var g = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__18867) {
    var opts__9486__auto__ = cljs.core.first(arglist__18867);
    var children__9487__auto__ = cljs.core.rest(arglist__18867);
    return g__delegate(opts__9486__auto__, children__9487__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var line = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__18868) {
    var opts__9486__auto__ = cljs.core.first(arglist__18868);
    var children__9487__auto__ = cljs.core.rest(arglist__18868);
    return line__delegate(opts__9486__auto__, children__9487__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var path = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__18869) {
    var opts__9486__auto__ = cljs.core.first(arglist__18869);
    var children__9487__auto__ = cljs.core.rest(arglist__18869);
    return path__delegate(opts__9486__auto__, children__9487__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var polyline = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__18870) {
    var opts__9486__auto__ = cljs.core.first(arglist__18870);
    var children__9487__auto__ = cljs.core.rest(arglist__18870);
    return polyline__delegate(opts__9486__auto__, children__9487__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var rect = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__18871) {
    var opts__9486__auto__ = cljs.core.first(arglist__18871);
    var children__9487__auto__ = cljs.core.rest(arglist__18871);
    return rect__delegate(opts__9486__auto__, children__9487__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var svg = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__18872) {
    var opts__9486__auto__ = cljs.core.first(arglist__18872);
    var children__9487__auto__ = cljs.core.rest(arglist__18872);
    return svg__delegate(opts__9486__auto__, children__9487__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var text = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__18873) {
    var opts__9486__auto__ = cljs.core.first(arglist__18873);
    var children__9487__auto__ = cljs.core.rest(arglist__18873);
    return text__delegate(opts__9486__auto__, children__9487__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var defs = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__18874) {
    var opts__9486__auto__ = cljs.core.first(arglist__18874);
    var children__9487__auto__ = cljs.core.rest(arglist__18874);
    return defs__delegate(opts__9486__auto__, children__9487__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var linearGradient = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__18875) {
    var opts__9486__auto__ = cljs.core.first(arglist__18875);
    var children__9487__auto__ = cljs.core.rest(arglist__18875);
    return linearGradient__delegate(opts__9486__auto__, children__9487__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var polygon = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__18876) {
    var opts__9486__auto__ = cljs.core.first(arglist__18876);
    var children__9487__auto__ = cljs.core.rest(arglist__18876);
    return polygon__delegate(opts__9486__auto__, children__9487__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var radialGradient = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__18877) {
    var opts__9486__auto__ = cljs.core.first(arglist__18877);
    var children__9487__auto__ = cljs.core.rest(arglist__18877);
    return radialGradient__delegate(opts__9486__auto__, children__9487__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var stop = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__18878) {
    var opts__9486__auto__ = cljs.core.first(arglist__18878);
    var children__9487__auto__ = cljs.core.rest(arglist__18878);
    return stop__delegate(opts__9486__auto__, children__9487__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__9486__auto__, children__9487__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9486__auto__, children__9487__auto__)));
  };
  var tspan = function(opts__9486__auto__, var_args) {
    var children__9487__auto__ = null;
    if (arguments.length > 1) {
      children__9487__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__9486__auto__, children__9487__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__18879) {
    var opts__9486__auto__ = cljs.core.first(arglist__18879);
    var children__9487__auto__ = cljs.core.rest(arglist__18879);
    return tspan__delegate(opts__9486__auto__, children__9487__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj18881 = {};
  return obj18881;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.display_name[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.display_name["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj18883 = {};
  return obj18883;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.init_state[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.init_state["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj18885 = {};
  return obj18885;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.should_update[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.should_update["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj18887 = {};
  return obj18887;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_mount[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_mount["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj18889 = {};
  return obj18889;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.did_mount[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.did_mount["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj18891 = {};
  return obj18891;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_unmount[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_unmount["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj18893 = {};
  return obj18893;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_update[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_update["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj18895 = {};
  return obj18895;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.did_update[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.did_update["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj18897 = {};
  return obj18897;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.will_receive_props[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.will_receive_props["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj18899 = {};
  return obj18899;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.render[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.render["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj18901 = {};
  return obj18901;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core.render_state[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core.render_state["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj18903 = {};
  return obj18903;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj18905 = {};
  return obj18905;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj18907 = {};
  return obj18907;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_render_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_render_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._get_render_state[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._get_render_state["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj18909 = {};
  return obj18909;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj18911 = {};
  return obj18911;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._get_queue[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._get_queue["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj18913 = {};
  return obj18913;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._value[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._value["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj18915 = {};
  return obj18915;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._path[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._path["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._state[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._state["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj18917 = {};
  return obj18917;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3546__auto__ = value;
      if (and__3546__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4185__auto__ = value == null ? null : value;
      return function() {
        var or__3558__auto__ = om.core._to_cursor[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._to_cursor["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3546__auto__ = value;
      if (and__3546__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4185__auto__ = value == null ? null : value;
      return function() {
        var or__3558__auto__ = om.core._to_cursor[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = om.core._to_cursor["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj18919 = {};
  return obj18919;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._derive[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._derive["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj18921 = {};
  return obj18921;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3546__auto__ = cursor;
    if (and__3546__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4185__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3558__auto__ = om.core._transact_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj18923 = {};
  return obj18923;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._listen_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3546__auto__ = x;
    if (and__3546__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4185__auto__ = x == null ? null : x;
    return function() {
      var or__3558__auto__ = om.core._notify_BANG_[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__18925 = state;
    if (G__18925) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18925.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__18925.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__18925);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__18925);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__18927 = x;
  if (G__18927) {
    var bit__4208__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3558__auto__ = bit__4208__auto__;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return G__18927.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__18927.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__18927);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__18927);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_18929 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18929;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__18931 = state;
    G__18931["__om_prev_state"] = state["__om_state"];
    G__18931["__om_state"] = pending_state;
    G__18931["__om_pending_state"] = null;
    return G__18931;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3558__auto__ = props;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3558__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18932 = c;
    if (G__18932) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18932.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__18932.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__18932);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__18932);
    }
  }()) {
    var state_18959 = this$.state;
    var _STAR_read_enabled_STAR_18933_18960 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3558__auto__ = state_18959["__om_prev_state"];
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return state_18959["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18933_18960;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18934 = c;
    if (G__18934) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18934.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__18934.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__18934);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__18934);
    }
  }()) {
    var _STAR_read_enabled_STAR_18935 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18935;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18936 = c;
    if (G__18936) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18936.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__18936.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__18936);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__18936);
    }
  }()) {
    var _STAR_read_enabled_STAR_18937 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18937;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_18938 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__18939 = c;
      if (G__18939) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__18939.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__18939.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__18939);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__18939);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      var cursor = props["__om_cursor"];
      var next_cursor = next_props["__om_cursor"];
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
        return true;
      } else {
        if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
          return true;
        } else {
          if (!(state["__om_pending_state"] == null)) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18938;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_18940 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__18941 = c;
      if (G__18941) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__18941.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__18941.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__18941);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__18941);
      }
    }()) {
      var _STAR_parent_STAR_18942 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_18943 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_18944 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_18944;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_18943;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_18942;
      }
    } else {
      if (function() {
        var G__18945 = c;
        if (G__18945) {
          var bit__4208__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = bit__4208__auto__;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return G__18945.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__18945.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__18945);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__18945);
        }
      }()) {
        var _STAR_parent_STAR_18946 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_18947 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_18948 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_18948;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_18947;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_18946;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18940;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_18961 = om.core.children.call(null, this$);
  if (function() {
    var G__18949 = c_18961;
    if (G__18949) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18949.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__18949.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__18949);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__18949);
    }
  }()) {
    var state_18962 = this$.state;
    var _STAR_read_enabled_STAR_18950_18963 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_18961, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18950_18963;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3558__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__18951 = c;
    if (G__18951) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18951.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__18951.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__18951);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__18951);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_18952 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18952;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3558__auto__ = id;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18953 = c;
    if (G__18953) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18953.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__18953.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__18953);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__18953);
    }
  }()) {
    var _STAR_read_enabled_STAR_18954 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18954;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__18955 = c;
    if (G__18955) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18955.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__18955.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__18955);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__18955);
    }
  }()) {
    var _STAR_read_enabled_STAR_18956 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18956;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_18964 = om.core.children.call(null, this$);
  if (function() {
    var G__18957 = c_18964;
    if (G__18957) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__18957.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__18957.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__18957);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__18957);
    }
  }()) {
    var _STAR_read_enabled_STAR_18958_18965 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_18964);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18958_18965;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x18969 = obj;
  x18969.om$core$IGetState$ = true;
  x18969.om$core$IGetState$_get_state$arity$1 = function(x18969) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3558__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x18969);
  x18969.om$core$IGetState$_get_state$arity$2 = function(x18969) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x18969);
  x18969.om$core$IGetRenderState$ = true;
  x18969.om$core$IGetRenderState$_get_render_state$arity$1 = function(x18969) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x18969);
  x18969.om$core$IGetRenderState$_get_render_state$arity$2 = function(x18969) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x18969);
  x18969.om$core$ISetState$ = true;
  x18969.om$core$ISetState$_set_state_BANG_$arity$3 = function(x18969) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_18970 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = !(app_state == null);
          if (and__3546__auto__) {
            return render;
          } else {
            return and__3546__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18970;
      }
    };
  }(x18969);
  x18969.om$core$ISetState$_set_state_BANG_$arity$4 = function(x18969) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_18971 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = !(app_state == null);
          if (and__3546__auto__) {
            return render;
          } else {
            return and__3546__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_18971;
      }
    };
  }(x18969);
  return x18969;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__18973) {
          var vec__18974 = p__18973;
          var k = cljs.core.nth.call(null, vec__18974, 0, null);
          var v = cljs.core.nth.call(null, vec__18974, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__18975 = null;
  var G__18975__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18975__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18975 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18975__2.call(this, self__, k);
      case 3:
        return G__18975__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18975.cljs$core$IFn$_invoke$arity$2 = G__18975__2;
  G__18975.cljs$core$IFn$_invoke$arity$3 = G__18975__3;
  return G__18975;
}();
om.core.MapCursor.prototype.apply = function(self__, args18972) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18972)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
  return cljs.core._write.call(null, writer__4126__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__18977 = null;
  var G__18977__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__18977__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__18977 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__18977__2.call(this, self__, k);
      case 3:
        return G__18977__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18977.cljs$core$IFn$_invoke$arity$2 = G__18977__2;
  G__18977.cljs$core$IFn$_invoke$arity$3 = G__18977__3;
  return G__18977;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args18976) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args18976)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x18979 = cljs.core.clone.call(null, val);
  x18979.cljs$core$IEquiv$ = true;
  x18979.cljs$core$IEquiv$_equiv$arity$2 = function(x18979) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x18979);
  x18979.om$core$ITransact$ = true;
  x18979.om$core$ITransact$_transact_BANG_$arity$4 = function(x18979) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x18979);
  x18979.om$core$ICursor$ = true;
  x18979.om$core$ICursor$_path$arity$1 = function(x18979) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x18979);
  x18979.om$core$ICursor$_state$arity$1 = function(x18979) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x18979);
  x18979.cljs$core$IDeref$ = true;
  x18979.cljs$core$IDeref$_deref$arity$1 = function(x18979) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x18979);
  return x18979;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__18982 = val;
        if (G__18982) {
          var bit__4208__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3558__auto__ = bit__4208__auto__;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return G__18982.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__18982.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__18982);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__18982);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__18983 = val;
              if (G__18983) {
                var bit__4208__auto__ = G__18983.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4208__auto__ || G__18983.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__18983.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18983);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__18983);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__18988 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__18989 = null;
  var count__18990 = 0;
  var i__18991 = 0;
  while (true) {
    if (i__18991 < count__18990) {
      var f = cljs.core._nth.call(null, chunk__18989, i__18991);
      f.call(null);
      var G__18992 = seq__18988;
      var G__18993 = chunk__18989;
      var G__18994 = count__18990;
      var G__18995 = i__18991 + 1;
      seq__18988 = G__18992;
      chunk__18989 = G__18993;
      count__18990 = G__18994;
      i__18991 = G__18995;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__18988);
      if (temp__4126__auto__) {
        var seq__18988__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18988__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__18988__$1);
          var G__18996 = cljs.core.chunk_rest.call(null, seq__18988__$1);
          var G__18997 = c__4314__auto__;
          var G__18998 = cljs.core.count.call(null, c__4314__auto__);
          var G__18999 = 0;
          seq__18988 = G__18996;
          chunk__18989 = G__18997;
          count__18990 = G__18998;
          i__18991 = G__18999;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__18988__$1);
          f.call(null);
          var G__19000 = cljs.core.next.call(null, seq__18988__$1);
          var G__19001 = null;
          var G__19002 = 0;
          var G__19003 = 0;
          seq__18988 = G__19000;
          chunk__18989 = G__19001;
          count__18990 = G__19002;
          i__18991 = G__19003;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3558__auto__ = function() {
      var G__19008 = x;
      if (G__19008) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__19008.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__19008.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__19008);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__19008);
      }
    }();
    if (or__3558__auto__) {
      return or__3558__auto__;
    } else {
      var G__19009 = x;
      if (G__19009) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto____$1 = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto____$1)) {
            return or__3558__auto____$1;
          } else {
            return G__19009.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__19009.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__19009);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__19009);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3558__auto__ = descriptor;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, f);
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_19014 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_19014;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__19015 = m;
      var map__19015__$1 = cljs.core.seq_QMARK_.call(null, map__19015) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19015) : map__19015;
      var opts = cljs.core.get.call(null, map__19015__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__19015__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__19015__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__19015__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3558__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__19015, map__19015__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_19016 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_19016;
          }
        };
      }(map__19015, map__19015__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__19015, map__19015__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_19017 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_19017;
          }
        };
      }(map__19015, map__19015__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_19019 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_19019;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__19028 = state;
    if (G__19028) {
      var bit__4208__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3558__auto__ = bit__4208__auto__;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return G__19028.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__19028.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__19028);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__19028);
    }
  }()) {
  } else {
    var listeners_19036 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_19037 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x19029_19038 = state;
    x19029_19038.om$core$IRenderQueue$ = true;
    x19029_19038.om$core$IRenderQueue$_get_queue$arity$1 = function(x19029_19038, listeners_19036, render_queue_19037) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_19037);
      };
    }(x19029_19038, listeners_19036, render_queue_19037);
    x19029_19038.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x19029_19038, listeners_19036, render_queue_19037) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_19037), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_19037, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x19029_19038, listeners_19036, render_queue_19037);
    x19029_19038.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x19029_19038, listeners_19036, render_queue_19037) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_19037, cljs.core.empty);
      };
    }(x19029_19038, listeners_19036, render_queue_19037);
    x19029_19038.om$core$INotify$ = true;
    x19029_19038.om$core$INotify$_listen_BANG_$arity$3 = function(x19029_19038, listeners_19036, render_queue_19037) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_19036, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x19029_19038, listeners_19036, render_queue_19037);
    x19029_19038.om$core$INotify$_unlisten_BANG_$arity$2 = function(x19029_19038, listeners_19036, render_queue_19037) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_19036, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x19029_19038, listeners_19036, render_queue_19037);
    x19029_19038.om$core$INotify$_notify_BANG_$arity$3 = function(x19029_19038, listeners_19036, render_queue_19037) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__19030_19039 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_19036));
        var chunk__19031_19040 = null;
        var count__19032_19041 = 0;
        var i__19033_19042 = 0;
        while (true) {
          if (i__19033_19042 < count__19032_19041) {
            var vec__19034_19043 = cljs.core._nth.call(null, chunk__19031_19040, i__19033_19042);
            var __19044 = cljs.core.nth.call(null, vec__19034_19043, 0, null);
            var f_19045 = cljs.core.nth.call(null, vec__19034_19043, 1, null);
            f_19045.call(null, tx_data, root_cursor);
            var G__19046 = seq__19030_19039;
            var G__19047 = chunk__19031_19040;
            var G__19048 = count__19032_19041;
            var G__19049 = i__19033_19042 + 1;
            seq__19030_19039 = G__19046;
            chunk__19031_19040 = G__19047;
            count__19032_19041 = G__19048;
            i__19033_19042 = G__19049;
            continue;
          } else {
            var temp__4126__auto___19050 = cljs.core.seq.call(null, seq__19030_19039);
            if (temp__4126__auto___19050) {
              var seq__19030_19051__$1 = temp__4126__auto___19050;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__19030_19051__$1)) {
                var c__4314__auto___19052 = cljs.core.chunk_first.call(null, seq__19030_19051__$1);
                var G__19053 = cljs.core.chunk_rest.call(null, seq__19030_19051__$1);
                var G__19054 = c__4314__auto___19052;
                var G__19055 = cljs.core.count.call(null, c__4314__auto___19052);
                var G__19056 = 0;
                seq__19030_19039 = G__19053;
                chunk__19031_19040 = G__19054;
                count__19032_19041 = G__19055;
                i__19033_19042 = G__19056;
                continue;
              } else {
                var vec__19035_19057 = cljs.core.first.call(null, seq__19030_19051__$1);
                var __19058 = cljs.core.nth.call(null, vec__19035_19057, 0, null);
                var f_19059 = cljs.core.nth.call(null, vec__19035_19057, 1, null);
                f_19059.call(null, tx_data, root_cursor);
                var G__19060 = cljs.core.next.call(null, seq__19030_19051__$1);
                var G__19061 = null;
                var G__19062 = 0;
                var G__19063 = 0;
                seq__19030_19039 = G__19060;
                chunk__19031_19040 = G__19061;
                count__19032_19041 = G__19062;
                i__19033_19042 = G__19063;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x19029_19038, listeners_19036, render_queue_19037);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__19064) {
  var map__19079 = p__19064;
  var map__19079__$1 = cljs.core.seq_QMARK_.call(null, map__19079) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19079) : map__19079;
  var options = map__19079__$1;
  var instrument = cljs.core.get.call(null, map__19079__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__19079__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__19079__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__19079__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__19093 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__19093, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__19093, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__19080 = value;
    if (G__19080) {
      var bit__4208__auto__ = G__19080.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4208__auto__ || G__19080.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__19080.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__19080);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__19080);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__19079, map__19079__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_19087 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_19088 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_19088;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_19087;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__19089_19094 = cljs.core.seq.call(null, queue);
        var chunk__19090_19095 = null;
        var count__19091_19096 = 0;
        var i__19092_19097 = 0;
        while (true) {
          if (i__19092_19097 < count__19091_19096) {
            var c_19098 = cljs.core._nth.call(null, chunk__19090_19095, i__19092_19097);
            if (cljs.core.truth_(c_19098.isMounted())) {
              c_19098.forceUpdate();
            } else {
            }
            var G__19099 = seq__19089_19094;
            var G__19100 = chunk__19090_19095;
            var G__19101 = count__19091_19096;
            var G__19102 = i__19092_19097 + 1;
            seq__19089_19094 = G__19099;
            chunk__19090_19095 = G__19100;
            count__19091_19096 = G__19101;
            i__19092_19097 = G__19102;
            continue;
          } else {
            var temp__4126__auto___19103 = cljs.core.seq.call(null, seq__19089_19094);
            if (temp__4126__auto___19103) {
              var seq__19089_19104__$1 = temp__4126__auto___19103;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__19089_19104__$1)) {
                var c__4314__auto___19105 = cljs.core.chunk_first.call(null, seq__19089_19104__$1);
                var G__19106 = cljs.core.chunk_rest.call(null, seq__19089_19104__$1);
                var G__19107 = c__4314__auto___19105;
                var G__19108 = cljs.core.count.call(null, c__4314__auto___19105);
                var G__19109 = 0;
                seq__19089_19094 = G__19106;
                chunk__19090_19095 = G__19107;
                count__19091_19096 = G__19108;
                i__19092_19097 = G__19109;
                continue;
              } else {
                var c_19110 = cljs.core.first.call(null, seq__19089_19104__$1);
                if (cljs.core.truth_(c_19110.isMounted())) {
                  c_19110.forceUpdate();
                } else {
                }
                var G__19111 = cljs.core.next.call(null, seq__19089_19104__$1);
                var G__19112 = null;
                var G__19113 = 0;
                var G__19114 = 0;
                seq__19089_19094 = G__19111;
                chunk__19090_19095 = G__19112;
                count__19091_19096 = G__19113;
                i__19092_19097 = G__19114;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__19079, map__19079__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__19079, map__19079__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__19079, map__19079__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__19079, map__19079__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__19079, map__19079__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("clustermap.components.table");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.api");
goog.require("clustermap.api");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
clustermap.components.table.order_col = function order_col(comm, collection, view_update_key, title, col) {
  var current_order = (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(collection);
  var current_order__$1 = cljs.core.sequential_QMARK_.call(null, current_order) ? cljs.core.first.call(null, current_order) : current_order;
  var current_order_key = cljs.core.first.call(null, cljs.core.keys.call(null, current_order__$1));
  var current_order_dir = cljs.core.first.call(null, cljs.core.vals.call(null, current_order__$1));
  return React.DOM.a({"href":"#", "onClick":function(current_order, current_order__$1, current_order_key, current_order_dir) {
    return function(e) {
      e.preventDefault();
      var pred__14054 = cljs.core._EQ_;
      var expr__14055 = current_order_dir;
      if (cljs.core.truth_(pred__14054.call(null, "asc", expr__14055))) {
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "desc", "desc", 2093485764)], true, false)], null)], null));
      } else {
        if (cljs.core.truth_(pred__14054.call(null, "desc", expr__14055))) {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "asc", "asc", 356854569)], true, false)], null)], null));
        } else {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "desc", "desc", 2093485764)], true, false)], null)], null));
        }
      }
    };
  }(current_order, current_order__$1, current_order_key, current_order_dir)}, sablono.interpreter.interpret.call(null, title), cljs.core._EQ_.call(null, current_order_key, col) ? sablono.interpreter.interpret.call(null, function() {
    var pred__14057 = cljs.core._EQ_;
    var expr__14058 = current_order_dir;
    if (cljs.core.truth_(pred__14057.call(null, "asc", expr__14058))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-asc", "i.icon-asc", 1318187620)], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-desc", "i.icon-desc", -1647067651)], null);
    }
  }()) : null);
};
clustermap.components.table.paginate = function paginate(p__14060, owner, opts) {
  var map__14077 = p__14060;
  var map__14077__$1 = cljs.core.seq_QMARK_.call(null, map__14077) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14077) : map__14077;
  var controls = cljs.core.get.call(null, map__14077__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__14078 = cljs.core.get.call(null, map__14077__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
  var map__14078__$1 = cljs.core.seq_QMARK_.call(null, map__14078) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14078) : map__14078;
  var table_data = map__14078__$1;
  var count = cljs.core.get.call(null, map__14078__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  var from = cljs.core.get.call(null, map__14078__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
  var size = cljs.core.get.call(null, map__14078__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  if (typeof clustermap.components.table.t14079 !== "undefined") {
  } else {
    clustermap.components.table.t14079 = function(p__14060, owner, map__14077, map__14078, paginate, table_data, controls, size, from, count, opts, meta14080) {
      this.p__14060 = p__14060;
      this.owner = owner;
      this.map__14077 = map__14077;
      this.map__14078 = map__14078;
      this.paginate = paginate;
      this.table_data = table_data;
      this.controls = controls;
      this.size = size;
      this.from = from;
      this.count = count;
      this.opts = opts;
      this.meta14080 = meta14080;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.table.t14079.cljs$lang$type = true;
    clustermap.components.table.t14079.cljs$lang$ctorStr = "clustermap.components.table/t14079";
    clustermap.components.table.t14079.cljs$lang$ctorPrWriter = function(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.table/t14079");
      };
    }(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size);
    clustermap.components.table.t14079.prototype.om$core$IRender$ = true;
    clustermap.components.table.t14079.prototype.om$core$IRender$render$arity$1 = function(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        var attrs14082 = cljs.core.truth_(function() {
          var and__3546__auto__ = self__.from;
          if (cljs.core.truth_(and__3546__auto__)) {
            return self__.from > 0;
          } else {
            return and__3546__auto__;
          }
        }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 1950349585), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", -793805698), "#", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(this__9504__auto____$1, 
        map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
          return function(e) {
            e.preventDefault();
            return om.core.update_BANG_.call(null, self__.controls, new cljs.core.Keyword(null, "from", "from", 1815293044), function() {
              var x__3865__auto__ = 0;
              var y__3866__auto__ = self__.from - self__.size;
              return x__3865__auto__ > y__3866__auto__ ? x__3865__auto__ : y__3866__auto__;
            }());
          };
        }(this__9504__auto____$1, map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-arrow-left", "i.icon-arrow-left", 1090541868)], null)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 1950349585), new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-arrow-left", "i.icon-arrow-left", 1090541868)], null)], null);
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs14082) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["paginate"], null)], null), attrs14082)) : {"className":"paginate"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
        attrs14082) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var attrs14083 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
            var x__3872__auto__ = self__.from + self__.size;
            var y__3873__auto__ = self__.count;
            return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
          }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.count);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs14083) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs14083)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs14083) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14083)], null)));
        }(), self__.from + self__.size < self__.count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs14082, this__9504__auto____$1, map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
          return function(e) {
            e.preventDefault();
            return om.core.update_BANG_.call(null, self__.controls, new cljs.core.Keyword(null, "from", "from", 1815293044), self__.from + self__.size);
          };
        }(attrs14082, this__9504__auto____$1, map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14082), function() {
          var attrs14084 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
            var x__3872__auto__ = self__.from + self__.size;
            var y__3873__auto__ = self__.count;
            return x__3872__auto__ < y__3873__auto__ ? x__3872__auto__ : y__3873__auto__;
          }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.count);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs14084) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs14084)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs14084) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14084)], null)));
        }(), self__.from + self__.size < self__.count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs14082, this__9504__auto____$1, map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
          return function(e) {
            e.preventDefault();
            return om.core.update_BANG_.call(null, self__.controls, new cljs.core.Keyword(null, "from", "from", 1815293044), self__.from + self__.size);
          };
        }(attrs14082, this__9504__auto____$1, map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null)));
      };
    }(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size);
    clustermap.components.table.t14079.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
      return function(_14081) {
        var self__ = this;
        var _14081__$1 = this;
        return self__.meta14080;
      };
    }(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size);
    clustermap.components.table.t14079.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
      return function(_14081, meta14080__$1) {
        var self__ = this;
        var _14081__$1 = this;
        return new clustermap.components.table.t14079(self__.p__14060, self__.owner, self__.map__14077, self__.map__14078, self__.paginate, self__.table_data, self__.controls, self__.size, self__.from, self__.count, self__.opts, meta14080__$1);
      };
    }(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size);
    clustermap.components.table.__GT_t14079 = function(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size) {
      return function __GT_t14079(p__14060__$1, owner__$1, map__14077__$2, map__14078__$2, paginate__$1, table_data__$1, controls__$1, size__$1, from__$1, count__$1, opts__$1, meta14080) {
        return new clustermap.components.table.t14079(p__14060__$1, owner__$1, map__14077__$2, map__14078__$2, paginate__$1, table_data__$1, controls__$1, size__$1, from__$1, count__$1, opts__$1, meta14080);
      };
    }(map__14077, map__14077__$1, controls, map__14078, map__14078__$1, table_data, count, from, size);
  }
  return new clustermap.components.table.t14079(p__14060, owner, map__14077__$1, map__14078__$1, paginate, table_data, controls, size, from, count, opts, null);
};
clustermap.components.table.render_table_row = function render_table_row(p__14093) {
  var map__14134 = p__14093;
  var map__14134__$1 = cljs.core.seq_QMARK_.call(null, map__14134) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14134) : map__14134;
  var record = cljs.core.get.call(null, map__14134__$1, new cljs.core.Keyword(null, "record", "record", -779106859));
  var columns = cljs.core.get.call(null, map__14134__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  if (typeof clustermap.components.table.t14135 !== "undefined") {
  } else {
    clustermap.components.table.t14135 = function(columns, record, map__14134, p__14093, render_table_row, meta14136) {
      this.columns = columns;
      this.record = record;
      this.map__14134 = map__14134;
      this.p__14093 = p__14093;
      this.render_table_row = render_table_row;
      this.meta14136 = meta14136;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.table.t14135.cljs$lang$type = true;
    clustermap.components.table.t14135.cljs$lang$ctorStr = "clustermap.components.table/t14135";
    clustermap.components.table.t14135.cljs$lang$ctorPrWriter = function(map__14134, map__14134__$1, record, columns) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.table/t14135");
      };
    }(map__14134, map__14134__$1, record, columns);
    clustermap.components.table.t14135.prototype.om$core$IRender$ = true;
    clustermap.components.table.t14135.prototype.om$core$IRender$render$arity$1 = function(map__14134, map__14134__$1, record, columns) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return sablono.interpreter.interpret.call(null, function() {
          var row = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646)], null), cljs.core.apply.call(null, cljs.core.concat, function() {
            var iter__4283__auto__ = function(this__9504__auto____$1, map__14134, map__14134__$1, record, columns) {
              return function iter__14138(s__14139) {
                return new cljs.core.LazySeq(null, function(this__9504__auto____$1, map__14134, map__14134__$1, record, columns) {
                  return function() {
                    var s__14139__$1 = s__14139;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__14139__$1);
                      if (temp__4126__auto__) {
                        var s__14139__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14139__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14139__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__14141 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__14140 = 0;
                            while (true) {
                              if (i__14140 < size__4282__auto__) {
                                var col = cljs.core._nth.call(null, c__4281__auto__, i__14140);
                                cljs.core.chunk_append.call(null, b__14141, function() {
                                  var iter__4283__auto__ = function(i__14140, col, c__4281__auto__, size__4282__auto__, b__14141, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns) {
                                    return function iter__14158(s__14159) {
                                      return new cljs.core.LazySeq(null, function(i__14140, col, c__4281__auto__, size__4282__auto__, b__14141, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns) {
                                        return function() {
                                          var s__14159__$1 = s__14159;
                                          while (true) {
                                            var temp__4126__auto____$1 = cljs.core.seq.call(null, s__14159__$1);
                                            if (temp__4126__auto____$1) {
                                              var s__14159__$2 = temp__4126__auto____$1;
                                              if (cljs.core.chunked_seq_QMARK_.call(null, s__14159__$2)) {
                                                var c__4281__auto____$1 = cljs.core.chunk_first.call(null, s__14159__$2);
                                                var size__4282__auto____$1 = cljs.core.count.call(null, c__4281__auto____$1);
                                                var b__14161 = cljs.core.chunk_buffer.call(null, size__4282__auto____$1);
                                                if (function() {
                                                  var i__14160 = 0;
                                                  while (true) {
                                                    if (i__14160 < size__4282__auto____$1) {
                                                      var vec__14164 = cljs.core._nth.call(null, c__4281__auto____$1, i__14160);
                                                      var col_key = cljs.core.nth.call(null, vec__14164, 0, null);
                                                      var col_name = cljs.core.nth.call(null, vec__14164, 1, null);
                                                      cljs.core.chunk_append.call(null, b__14161, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core.get.call(null, self__.record, col_key)], null));
                                                      var G__14174 = i__14160 + 1;
                                                      i__14160 = G__14174;
                                                      continue;
                                                    } else {
                                                      return true;
                                                    }
                                                    break;
                                                  }
                                                }()) {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14161), iter__14158.call(null, cljs.core.chunk_rest.call(null, s__14159__$2)));
                                                } else {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14161), null);
                                                }
                                              } else {
                                                var vec__14165 = cljs.core.first.call(null, s__14159__$2);
                                                var col_key = cljs.core.nth.call(null, vec__14165, 0, null);
                                                var col_name = cljs.core.nth.call(null, vec__14165, 1, null);
                                                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core.get.call(null, self__.record, col_key)], null), iter__14158.call(null, cljs.core.rest.call(null, s__14159__$2)));
                                              }
                                            } else {
                                              return null;
                                            }
                                            break;
                                          }
                                        };
                                      }(i__14140, col, c__4281__auto__, size__4282__auto__, b__14141, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns), null, null);
                                    };
                                  }(i__14140, col, c__4281__auto__, size__4282__auto__, b__14141, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns);
                                  return iter__4283__auto__.call(null, col);
                                }());
                                var G__14175 = i__14140 + 1;
                                i__14140 = G__14175;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14141), iter__14138.call(null, cljs.core.chunk_rest.call(null, s__14139__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14141), null);
                          }
                        } else {
                          var col = cljs.core.first.call(null, s__14139__$2);
                          return cljs.core.cons.call(null, function() {
                            var iter__4283__auto__ = function(col, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns) {
                              return function iter__14166(s__14167) {
                                return new cljs.core.LazySeq(null, function(col, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns) {
                                  return function() {
                                    var s__14167__$1 = s__14167;
                                    while (true) {
                                      var temp__4126__auto____$1 = cljs.core.seq.call(null, s__14167__$1);
                                      if (temp__4126__auto____$1) {
                                        var s__14167__$2 = temp__4126__auto____$1;
                                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14167__$2)) {
                                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14167__$2);
                                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                          var b__14169 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                          if (function() {
                                            var i__14168 = 0;
                                            while (true) {
                                              if (i__14168 < size__4282__auto__) {
                                                var vec__14172 = cljs.core._nth.call(null, c__4281__auto__, i__14168);
                                                var col_key = cljs.core.nth.call(null, vec__14172, 0, null);
                                                var col_name = cljs.core.nth.call(null, vec__14172, 1, null);
                                                cljs.core.chunk_append.call(null, b__14169, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core.get.call(null, self__.record, col_key)], null));
                                                var G__14176 = i__14168 + 1;
                                                i__14168 = G__14176;
                                                continue;
                                              } else {
                                                return true;
                                              }
                                              break;
                                            }
                                          }()) {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14169), iter__14166.call(null, cljs.core.chunk_rest.call(null, s__14167__$2)));
                                          } else {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14169), null);
                                          }
                                        } else {
                                          var vec__14173 = cljs.core.first.call(null, s__14167__$2);
                                          var col_key = cljs.core.nth.call(null, vec__14173, 0, null);
                                          var col_name = cljs.core.nth.call(null, vec__14173, 1, null);
                                          return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "td", "td", 1479933353), cljs.core.get.call(null, self__.record, col_key)], null), iter__14166.call(null, cljs.core.rest.call(null, s__14167__$2)));
                                        }
                                      } else {
                                        return null;
                                      }
                                      break;
                                    }
                                  };
                                }(col, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns), null, null);
                              };
                            }(col, s__14139__$2, temp__4126__auto__, this__9504__auto____$1, map__14134, map__14134__$1, record, columns);
                            return iter__4283__auto__.call(null, col);
                          }(), iter__14138.call(null, cljs.core.rest.call(null, s__14139__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(this__9504__auto____$1, map__14134, map__14134__$1, record, columns), null, null);
              };
            }(this__9504__auto____$1, map__14134, map__14134__$1, record, columns);
            return iter__4283__auto__.call(null, self__.columns);
          }()));
          return row;
        }());
      };
    }(map__14134, map__14134__$1, record, columns);
    clustermap.components.table.t14135.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__14134, map__14134__$1, record, columns) {
      return function(_14137) {
        var self__ = this;
        var _14137__$1 = this;
        return self__.meta14136;
      };
    }(map__14134, map__14134__$1, record, columns);
    clustermap.components.table.t14135.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__14134, map__14134__$1, record, columns) {
      return function(_14137, meta14136__$1) {
        var self__ = this;
        var _14137__$1 = this;
        return new clustermap.components.table.t14135(self__.columns, self__.record, self__.map__14134, self__.p__14093, self__.render_table_row, meta14136__$1);
      };
    }(map__14134, map__14134__$1, record, columns);
    clustermap.components.table.__GT_t14135 = function(map__14134, map__14134__$1, record, columns) {
      return function __GT_t14135(columns__$1, record__$1, map__14134__$2, p__14093__$1, render_table_row__$1, meta14136) {
        return new clustermap.components.table.t14135(columns__$1, record__$1, map__14134__$2, p__14093__$1, render_table_row__$1, meta14136);
      };
    }(map__14134, map__14134__$1, record, columns);
  }
  return new clustermap.components.table.t14135(columns, record, map__14134__$1, p__14093, render_table_row, null);
};
clustermap.components.table.render_table = function render_table(p__14177, owner, opts) {
  var map__14257 = p__14177;
  var map__14257__$1 = cljs.core.seq_QMARK_.call(null, map__14257) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14257) : map__14257;
  var props = map__14257__$1;
  var table_data = cljs.core.get.call(null, map__14257__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
  var map__14258 = cljs.core.get.call(null, map__14257__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__14258__$1 = cljs.core.seq_QMARK_.call(null, map__14258) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14258) : map__14258;
  var controls = map__14258__$1;
  var columns = cljs.core.get.call(null, map__14258__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  var filter_by_view = cljs.core.get.call(null, map__14258__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var attrs14259 = om.core.build.call(null, clustermap.components.table.paginate, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), controls, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), table_data], null));
  return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs14259) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs14259)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
  cljs.core.map_QMARK_.call(null, attrs14259) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, function() {
    var attrs14260 = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646)], null), cljs.core.apply.call(null, cljs.core.concat, function() {
      var iter__4283__auto__ = function(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
        return function iter__14264(s__14265) {
          return new cljs.core.LazySeq(null, function(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
            return function() {
              var s__14265__$1 = s__14265;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__14265__$1);
                if (temp__4126__auto__) {
                  var s__14265__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__14265__$2)) {
                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14265__$2);
                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                    var b__14267 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                    if (function() {
                      var i__14266 = 0;
                      while (true) {
                        if (i__14266 < size__4282__auto__) {
                          var col = cljs.core._nth.call(null, c__4281__auto__, i__14266);
                          cljs.core.chunk_append.call(null, b__14267, function() {
                            var iter__4283__auto__ = function(i__14266, col, c__4281__auto__, size__4282__auto__, b__14267, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                              return function iter__14284(s__14285) {
                                return new cljs.core.LazySeq(null, function(i__14266, col, c__4281__auto__, size__4282__auto__, b__14267, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                                  return function() {
                                    var s__14285__$1 = s__14285;
                                    while (true) {
                                      var temp__4126__auto____$1 = cljs.core.seq.call(null, s__14285__$1);
                                      if (temp__4126__auto____$1) {
                                        var s__14285__$2 = temp__4126__auto____$1;
                                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14285__$2)) {
                                          var c__4281__auto____$1 = cljs.core.chunk_first.call(null, s__14285__$2);
                                          var size__4282__auto____$1 = cljs.core.count.call(null, c__4281__auto____$1);
                                          var b__14287 = cljs.core.chunk_buffer.call(null, size__4282__auto____$1);
                                          if (function() {
                                            var i__14286 = 0;
                                            while (true) {
                                              if (i__14286 < size__4282__auto____$1) {
                                                var vec__14290 = cljs.core._nth.call(null, c__4281__auto____$1, i__14286);
                                                var col_key = cljs.core.nth.call(null, vec__14290, 0, null);
                                                var col_name = cljs.core.nth.call(null, vec__14290, 1, null);
                                                cljs.core.chunk_append.call(null, b__14287, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null));
                                                var G__14336 = i__14286 + 1;
                                                i__14286 = G__14336;
                                                continue;
                                              } else {
                                                return true;
                                              }
                                              break;
                                            }
                                          }()) {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14287), iter__14284.call(null, cljs.core.chunk_rest.call(null, s__14285__$2)));
                                          } else {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14287), null);
                                          }
                                        } else {
                                          var vec__14291 = cljs.core.first.call(null, s__14285__$2);
                                          var col_key = cljs.core.nth.call(null, vec__14291, 0, null);
                                          var col_name = cljs.core.nth.call(null, vec__14291, 1, null);
                                          return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null), iter__14284.call(null, cljs.core.rest.call(null, s__14285__$2)));
                                        }
                                      } else {
                                        return null;
                                      }
                                      break;
                                    }
                                  };
                                }(i__14266, col, c__4281__auto__, size__4282__auto__, b__14267, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view), null, null);
                              };
                            }(i__14266, col, c__4281__auto__, size__4282__auto__, b__14267, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view);
                            return iter__4283__auto__.call(null, col);
                          }());
                          var G__14337 = i__14266 + 1;
                          i__14266 = G__14337;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14267), iter__14264.call(null, cljs.core.chunk_rest.call(null, s__14265__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14267), null);
                    }
                  } else {
                    var col = cljs.core.first.call(null, s__14265__$2);
                    return cljs.core.cons.call(null, function() {
                      var iter__4283__auto__ = function(col, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                        return function iter__14292(s__14293) {
                          return new cljs.core.LazySeq(null, function(col, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                            return function() {
                              var s__14293__$1 = s__14293;
                              while (true) {
                                var temp__4126__auto____$1 = cljs.core.seq.call(null, s__14293__$1);
                                if (temp__4126__auto____$1) {
                                  var s__14293__$2 = temp__4126__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__14293__$2)) {
                                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14293__$2);
                                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                    var b__14295 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                    if (function() {
                                      var i__14294 = 0;
                                      while (true) {
                                        if (i__14294 < size__4282__auto__) {
                                          var vec__14298 = cljs.core._nth.call(null, c__4281__auto__, i__14294);
                                          var col_key = cljs.core.nth.call(null, vec__14298, 0, null);
                                          var col_name = cljs.core.nth.call(null, vec__14298, 1, null);
                                          cljs.core.chunk_append.call(null, b__14295, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null));
                                          var G__14338 = i__14294 + 1;
                                          i__14294 = G__14338;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14295), iter__14292.call(null, cljs.core.chunk_rest.call(null, s__14293__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14295), null);
                                    }
                                  } else {
                                    var vec__14299 = cljs.core.first.call(null, s__14293__$2);
                                    var col_key = cljs.core.nth.call(null, vec__14299, 0, null);
                                    var col_name = cljs.core.nth.call(null, vec__14299, 1, null);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null), iter__14292.call(null, cljs.core.rest.call(null, s__14293__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(col, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view), null, null);
                        };
                      }(col, s__14265__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view);
                      return iter__4283__auto__.call(null, col);
                    }(), iter__14264.call(null, cljs.core.rest.call(null, s__14265__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view), null, null);
        };
      }(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view);
      return iter__4283__auto__.call(null, columns);
    }()));
    return cljs.core.apply.call(null, React.DOM.thead, cljs.core.map_QMARK_.call(null, attrs14260) ? sablono.interpreter.attributes.call(null, attrs14260) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs14260) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14260)], null)));
  }(), function() {
    var attrs14261 = om.core.build_all.call(null, clustermap.components.table.render_table_row, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(table_data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, 
    controls, columns, filter_by_view) {
      return function(r) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "columns", "columns", 1998437288), columns, new cljs.core.Keyword(null, "record", "record", -779106859), r, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "?natural_id", "?natural_id", -1454211689)).cljs$core$IFn$_invoke$arity$1(r)], null);
      };
    }(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view)], null));
    return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs14261) ? sablono.interpreter.attributes.call(null, attrs14261) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs14261) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14261)], null)));
  }())), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.table.paginate, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), controls, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), table_data], null)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14259), React.DOM.div({"className":"table-responsive"}, 
  React.DOM.table({"className":"table"}, function() {
    var attrs14262 = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tr", "tr", -1424774646)], null), cljs.core.apply.call(null, cljs.core.concat, function() {
      var iter__4283__auto__ = function(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
        return function iter__14300(s__14301) {
          return new cljs.core.LazySeq(null, function(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
            return function() {
              var s__14301__$1 = s__14301;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__14301__$1);
                if (temp__4126__auto__) {
                  var s__14301__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__14301__$2)) {
                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14301__$2);
                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                    var b__14303 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                    if (function() {
                      var i__14302 = 0;
                      while (true) {
                        if (i__14302 < size__4282__auto__) {
                          var col = cljs.core._nth.call(null, c__4281__auto__, i__14302);
                          cljs.core.chunk_append.call(null, b__14303, function() {
                            var iter__4283__auto__ = function(i__14302, col, c__4281__auto__, size__4282__auto__, b__14303, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                              return function iter__14320(s__14321) {
                                return new cljs.core.LazySeq(null, function(i__14302, col, c__4281__auto__, size__4282__auto__, b__14303, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                                  return function() {
                                    var s__14321__$1 = s__14321;
                                    while (true) {
                                      var temp__4126__auto____$1 = cljs.core.seq.call(null, s__14321__$1);
                                      if (temp__4126__auto____$1) {
                                        var s__14321__$2 = temp__4126__auto____$1;
                                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14321__$2)) {
                                          var c__4281__auto____$1 = cljs.core.chunk_first.call(null, s__14321__$2);
                                          var size__4282__auto____$1 = cljs.core.count.call(null, c__4281__auto____$1);
                                          var b__14323 = cljs.core.chunk_buffer.call(null, size__4282__auto____$1);
                                          if (function() {
                                            var i__14322 = 0;
                                            while (true) {
                                              if (i__14322 < size__4282__auto____$1) {
                                                var vec__14326 = cljs.core._nth.call(null, c__4281__auto____$1, i__14322);
                                                var col_key = cljs.core.nth.call(null, vec__14326, 0, null);
                                                var col_name = cljs.core.nth.call(null, vec__14326, 1, null);
                                                cljs.core.chunk_append.call(null, b__14323, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null));
                                                var G__14339 = i__14322 + 1;
                                                i__14322 = G__14339;
                                                continue;
                                              } else {
                                                return true;
                                              }
                                              break;
                                            }
                                          }()) {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14323), iter__14320.call(null, cljs.core.chunk_rest.call(null, s__14321__$2)));
                                          } else {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14323), null);
                                          }
                                        } else {
                                          var vec__14327 = cljs.core.first.call(null, s__14321__$2);
                                          var col_key = cljs.core.nth.call(null, vec__14327, 0, null);
                                          var col_name = cljs.core.nth.call(null, vec__14327, 1, null);
                                          return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null), iter__14320.call(null, cljs.core.rest.call(null, s__14321__$2)));
                                        }
                                      } else {
                                        return null;
                                      }
                                      break;
                                    }
                                  };
                                }(i__14302, col, c__4281__auto__, size__4282__auto__, b__14303, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view), null, null);
                              };
                            }(i__14302, col, c__4281__auto__, size__4282__auto__, b__14303, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view);
                            return iter__4283__auto__.call(null, col);
                          }());
                          var G__14340 = i__14302 + 1;
                          i__14302 = G__14340;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14303), iter__14300.call(null, cljs.core.chunk_rest.call(null, s__14301__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14303), null);
                    }
                  } else {
                    var col = cljs.core.first.call(null, s__14301__$2);
                    return cljs.core.cons.call(null, function() {
                      var iter__4283__auto__ = function(col, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                        return function iter__14328(s__14329) {
                          return new cljs.core.LazySeq(null, function(col, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view) {
                            return function() {
                              var s__14329__$1 = s__14329;
                              while (true) {
                                var temp__4126__auto____$1 = cljs.core.seq.call(null, s__14329__$1);
                                if (temp__4126__auto____$1) {
                                  var s__14329__$2 = temp__4126__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__14329__$2)) {
                                    var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14329__$2);
                                    var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                                    var b__14331 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                                    if (function() {
                                      var i__14330 = 0;
                                      while (true) {
                                        if (i__14330 < size__4282__auto__) {
                                          var vec__14334 = cljs.core._nth.call(null, c__4281__auto__, i__14330);
                                          var col_key = cljs.core.nth.call(null, vec__14334, 0, null);
                                          var col_name = cljs.core.nth.call(null, vec__14334, 1, null);
                                          cljs.core.chunk_append.call(null, b__14331, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null));
                                          var G__14341 = i__14330 + 1;
                                          i__14330 = G__14341;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14331), iter__14328.call(null, cljs.core.chunk_rest.call(null, s__14329__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14331), null);
                                    }
                                  } else {
                                    var vec__14335 = cljs.core.first.call(null, s__14329__$2);
                                    var col_key = cljs.core.nth.call(null, vec__14335, 0, null);
                                    var col_name = cljs.core.nth.call(null, vec__14335, 1, null);
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "th", "th", -545608566), col_name], null), iter__14328.call(null, cljs.core.rest.call(null, s__14329__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(col, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view), null, null);
                        };
                      }(col, s__14301__$2, temp__4126__auto__, attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view);
                      return iter__4283__auto__.call(null, col);
                    }(), iter__14300.call(null, cljs.core.rest.call(null, s__14301__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view), null, null);
        };
      }(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view);
      return iter__4283__auto__.call(null, columns);
    }()));
    return cljs.core.apply.call(null, React.DOM.thead, cljs.core.map_QMARK_.call(null, attrs14262) ? sablono.interpreter.attributes.call(null, attrs14262) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs14262) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14262)], null)));
  }(), function() {
    var attrs14263 = om.core.build_all.call(null, clustermap.components.table.render_table_row, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(table_data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, 
    controls, columns, filter_by_view) {
      return function(r) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "columns", "columns", 1998437288), columns, new cljs.core.Keyword(null, "record", "record", -779106859), r, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "?natural_id", "?natural_id", -1454211689)).cljs$core$IFn$_invoke$arity$1(r)], null);
      };
    }(attrs14259, map__14257, map__14257__$1, props, table_data, map__14258, map__14258__$1, controls, columns, filter_by_view)], null));
    return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs14263) ? sablono.interpreter.attributes.call(null, attrs14263) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs14263) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14263)], null)));
  }())), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.table.paginate, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), controls, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), table_data], null)))], null)));
};
clustermap.components.table.request_table_data = function request_table_data(resource, index, index_type, filter_spec, bounds, sort_spec, from, size) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.simple_table, index, index_type, filter_spec, bounds, sort_spec, from, size);
};
clustermap.components.table.table_component = function table_component(p__14342, owner) {
  var map__14357 = p__14342;
  var map__14357__$1 = cljs.core.seq_QMARK_.call(null, map__14357) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14357) : map__14357;
  var props = map__14357__$1;
  var map__14358 = cljs.core.get.call(null, map__14357__$1, new cljs.core.Keyword(null, "table-state", "table-state", -1662785974));
  var map__14358__$1 = cljs.core.seq_QMARK_.call(null, map__14358) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14358) : map__14358;
  var table_state = map__14358__$1;
  var table_data = cljs.core.get.call(null, map__14358__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
  var map__14359 = cljs.core.get.call(null, map__14358__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__14359__$1 = cljs.core.seq_QMARK_.call(null, map__14359) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14359) : map__14359;
  var controls = map__14359__$1;
  var index = cljs.core.get.call(null, map__14359__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
  var sort_spec = cljs.core.get.call(null, map__14359__$1, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994));
  var from = cljs.core.get.call(null, map__14359__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
  var size = cljs.core.get.call(null, map__14359__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
  var columns = cljs.core.get.call(null, map__14359__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  var map__14360 = cljs.core.get.call(null, map__14357__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  var map__14360__$1 = cljs.core.seq_QMARK_.call(null, map__14360) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14360) : map__14360;
  var filter_by_view = cljs.core.get.call(null, map__14360__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var filter_spec = cljs.core.get.call(null, map__14360__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
  var bounds = cljs.core.get.call(null, map__14357__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  if (typeof clustermap.components.table.t14361 !== "undefined") {
  } else {
    clustermap.components.table.t14361 = function(map__14359, sort_spec, table_component, owner, filter_by_view, props, map__14357, table_data, map__14358, index, filter_spec, map__14360, columns, table_state, controls, bounds, size, p__14342, from, meta14362) {
      this.map__14359 = map__14359;
      this.sort_spec = sort_spec;
      this.table_component = table_component;
      this.owner = owner;
      this.filter_by_view = filter_by_view;
      this.props = props;
      this.map__14357 = map__14357;
      this.table_data = table_data;
      this.map__14358 = map__14358;
      this.index = index;
      this.filter_spec = filter_spec;
      this.map__14360 = map__14360;
      this.columns = columns;
      this.table_state = table_state;
      this.controls = controls;
      this.bounds = bounds;
      this.size = size;
      this.p__14342 = p__14342;
      this.from = from;
      this.meta14362 = meta14362;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.table.t14361.cljs$lang$type = true;
    clustermap.components.table.t14361.cljs$lang$ctorStr = "clustermap.components.table/t14361";
    clustermap.components.table.t14361.cljs$lang$ctorPrWriter = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.table/t14361");
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t14361.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.table.t14361.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function(_, p__14364, p__14365) {
        var self__ = this;
        var map__14366 = p__14364;
        var map__14366__$1 = cljs.core.seq_QMARK_.call(null, map__14366) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14366) : map__14366;
        var next_props = map__14366__$1;
        var map__14367 = cljs.core.get.call(null, map__14366__$1, new cljs.core.Keyword(null, "table-state", "table-state", -1662785974));
        var map__14367__$1 = cljs.core.seq_QMARK_.call(null, map__14367) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14367) : map__14367;
        var next_table_state = map__14367__$1;
        var next_table_data = cljs.core.get.call(null, map__14367__$1, new cljs.core.Keyword(null, "table-data", "table-data", -1783738205));
        var map__14368 = cljs.core.get.call(null, map__14367__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__14368__$1 = cljs.core.seq_QMARK_.call(null, map__14368) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14368) : map__14368;
        var next_controls = map__14368__$1;
        var next_index = cljs.core.get.call(null, map__14368__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
        var next_index_type = cljs.core.get.call(null, map__14368__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
        var next_sort_spec = cljs.core.get.call(null, map__14368__$1, new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994));
        var next_from = cljs.core.get.call(null, map__14368__$1, new cljs.core.Keyword(null, "from", "from", 1815293044));
        var next_size = cljs.core.get.call(null, map__14368__$1, new cljs.core.Keyword(null, "size", "size", 1098693007));
        var map__14369 = cljs.core.get.call(null, map__14366__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__14369__$1 = cljs.core.seq_QMARK_.call(null, map__14369) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14369) : map__14369;
        var next_filter_by_view = cljs.core.get.call(null, map__14369__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var next_filter_spec = cljs.core.get.call(null, map__14369__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var next_bounds = cljs.core.get.call(null, map__14366__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var map__14370 = p__14365;
        var map__14370__$1 = cljs.core.seq_QMARK_.call(null, map__14370) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14370) : map__14370;
        var next_state = map__14370__$1;
        var table_data_resource = cljs.core.get.call(null, map__14370__$1, new cljs.core.Keyword(null, "table-data-resource", "table-data-resource", -1272908133));
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not.call(null, next_table_data);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_controls, self__.controls);
            if (or__3558__auto____$1) {
              return or__3558__auto____$1;
            } else {
              var or__3558__auto____$2 = cljs.core.not_EQ_.call(null, next_filter_spec, self__.filter_spec);
              if (or__3558__auto____$2) {
                return or__3558__auto____$2;
              } else {
                var or__3558__auto____$3 = cljs.core.not_EQ_.call(null, next_filter_by_view, self__.filter_by_view);
                if (or__3558__auto____$3) {
                  return or__3558__auto____$3;
                } else {
                  var and__3546__auto__ = next_filter_by_view;
                  if (cljs.core.truth_(and__3546__auto__)) {
                    return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
                  } else {
                    return and__3546__auto__;
                  }
                }
              }
            }
          }
        }())) {
          return clustermap.components.table.request_table_data.call(null, table_data_resource, next_index, next_index_type, next_filter_spec, cljs.core.truth_(next_filter_by_view) ? next_bounds : null, next_sort_spec, next_from, next_size);
        } else {
          return null;
        }
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t14361.prototype.om$core$IRender$ = true;
    clustermap.components.table.t14361.prototype.om$core$IRender$render$arity$1 = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return clustermap.components.table.render_table.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), self__.table_data, new cljs.core.Keyword(null, "controls", "controls", 1340701452), self__.controls], null), self__.owner, cljs.core.PersistentArrayMap.EMPTY);
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t14361.prototype.om$core$IDidMount$ = true;
    clustermap.components.table.t14361.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var tdr = clustermap.ordered_resource.make_discard_stale_resource.call(null, "table-data-resource");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "table-data-resource", "table-data-resource", -1272908133), tdr);
        return clustermap.ordered_resource.retrieve_responses.call(null, tdr, function(tdr, ___$1, map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
          return function(data) {
            return om.core.update_BANG_.call(null, self__.table_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table-data", "table-data", -1783738205)], null), data);
          };
        }(tdr, ___$1, map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds));
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t14361.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function(_14363) {
        var self__ = this;
        var _14363__$1 = this;
        return self__.meta14362;
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.t14361.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function(_14363, meta14362__$1) {
        var self__ = this;
        var _14363__$1 = this;
        return new clustermap.components.table.t14361(self__.map__14359, self__.sort_spec, self__.table_component, self__.owner, self__.filter_by_view, self__.props, self__.map__14357, self__.table_data, self__.map__14358, self__.index, self__.filter_spec, self__.map__14360, self__.columns, self__.table_state, self__.controls, self__.bounds, self__.size, self__.p__14342, self__.from, meta14362__$1);
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
    clustermap.components.table.__GT_t14361 = function(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds) {
      return function __GT_t14361(map__14359__$2, sort_spec__$1, table_component__$1, owner__$1, filter_by_view__$1, props__$1, map__14357__$2, table_data__$1, map__14358__$2, index__$1, filter_spec__$1, map__14360__$2, columns__$1, table_state__$1, controls__$1, bounds__$1, size__$1, p__14342__$1, from__$1, meta14362) {
        return new clustermap.components.table.t14361(map__14359__$2, sort_spec__$1, table_component__$1, owner__$1, filter_by_view__$1, props__$1, map__14357__$2, table_data__$1, map__14358__$2, index__$1, filter_spec__$1, map__14360__$2, columns__$1, table_state__$1, controls__$1, bounds__$1, size__$1, p__14342__$1, from__$1, meta14362);
      };
    }(map__14357, map__14357__$1, props, map__14358, map__14358__$1, table_state, table_data, map__14359, map__14359__$1, controls, index, sort_spec, from, size, columns, map__14360, map__14360__$1, filter_by_view, filter_spec, bounds);
  }
  return new clustermap.components.table.t14361(map__14359__$1, sort_spec, table_component, owner, filter_by_view, props, map__14357__$1, table_data, map__14358__$1, index, filter_spec, map__14360__$1, columns, table_state, controls, bounds, size, p__14342, from, null);
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return!goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return!goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? document.documentMode >= 8 : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clustermap.formats.number");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.formats.number.round_decimal = function round_decimal(n, dec_places) {
  if (cljs.core.truth_(dec_places)) {
    return Math.round(n * Math.pow(10, dec_places)) / Math.pow(10, dec_places);
  } else {
    return n;
  }
};
clustermap.formats.number.prefix_sign = function prefix_sign(n_str, n, plus_QMARK_) {
  if (n < 0) {
    return "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
  } else {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = plus_QMARK_;
      if (cljs.core.truth_(and__3546__auto__)) {
        return n > 0;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return "+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
    } else {
      return n_str;
    }
  }
};
clustermap.formats.number.split_thousands = function split_thousands(n_str) {
  return clojure.string.join.call(null, ",", cljs.core.map.call(null, function(p1__14664_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.str, p1__14664_SHARP_);
  }, cljs.core.reverse.call(null, cljs.core.map.call(null, cljs.core.reverse, cljs.core.partition.call(null, 3, 3, cljs.core.PersistentVector.EMPTY, cljs.core.reverse.call(null, n_str))))));
};
clustermap.formats.number.eng_notation = function() {
  var eng_notation__delegate = function(n, p__14665) {
    var map__14670 = p__14665;
    var map__14670__$1 = cljs.core.seq_QMARK_.call(null, map__14670) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14670) : map__14670;
    var sf = cljs.core.get.call(null, map__14670__$1, new cljs.core.Keyword(null, "sf", "sf", -1949491738));
    if (cljs.core.truth_(n)) {
      var sign = n > 0 ? 1 : cljs.core._EQ_.call(null, n, 0) ? 0 : n < 0 ? -1 : null;
      var abs_n = Math.abs(n);
      var vec__14671 = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(abs_n)).split(".");
      var i = cljs.core.nth.call(null, vec__14671, 0, null);
      var d = cljs.core.nth.call(null, vec__14671, 1, null);
      var exp = abs_n >= 1 ? 3 * ((cljs.core.count.call(null, i) - 1) / 3 | 0) : abs_n > 0 ? -3 * ((3 + cljs.core.count.call(null, cljs.core.take_while.call(null, function(sign, abs_n, vec__14671, i, d, map__14670, map__14670__$1, sf) {
        return function(c) {
          return cljs.core._EQ_.call(null, c, "0");
        };
      }(sign, abs_n, vec__14671, i, d, map__14670, map__14670__$1, sf), d))) / 3 | 0) : 0;
      var usig = abs_n * Math.pow(10, -1 * exp);
      var vec__14672 = cljs.core.truth_(sf) ? ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(usig)).split(".") : null;
      var usig_i = cljs.core.nth.call(null, vec__14672, 0, null);
      var usig_d = cljs.core.nth.call(null, vec__14672, 1, null);
      var sigmult = cljs.core.truth_(function() {
        var and__3546__auto__ = sf;
        if (cljs.core.truth_(and__3546__auto__)) {
          return usig > 0;
        } else {
          return and__3546__auto__;
        }
      }()) ? Math.pow(10, cljs.core.count.call(null, usig_i) - sf) : null;
      var round_usig_str = cljs.core.truth_(sigmult) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sigmult * Math.round(usig / sigmult)) : null;
      var vec__14673 = cljs.core.truth_(round_usig_str) ? round_usig_str.split(".") : null;
      var round_usig_i = cljs.core.nth.call(null, vec__14673, 0, null);
      var round_usig_d = cljs.core.nth.call(null, vec__14673, 1, null);
      var trunc_usig_str = cljs.core.truth_(round_usig_str) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.filter.call(null, cljs.core.identity, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, sf, round_usig_i), cljs.core.repeat.call(null, cljs.core.count.call(null, round_usig_i) - sf, "0"), cljs.core.count.call(null, round_usig_d) > 0 ? new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".", cljs.core.take.call(null, sf - cljs.core.count.call(null, round_usig_i), round_usig_d)], null) : null], null))))) : null;
      var trunc_usig = cljs.core.truth_(trunc_usig_str) ? parseFloat(trunc_usig_str) : null;
      var sig = sign * function() {
        var or__3558__auto__ = trunc_usig;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return usig;
        }
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sig, exp], null);
    } else {
      return null;
    }
  };
  var eng_notation = function(n, var_args) {
    var p__14665 = null;
    if (arguments.length > 1) {
      p__14665 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return eng_notation__delegate.call(this, n, p__14665);
  };
  eng_notation.cljs$lang$maxFixedArity = 1;
  eng_notation.cljs$lang$applyTo = function(arglist__14674) {
    var n = cljs.core.first(arglist__14674);
    var p__14665 = cljs.core.rest(arglist__14674);
    return eng_notation__delegate(n, p__14665);
  };
  eng_notation.cljs$core$IFn$_invoke$arity$variadic = eng_notation__delegate;
  return eng_notation;
}();
clustermap.formats.number.readable = function() {
  var readable__delegate = function(n, p__14675) {
    var map__14678 = p__14675;
    var map__14678__$1 = cljs.core.seq_QMARK_.call(null, map__14678) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14678) : map__14678;
    var default$ = cljs.core.get.call(null, map__14678__$1, new cljs.core.Keyword(null, "default", "default", -1987822328));
    var plus_QMARK_ = cljs.core.get.call(null, map__14678__$1, new cljs.core.Keyword(null, "plus?", "plus?", -3051327));
    var dec = cljs.core.get.call(null, map__14678__$1, new cljs.core.Keyword(null, "dec", "dec", 1888433436));
    if (cljs.core.truth_(n)) {
      var abs_n = Math.abs(n);
      var round_n = clustermap.formats.number.round_decimal.call(null, abs_n, dec);
      var round_n_str = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(round_n);
      var vec__14679 = clojure.string.split.call(null, round_n_str, /\./);
      var i_str = cljs.core.nth.call(null, vec__14679, 0, null);
      var d_str = cljs.core.nth.call(null, vec__14679, 1, null);
      var t_str = clustermap.formats.number.split_thousands.call(null, i_str);
      var t_dec_str = clojure.string.join.call(null, ".", cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t_str, d_str], null)));
      return clustermap.formats.number.prefix_sign.call(null, t_dec_str, n, plus_QMARK_);
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__14675 = null;
    if (arguments.length > 1) {
      p__14675 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__14675);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__14680) {
    var n = cljs.core.first(arglist__14680);
    var p__14675 = cljs.core.rest(arglist__14680);
    return readable__delegate(n, p__14675);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.number.fnum = clustermap.formats.number.readable;
goog.provide("clustermap.formats.time");
goog.require("cljs.core");
clustermap.formats.time.get_year = function get_year(t) {
  var G__14686 = t;
  var G__14686__$1 = G__14686 == null ? null : new Date(G__14686);
  var G__14686__$2 = G__14686__$1 == null ? null : G__14686__$1.getYear();
  var G__14686__$3 = G__14686__$2 == null ? null : G__14686__$2 + 1900;
  return G__14686__$3;
};
goog.provide("clustermap.formats.money");
goog.require("cljs.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
clustermap.formats.money.money_suffixes = new cljs.core.PersistentArrayMap(null, 5, [0, "", 3, "k", 6, "m", 9, "bn", 12, "tn"], null);
clustermap.formats.money.money_suffix = function money_suffix(exp) {
  var or__3558__auto__ = clustermap.formats.money.money_suffixes.call(null, exp);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return "x10^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(exp);
  }
};
clustermap.formats.money.readable = function() {
  var readable__delegate = function(n, p__14658) {
    var map__14661 = p__14658;
    var map__14661__$1 = cljs.core.seq_QMARK_.call(null, map__14661) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14661) : map__14661;
    var default$ = cljs.core.get.call(null, map__14661__$1, new cljs.core.Keyword(null, "default", "default", -1987822328));
    var plus_QMARK_ = cljs.core.get.call(null, map__14661__$1, new cljs.core.Keyword(null, "plus?", "plus?", -3051327));
    var curr = cljs.core.get.call(null, map__14661__$1, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "\u00a3");
    var sf = cljs.core.get.call(null, map__14661__$1, new cljs.core.Keyword(null, "sf", "sf", -1949491738));
    if (cljs.core.truth_(n)) {
      var vec__14662 = clustermap.formats.number.eng_notation.call(null, n, new cljs.core.Keyword(null, "sf", "sf", -1949491738), sf);
      var sig = cljs.core.nth.call(null, vec__14662, 0, null);
      var exp = cljs.core.nth.call(null, vec__14662, 1, null);
      var abs_sig = Math.abs(sig);
      var suffix = clustermap.formats.money.money_suffix.call(null, exp);
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
        var and__3546__auto__ = plus_QMARK_;
        if (cljs.core.truth_(and__3546__auto__)) {
          return sig > 0;
        } else {
          return and__3546__auto__;
        }
      }()) ? "+" : sig < 0 ? "-" : null, curr, abs_sig, suffix], null)));
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__14658 = null;
    if (arguments.length > 1) {
      p__14658 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__14658);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__14663) {
    var n = cljs.core.first(arglist__14663);
    var p__14658 = cljs.core.rest(arglist__14663);
    return readable__delegate(n, p__14658);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.money.fmoney = clustermap.formats.money.readable;
goog.provide("clustermap.components.full_report.company_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_list.render_many_links = function render_many_links(link_fn, owner_path, type, objs) {
  var first_obj = cljs.core.first.call(null, objs);
  var next_objs = cljs.core.next.call(null, objs);
  if (next_objs) {
    var attrs13347 = link_fn.call(null, type, first_obj);
    return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs13347) ? sablono.interpreter.attributes.call(null, attrs13347) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13347) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs13347), React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null)));
  } else {
    return link_fn.call(null, type, first_obj);
  }
};
clustermap.components.full_report.company_list.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        return null;
      }
    }
  }
};
clustermap.components.full_report.company_list.portfolio_company = function portfolio_company(company, owner, p__13356) {
  var map__13369 = p__13356;
  var map__13369__$1 = cljs.core.seq_QMARK_.call(null, map__13369) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13369) : map__13369;
  var opts = map__13369__$1;
  var path_fn = cljs.core.get.call(null, map__13369__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var link_fn = cljs.core.get.call(null, map__13369__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), company);
  if (typeof clustermap.components.full_report.company_list.t13370 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t13370 = function(company_path, link_fn, path_fn, opts, map__13369, p__13356, owner, company, portfolio_company, meta13371) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__13369 = map__13369;
      this.p__13356 = p__13356;
      this.owner = owner;
      this.company = company;
      this.portfolio_company = portfolio_company;
      this.meta13371 = meta13371;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t13370.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t13370.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t13370";
    clustermap.components.full_report.company_list.t13370.cljs$lang$ctorPrWriter = function(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-list/t13370");
      };
    }(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t13370.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t13370.prototype.om$core$IRender$render$arity$1 = function(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs13373 = self__.link_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), self__.company);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13373) ? sablono.interpreter.attributes.call(null, attrs13373) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13373) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13373)], null)));
        }(), function() {
          var attrs13374 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), (new cljs.core.Keyword(null, "investor_companies", "investor_companies", 493714407)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13374) ? sablono.interpreter.attributes.call(null, attrs13374) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13374) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13374)], null)));
        }(), function() {
          var attrs13375 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), function() {
            var G__13380 = self__.company;
            var G__13380__$1 = G__13380 == null ? null : (new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)).cljs$core$IFn$_invoke$arity$1(G__13380);
            var G__13380__$2 = G__13380__$1 == null ? null : cljs.core.filter.call(null, function(G__13380, G__13380__$1, this__9504__auto____$1, company_path, map__13369, map__13369__$1, opts, path_fn, link_fn) {
              return function(bl) {
                return cljs.core._EQ_.call(null, "uk_constituencies", (new cljs.core.Keyword(null, "collection_id", "collection_id", -1037933240)).cljs$core$IFn$_invoke$arity$1(bl));
              };
            }(G__13380, G__13380__$1, this__9504__auto____$1, company_path, map__13369, map__13369__$1, opts, path_fn, link_fn), G__13380__$1);
            return G__13380__$2;
          }());
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13375) ? sablono.interpreter.attributes.call(null, attrs13375) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13375) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13375)], null)));
        }(), function() {
          var attrs13376 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", -1335568590)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13376) ? sablono.interpreter.attributes.call(null, attrs13376) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13376) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13376), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }(), function() {
          var attrs13377 = clustermap.components.full_report.company_list.pos_neg.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13377) ? sablono.interpreter.attributes.call(null, attrs13377) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13377) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13377)], null)));
        }(), function() {
          var attrs13378 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13378) ? sablono.interpreter.attributes.call(null, attrs13378) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13378) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13378)], null)));
        }(), function() {
          var attrs13379 = clustermap.formats.number.fnum.call(null, (new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 1463423589)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13379) ? sablono.interpreter.attributes.call(null, attrs13379) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13379) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13379), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3558__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", -1622918325)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }());
      };
    }(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t13370.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn) {
      return function(_13372) {
        var self__ = this;
        var _13372__$1 = this;
        return self__.meta13371;
      };
    }(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t13370.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn) {
      return function(_13372, meta13371__$1) {
        var self__ = this;
        var _13372__$1 = this;
        return new clustermap.components.full_report.company_list.t13370(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__13369, self__.p__13356, self__.owner, self__.company, self__.portfolio_company, meta13371__$1);
      };
    }(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.__GT_t13370 = function(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn) {
      return function __GT_t13370(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__13369__$2, p__13356__$1, owner__$1, company__$1, portfolio_company__$1, meta13371) {
        return new clustermap.components.full_report.company_list.t13370(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__13369__$2, p__13356__$1, owner__$1, company__$1, portfolio_company__$1, meta13371);
      };
    }(company_path, map__13369, map__13369__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_list.t13370(company_path, link_fn, path_fn, opts, map__13369__$1, p__13356, owner, company, portfolio_company, null);
};
clustermap.components.full_report.company_list.company_list = function company_list(companies, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  if (typeof clustermap.components.full_report.company_list.t13401 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t13401 = function(comm, opts, owner, companies, company_list, meta13402) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.companies = companies;
      this.company_list = company_list;
      this.meta13402 = meta13402;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t13401.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t13401.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t13401";
    clustermap.components.full_report.company_list.t13401.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-list/t13401");
      };
    }(comm);
    clustermap.components.full_report.company_list.t13401.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t13401.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        var attrs13404 = clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs13404) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs13404)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs13404) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs13405 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1843675177));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13405) ? sablono.interpreter.attributes.call(null, attrs13405) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13405) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13405)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs13410 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", -1335568590));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13410) ? sablono.interpreter.attributes.call(null, attrs13410) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13410) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13410)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)))), function() {
          var attrs13411 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 1463423589));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13411) ? sablono.interpreter.attributes.call(null, attrs13411) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13411) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13411)], null)));
        }())), function() {
          var attrs13412 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "company_no", "company_no", 1886326649), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs13412) ? sablono.interpreter.attributes.call(null, attrs13412) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13412) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13412)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13404), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, 
        React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs13413 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1843675177));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13413) ? sablono.interpreter.attributes.call(null, attrs13413) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13413) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13413)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs13418 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", -1335568590));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13418) ? sablono.interpreter.attributes.call(null, attrs13418) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13418) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13418)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 470467487)))), function() {
          var attrs13419 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 1463423589));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13419) ? sablono.interpreter.attributes.call(null, attrs13419) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13419) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13419)], null)));
        }())), function() {
          var attrs13420 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "company_no", "company_no", 1886326649), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs13420) ? sablono.interpreter.attributes.call(null, attrs13420) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13420) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13420)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_list.t13401.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_13403) {
        var self__ = this;
        var _13403__$1 = this;
        return self__.meta13402;
      };
    }(comm);
    clustermap.components.full_report.company_list.t13401.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_13403, meta13402__$1) {
        var self__ = this;
        var _13403__$1 = this;
        return new clustermap.components.full_report.company_list.t13401(self__.comm, self__.opts, self__.owner, self__.companies, self__.company_list, meta13402__$1);
      };
    }(comm);
    clustermap.components.full_report.company_list.__GT_t13401 = function(comm) {
      return function __GT_t13401(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta13402) {
        return new clustermap.components.full_report.company_list.t13401(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta13402);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_list.t13401(comm, opts, owner, companies, company_list, null);
};
goog.provide("clustermap.components.full_report.company_site_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_site_list.investment = function investment(investment__$1, owner, p__13421) {
  var map__13430 = p__13421;
  var map__13430__$1 = cljs.core.seq_QMARK_.call(null, map__13430) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13430) : map__13430;
  var opts = map__13430__$1;
  var path_fn = cljs.core.get.call(null, map__13430__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var link_fn = cljs.core.get.call(null, map__13430__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), investment__$1);
  if (typeof clustermap.components.full_report.company_site_list.t13431 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t13431 = function(company_path, link_fn, path_fn, opts, map__13430, p__13421, owner, investment, meta13432) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__13430 = map__13430;
      this.p__13421 = p__13421;
      this.owner = owner;
      this.investment = investment;
      this.meta13432 = meta13432;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t13431.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t13431.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t13431";
    clustermap.components.full_report.company_site_list.t13431.cljs$lang$ctorPrWriter = function(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-site-list/t13431");
      };
    }(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t13431.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t13431.prototype.om$core$IRender$render$arity$1 = function(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs13434 = (new cljs.core.Keyword(null, "portfolio_company_name", "portfolio_company_name", -2036426038)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13434) ? sablono.interpreter.attributes.call(null, attrs13434) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13434) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13434)], null)));
        }(), function() {
          var attrs13435 = (new cljs.core.Keyword(null, "portfolio_company_site_postcode", "portfolio_company_site_postcode", -609404017)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13435) ? sablono.interpreter.attributes.call(null, attrs13435) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13435) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13435)], null)));
        }(), function() {
          var attrs13436 = self__.link_fn.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830), (new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "name", "name", 1843675177), (new cljs.core.Keyword(null, "investor_company_name", 
          "investor_company_name", -1841760435)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13436) ? sablono.interpreter.attributes.call(null, attrs13436) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13436) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13436)], null)));
        }(), function() {
          var attrs13437 = self__.link_fn.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), (new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383), (new cljs.core.Keyword(null, "boundaryline_compact_name", 
          "boundaryline_compact_name", -523364293)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs13437) ? sablono.interpreter.attributes.call(null, attrs13437) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13437) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13437)], null)));
        }());
      };
    }(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t13431.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn) {
      return function(_13433) {
        var self__ = this;
        var _13433__$1 = this;
        return self__.meta13432;
      };
    }(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t13431.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn) {
      return function(_13433, meta13432__$1) {
        var self__ = this;
        var _13433__$1 = this;
        return new clustermap.components.full_report.company_site_list.t13431(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__13430, self__.p__13421, self__.owner, self__.investment, meta13432__$1);
      };
    }(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.__GT_t13431 = function(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn) {
      return function __GT_t13431(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__13430__$2, p__13421__$1, owner__$1, investment__$2, meta13432) {
        return new clustermap.components.full_report.company_site_list.t13431(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__13430__$2, p__13421__$1, owner__$1, investment__$2, meta13432);
      };
    }(company_path, map__13430, map__13430__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_site_list.t13431(company_path, link_fn, path_fn, opts, map__13430__$1, p__13421, owner, investment__$1, null);
};
clustermap.components.full_report.company_site_list.company_site_list = function company_site_list(investments, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  if (typeof clustermap.components.full_report.company_site_list.t13452 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t13452 = function(comm, opts, owner, investments, company_site_list, meta13453) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.investments = investments;
      this.company_site_list = company_site_list;
      this.meta13453 = meta13453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t13452.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t13452.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t13452";
    clustermap.components.full_report.company_site_list.t13452.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.company-site-list/t13452");
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t13452.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t13452.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        var attrs13455 = clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs13455) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs13455)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs13455) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs13456 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 1068537883));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13456) ? sablono.interpreter.attributes.call(null, attrs13456) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13456) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13456)], null)));
        }(), function() {
          var attrs13457 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 1627386767));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13457) ? sablono.interpreter.attributes.call(null, attrs13457) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13457) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13457)], null)));
        }(), function() {
          var attrs13458 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 2080546953));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13458) ? sablono.interpreter.attributes.call(null, attrs13458) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13458) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13458)], null)));
        }(), function() {
          var attrs13459 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 35068819));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13459) ? sablono.interpreter.attributes.call(null, attrs13459) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13459) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13459)], null)));
        }())), function() {
          var attrs13460 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "investment_uid", "investment_uid", -1904890096), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs13460) ? sablono.interpreter.attributes.call(null, attrs13460) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13460) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13460)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13455), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, 
        React.DOM.tr(null, function() {
          var attrs13461 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 1068537883));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13461) ? sablono.interpreter.attributes.call(null, attrs13461) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13461) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13461)], null)));
        }(), function() {
          var attrs13462 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 1627386767));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13462) ? sablono.interpreter.attributes.call(null, attrs13462) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13462) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13462)], null)));
        }(), function() {
          var attrs13463 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 2080546953));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13463) ? sablono.interpreter.attributes.call(null, attrs13463) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13463) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13463)], null)));
        }(), function() {
          var attrs13464 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 35068819));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs13464) ? sablono.interpreter.attributes.call(null, attrs13464) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13464) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13464)], null)));
        }())), function() {
          var attrs13465 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "investment_uid", "investment_uid", -1904890096), new cljs.core.Keyword(null, "opts", "opts", 155075701), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs13465) ? sablono.interpreter.attributes.call(null, attrs13465) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13465) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13465)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 1261701637)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t13452.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_13454) {
        var self__ = this;
        var _13454__$1 = this;
        return self__.meta13453;
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t13452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_13454, meta13453__$1) {
        var self__ = this;
        var _13454__$1 = this;
        return new clustermap.components.full_report.company_site_list.t13452(self__.comm, self__.opts, self__.owner, self__.investments, self__.company_site_list, meta13453__$1);
      };
    }(comm);
    clustermap.components.full_report.company_site_list.__GT_t13452 = function(comm) {
      return function __GT_t13452(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta13453) {
        return new clustermap.components.full_report.company_site_list.t13452(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta13453);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_site_list.t13452(comm, opts, owner, investments, company_site_list, null);
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", -1170142052);
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", -1170142052));
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_19501 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_19501;
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name)) + '\x3d"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.escape_html.call(null, value)) + '"';
};
hiccups.runtime.render_attribute = function render_attribute(p__19502) {
  var vec__19504 = p__19502;
  var name = cljs.core.nth.call(null, vec__19504, 0, null);
  var value = cljs.core.nth.call(null, vec__19504, 1, null);
  if (value === true) {
    if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name));
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      return hiccups.runtime.xml_attribute.call(null, name, value);
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function normalize_element(p__19505) {
  var vec__19508 = p__19505;
  var tag = cljs.core.nth.call(null, vec__19508, 0, null);
  var content = cljs.core.nthnext.call(null, vec__19508, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid tag name";
  } else {
  }
  var vec__19509 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__19509, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__19509, 1, null);
  var id = cljs.core.nth.call(null, vec__19509, 2, null);
  var class$ = cljs.core.nth.call(null, vec__19509, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__19511 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__19511, 0, null);
  var attrs = cljs.core.nth.call(null, vec__19511, 1, null);
  var content = cljs.core.nth.call(null, vec__19511, 2, null);
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = content;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, content)) + "\x3c/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "\x3e";
  } else {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.end_tag.call(null));
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x));
    } else {
      return hiccups.runtime.as_str.call(null, x);
    }
  }
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup;
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    if (cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__4124__auto__ = jayq.core.crate_meta.call(null, sel);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var cm = temp__4124__auto__;
        return "[crateGroup\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cm) + "]";
      } else {
        return sel;
      }
    } else {
      if (sel instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, sel);
      } else {
        return sel;
      }
    }
  }
};
jayq.core.$ = function() {
  var $ = null;
  var $__1 = function(sel) {
    return jQuery(jayq.core.__GT_selector.call(null, sel));
  };
  var $__2 = function(sel, context) {
    return jQuery(jayq.core.__GT_selector.call(null, sel), context);
  };
  $ = function(sel, context) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, sel);
      case 2:
        return $__2.call(this, sel, context);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $;
}();
jQuery.prototype.cljs$core$IFn$ = true;
jQuery.prototype.call = function() {
  var G__19329 = null;
  var G__19329__2 = function(self__, k) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__19329__3 = function(self__, k, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__19329 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19329__2.call(this, self__, k);
      case 3:
        return G__19329__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19329.cljs$core$IFn$_invoke$arity$2 = G__19329__2;
  G__19329.cljs$core$IFn$_invoke$arity$3 = G__19329__3;
  return G__19329;
}();
jQuery.prototype.apply = function(self__, args19328) {
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19328)));
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f);
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f, start);
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var this$__$1 = this;
  var or__3558__auto__ = this$__$1.slice(k, k + 1);
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, not_found);
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    if (void 0 === not_found) {
      return null;
    } else {
      return not_found;
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.length;
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.get(0);
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.count.call(null, this$__$1) > 1) {
    return this$__$1.slice(1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.truth_(this$__$1.get(0))) {
    return this$__$1;
  } else {
    return null;
  }
};
jayq.core.anim = function anim($elem, props, dur) {
  return $elem.animate(cljs.core.clj__GT_js.call(null, props), dur);
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text();
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt);
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text;
}();
jayq.core.css = function() {
  var css = null;
  var css__2 = function($elem, opts) {
    return $elem.css(cljs.core.clj__GT_js.call(null, opts));
  };
  var css__3 = function($elem, p, v) {
    return $elem.css(cljs.core.name.call(null, p), v);
  };
  css = function($elem, p, v) {
    switch(arguments.length) {
      case 2:
        return css__2.call(this, $elem, p);
      case 3:
        return css__3.call(this, $elem, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css.cljs$core$IFn$_invoke$arity$2 = css__2;
  css.cljs$core$IFn$_invoke$arity$3 = css__3;
  return css;
}();
jayq.core.attr = function() {
  var attr = null;
  var attr__2 = function($elem, x) {
    return $elem.attr(cljs.core.clj__GT_js.call(null, x));
  };
  var attr__3 = function($elem, n, v) {
    return $elem.attr(cljs.core.name.call(null, n), v);
  };
  attr = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return attr__2.call(this, $elem, n);
      case 3:
        return attr__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr;
}();
jayq.core.prop = function() {
  var prop = null;
  var prop__2 = function($elem, x) {
    return $elem.prop(cljs.core.clj__GT_js.call(null, x));
  };
  var prop__3 = function($elem, n, v) {
    return $elem.prop(cljs.core.name.call(null, n), v);
  };
  prop = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return prop__2.call(this, $elem, n);
      case 3:
        return prop__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prop.cljs$core$IFn$_invoke$arity$2 = prop__2;
  prop.cljs$core$IFn$_invoke$arity$3 = prop__3;
  return prop;
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a));
};
jayq.core.remove_prop = function remove_prop($elem, a) {
  return $elem.removeProp(cljs.core.name.call(null, a));
};
jayq.core.data = function() {
  var data = null;
  var data__1 = function($elem) {
    return $elem.data();
  };
  var data__2 = function($elem, k) {
    return $elem.data(cljs.core.clj__GT_js.call(null, k));
  };
  var data__3 = function($elem, k, v) {
    return $elem.data(cljs.core.name.call(null, k), cljs.core.clj__GT_js.call(null, v));
  };
  data = function($elem, k, v) {
    switch(arguments.length) {
      case 1:
        return data__1.call(this, $elem);
      case 2:
        return data__2.call(this, $elem, k);
      case 3:
        return data__3.call(this, $elem, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$1 = data__1;
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data;
}();
jayq.core.add_class = function add_class($elem, cl) {
  return $elem.addClass(cljs.core.name.call(null, cl));
};
jayq.core.remove_class = function() {
  var remove_class = null;
  var remove_class__1 = function($elem) {
    return $elem.removeClass();
  };
  var remove_class__2 = function($elem, cl) {
    return $elem.removeClass(cljs.core.name.call(null, cl));
  };
  remove_class = function($elem, cl) {
    switch(arguments.length) {
      case 1:
        return remove_class__1.call(this, $elem);
      case 2:
        return remove_class__2.call(this, $elem, cl);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class.cljs$core$IFn$_invoke$arity$1 = remove_class__1;
  remove_class.cljs$core$IFn$_invoke$arity$2 = remove_class__2;
  return remove_class;
}();
jayq.core.toggle_class = function() {
  var toggle_class = null;
  var toggle_class__2 = function($elem, cl) {
    return $elem.toggleClass(cljs.core.name.call(null, cl));
  };
  var toggle_class__3 = function($elem, cl, switch$) {
    return $elem.toggleClass(cljs.core.name.call(null, cl), cljs.core.boolean$.call(null, switch$));
  };
  toggle_class = function($elem, cl, switch$) {
    switch(arguments.length) {
      case 2:
        return toggle_class__2.call(this, $elem, cl);
      case 3:
        return toggle_class__3.call(this, $elem, cl, switch$);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class.cljs$core$IFn$_invoke$arity$2 = toggle_class__2;
  toggle_class.cljs$core$IFn$_invoke$arity$3 = toggle_class__3;
  return toggle_class;
}();
jayq.core.has_class = function has_class($elem, cl) {
  return $elem.hasClass(cljs.core.name.call(null, cl));
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector));
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content);
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content);
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content);
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content);
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target));
};
jayq.core.replace_with = function replace_with($elem, content) {
  return $elem.replaceWith(content);
};
jayq.core.remove = function remove($elem) {
  return $elem.remove();
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__19330) {
    var vec__19332 = p__19330;
    var speed = cljs.core.nth.call(null, vec__19332, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19332, 1, null);
    return $elem.hide(speed, on_finish);
  };
  var hide = function($elem, var_args) {
    var p__19330 = null;
    if (arguments.length > 1) {
      p__19330 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hide__delegate.call(this, $elem, p__19330);
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__19333) {
    var $elem = cljs.core.first(arglist__19333);
    var p__19330 = cljs.core.rest(arglist__19333);
    return hide__delegate($elem, p__19330);
  };
  hide.cljs$core$IFn$_invoke$arity$variadic = hide__delegate;
  return hide;
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__19334) {
    var vec__19336 = p__19334;
    var speed = cljs.core.nth.call(null, vec__19336, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19336, 1, null);
    return $elem.show(speed, on_finish);
  };
  var show = function($elem, var_args) {
    var p__19334 = null;
    if (arguments.length > 1) {
      p__19334 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return show__delegate.call(this, $elem, p__19334);
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__19337) {
    var $elem = cljs.core.first(arglist__19337);
    var p__19334 = cljs.core.rest(arglist__19337);
    return show__delegate($elem, p__19334);
  };
  show.cljs$core$IFn$_invoke$arity$variadic = show__delegate;
  return show;
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__19338) {
    var vec__19340 = p__19338;
    var speed = cljs.core.nth.call(null, vec__19340, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19340, 1, null);
    return $elem.toggle(speed, on_finish);
  };
  var toggle = function($elem, var_args) {
    var p__19338 = null;
    if (arguments.length > 1) {
      p__19338 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return toggle__delegate.call(this, $elem, p__19338);
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__19341) {
    var $elem = cljs.core.first(arglist__19341);
    var p__19338 = cljs.core.rest(arglist__19341);
    return toggle__delegate($elem, p__19338);
  };
  toggle.cljs$core$IFn$_invoke$arity$variadic = toggle__delegate;
  return toggle;
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__19342) {
    var vec__19344 = p__19342;
    var speed = cljs.core.nth.call(null, vec__19344, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19344, 1, null);
    return $elem.fadeOut(speed, on_finish);
  };
  var fade_out = function($elem, var_args) {
    var p__19342 = null;
    if (arguments.length > 1) {
      p__19342 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_out__delegate.call(this, $elem, p__19342);
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__19345) {
    var $elem = cljs.core.first(arglist__19345);
    var p__19342 = cljs.core.rest(arglist__19345);
    return fade_out__delegate($elem, p__19342);
  };
  fade_out.cljs$core$IFn$_invoke$arity$variadic = fade_out__delegate;
  return fade_out;
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__19346) {
    var vec__19348 = p__19346;
    var speed = cljs.core.nth.call(null, vec__19348, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19348, 1, null);
    return $elem.fadeIn(speed, on_finish);
  };
  var fade_in = function($elem, var_args) {
    var p__19346 = null;
    if (arguments.length > 1) {
      p__19346 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_in__delegate.call(this, $elem, p__19346);
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__19349) {
    var $elem = cljs.core.first(arglist__19349);
    var p__19346 = cljs.core.rest(arglist__19349);
    return fade_in__delegate($elem, p__19346);
  };
  fade_in.cljs$core$IFn$_invoke$arity$variadic = fade_in__delegate;
  return fade_in;
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__19350) {
    var vec__19352 = p__19350;
    var speed = cljs.core.nth.call(null, vec__19352, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19352, 1, null);
    return $elem.slideUp(speed, on_finish);
  };
  var slide_up = function($elem, var_args) {
    var p__19350 = null;
    if (arguments.length > 1) {
      p__19350 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_up__delegate.call(this, $elem, p__19350);
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__19353) {
    var $elem = cljs.core.first(arglist__19353);
    var p__19350 = cljs.core.rest(arglist__19353);
    return slide_up__delegate($elem, p__19350);
  };
  slide_up.cljs$core$IFn$_invoke$arity$variadic = slide_up__delegate;
  return slide_up;
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__19354) {
    var vec__19356 = p__19354;
    var speed = cljs.core.nth.call(null, vec__19356, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__19356, 1, null);
    return $elem.slideDown(speed, on_finish);
  };
  var slide_down = function($elem, var_args) {
    var p__19354 = null;
    if (arguments.length > 1) {
      p__19354 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_down__delegate.call(this, $elem, p__19354);
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__19357) {
    var $elem = cljs.core.first(arglist__19357);
    var p__19354 = cljs.core.rest(arglist__19357);
    return slide_down__delegate($elem, p__19354);
  };
  slide_down.cljs$core$IFn$_invoke$arity$variadic = slide_down__delegate;
  return slide_down;
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings();
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector));
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  siblings.cljs$core$IFn$_invoke$arity$1 = siblings__1;
  siblings.cljs$core$IFn$_invoke$arity$2 = siblings__2;
  return siblings;
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent();
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents();
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector));
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil();
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents_until.cljs$core$IFn$_invoke$arity$1 = parents_until__1;
  parents_until.cljs$core$IFn$_invoke$arity$2 = parents_until__2;
  parents_until.cljs$core$IFn$_invoke$arity$3 = parents_until__3;
  return parents_until;
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children();
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector));
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  children.cljs$core$IFn$_invoke$arity$1 = children__1;
  children.cljs$core$IFn$_invoke$arity$2 = children__2;
  return children;
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next();
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector));
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next.cljs$core$IFn$_invoke$arity$1 = next__1;
  next.cljs$core$IFn$_invoke$arity$2 = next__2;
  return next;
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev();
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector));
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev.cljs$core$IFn$_invoke$arity$1 = prev__1;
  prev.cljs$core$IFn$_invoke$arity$2 = prev__2;
  return prev;
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll();
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector));
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_all.cljs$core$IFn$_invoke$arity$1 = next_all__1;
  next_all.cljs$core$IFn$_invoke$arity$2 = next_all__2;
  return next_all;
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll();
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector));
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_all.cljs$core$IFn$_invoke$arity$1 = prev_all__1;
  prev_all.cljs$core$IFn$_invoke$arity$2 = prev_all__2;
  return prev_all;
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil();
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_until.cljs$core$IFn$_invoke$arity$1 = next_until__1;
  next_until.cljs$core$IFn$_invoke$arity$2 = next_until__2;
  next_until.cljs$core$IFn$_invoke$arity$3 = next_until__3;
  return next_until;
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil();
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_until.cljs$core$IFn$_invoke$arity$1 = prev_until__1;
  prev_until.cljs$core$IFn$_invoke$arity$2 = prev_until__2;
  prev_until.cljs$core$IFn$_invoke$arity$3 = prev_until__3;
  return prev_until;
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector));
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__19358) {
    var vec__19360 = p__19358;
    var context = cljs.core.nth.call(null, vec__19360, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context);
  };
  var closest = function($elem, selector, var_args) {
    var p__19358 = null;
    if (arguments.length > 2) {
      p__19358 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return closest__delegate.call(this, $elem, selector, p__19358);
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__19361) {
    var $elem = cljs.core.first(arglist__19361);
    arglist__19361 = cljs.core.next(arglist__19361);
    var selector = cljs.core.first(arglist__19361);
    var p__19358 = cljs.core.rest(arglist__19361);
    return closest__delegate($elem, selector, p__19358);
  };
  closest.cljs$core$IFn$_invoke$arity$variadic = closest__delegate;
  return closest;
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone();
};
jayq.core.html = function() {
  var html = null;
  var html__1 = function($elem) {
    return $elem.html();
  };
  var html__2 = function($elem, v) {
    return $elem.html(v);
  };
  html = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return html__1.call(this, $elem);
      case 2:
        return html__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  html.cljs$core$IFn$_invoke$arity$1 = html__1;
  html.cljs$core$IFn$_invoke$arity$2 = html__2;
  return html;
}();
jayq.core.inner = jayq.core.html;
jayq.core.empty = function empty($elem) {
  return $elem.empty();
};
jayq.core.val = function() {
  var val = null;
  var val__1 = function($elem) {
    return $elem.val();
  };
  var val__2 = function($elem, v) {
    return $elem.val(v);
  };
  val = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, $elem);
      case 2:
        return val__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val;
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize();
};
jayq.core.queue = function() {
  var queue = null;
  var queue__1 = function($elem) {
    return $elem.queue();
  };
  var queue__2 = function($elem, x) {
    return $elem.queue(x);
  };
  var queue__3 = function($elem, x, y) {
    return $elem.queue(x, y);
  };
  queue = function($elem, x, y) {
    switch(arguments.length) {
      case 1:
        return queue__1.call(this, $elem);
      case 2:
        return queue__2.call(this, $elem, x);
      case 3:
        return queue__3.call(this, $elem, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  queue.cljs$core$IFn$_invoke$arity$2 = queue__2;
  queue.cljs$core$IFn$_invoke$arity$3 = queue__3;
  return queue;
}();
jayq.core.dequeue = function() {
  var dequeue = null;
  var dequeue__1 = function($elem) {
    return $elem.dequeue();
  };
  var dequeue__2 = function($elem, queue_name) {
    return $elem.dequeue(queue_name);
  };
  dequeue = function($elem, queue_name) {
    switch(arguments.length) {
      case 1:
        return dequeue__1.call(this, $elem);
      case 2:
        return dequeue__2.call(this, $elem, queue_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dequeue.cljs$core$IFn$_invoke$arity$1 = dequeue__1;
  dequeue.cljs$core$IFn$_invoke$arity$2 = dequeue__2;
  return dequeue;
}();
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func);
};
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
};
jQuery.ajaxSetup(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accepts", "accepts", 1429714104), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1317840885), "application/edn, text/edn", new cljs.core.Keyword(null, "clojure", "clojure", 438975815), "application/clojure, text/clojure"], null), new cljs.core.Keyword(null, "contents", "contents", -1567174023), new cljs.core.PersistentArrayMap(null, 1, ["clojure", 
/edn|clojure/], null), new cljs.core.Keyword(null, "converters", "converters", 195533259), new cljs.core.PersistentArrayMap(null, 2, ["text edn", jayq.core.mimetype_converter, "text clojure", jayq.core.mimetype_converter], null)], null)));
jayq.core.clj_content_type_QMARK_ = function clj_content_type_QMARK_(x) {
  return cljs.core.re_find.call(null, /^(text|application)\/(clojure|edn)/, x);
};
jayq.core.__GT_content_type = function __GT_content_type(ct) {
  if (typeof ct === "string") {
    return ct;
  } else {
    if (ct instanceof cljs.core.Keyword) {
      return cljs.core.subs.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ct), 1);
    } else {
      return null;
    }
  }
};
jayq.core.preprocess_request = function preprocess_request(p__19364) {
  var map__19366 = p__19364;
  var map__19366__$1 = cljs.core.seq_QMARK_.call(null, map__19366) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19366) : map__19366;
  var request = map__19366__$1;
  var contentType = cljs.core.get.call(null, map__19366__$1, new cljs.core.Keyword(null, "contentType", "contentType", -1462509576));
  var data = cljs.core.get.call(null, map__19366__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var ct = jayq.core.__GT_content_type.call(null, contentType);
  return function(ct, map__19366, map__19366__$1, request, contentType, data) {
    return function(p1__19363_SHARP_) {
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = ct;
        if (cljs.core.truth_(and__3546__auto__)) {
          return jayq.core.clj_content_type_QMARK_.call(null, ct);
        } else {
          return and__3546__auto__;
        }
      }())) {
        return cljs.core.assoc.call(null, p1__19363_SHARP_, new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.pr_str.call(null, data));
      } else {
        return p1__19363_SHARP_;
      }
    };
  }(ct, map__19366, map__19366__$1, request, contentType, data).call(null, function(ct, map__19366, map__19366__$1, request, contentType, data) {
    return function(p1__19362_SHARP_) {
      if (cljs.core.truth_(ct)) {
        return cljs.core.assoc.call(null, p1__19362_SHARP_, new cljs.core.Keyword(null, "contentType", "contentType", -1462509576), ct);
      } else {
        return p1__19362_SHARP_;
      }
    };
  }(ct, map__19366, map__19366__$1, request, contentType, data).call(null, request));
};
jayq.core.__GT_ajax_settings = function __GT_ajax_settings(request) {
  return cljs.core.clj__GT_js.call(null, jayq.core.preprocess_request.call(null, request));
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.core.__GT_ajax_settings.call(null, settings));
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.core.__GT_ajax_settings.call(null, settings));
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax.cljs$core$IFn$_invoke$arity$1 = ajax__1;
  ajax.cljs$core$IFn$_invoke$arity$2 = ajax__2;
  return ajax;
}();
jayq.core.xhr = function xhr(p__19367, content, callback) {
  var vec__19369 = p__19367;
  var method = cljs.core.nth.call(null, vec__19369, 0, null);
  var uri = cljs.core.nth.call(null, vec__19369, 1, null);
  var params = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), clojure.string.upper_case.call(null, cljs.core.name.call(null, method)), new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.clj__GT_js.call(null, content), new cljs.core.Keyword(null, "success", "success", 1890645906), callback], null));
  return jQuery.ajax(uri, params);
};
jayq.core.read = function read($elem) {
  return cljs.reader.read_string.call(null, jayq.core.html.call(null, $elem));
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func);
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__19370) {
    var vec__19372 = p__19370;
    var func = cljs.core.nth.call(null, vec__19372, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func);
  };
  var unbind = function($elem, ev, var_args) {
    var p__19370 = null;
    if (arguments.length > 2) {
      p__19370 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return unbind__delegate.call(this, $elem, ev, p__19370);
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__19373) {
    var $elem = cljs.core.first(arglist__19373);
    arglist__19373 = cljs.core.next(arglist__19373);
    var ev = cljs.core.first(arglist__19373);
    var p__19370 = cljs.core.rest(arglist__19373);
    return unbind__delegate($elem, ev, p__19370);
  };
  unbind.cljs$core$IFn$_invoke$arity$variadic = unbind__delegate;
  return unbind;
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev));
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func);
};
jayq.core.__GT_event = function __GT_event(e) {
  if (cljs.core.coll_QMARK_.call(null, e)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e));
  } else {
    return cljs.core.clj__GT_js.call(null, e);
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__19374) {
    var vec__19376 = p__19374;
    var sel = cljs.core.nth.call(null, vec__19376, 0, null);
    var data = cljs.core.nth.call(null, vec__19376, 1, null);
    var handler = cljs.core.nth.call(null, vec__19376, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var on = function($elem, events, var_args) {
    var p__19374 = null;
    if (arguments.length > 2) {
      p__19374 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return on__delegate.call(this, $elem, events, p__19374);
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__19377) {
    var $elem = cljs.core.first(arglist__19377);
    arglist__19377 = cljs.core.next(arglist__19377);
    var events = cljs.core.first(arglist__19377);
    var p__19374 = cljs.core.rest(arglist__19377);
    return on__delegate($elem, events, p__19374);
  };
  on.cljs$core$IFn$_invoke$arity$variadic = on__delegate;
  return on;
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__19378) {
    var vec__19380 = p__19378;
    var sel = cljs.core.nth.call(null, vec__19380, 0, null);
    var data = cljs.core.nth.call(null, vec__19380, 1, null);
    var handler = cljs.core.nth.call(null, vec__19380, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var one = function($elem, events, var_args) {
    var p__19378 = null;
    if (arguments.length > 2) {
      p__19378 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return one__delegate.call(this, $elem, events, p__19378);
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__19381) {
    var $elem = cljs.core.first(arglist__19381);
    arglist__19381 = cljs.core.next(arglist__19381);
    var events = cljs.core.first(arglist__19381);
    var p__19378 = cljs.core.rest(arglist__19381);
    return one__delegate($elem, events, p__19378);
  };
  one.cljs$core$IFn$_invoke$arity$variadic = one__delegate;
  return one;
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__19382) {
    var vec__19384 = p__19382;
    var sel = cljs.core.nth.call(null, vec__19384, 0, null);
    var handler = cljs.core.nth.call(null, vec__19384, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), handler);
  };
  var off = function($elem, events, var_args) {
    var p__19382 = null;
    if (arguments.length > 2) {
      p__19382 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return off__delegate.call(this, $elem, events, p__19382);
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__19385) {
    var $elem = cljs.core.first(arglist__19385);
    arglist__19385 = cljs.core.next(arglist__19385);
    var events = cljs.core.first(arglist__19385);
    var p__19382 = cljs.core.rest(arglist__19385);
    return off__delegate($elem, events, p__19382);
  };
  off.cljs$core$IFn$_invoke$arity$variadic = off__delegate;
  return off;
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault();
};
jayq.core.height = function() {
  var height = null;
  var height__1 = function($elem) {
    return $elem.height();
  };
  var height__2 = function($elem, x) {
    return $elem.height(x);
  };
  height = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return height__1.call(this, $elem);
      case 2:
        return height__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  height.cljs$core$IFn$_invoke$arity$1 = height__1;
  height.cljs$core$IFn$_invoke$arity$2 = height__2;
  return height;
}();
jayq.core.width = function() {
  var width = null;
  var width__1 = function($elem) {
    return $elem.width();
  };
  var width__2 = function($elem, x) {
    return $elem.width(x);
  };
  width = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return width__1.call(this, $elem);
      case 2:
        return width__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  width.cljs$core$IFn$_invoke$arity$1 = width__1;
  width.cljs$core$IFn$_invoke$arity$2 = width__2;
  return width;
}();
jayq.core.inner_height = function inner_height($elem) {
  return $elem.innerHeight();
};
jayq.core.inner_width = function inner_width($elem) {
  return $elem.innerWidth();
};
jayq.core.outer_height = function outer_height($elem) {
  return $elem.outerHeight();
};
jayq.core.outer_width = function outer_width($elem) {
  return $elem.outerWidth();
};
jayq.core.offset = function() {
  var offset = null;
  var offset__1 = function($elem) {
    return cljs.core.js__GT_clj.call(null, $elem.offset(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  };
  var offset__2 = function($elem, coords) {
    return cljs.core.clj__GT_js.call(null, coords).offset();
  };
  offset = function($elem, coords) {
    switch(arguments.length) {
      case 1:
        return offset__1.call(this, $elem);
      case 2:
        return offset__2.call(this, $elem, coords);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  offset.cljs$core$IFn$_invoke$arity$1 = offset__1;
  offset.cljs$core$IFn$_invoke$arity$2 = offset__2;
  return offset;
}();
jayq.core.offset_parent = function offset_parent($elem) {
  return $elem.offsetParent();
};
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
};
jayq.core.scroll_left = function() {
  var scroll_left = null;
  var scroll_left__1 = function($elem) {
    return $elem.scrollLeft();
  };
  var scroll_left__2 = function($elem, x) {
    return $elem.scrollLeft(x);
  };
  scroll_left = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_left__1.call(this, $elem);
      case 2:
        return scroll_left__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_left.cljs$core$IFn$_invoke$arity$1 = scroll_left__1;
  scroll_left.cljs$core$IFn$_invoke$arity$2 = scroll_left__2;
  return scroll_left;
}();
jayq.core.scroll_top = function() {
  var scroll_top = null;
  var scroll_top__1 = function($elem) {
    return $elem.scrollTop();
  };
  var scroll_top__2 = function($elem, x) {
    return $elem.scrollTop(x);
  };
  scroll_top = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_top__1.call(this, $elem);
      case 2:
        return scroll_top__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_top.cljs$core$IFn$_invoke$arity$1 = scroll_top__1;
  scroll_top.cljs$core$IFn$_invoke$arity$2 = scroll_top__2;
  return scroll_top;
}();
jayq.core.$deferred = jQuery.Deferred;
jayq.core.$when = jQuery.when;
jayq.core.then = function() {
  var then = null;
  var then__3 = function(deferred, done_fn, fail_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn));
  };
  var then__4 = function(deferred, done_fn, fail_fn, progress_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn), cljs.core.clj__GT_js.call(null, progress_fn));
  };
  then = function(deferred, done_fn, fail_fn, progress_fn) {
    switch(arguments.length) {
      case 3:
        return then__3.call(this, deferred, done_fn, fail_fn);
      case 4:
        return then__4.call(this, deferred, done_fn, fail_fn, progress_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  then.cljs$core$IFn$_invoke$arity$3 = then__3;
  then.cljs$core$IFn$_invoke$arity$4 = then__4;
  return then;
}();
jayq.core.done = function() {
  var done__delegate = function(deferred, fns_args) {
    return deferred.done.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var done = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return done__delegate.call(this, deferred, fns_args);
  };
  done.cljs$lang$maxFixedArity = 1;
  done.cljs$lang$applyTo = function(arglist__19386) {
    var deferred = cljs.core.first(arglist__19386);
    var fns_args = cljs.core.rest(arglist__19386);
    return done__delegate(deferred, fns_args);
  };
  done.cljs$core$IFn$_invoke$arity$variadic = done__delegate;
  return done;
}();
jayq.core.fail = function() {
  var fail__delegate = function(deferred, fns_args) {
    return deferred.fail.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var fail = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fail__delegate.call(this, deferred, fns_args);
  };
  fail.cljs$lang$maxFixedArity = 1;
  fail.cljs$lang$applyTo = function(arglist__19387) {
    var deferred = cljs.core.first(arglist__19387);
    var fns_args = cljs.core.rest(arglist__19387);
    return fail__delegate(deferred, fns_args);
  };
  fail.cljs$core$IFn$_invoke$arity$variadic = fail__delegate;
  return fail;
}();
jayq.core.progress = function progress(deferred, fns_args) {
  return deferred.progress(cljs.core.clj__GT_js.call(null, fns_args));
};
jayq.core.promise = function() {
  var promise = null;
  var promise__1 = function(deferred) {
    return deferred.promise();
  };
  var promise__2 = function(deferred, type) {
    return deferred.promise(type);
  };
  var promise__3 = function(deferred, type, target) {
    return deferred.promise(type, target);
  };
  promise = function(deferred, type, target) {
    switch(arguments.length) {
      case 1:
        return promise__1.call(this, deferred);
      case 2:
        return promise__2.call(this, deferred, type);
      case 3:
        return promise__3.call(this, deferred, type, target);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  promise.cljs$core$IFn$_invoke$arity$1 = promise__1;
  promise.cljs$core$IFn$_invoke$arity$2 = promise__2;
  promise.cljs$core$IFn$_invoke$arity$3 = promise__3;
  return promise;
}();
jayq.core.always = function() {
  var always__delegate = function(deferred, fns_args) {
    return deferred.always.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var always = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return always__delegate.call(this, deferred, fns_args);
  };
  always.cljs$lang$maxFixedArity = 1;
  always.cljs$lang$applyTo = function(arglist__19388) {
    var deferred = cljs.core.first(arglist__19388);
    var fns_args = cljs.core.rest(arglist__19388);
    return always__delegate(deferred, fns_args);
  };
  always.cljs$core$IFn$_invoke$arity$variadic = always__delegate;
  return always;
}();
jayq.core.reject = function reject(deferred, args) {
  return deferred.reject(args);
};
jayq.core.reject_with = function reject_with(deferred, context, args) {
  return deferred.rejectWith(context, args);
};
jayq.core.notify = function notify(deferred, args) {
  return deferred.notify(args);
};
jayq.core.notify_with = function notify_with(deferred, context, args) {
  return deferred.notifyWith(context, args);
};
jayq.core.resolve = function resolve(deferred, args) {
  return deferred.resolve(args);
};
jayq.core.resolve_with = function resolve_with(deferred, context, args) {
  return deferred.resolveWith(context, args);
};
jayq.core.pipe = function() {
  var pipe = null;
  var pipe__2 = function(deferred, done_filter) {
    return deferred.pipe(done_filter);
  };
  var pipe__3 = function(deferred, done_filter, fail_filter) {
    return deferred.pipe(done_filter, fail_filter);
  };
  var pipe__4 = function(deferred, done_filter, fail_filter, progress_filter) {
    return deferred.pipe(done_filter, fail_filter, progress_filter);
  };
  pipe = function(deferred, done_filter, fail_filter, progress_filter) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, deferred, done_filter);
      case 3:
        return pipe__3.call(this, deferred, done_filter, fail_filter);
      case 4:
        return pipe__4.call(this, deferred, done_filter, fail_filter, progress_filter);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  pipe.cljs$core$IFn$_invoke$arity$4 = pipe__4;
  return pipe;
}();
jayq.core.state = function state(deferred) {
  return cljs.core.keyword.call(null, deferred.state());
};
jayq.core.deferred_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", -1891502105), jayq.core.$when, new cljs.core.Keyword(null, "bind", "bind", -113428417), function(x, f) {
  var dfd = jayq.core.$deferred.call(null);
  jayq.core.done.call(null, x, function(dfd) {
    return function(v) {
      return jayq.core.done.call(null, f.call(null, v), cljs.core.partial.call(null, jayq.core.resolve, dfd));
    };
  }(dfd));
  return jayq.core.promise.call(null, dfd);
}, new cljs.core.Keyword(null, "zero", "zero", -858964576), cljs.core.identity], null);
jayq.core.ajax_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", -1891502105), cljs.core.identity, new cljs.core.Keyword(null, "bind", "bind", -113428417), function(x, f) {
  return jayq.core.done.call(null, jayq.core.ajax.call(null, x), f);
}, new cljs.core.Keyword(null, "zero", "zero", -858964576), cljs.core.identity], null);
goog.provide("clustermap.components.timeline_chart");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.formats.number");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("om.dom");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("jayq.core");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
goog.require("hiccups.runtime");
clustermap.components.timeline_chart.create_chart = function create_chart(data, node, p__14377) {
  var map__14379 = p__14377;
  var map__14379__$1 = cljs.core.seq_QMARK_.call(null, map__14379) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14379) : map__14379;
  var opts = map__14379__$1;
  var y1_title = cljs.core.get.call(null, map__14379__$1, new cljs.core.Keyword(null, "y1-title", "y1-title", 472065763));
  var y0_title = cljs.core.get.call(null, map__14379__$1, new cljs.core.Keyword(null, "y0-title", "y0-title", -809800001));
  var x_labels = cljs.core.map.call(null, new cljs.core.Keyword(null, "date", "date", -1463434462), data);
  var stats = cljs.core.map.call(null, new cljs.core.Keyword(null, "stats", "stats", -85643011), data);
  var y_median = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function(p1__14371_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__14371_SHARP_, 0);
    };
  }(x_labels, stats, map__14379, map__14379__$1, opts, y1_title, y0_title), function(x_labels, stats, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function(p1__14372_SHARP_) {
      return cljs.core.get_in.call(null, p1__14372_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "median", "median", 569566131)], null));
    };
  }(x_labels, stats, map__14379, map__14379__$1, opts, y1_title, y0_title)), data);
  var y_mean = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function(p1__14373_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__14373_SHARP_, 0);
    };
  }(x_labels, stats, y_median, map__14379, map__14379__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function(p1__14374_SHARP_) {
      return cljs.core.get_in.call(null, p1__14374_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "mean", "mean", -1359234715)], null));
    };
  }(x_labels, stats, y_median, map__14379, map__14379__$1, opts, y1_title, y0_title)), data);
  var y_total = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, y_mean, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function(p1__14375_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__14375_SHARP_, 0);
    };
  }(x_labels, stats, y_median, y_mean, map__14379, map__14379__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, y_mean, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function(p1__14376_SHARP_) {
      return cljs.core.get_in.call(null, p1__14376_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "total", "total", 1916810418)], null));
    };
  }(x_labels, stats, y_median, y_mean, map__14379, map__14379__$1, opts, y1_title, y0_title)), data);
  return jayq.core.$.call(null, node).highcharts(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "chart", "chart", 1173225425), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", -384071477), null, new cljs.core.Keyword(null, "height", "height", 1025178622), 300], null), new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", 
  "text", -1790561697), null], null), new cljs.core.Keyword(null, "xAxis", "xAxis", 1266196059), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "categories", "categories", 178386610), x_labels, new cljs.core.Keyword(null, "labels", "labels", -626734591), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rotation", "rotation", -1728051644), 270], null)], null), new cljs.core.Keyword(null, "yAxis", "yAxis", 1793336722), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", -1790561697), y0_title], null), new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "labels", "labels", -626734591), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "formatter", "formatter", -483008823), function(x_labels, 
  stats, y_median, y_mean, y_total, map__14379, map__14379__$1, opts, y1_title, y0_title) {
    return function() {
      var this$ = this;
      return clustermap.formats.money.readable.call(null, this$.value, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "");
    };
  }(x_labels, stats, y_median, y_mean, y_total, map__14379, map__14379__$1, opts, y1_title, y0_title)], null)], null)], null), new cljs.core.Keyword(null, "series", "series", 600710694), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(y0_title), new cljs.core.Keyword(null, "type", "type", 1174270348), "line", 
  new cljs.core.Keyword(null, "yAxis", "yAxis", 1793336722), 0, new cljs.core.Keyword(null, "data", "data", -232669377), y_total], null)], null)], null)));
};
clustermap.components.timeline_chart.timeline_chart = function timeline_chart(data, owner, p__14380) {
  var map__14385 = p__14380;
  var map__14385__$1 = cljs.core.seq_QMARK_.call(null, map__14385) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14385) : map__14385;
  var opts = map__14385__$1;
  var id = cljs.core.get.call(null, map__14385__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  if (typeof clustermap.components.timeline_chart.t14386 !== "undefined") {
  } else {
    clustermap.components.timeline_chart.t14386 = function(id, opts, map__14385, p__14380, owner, data, timeline_chart, meta14387) {
      this.id = id;
      this.opts = opts;
      this.map__14385 = map__14385;
      this.p__14380 = p__14380;
      this.owner = owner;
      this.data = data;
      this.timeline_chart = timeline_chart;
      this.meta14387 = meta14387;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.timeline_chart.t14386.cljs$lang$type = true;
    clustermap.components.timeline_chart.t14386.cljs$lang$ctorStr = "clustermap.components.timeline-chart/t14386";
    clustermap.components.timeline_chart.t14386.cljs$lang$ctorPrWriter = function(map__14385, map__14385__$1, opts, id) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.timeline-chart/t14386");
      };
    }(map__14385, map__14385__$1, opts, id);
    clustermap.components.timeline_chart.t14386.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.timeline_chart.t14386.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__14385, map__14385__$1, opts, id) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        return clustermap.components.timeline_chart.create_chart.call(null, self__.data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
      };
    }(map__14385, map__14385__$1, opts, id);
    clustermap.components.timeline_chart.t14386.prototype.om$core$IDidMount$ = true;
    clustermap.components.timeline_chart.t14386.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__14385, map__14385__$1, opts, id) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        clustermap.components.timeline_chart.create_chart.call(null, self__.data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
        return jayq.core.$.call(null, document).on("clustermap-change-view", function(node, this$__$1, map__14385, map__14385__$1, opts, id) {
          return function(e) {
            var chart = jayq.core.$.call(null, om.core.get_node.call(null, self__.owner, "chart"));
            if (cljs.core.truth_(chart.is(":visible"))) {
              return chart.highcharts().reflow();
            } else {
              return null;
            }
          };
        }(node, this$__$1, map__14385, map__14385__$1, opts, id));
      };
    }(map__14385, map__14385__$1, opts, id);
    clustermap.components.timeline_chart.t14386.prototype.om$core$IRender$ = true;
    clustermap.components.timeline_chart.t14386.prototype.om$core$IRender$render$arity$1 = function(map__14385, map__14385__$1, opts, id) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"timeline-chart", "id":self__.id, "ref":"chart"});
      };
    }(map__14385, map__14385__$1, opts, id);
    clustermap.components.timeline_chart.t14386.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__14385, map__14385__$1, opts, id) {
      return function(_14388) {
        var self__ = this;
        var _14388__$1 = this;
        return self__.meta14387;
      };
    }(map__14385, map__14385__$1, opts, id);
    clustermap.components.timeline_chart.t14386.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__14385, map__14385__$1, opts, id) {
      return function(_14388, meta14387__$1) {
        var self__ = this;
        var _14388__$1 = this;
        return new clustermap.components.timeline_chart.t14386(self__.id, self__.opts, self__.map__14385, self__.p__14380, self__.owner, self__.data, self__.timeline_chart, meta14387__$1);
      };
    }(map__14385, map__14385__$1, opts, id);
    clustermap.components.timeline_chart.__GT_t14386 = function(map__14385, map__14385__$1, opts, id) {
      return function __GT_t14386(id__$1, opts__$1, map__14385__$2, p__14380__$1, owner__$1, data__$1, timeline_chart__$1, meta14387) {
        return new clustermap.components.timeline_chart.t14386(id__$1, opts__$1, map__14385__$2, p__14380__$1, owner__$1, data__$1, timeline_chart__$1, meta14387);
      };
    }(map__14385, map__14385__$1, opts, id);
  }
  return new clustermap.components.timeline_chart.t14386(id, opts, map__14385__$1, p__14380, owner, data, timeline_chart, null);
};
goog.provide("clustermap.components.full_report.charts");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.components.timeline_chart");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.timeline_chart");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.full_report.charts.charts = function charts(data, owner) {
  if (typeof clustermap.components.full_report.charts.t13342 !== "undefined") {
  } else {
    clustermap.components.full_report.charts.t13342 = function(owner, data, charts, meta13343) {
      this.owner = owner;
      this.data = data;
      this.charts = charts;
      this.meta13343 = meta13343;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.charts.t13342.cljs$lang$type = true;
    clustermap.components.full_report.charts.t13342.cljs$lang$ctorStr = "clustermap.components.full-report.charts/t13342";
    clustermap.components.full_report.charts.t13342.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.charts/t13342");
    };
    clustermap.components.full_report.charts.t13342.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.charts.t13342.prototype.om$core$IRender$render$arity$1 = function(this__9504__auto__) {
      var self__ = this;
      var this__9504__auto____$1 = this;
      var attrs13345 = function() {
        var temp__4124__auto__ = (new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 2127671062)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var timelines = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.grid", "div.grid", 736588158), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 202391088), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell.charts", "div.tbl-cell.charts", 1566068393), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 202391088), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-row", "div.tbl-row", 2102558769), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell", "div.tbl-cell", -1480839526), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Keyword(null, "div.box.box-first", "div.box.box-first", -2004544465), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "header", "header", 119441134), "Revenue"], null)], null)), om.core.build.call(null, clustermap.components.timeline_chart.timeline_chart, (new cljs.core.Keyword(null, 
          "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(timelines), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "turnover-timeline-chart", new cljs.core.Keyword(null, "y0-title", "y0-title", -809800001), "Revenue", new cljs.core.Keyword(null, "y1-title", "y1-title", 472065763), "# Filings"], null), new cljs.core.Keyword(null, 
          "react-key", "react-key", 1337881348), "turnover-timeline-chart"], null))], null)], null)], null)], null)], null)], null)], null);
        } else {
          return null;
        }
      }();
      return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs13345) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-charts"], null)], null), attrs13345)) : {"className":"full-report-charts"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
      cljs.core.map_QMARK_.call(null, attrs13345) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13345)], null)));
    };
    clustermap.components.full_report.charts.t13342.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13344) {
      var self__ = this;
      var _13344__$1 = this;
      return self__.meta13343;
    };
    clustermap.components.full_report.charts.t13342.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13344, meta13343__$1) {
      var self__ = this;
      var _13344__$1 = this;
      return new clustermap.components.full_report.charts.t13342(self__.owner, self__.data, self__.charts, meta13343__$1);
    };
    clustermap.components.full_report.charts.__GT_t13342 = function __GT_t13342(owner__$1, data__$1, charts__$1, meta13343) {
      return new clustermap.components.full_report.charts.t13342(owner__$1, data__$1, charts__$1, meta13343);
    };
  }
  return new clustermap.components.full_report.charts.t13342(owner, data, charts, null);
};
goog.provide("clustermap.components.full_report.overview");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
clustermap.components.full_report.overview.describe_selection = function describe_selection(p__13466) {
  var map__13471 = p__13466;
  var map__13471__$1 = cljs.core.seq_QMARK_.call(null, map__13471) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13471) : map__13471;
  var value = cljs.core.get.call(null, map__13471__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var type = cljs.core.get.call(null, map__13471__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var pred__13472 = cljs.core._EQ_;
  var expr__13473 = type;
  if (cljs.core.truth_(pred__13472.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__13473))) {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
    1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
  } else {
    if (cljs.core.truth_(pred__13472.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__13473))) {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals for the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "name", "name", 1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
    } else {
      if (cljs.core.truth_(pred__13472.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__13473))) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals for the selected Constituency"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over the Portfolio Companies with sites in the selected Constituency"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
      } else {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Total", new cljs.core.Keyword(null, "description", "description", -1428560544), "Totals over all Portfolio Companies"], null), new cljs.core.Keyword(null, "averages", "averages", -1747836978), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1843675177), "Mean", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all Portfolio Companies"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Benchmark", new cljs.core.Keyword(null, "description", "description", -1428560544), "Mean over all UK Companies"], null)], null);
      }
    }
  }
};
clustermap.components.full_report.overview.overview_data = function overview_data(p__13475) {
  var map__13501 = p__13475;
  var map__13501__$1 = cljs.core.seq_QMARK_.call(null, map__13501) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13501) : map__13501;
  var selection_investment_stats = cljs.core.get.call(null, map__13501__$1, new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", -1048685843));
  var selection = cljs.core.get.call(null, map__13501__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  var all_investment_stats = cljs.core.get.call(null, map__13501__$1, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 1476039495));
  var sel_descrs = clustermap.components.full_report.overview.describe_selection.call(null, selection);
  var site_stats = function() {
    var or__3558__auto__ = selection_investment_stats;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return all_investment_stats;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 975998651), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "selection", "selection", 975998651)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008), new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020), new cljs.core.Keyword(null, "turnover", "turnover", 
  -1778310555), new cljs.core.Keyword(null, "investor-companies", "investor-companies", 74375815), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1781159440), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 
  387778431)], [clustermap.formats.number.fnum.call(null, function() {
    var G__13502 = site_stats;
    var G__13502__$1 = G__13502 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", -1684257885)).cljs$core$IFn$_invoke$arity$1(G__13502);
    var G__13502__$2 = G__13502__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13502__$1);
    return G__13502__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__13503 = site_stats;
    var G__13503__$1 = G__13503 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 1998972271)).cljs$core$IFn$_invoke$arity$1(G__13503);
    return G__13503__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__13504 = site_stats;
    var G__13504__$1 = G__13504 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(G__13504);
    var G__13504__$2 = G__13504__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13504__$1);
    return G__13504__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__13505 = site_stats;
    var G__13505__$1 = G__13505 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", -2068624331)).cljs$core$IFn$_invoke$arity$1(G__13505);
    return G__13505__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__13506 = site_stats;
    var G__13506__$1 = G__13506 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__13506);
    var G__13506__$2 = G__13506__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13506__$1);
    return G__13506__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__13507 = site_stats;
    var G__13507__$1 = G__13507 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__13507);
    var G__13507__$2 = G__13507__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13507__$1);
    return G__13507__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__13508 = site_stats;
    var G__13508__$1 = G__13508 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 2089870686)).cljs$core$IFn$_invoke$arity$1(G__13508);
    return G__13508__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__13509 = site_stats;
    var G__13509__$1 = G__13509 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__13509);
    var G__13509__$2 = G__13509__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13509__$1);
    return G__13509__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__13510 = site_stats;
    var G__13510__$1 = G__13510 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__13510);
    var G__13510__$2 = G__13510__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13510__$1);
    return G__13510__$2;
  }()])), new cljs.core.Keyword(null, "averages", "averages", -1747836978), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "averages", "averages", -1747836978)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008), new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020), new cljs.core.Keyword(null, "turnover", "turnover", -1778310555), new cljs.core.Keyword(null, 
  "investor-companies", "investor-companies", 74375815), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1781159440), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 387778431)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__13511 = site_stats;
    var G__13511__$1 = G__13511 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", -1684257885)).cljs$core$IFn$_invoke$arity$1(G__13511);
    var G__13511__$2 = G__13511__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13511__$1);
    return G__13511__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__13512 = site_stats;
    var G__13512__$1 = G__13512 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(G__13512);
    var G__13512__$2 = G__13512__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13512__$1);
    return G__13512__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), "\u00a0", clustermap.formats.number.fnum.call(null, function() {
    var G__13513 = site_stats;
    var G__13513__$1 = G__13513 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__13513);
    var G__13513__$2 = G__13513__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13513__$1);
    return G__13513__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__13514 = site_stats;
    var G__13514__$1 = G__13514 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__13514);
    var G__13514__$2 = G__13514__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13514__$1);
    return G__13514__$2;
  }(), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__13515 = site_stats;
    var G__13515__$1 = G__13515 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__13515);
    var G__13515__$2 = G__13515__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13515__$1);
    return G__13515__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__13516 = site_stats;
    var G__13516__$1 = G__13516 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__13516);
    var G__13516__$2 = G__13516__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13516__$1);
    return G__13516__$2;
  }()])), new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008), new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020), new cljs.core.Keyword(null, "turnover", "turnover", -1778310555), new cljs.core.Keyword(null, 
  "investor-companies", "investor-companies", 74375815), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1781159440), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 387778431)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__13517 = all_investment_stats;
    var G__13517__$1 = G__13517 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", -1684257885)).cljs$core$IFn$_invoke$arity$1(G__13517);
    var G__13517__$2 = G__13517__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13517__$1);
    return G__13517__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__13518 = all_investment_stats;
    var G__13518__$1 = G__13518 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 1998972271)).cljs$core$IFn$_invoke$arity$1(G__13518);
    return G__13518__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__13519 = all_investment_stats;
    var G__13519__$1 = G__13519 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(G__13519);
    var G__13519__$2 = G__13519__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13519__$1);
    return G__13519__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__13520 = all_investment_stats;
    var G__13520__$1 = G__13520 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", -2068624331)).cljs$core$IFn$_invoke$arity$1(G__13520);
    return G__13520__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__13521 = all_investment_stats;
    var G__13521__$1 = G__13521 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__13521);
    var G__13521__$2 = G__13521__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13521__$1);
    return G__13521__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__13522 = all_investment_stats;
    var G__13522__$1 = G__13522 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__13522);
    var G__13522__$2 = G__13522__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1916810418)).cljs$core$IFn$_invoke$arity$1(G__13522__$1);
    return G__13522__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__13523 = all_investment_stats;
    var G__13523__$1 = G__13523 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 2089870686)).cljs$core$IFn$_invoke$arity$1(G__13523);
    return G__13523__$1;
  }(), new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__13524 = all_investment_stats;
    var G__13524__$1 = G__13524 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 643085600)).cljs$core$IFn$_invoke$arity$1(G__13524);
    var G__13524__$2 = G__13524__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13524__$1);
    return G__13524__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-"), function() {
    var G__13525 = all_investment_stats;
    var G__13525__$1 = G__13525 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", -1229648982)).cljs$core$IFn$_invoke$arity$1(G__13525);
    var G__13525__$2 = G__13525__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", -1359234715)).cljs$core$IFn$_invoke$arity$1(G__13525__$1);
    return G__13525__$2;
  }()]))], null);
};
clustermap.components.full_report.overview.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        return null;
      }
    }
  }
};
clustermap.components.full_report.overview.overview = function overview(data) {
  var map__13549 = clustermap.components.full_report.overview.overview_data.call(null, data);
  var map__13549__$1 = cljs.core.seq_QMARK_.call(null, map__13549) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13549) : map__13549;
  var benchmark = cljs.core.get.call(null, map__13549__$1, new cljs.core.Keyword(null, "benchmark", "benchmark", 667647056));
  var averages = cljs.core.get.call(null, map__13549__$1, new cljs.core.Keyword(null, "averages", "averages", -1747836978));
  var selection = cljs.core.get.call(null, map__13549__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  if (typeof clustermap.components.full_report.overview.t13550 !== "undefined") {
  } else {
    clustermap.components.full_report.overview.t13550 = function(selection, averages, benchmark, map__13549, data, overview, meta13551) {
      this.selection = selection;
      this.averages = averages;
      this.benchmark = benchmark;
      this.map__13549 = map__13549;
      this.data = data;
      this.overview = overview;
      this.meta13551 = meta13551;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.overview.t13550.cljs$lang$type = true;
    clustermap.components.full_report.overview.t13550.cljs$lang$ctorStr = "clustermap.components.full-report.overview/t13550";
    clustermap.components.full_report.overview.t13550.cljs$lang$ctorPrWriter = function(map__13549, map__13549__$1, benchmark, averages, selection) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report.overview/t13550");
      };
    }(map__13549, map__13549__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t13550.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.overview.t13550.prototype.om$core$IRender$render$arity$1 = function(map__13549, map__13549__$1, benchmark, averages, selection) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.div({"className":"full-report-overview"}, React.DOM.h4(null, "Overview of latest filings", React.DOM.small(null, "\u00a0(may span years : see table below for details)")), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table-stats"}, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "\u00a0"), React.DOM.th(null, "Investor-backed companies"), React.DOM.th(null, "Investors"), React.DOM.th(null, "Constituencies"), React.DOM.th(null, "Revenue"), 
        React.DOM.th({"colSpan":"2"}, "Rev. change"), React.DOM.th(null, "Employees"))), React.DOM.tbody(null, React.DOM.tr(null, React.DOM.th(null, React.DOM.i({"className":"icon-info", "data-toggle":"tooltip", "data-container":"body", "title":self__.selection.call(null, new cljs.core.Keyword(null, "description", "description", -1428560544))}), sablono.interpreter.interpret.call(null, self__.selection.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177)))), React.DOM.td(null, function() {
          var attrs13557 = (new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 607601849)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13557) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13557)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13557) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13557)], null)));
        }()), React.DOM.td(null, function() {
          var attrs13558 = (new cljs.core.Keyword(null, "investor-companies", "investor-companies", 74375815)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13558) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13558)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13558) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13558)], null)));
        }()), React.DOM.td(null, function() {
          var attrs13559 = (new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13559) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13559)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13559) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13559)], null)));
        }()), React.DOM.td(null, function() {
          var attrs13560 = (new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13560) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13560)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13560) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13560)], null)));
        }()), React.DOM.td(null, function() {
          var attrs13561 = clustermap.components.full_report.overview.pos_neg.call(null, (new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", -1004481897)).cljs$core$IFn$_invoke$arity$1(self__.selection));
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13561) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13561)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13561) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13561)], null)));
        }()), React.DOM.td(null, function() {
          var attrs13562 = (new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 547240062)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13562) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13562)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13562) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13562)], null)));
        }()), React.DOM.td(null, function() {
          var attrs13563 = (new cljs.core.Keyword(null, "employee-count", "employee-count", 315351008)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13563) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs13563)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs13563) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13563)], null)));
        }()))))));
      };
    }(map__13549, map__13549__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t13550.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13549, map__13549__$1, benchmark, averages, selection) {
      return function(_13552) {
        var self__ = this;
        var _13552__$1 = this;
        return self__.meta13551;
      };
    }(map__13549, map__13549__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t13550.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13549, map__13549__$1, benchmark, averages, selection) {
      return function(_13552, meta13551__$1) {
        var self__ = this;
        var _13552__$1 = this;
        return new clustermap.components.full_report.overview.t13550(self__.selection, self__.averages, self__.benchmark, self__.map__13549, self__.data, self__.overview, meta13551__$1);
      };
    }(map__13549, map__13549__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.__GT_t13550 = function(map__13549, map__13549__$1, benchmark, averages, selection) {
      return function __GT_t13550(selection__$1, averages__$1, benchmark__$1, map__13549__$2, data__$1, overview__$1, meta13551) {
        return new clustermap.components.full_report.overview.t13550(selection__$1, averages__$1, benchmark__$1, map__13549__$2, data__$1, overview__$1, meta13551);
      };
    }(map__13549, map__13549__$1, benchmark, averages, selection);
  }
  return new clustermap.components.full_report.overview.t13550(selection, averages, benchmark, map__13549__$1, data, overview, null);
};
goog.provide("clustermap.components.full_report");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.company_list");
goog.require("clustermap.components.full_report.charts");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.charts");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.overview");
goog.require("clustermap.components.full_report.overview");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("clustermap.components.full_report.company_list");
clustermap.components.full_report.single_company_selection_QMARK_ = function single_company_selection_QMARK_(selector) {
  return cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, selector)) && cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), function() {
    var G__13567 = selector;
    var G__13567__$1 = G__13567 == null ? null : cljs.core.keys.call(null, G__13567);
    var G__13567__$2 = G__13567__$1 == null ? null : cljs.core.first.call(null, G__13567__$1);
    return G__13567__$2;
  }());
};
clustermap.components.full_report.full_report_component = function full_report_component(p__13568, owner) {
  var map__13575 = p__13568;
  var map__13575__$1 = cljs.core.seq_QMARK_.call(null, map__13575) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13575) : map__13575;
  var data = map__13575__$1;
  var all_portfolio_companies_summary = cljs.core.get.call(null, map__13575__$1, new cljs.core.Keyword(null, "all-portfolio-companies-summary", "all-portfolio-companies-summary", 1736783950));
  var selection = cljs.core.get.call(null, map__13575__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  var selector = cljs.core.get.call(null, map__13575__$1, new cljs.core.Keyword(null, "selector", "selector", 762528866));
  var map__13576 = om.core.get_shared.call(null, owner);
  var map__13576__$1 = cljs.core.seq_QMARK_.call(null, map__13576) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13576) : map__13576;
  var link_fn = cljs.core.get.call(null, map__13576__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
  var path_fn = cljs.core.get.call(null, map__13576__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__13576__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var link_fn__$1 = cljs.core.partial.call(null, link_fn, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  if (typeof clustermap.components.full_report.t13577 !== "undefined") {
  } else {
    clustermap.components.full_report.t13577 = function(map__13575, selection, owner, path_fn, data, selector, link_fn, map__13576, full_report_component, comm, all_portfolio_companies_summary, p__13568, meta13578) {
      this.map__13575 = map__13575;
      this.selection = selection;
      this.owner = owner;
      this.path_fn = path_fn;
      this.data = data;
      this.selector = selector;
      this.link_fn = link_fn;
      this.map__13576 = map__13576;
      this.full_report_component = full_report_component;
      this.comm = comm;
      this.all_portfolio_companies_summary = all_portfolio_companies_summary;
      this.p__13568 = p__13568;
      this.meta13578 = meta13578;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.t13577.cljs$lang$type = true;
    clustermap.components.full_report.t13577.cljs$lang$ctorStr = "clustermap.components.full-report/t13577";
    clustermap.components.full_report.t13577.cljs$lang$ctorPrWriter = function(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.full-report/t13577");
      };
    }(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t13577.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.full_report.t13577.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).data("bs.tooltip", false);
        return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).tooltip();
      };
    }(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t13577.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.t13577.prototype.om$core$IRender$render$arity$1 = function(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var attrs13580 = om.core.build.call(null, clustermap.components.full_report.overview.overview, self__.data, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "overview"], null));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs13580) ? sablono.interpreter.attributes.call(null, attrs13580) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13580) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments-by-company"], null)) : null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13580), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), "selection-investments-by-company"], null)) : null)], null)));
      };
    }(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t13577.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_13579) {
        var self__ = this;
        var _13579__$1 = this;
        return self__.meta13578;
      };
    }(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t13577.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_13579, meta13578__$1) {
        var self__ = this;
        var _13579__$1 = this;
        return new clustermap.components.full_report.t13577(self__.map__13575, self__.selection, self__.owner, self__.path_fn, self__.data, self__.selector, self__.link_fn, self__.map__13576, self__.full_report_component, self__.comm, self__.all_portfolio_companies_summary, self__.p__13568, meta13578__$1);
      };
    }(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.__GT_t13577 = function(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function __GT_t13577(map__13575__$2, selection__$1, owner__$1, path_fn__$2, data__$1, selector__$1, link_fn__$2, map__13576__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, p__13568__$1, meta13578) {
        return new clustermap.components.full_report.t13577(map__13575__$2, selection__$1, owner__$1, path_fn__$2, data__$1, selector__$1, link_fn__$2, map__13576__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, p__13568__$1, meta13578);
      };
    }(map__13576, map__13576__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__13575, map__13575__$1, data, all_portfolio_companies_summary, selection, selector);
  }
  return new clustermap.components.full_report.t13577(map__13575__$1, selection, owner, path_fn__$1, data, selector, link_fn__$1, map__13576__$1, full_report_component, comm, all_portfolio_companies_summary, p__13568, null);
};
clustermap.components.full_report.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.full_report.full_report_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(elem_id), new cljs.core.Keyword(null, "shared", "shared", -384145993), shared], null));
};
goog.provide("clustermap.om");
goog.require("cljs.core");
clustermap.om.burrow = function burrow(component_fn, korks) {
  var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return function(use_korks) {
    return function() {
      var G__14756__delegate = function(args) {
        return cljs.core.apply.call(null, component_fn, cljs.core.get_in.call(null, cljs.core.first.call(null, args), use_korks), cljs.core.rest.call(null, args));
      };
      var G__14756 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__14756__delegate.call(this, args);
      };
      G__14756.cljs$lang$maxFixedArity = 0;
      G__14756.cljs$lang$applyTo = function(arglist__14757) {
        var args = cljs.core.seq(arglist__14757);
        return G__14756__delegate(args);
      };
      G__14756.cljs$core$IFn$_invoke$arity$variadic = G__14756__delegate;
      return G__14756;
    }();
  }(use_korks);
};
goog.provide("clustermap.model");
goog.require("cljs.core");
clustermap.model.extract_id = function extract_id(type, obj) {
  var pred__14692 = cljs.core._EQ_;
  var expr__14693 = type;
  if (cljs.core.truth_(pred__14692.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__14693))) {
    return(new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)).cljs$core$IFn$_invoke$arity$1(obj);
  } else {
    if (cljs.core.truth_(pred__14692.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__14693))) {
      return(new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)).cljs$core$IFn$_invoke$arity$1(obj);
    } else {
      if (cljs.core.truth_(pred__14692.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__14693))) {
        return(new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)).cljs$core$IFn$_invoke$arity$1(obj);
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__14693));
      }
    }
  }
};
goog.provide("clustermap.components.select_chooser");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
clustermap.components.select_chooser.select_chooser_component = function select_chooser_component(title, key, value_descriptions, p__14020, owner) {
  var map__14034 = p__14020;
  var map__14034__$1 = cljs.core.seq_QMARK_.call(null, map__14034) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14034) : map__14034;
  var cursor = map__14034__$1;
  if (typeof clustermap.components.select_chooser.t14035 !== "undefined") {
  } else {
    clustermap.components.select_chooser.t14035 = function(cursor, map__14034, owner, p__14020, value_descriptions, key, title, select_chooser_component, meta14036) {
      this.cursor = cursor;
      this.map__14034 = map__14034;
      this.owner = owner;
      this.p__14020 = p__14020;
      this.value_descriptions = value_descriptions;
      this.key = key;
      this.title = title;
      this.select_chooser_component = select_chooser_component;
      this.meta14036 = meta14036;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.select_chooser.t14035.cljs$lang$type = true;
    clustermap.components.select_chooser.t14035.cljs$lang$ctorStr = "clustermap.components.select-chooser/t14035";
    clustermap.components.select_chooser.t14035.cljs$lang$ctorPrWriter = function(map__14034, map__14034__$1, cursor) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.select-chooser/t14035");
      };
    }(map__14034, map__14034__$1, cursor);
    clustermap.components.select_chooser.t14035.prototype.om$core$IRender$ = true;
    clustermap.components.select_chooser.t14035.prototype.om$core$IRender$render$arity$1 = function(map__14034, map__14034__$1, cursor) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.div({"className":"select-chooser"}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-row"}, function() {
          var attrs14038 = self__.title;
          return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs14038) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tbl-cell"], null)], null), attrs14038)) : {"className":"tbl-cell"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs14038) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs14038)], null)));
        }(), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(this__9504__auto____$1, map__14034, map__14034__$1, cursor) {
          return function(e) {
            var val = e.target.value;
            console.log(val);
            return om.core.update_BANG_.call(null, self__.cursor, self__.key, val);
          };
        }(this__9504__auto____$1, map__14034, map__14034__$1, cursor)}, cljs.core.into_array.call(null, function() {
          var iter__4283__auto__ = function(this__9504__auto____$1, map__14034, map__14034__$1, cursor) {
            return function iter__14039(s__14040) {
              return new cljs.core.LazySeq(null, function(this__9504__auto____$1, map__14034, map__14034__$1, cursor) {
                return function() {
                  var s__14040__$1 = s__14040;
                  while (true) {
                    var temp__4126__auto__ = cljs.core.seq.call(null, s__14040__$1);
                    if (temp__4126__auto__) {
                      var s__14040__$2 = temp__4126__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__14040__$2)) {
                        var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14040__$2);
                        var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                        var b__14042 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                        if (function() {
                          var i__14041 = 0;
                          while (true) {
                            if (i__14041 < size__4282__auto__) {
                              var vec__14045 = cljs.core._nth.call(null, c__4281__auto__, i__14041);
                              var value = cljs.core.nth.call(null, vec__14045, 0, null);
                              var description = cljs.core.nth.call(null, vec__14045, 1, null);
                              cljs.core.chunk_append.call(null, b__14042, sablono.interpreter.option.call(null, {"value":value}, sablono.interpreter.interpret.call(null, description)));
                              var G__14047 = i__14041 + 1;
                              i__14041 = G__14047;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14042), iter__14039.call(null, cljs.core.chunk_rest.call(null, s__14040__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14042), null);
                        }
                      } else {
                        var vec__14046 = cljs.core.first.call(null, s__14040__$2);
                        var value = cljs.core.nth.call(null, vec__14046, 0, null);
                        var description = cljs.core.nth.call(null, vec__14046, 1, null);
                        return cljs.core.cons.call(null, sablono.interpreter.option.call(null, {"value":value}, sablono.interpreter.interpret.call(null, description)), iter__14039.call(null, cljs.core.rest.call(null, s__14040__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(this__9504__auto____$1, map__14034, map__14034__$1, cursor), null, null);
            };
          }(this__9504__auto____$1, map__14034, map__14034__$1, cursor);
          return iter__4283__auto__.call(null, self__.value_descriptions);
        }()))))));
      };
    }(map__14034, map__14034__$1, cursor);
    clustermap.components.select_chooser.t14035.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__14034, map__14034__$1, cursor) {
      return function(_14037) {
        var self__ = this;
        var _14037__$1 = this;
        return self__.meta14036;
      };
    }(map__14034, map__14034__$1, cursor);
    clustermap.components.select_chooser.t14035.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__14034, map__14034__$1, cursor) {
      return function(_14037, meta14036__$1) {
        var self__ = this;
        var _14037__$1 = this;
        return new clustermap.components.select_chooser.t14035(self__.cursor, self__.map__14034, self__.owner, self__.p__14020, self__.value_descriptions, self__.key, self__.title, self__.select_chooser_component, meta14036__$1);
      };
    }(map__14034, map__14034__$1, cursor);
    clustermap.components.select_chooser.__GT_t14035 = function(map__14034, map__14034__$1, cursor) {
      return function __GT_t14035(cursor__$1, map__14034__$2, owner__$1, p__14020__$1, value_descriptions__$1, key__$1, title__$1, select_chooser_component__$1, meta14036) {
        return new clustermap.components.select_chooser.t14035(cursor__$1, map__14034__$2, owner__$1, p__14020__$1, value_descriptions__$1, key__$1, title__$1, select_chooser_component__$1, meta14036);
      };
    }(map__14034, map__14034__$1, cursor);
  }
  return new clustermap.components.select_chooser.t14035(cursor, map__14034__$1, owner, p__14020, value_descriptions, key, title, select_chooser_component, null);
};
goog.provide("clustermap.ganalytics");
goog.require("cljs.core");
clustermap.ganalytics.send_pageview = function send_pageview(path) {
  var ua_code = function() {
    var G__14688 = window;
    var G__14688__$1 = G__14688 == null ? null : G__14688.config;
    var G__14688__$2 = G__14688__$1 == null ? null : G__14688__$1.ua;
    var G__14688__$3 = G__14688__$2 == null ? null : G__14688__$2.code;
    return G__14688__$3;
  }();
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = window.ga;
    if (cljs.core.truth_(and__3546__auto__)) {
      return ua_code;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return ga("send", "pageview", path);
  } else {
    return null;
  }
};
goog.provide("clustermap.components.search");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
clustermap.components.search.ESCAPE_KEY = 27;
clustermap.components.search.ENTER_KEY = 13;
clustermap.components.search.LEFT_ARROW = 37;
clustermap.components.search.UP_ARROW = 38;
clustermap.components.search.RIGHT_ARROW = 39;
clustermap.components.search.DOWN_ARROW = 40;
clustermap.components.search.search_result_link = function search_result_link(p__13918, owner, p__13919) {
  var map__13928 = p__13918;
  var map__13928__$1 = cljs.core.seq_QMARK_.call(null, map__13928) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13928) : map__13928;
  var search_result = map__13928__$1;
  var type = cljs.core.get.call(null, map__13928__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var name = cljs.core.get.call(null, map__13928__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var map__13929 = p__13919;
  var map__13929__$1 = cljs.core.seq_QMARK_.call(null, map__13929) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13929) : map__13929;
  var opts = map__13929__$1;
  var path_fn = cljs.core.get.call(null, map__13929__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__13929__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  if (typeof clustermap.components.search.t13930 !== "undefined") {
  } else {
    clustermap.components.search.t13930 = function(owner, path_fn, p__13919, p__13918, search_result_link, name, comm, search_result, type, map__13929, opts, map__13928, meta13931) {
      this.owner = owner;
      this.path_fn = path_fn;
      this.p__13919 = p__13919;
      this.p__13918 = p__13918;
      this.search_result_link = search_result_link;
      this.name = name;
      this.comm = comm;
      this.search_result = search_result;
      this.type = type;
      this.map__13929 = map__13929;
      this.opts = opts;
      this.map__13928 = map__13928;
      this.meta13931 = meta13931;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t13930.cljs$lang$type = true;
    clustermap.components.search.t13930.cljs$lang$ctorStr = "clustermap.components.search/t13930";
    clustermap.components.search.t13930.cljs$lang$ctorPrWriter = function(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.search/t13930");
      };
    }(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm);
    clustermap.components.search.t13930.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t13930.prototype.om$core$IRenderState$render_state$arity$2 = function(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm) {
      return function(this$, p__13933) {
        var self__ = this;
        var map__13934 = p__13933;
        var map__13934__$1 = cljs.core.seq_QMARK_.call(null, map__13934) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13934) : map__13934;
        var state = map__13934__$1;
        var selected = cljs.core.get.call(null, map__13934__$1, new cljs.core.Keyword(null, "selected", "selected", 574897764));
        var this$__$1 = this;
        var path = self__.path_fn.call(null, self__.type, self__.search_result);
        return React.DOM.li({"className":cljs.core.truth_(selected) ? "selected" : null}, React.DOM.a({"href":path, "ref":"link", "onClick":function(path, this$__$1, map__13934, map__13934__$1, state, selected, map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm) {
          return function(e) {
            var l = om.core.get_node.call(null, self__.owner, "link");
            var G__13935 = l;
            var G__13935__$1 = G__13935 == null ? null : jayq.core.$.call(null, G__13935);
            var G__13935__$2 = G__13935__$1 == null ? null : G__13935__$1.parents(".search-component");
            var G__13935__$3 = G__13935__$2 == null ? null : G__13935__$2.toggle();
            return G__13935__$3;
          };
        }(path, this$__$1, map__13934, map__13934__$1, state, selected, map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm)}, sablono.interpreter.interpret.call(null, self__.name)));
      };
    }(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm);
    clustermap.components.search.t13930.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm) {
      return function(_13932) {
        var self__ = this;
        var _13932__$1 = this;
        return self__.meta13931;
      };
    }(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm);
    clustermap.components.search.t13930.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm) {
      return function(_13932, meta13931__$1) {
        var self__ = this;
        var _13932__$1 = this;
        return new clustermap.components.search.t13930(self__.owner, self__.path_fn, self__.p__13919, self__.p__13918, self__.search_result_link, self__.name, self__.comm, self__.search_result, self__.type, self__.map__13929, self__.opts, self__.map__13928, meta13931__$1);
      };
    }(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm);
    clustermap.components.search.__GT_t13930 = function(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm) {
      return function __GT_t13930(owner__$1, path_fn__$1, p__13919__$1, p__13918__$1, search_result_link__$1, name__$1, comm__$1, search_result__$1, type__$1, map__13929__$2, opts__$1, map__13928__$2, meta13931) {
        return new clustermap.components.search.t13930(owner__$1, path_fn__$1, p__13919__$1, p__13918__$1, search_result_link__$1, name__$1, comm__$1, search_result__$1, type__$1, map__13929__$2, opts__$1, map__13928__$2, meta13931);
      };
    }(map__13928, map__13928__$1, search_result, type, name, map__13929, map__13929__$1, opts, path_fn, comm);
  }
  return new clustermap.components.search.t13930(owner, path_fn, p__13919, p__13918, search_result_link, name, comm, search_result, type, map__13929__$1, opts, map__13928__$1, null);
};
clustermap.components.search.nth_search_result = function nth_search_result(p__13936, n) {
  var map__13938 = p__13936;
  var map__13938__$1 = cljs.core.seq_QMARK_.call(null, map__13938) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13938) : map__13938;
  var investor_companies = cljs.core.get.call(null, map__13938__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 493714407));
  var portfolio_companies = cljs.core.get.call(null, map__13938__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 1223322975));
  var constituencies = cljs.core.get.call(null, map__13938__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020));
  var cons = function() {
    var or__3558__auto__ = constituencies;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var pcs = function() {
    var or__3558__auto__ = portfolio_companies;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var invs = function() {
    var or__3558__auto__ = investor_companies;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  if (n < cljs.core.count.call(null, cons)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), cljs.core.get.call(null, constituencies, n)], null);
  } else {
    if (n < cljs.core.count.call(null, cons) + cljs.core.count.call(null, pcs)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), cljs.core.get.call(null, pcs, n - cljs.core.count.call(null, cons))], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), cljs.core.get.call(null, invs, n - cljs.core.count.call(null, cons) - cljs.core.count.call(null, pcs))], null);
    }
  }
};
clustermap.components.search.key_down = function key_down(e, search_results, owner, comm) {
  var pred__13945 = cljs.core._EQ__EQ_;
  var expr__13946 = e.keyCode;
  if (cljs.core.truth_(pred__13945.call(null, clustermap.components.search.ESCAPE_KEY, expr__13946))) {
    var G__13948 = om.core.get_node.call(null, owner, "search-component");
    var G__13948__$1 = G__13948 == null ? null : jayq.core.$.call(null, G__13948);
    var G__13948__$2 = G__13948__$1 == null ? null : G__13948__$1.toggle();
    return G__13948__$2;
  } else {
    if (cljs.core.truth_(pred__13945.call(null, clustermap.components.search.ENTER_KEY, expr__13946))) {
      var vec__13949 = clustermap.components.search.nth_search_result.call(null, cljs.core.deref.call(null, search_results), function() {
        var or__3558__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439));
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return 0;
        }
      }());
      var type = cljs.core.nth.call(null, vec__13949, 0, null);
      var res = cljs.core.nth.call(null, vec__13949, 1, null);
      var G__13950_13951 = om.core.get_node.call(null, owner, "search-component");
      var G__13950_13952__$1 = G__13950_13951 == null ? null : jayq.core.$.call(null, G__13950_13951);
      var G__13950_13953__$2 = G__13950_13952__$1 == null ? null : G__13950_13952__$1.toggle();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, clustermap.model.extract_id.call(null, type, res)], null)], null));
    } else {
      if (cljs.core.truth_(pred__13945.call(null, clustermap.components.search.UP_ARROW, expr__13946))) {
        return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439), function() {
          var or__3558__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439));
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return 0;
          }
        }() - 1);
      } else {
        if (cljs.core.truth_(pred__13945.call(null, clustermap.components.search.DOWN_ARROW, expr__13946))) {
          return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439), function() {
            var or__3558__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439));
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return 0;
            }
          }() + 1);
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.search.search_component = function search_component(p__13954, owner) {
  var map__13986 = p__13954;
  var map__13986__$1 = cljs.core.seq_QMARK_.call(null, map__13986) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13986) : map__13986;
  var map__13987 = cljs.core.get.call(null, map__13986__$1, new cljs.core.Keyword(null, "selection", "selection", 975998651));
  var map__13987__$1 = cljs.core.seq_QMARK_.call(null, map__13987) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13987) : map__13987;
  var selection_type = cljs.core.get.call(null, map__13987__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var selection_value = cljs.core.get.call(null, map__13987__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var view = cljs.core.get.call(null, map__13986__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
  var search_results = cljs.core.get.call(null, map__13986__$1, new cljs.core.Keyword(null, "search-results", "search-results", 306464634));
  var map__13988 = om.core.get_shared.call(null, owner);
  var map__13988__$1 = cljs.core.seq_QMARK_.call(null, map__13988) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13988) : map__13988;
  var path_fn = cljs.core.get.call(null, map__13988__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__13988__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, view);
  var map__13989 = search_results;
  var map__13989__$1 = cljs.core.seq_QMARK_.call(null, map__13989) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13989) : map__13989;
  var investor_companies = cljs.core.get.call(null, map__13989__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 493714407));
  var portfolio_companies = cljs.core.get.call(null, map__13989__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 1223322975));
  var constituencies = cljs.core.get.call(null, map__13989__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", -1590769020));
  if (typeof clustermap.components.search.t13990 !== "undefined") {
  } else {
    clustermap.components.search.t13990 = function(search_results, search_component, owner, path_fn, view, portfolio_companies, map__13987, constituencies, investor_companies, map__13989, p__13954, selection_value, comm, map__13988, selection_type, map__13986, meta13991) {
      this.search_results = search_results;
      this.search_component = search_component;
      this.owner = owner;
      this.path_fn = path_fn;
      this.view = view;
      this.portfolio_companies = portfolio_companies;
      this.map__13987 = map__13987;
      this.constituencies = constituencies;
      this.investor_companies = investor_companies;
      this.map__13989 = map__13989;
      this.p__13954 = p__13954;
      this.selection_value = selection_value;
      this.comm = comm;
      this.map__13988 = map__13988;
      this.selection_type = selection_type;
      this.map__13986 = map__13986;
      this.meta13991 = meta13991;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t13990.cljs$lang$type = true;
    clustermap.components.search.t13990.cljs$lang$ctorStr = "clustermap.components.search/t13990";
    clustermap.components.search.t13990.cljs$lang$ctorPrWriter = function(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.search/t13990");
      };
    }(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t13990.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t13990.prototype.om$core$IRenderState$render_state$arity$2 = function(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
      return function(this$, state) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"search-component", "ref":"search-component", "id":"search", "onKeyDown":function(this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return clustermap.components.search.key_down.call(null, e, self__.search_results, self__.owner, self__.comm);
          };
        }(this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results)}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-cell", "style":{"width":"100%"}}, sablono.interpreter.input.call(null, {"ref":"search-field", "type":"text", "placeholder":"Search", "onChange":function(this$__$1, 
        map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 1564939822), e.target.value], null));
          };
        }(this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results)})), React.DOM.div({"className":"tbl-cell", "style":{"width":"34"}}, React.DOM.button({"type":"reset", "onClick":function(this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, 
        portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 1564939822), ""], null));
            return om.core.get_node.call(null, self__.owner, "search-field").value = "";
          };
        }(this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results)}, "\u00d7"))), sablono.interpreter.interpret.call(null, cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not_empty.call(null, self__.constituencies);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_empty.call(null, self__.portfolio_companies);
            if (cljs.core.truth_(or__3558__auto____$1)) {
              return or__3558__auto____$1;
            } else {
              return cljs.core.not_empty.call(null, self__.investor_companies);
            }
          }
        }()) ? function() {
          var idx_cons = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, 0), self__.constituencies);
          var idx_pcs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons)), self__.portfolio_companies);
          var idx_invs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs)), self__.investor_companies);
          var selected_idx = cljs.core.mod.call(null, function() {
            var or__3558__auto__ = (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439)).cljs$core$IFn$_invoke$arity$1(state);
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return 0;
            }
          }(), cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs) + cljs.core.count.call(null, idx_invs));
          var _ = cljs.core.not_EQ_.call(null, selected_idx, (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439)).cljs$core$IFn$_invoke$arity$1(state)) ? om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 1303670439), selected_idx) : null;
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 
          1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results-header"], null), "Constituencies"], null) : null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? function() {
            var iter__4283__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
              return function iter__13993(s__13994) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__13994__$1 = s__13994;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__13994__$1);
                      if (temp__4126__auto__) {
                        var s__13994__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__13994__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__13994__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__13996 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__13995 = 0;
                            while (true) {
                              if (i__13995 < size__4282__auto__) {
                                var vec__13999 = cljs.core._nth.call(null, c__4281__auto__, i__13995);
                                var idx = cljs.core.nth.call(null, vec__13999, 0, null);
                                var con = cljs.core.nth.call(null, vec__13999, 1, null);
                                cljs.core.chunk_append.call(null, b__13996, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                -1988618099), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(i__13995, vec__13999, idx, con, c__4281__auto__, size__4282__auto__, b__13996, s__13994__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, 
                                map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "constituency-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395))));
                                  };
                                }(i__13995, vec__13999, idx, con, c__4281__auto__, size__4282__auto__, b__13996, s__13994__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), 
                                new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null)));
                                var G__14017 = i__13995 + 1;
                                i__13995 = G__14017;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13996), iter__13993.call(null, cljs.core.chunk_rest.call(null, s__13994__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13996), null);
                          }
                        } else {
                          var vec__14000 = cljs.core.first.call(null, s__13994__$2);
                          var idx = cljs.core.nth.call(null, vec__14000, 0, null);
                          var con = cljs.core.nth.call(null, vec__14000, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(vec__14000, idx, con, s__13994__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, 
                          map__13987__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "constituency-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395))));
                            };
                          }(vec__14000, idx, con, s__13994__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], 
                          null)), iter__13993.call(null, cljs.core.rest.call(null, s__13994__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
            return iter__4283__auto__.call(null, idx_cons);
          }() : null, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results-header"], null), "Investor-backed companies"], 
          null) : null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? function() {
            var iter__4283__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
              return function iter__14001(s__14002) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__14002__$1 = s__14002;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__14002__$1);
                      if (temp__4126__auto__) {
                        var s__14002__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14002__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14002__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__14004 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__14003 = 0;
                            while (true) {
                              if (i__14003 < size__4282__auto__) {
                                var vec__14007 = cljs.core._nth.call(null, c__4281__auto__, i__14003);
                                var idx = cljs.core.nth.call(null, vec__14007, 0, null);
                                var pc = cljs.core.nth.call(null, vec__14007, 1, null);
                                cljs.core.chunk_append.call(null, b__14004, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), 
                                new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(i__14003, vec__14007, idx, pc, c__4281__auto__, size__4282__auto__, b__14004, s__14002__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, 
                                investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "portfolio-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649))));
                                  };
                                }(i__14003, vec__14007, idx, pc, c__4281__auto__, size__4282__auto__, b__14004, s__14002__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), 
                                new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null)));
                                var G__14018 = i__14003 + 1;
                                i__14003 = G__14018;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14004), iter__14001.call(null, cljs.core.chunk_rest.call(null, s__14002__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14004), null);
                          }
                        } else {
                          var vec__14008 = cljs.core.first.call(null, s__14002__$2);
                          var idx = cljs.core.nth.call(null, vec__14008, 0, null);
                          var pc = cljs.core.nth.call(null, vec__14008, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(vec__14008, idx, pc, s__14002__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, 
                          map__13987__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "portfolio-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "company_no", "company_no", 1886326649))));
                            };
                          }(vec__14008, idx, pc, s__14002__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], 
                          null)), iter__14001.call(null, cljs.core.rest.call(null, s__14002__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
            return iter__4283__auto__.call(null, idx_pcs);
          }() : null, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), "search-results-header"], null), "Investors"], null) : 
          null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? function() {
            var iter__4283__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
              return function iter__14009(s__14010) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__14010__$1 = s__14010;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__14010__$1);
                      if (temp__4126__auto__) {
                        var s__14010__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__14010__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__14010__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__14012 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__14011 = 0;
                            while (true) {
                              if (i__14011 < size__4282__auto__) {
                                var vec__14015 = cljs.core._nth.call(null, c__4281__auto__, i__14011);
                                var idx = cljs.core.nth.call(null, vec__14015, 0, null);
                                var inv = cljs.core.nth.call(null, vec__14015, 1, null);
                                cljs.core.chunk_append.call(null, b__14012, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                -1988618099), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(i__14011, vec__14015, idx, inv, c__4281__auto__, size__4282__auto__, b__14012, s__14010__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, 
                                map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "investor-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830))));
                                  };
                                }(i__14011, vec__14015, idx, inv, c__4281__auto__, size__4282__auto__, b__14012, s__14010__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), 
                                new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null)));
                                var G__14019 = i__14011 + 1;
                                i__14011 = G__14019;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14012), iter__14009.call(null, cljs.core.chunk_rest.call(null, s__14010__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14012), null);
                          }
                        } else {
                          var vec__14016 = cljs.core.first.call(null, s__14010__$2);
                          var idx = cljs.core.nth.call(null, vec__14016, 0, null);
                          var inv = cljs.core.nth.call(null, vec__14016, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(vec__14016, idx, inv, s__14010__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, 
                          map__13987__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830)), new cljs.core.Keyword(null, "uid", "uid", -1447769400), "investor-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", -841847830))));
                            };
                          }(vec__14016, idx, inv, s__14010__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], 
                          null)), iter__14009.call(null, cljs.core.rest.call(null, s__14010__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
            return iter__4283__auto__.call(null, idx_invs);
          }() : null], null)], null);
        }() : null));
      };
    }(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t13990.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
      return function(_13992) {
        var self__ = this;
        var _13992__$1 = this;
        return self__.meta13991;
      };
    }(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t13990.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
      return function(_13992, meta13991__$1) {
        var self__ = this;
        var _13992__$1 = this;
        return new clustermap.components.search.t13990(self__.search_results, self__.search_component, self__.owner, self__.path_fn, self__.view, self__.portfolio_companies, self__.map__13987, self__.constituencies, self__.investor_companies, self__.map__13989, self__.p__13954, self__.selection_value, self__.comm, self__.map__13988, self__.selection_type, self__.map__13986, meta13991__$1);
      };
    }(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.__GT_t13990 = function(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results) {
      return function __GT_t13990(search_results__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, map__13987__$2, constituencies__$1, investor_companies__$1, map__13989__$2, p__13954__$1, selection_value__$1, comm__$1, map__13988__$2, selection_type__$1, map__13986__$2, meta13991) {
        return new clustermap.components.search.t13990(search_results__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, map__13987__$2, constituencies__$1, investor_companies__$1, map__13989__$2, p__13954__$1, selection_value__$1, comm__$1, map__13988__$2, selection_type__$1, map__13986__$2, meta13991);
      };
    }(map__13988, map__13988__$1, path_fn, comm, path_fn__$1, map__13989, map__13989__$1, investor_companies, portfolio_companies, constituencies, map__13986, map__13986__$1, map__13987, map__13987__$1, selection_type, selection_value, view, search_results);
  }
  return new clustermap.components.search.t13990(search_results, search_component, owner, path_fn__$1, view, portfolio_companies, map__13987__$1, constituencies, investor_companies, map__13989__$1, p__13954, selection_value, comm, map__13988__$1, selection_type, map__13986__$1, null);
};
clustermap.components.search.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.search.search_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(elem_id)], null));
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0;i < els.length;i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("goog.dom");
var div_20454 = document.createElement("div");
var test_html_20455 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_20454.innerHTML = test_html_20455;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_20454.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_20454.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_20454.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return!goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return(prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS", false);
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return{"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = !goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS && goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var pos;
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    var box = goog.style.getBoundingClientRect_(el);
    pos = new goog.math.Coordinate(box.left, box.top);
  } else {
    var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
    var pageCoord = goog.style.getPageOffset(el);
    pos = new goog.math.Coordinate(pageCoord.x - scrollCoord.x, pageCoord.y - scrollCoord.y);
  }
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12)) {
    return goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
  } else {
    return pos;
  }
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var be = (el);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && be.getBrowserEvent().targetTouches) {
        targetEvent = be.getBrowserEvent().targetTouches[0];
      }
    }
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.string");
goog.require("domina.support");
goog.require("goog.style");
goog.require("goog.style");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_20004 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_20005 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_20006 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", -1987822328), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_20006, opt_wrapper_20004, table_section_wrapper_20005, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 
5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_20004, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_20005, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_20005, cell_wrapper_20006, table_section_wrapper_20005, table_section_wrapper_20005]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3546__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3546__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3546__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? div.childNodes : cljs.core.PersistentVector.EMPTY;
  var seq__20011 = cljs.core.seq.call(null, tbody);
  var chunk__20012 = null;
  var count__20013 = 0;
  var i__20014 = 0;
  while (true) {
    if (i__20014 < count__20013) {
      var child = cljs.core._nth.call(null, chunk__20012, i__20014);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__20015 = seq__20011;
      var G__20016 = chunk__20012;
      var G__20017 = count__20013;
      var G__20018 = i__20014 + 1;
      seq__20011 = G__20015;
      chunk__20012 = G__20016;
      count__20013 = G__20017;
      i__20014 = G__20018;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20011);
      if (temp__4126__auto__) {
        var seq__20011__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20011__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__20011__$1);
          var G__20019 = cljs.core.chunk_rest.call(null, seq__20011__$1);
          var G__20020 = c__4314__auto__;
          var G__20021 = cljs.core.count.call(null, c__4314__auto__);
          var G__20022 = 0;
          seq__20011 = G__20019;
          chunk__20012 = G__20020;
          count__20013 = G__20021;
          i__20014 = G__20022;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__20011__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__20023 = cljs.core.next.call(null, seq__20011__$1);
          var G__20024 = null;
          var G__20025 = 0;
          var G__20026 = 0;
          seq__20011 = G__20023;
          chunk__20012 = G__20024;
          count__20013 = G__20025;
          i__20014 = G__20026;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))).toLowerCase();
  var vec__20028 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__20028, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__20028, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__20028, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(start_wrap) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(html__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(end_wrap);
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__20029 = wrapper.lastChild;
        var G__20030 = level - 1;
        wrapper = G__20029;
        level = G__20030;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if (and__3546__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__3546__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj20032 = {};
  return obj20032;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__3546__auto__ = content;
    if (and__3546__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4185__auto__ = content == null ? null : content;
    return function() {
      var or__3558__auto__ = domina.nodes[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.nodes["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__3546__auto__ = nodeseq;
    if (and__3546__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4185__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3558__auto__ = domina.single_node[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.single_node["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__3546__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined);
      } else {
        return and__3546__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__20033) {
    var mesg = cljs.core.seq(arglist__20033);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__20034) {
    var mesg = cljs.core.seq(arglist__20034);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__20035) {
    var contents = cljs.core.seq(arglist__20035);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__20036_SHARP_) {
    return p1__20036_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__20037_SHARP_, p2__20038_SHARP_) {
    return goog.dom.insertChildAt(p1__20037_SHARP_, p2__20038_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__20040_SHARP_, p2__20039_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__20039_SHARP_, p1__20040_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__20042_SHARP_, p2__20041_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__20041_SHARP_, p1__20042_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__20044_SHARP_, p2__20043_SHARP_) {
    return goog.dom.replaceNode(p2__20043_SHARP_, p1__20044_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__20049_20053 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__20050_20054 = null;
    var count__20051_20055 = 0;
    var i__20052_20056 = 0;
    while (true) {
      if (i__20052_20056 < count__20051_20055) {
        var n_20057 = cljs.core._nth.call(null, chunk__20050_20054, i__20052_20056);
        goog.style.setStyle(n_20057, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__20058 = seq__20049_20053;
        var G__20059 = chunk__20050_20054;
        var G__20060 = count__20051_20055;
        var G__20061 = i__20052_20056 + 1;
        seq__20049_20053 = G__20058;
        chunk__20050_20054 = G__20059;
        count__20051_20055 = G__20060;
        i__20052_20056 = G__20061;
        continue;
      } else {
        var temp__4126__auto___20062 = cljs.core.seq.call(null, seq__20049_20053);
        if (temp__4126__auto___20062) {
          var seq__20049_20063__$1 = temp__4126__auto___20062;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20049_20063__$1)) {
            var c__4314__auto___20064 = cljs.core.chunk_first.call(null, seq__20049_20063__$1);
            var G__20065 = cljs.core.chunk_rest.call(null, seq__20049_20063__$1);
            var G__20066 = c__4314__auto___20064;
            var G__20067 = cljs.core.count.call(null, c__4314__auto___20064);
            var G__20068 = 0;
            seq__20049_20053 = G__20065;
            chunk__20050_20054 = G__20066;
            count__20051_20055 = G__20067;
            i__20052_20056 = G__20068;
            continue;
          } else {
            var n_20069 = cljs.core.first.call(null, seq__20049_20063__$1);
            goog.style.setStyle(n_20069, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__20070 = cljs.core.next.call(null, seq__20049_20063__$1);
            var G__20071 = null;
            var G__20072 = 0;
            var G__20073 = 0;
            seq__20049_20053 = G__20070;
            chunk__20050_20054 = G__20071;
            count__20051_20055 = G__20072;
            i__20052_20056 = G__20073;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__20074) {
    var content = cljs.core.first(arglist__20074);
    arglist__20074 = cljs.core.next(arglist__20074);
    var name = cljs.core.first(arglist__20074);
    var value = cljs.core.rest(arglist__20074);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__20079_20083 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__20080_20084 = null;
    var count__20081_20085 = 0;
    var i__20082_20086 = 0;
    while (true) {
      if (i__20082_20086 < count__20081_20085) {
        var n_20087 = cljs.core._nth.call(null, chunk__20080_20084, i__20082_20086);
        n_20087.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__20088 = seq__20079_20083;
        var G__20089 = chunk__20080_20084;
        var G__20090 = count__20081_20085;
        var G__20091 = i__20082_20086 + 1;
        seq__20079_20083 = G__20088;
        chunk__20080_20084 = G__20089;
        count__20081_20085 = G__20090;
        i__20082_20086 = G__20091;
        continue;
      } else {
        var temp__4126__auto___20092 = cljs.core.seq.call(null, seq__20079_20083);
        if (temp__4126__auto___20092) {
          var seq__20079_20093__$1 = temp__4126__auto___20092;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20079_20093__$1)) {
            var c__4314__auto___20094 = cljs.core.chunk_first.call(null, seq__20079_20093__$1);
            var G__20095 = cljs.core.chunk_rest.call(null, seq__20079_20093__$1);
            var G__20096 = c__4314__auto___20094;
            var G__20097 = cljs.core.count.call(null, c__4314__auto___20094);
            var G__20098 = 0;
            seq__20079_20083 = G__20095;
            chunk__20080_20084 = G__20096;
            count__20081_20085 = G__20097;
            i__20082_20086 = G__20098;
            continue;
          } else {
            var n_20099 = cljs.core.first.call(null, seq__20079_20093__$1);
            n_20099.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__20100 = cljs.core.next.call(null, seq__20079_20093__$1);
            var G__20101 = null;
            var G__20102 = 0;
            var G__20103 = 0;
            seq__20079_20083 = G__20100;
            chunk__20080_20084 = G__20101;
            count__20081_20085 = G__20102;
            i__20082_20086 = G__20103;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__20104) {
    var content = cljs.core.first(arglist__20104);
    arglist__20104 = cljs.core.next(arglist__20104);
    var name = cljs.core.first(arglist__20104);
    var value = cljs.core.rest(arglist__20104);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__20109_20113 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20110_20114 = null;
  var count__20111_20115 = 0;
  var i__20112_20116 = 0;
  while (true) {
    if (i__20112_20116 < count__20111_20115) {
      var n_20117 = cljs.core._nth.call(null, chunk__20110_20114, i__20112_20116);
      n_20117.removeAttribute(cljs.core.name.call(null, name));
      var G__20118 = seq__20109_20113;
      var G__20119 = chunk__20110_20114;
      var G__20120 = count__20111_20115;
      var G__20121 = i__20112_20116 + 1;
      seq__20109_20113 = G__20118;
      chunk__20110_20114 = G__20119;
      count__20111_20115 = G__20120;
      i__20112_20116 = G__20121;
      continue;
    } else {
      var temp__4126__auto___20122 = cljs.core.seq.call(null, seq__20109_20113);
      if (temp__4126__auto___20122) {
        var seq__20109_20123__$1 = temp__4126__auto___20122;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20109_20123__$1)) {
          var c__4314__auto___20124 = cljs.core.chunk_first.call(null, seq__20109_20123__$1);
          var G__20125 = cljs.core.chunk_rest.call(null, seq__20109_20123__$1);
          var G__20126 = c__4314__auto___20124;
          var G__20127 = cljs.core.count.call(null, c__4314__auto___20124);
          var G__20128 = 0;
          seq__20109_20113 = G__20125;
          chunk__20110_20114 = G__20126;
          count__20111_20115 = G__20127;
          i__20112_20116 = G__20128;
          continue;
        } else {
          var n_20129 = cljs.core.first.call(null, seq__20109_20123__$1);
          n_20129.removeAttribute(cljs.core.name.call(null, name));
          var G__20130 = cljs.core.next.call(null, seq__20109_20123__$1);
          var G__20131 = null;
          var G__20132 = 0;
          var G__20133 = 0;
          seq__20109_20113 = G__20130;
          chunk__20110_20114 = G__20131;
          count__20111_20115 = G__20132;
          i__20112_20116 = G__20133;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__20135 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__20135, 0, null);
    var v = cljs.core.nth.call(null, vec__20135, 1, null);
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = k;
      if (cljs.core.truth_(and__3546__auto__)) {
        return v;
      } else {
        return and__3546__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs__$1) {
    return function(p1__20136_SHARP_) {
      var attr = attrs__$1.item(p1__20136_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.call(null, attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__20143_20149 = cljs.core.seq.call(null, styles);
  var chunk__20144_20150 = null;
  var count__20145_20151 = 0;
  var i__20146_20152 = 0;
  while (true) {
    if (i__20146_20152 < count__20145_20151) {
      var vec__20147_20153 = cljs.core._nth.call(null, chunk__20144_20150, i__20146_20152);
      var name_20154 = cljs.core.nth.call(null, vec__20147_20153, 0, null);
      var value_20155 = cljs.core.nth.call(null, vec__20147_20153, 1, null);
      domina.set_style_BANG_.call(null, content, name_20154, value_20155);
      var G__20156 = seq__20143_20149;
      var G__20157 = chunk__20144_20150;
      var G__20158 = count__20145_20151;
      var G__20159 = i__20146_20152 + 1;
      seq__20143_20149 = G__20156;
      chunk__20144_20150 = G__20157;
      count__20145_20151 = G__20158;
      i__20146_20152 = G__20159;
      continue;
    } else {
      var temp__4126__auto___20160 = cljs.core.seq.call(null, seq__20143_20149);
      if (temp__4126__auto___20160) {
        var seq__20143_20161__$1 = temp__4126__auto___20160;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20143_20161__$1)) {
          var c__4314__auto___20162 = cljs.core.chunk_first.call(null, seq__20143_20161__$1);
          var G__20163 = cljs.core.chunk_rest.call(null, seq__20143_20161__$1);
          var G__20164 = c__4314__auto___20162;
          var G__20165 = cljs.core.count.call(null, c__4314__auto___20162);
          var G__20166 = 0;
          seq__20143_20149 = G__20163;
          chunk__20144_20150 = G__20164;
          count__20145_20151 = G__20165;
          i__20146_20152 = G__20166;
          continue;
        } else {
          var vec__20148_20167 = cljs.core.first.call(null, seq__20143_20161__$1);
          var name_20168 = cljs.core.nth.call(null, vec__20148_20167, 0, null);
          var value_20169 = cljs.core.nth.call(null, vec__20148_20167, 1, null);
          domina.set_style_BANG_.call(null, content, name_20168, value_20169);
          var G__20170 = cljs.core.next.call(null, seq__20143_20161__$1);
          var G__20171 = null;
          var G__20172 = 0;
          var G__20173 = 0;
          seq__20143_20149 = G__20170;
          chunk__20144_20150 = G__20171;
          count__20145_20151 = G__20172;
          i__20146_20152 = G__20173;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__20180_20186 = cljs.core.seq.call(null, attrs);
  var chunk__20181_20187 = null;
  var count__20182_20188 = 0;
  var i__20183_20189 = 0;
  while (true) {
    if (i__20183_20189 < count__20182_20188) {
      var vec__20184_20190 = cljs.core._nth.call(null, chunk__20181_20187, i__20183_20189);
      var name_20191 = cljs.core.nth.call(null, vec__20184_20190, 0, null);
      var value_20192 = cljs.core.nth.call(null, vec__20184_20190, 1, null);
      domina.set_attr_BANG_.call(null, content, name_20191, value_20192);
      var G__20193 = seq__20180_20186;
      var G__20194 = chunk__20181_20187;
      var G__20195 = count__20182_20188;
      var G__20196 = i__20183_20189 + 1;
      seq__20180_20186 = G__20193;
      chunk__20181_20187 = G__20194;
      count__20182_20188 = G__20195;
      i__20183_20189 = G__20196;
      continue;
    } else {
      var temp__4126__auto___20197 = cljs.core.seq.call(null, seq__20180_20186);
      if (temp__4126__auto___20197) {
        var seq__20180_20198__$1 = temp__4126__auto___20197;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20180_20198__$1)) {
          var c__4314__auto___20199 = cljs.core.chunk_first.call(null, seq__20180_20198__$1);
          var G__20200 = cljs.core.chunk_rest.call(null, seq__20180_20198__$1);
          var G__20201 = c__4314__auto___20199;
          var G__20202 = cljs.core.count.call(null, c__4314__auto___20199);
          var G__20203 = 0;
          seq__20180_20186 = G__20200;
          chunk__20181_20187 = G__20201;
          count__20182_20188 = G__20202;
          i__20183_20189 = G__20203;
          continue;
        } else {
          var vec__20185_20204 = cljs.core.first.call(null, seq__20180_20198__$1);
          var name_20205 = cljs.core.nth.call(null, vec__20185_20204, 0, null);
          var value_20206 = cljs.core.nth.call(null, vec__20185_20204, 1, null);
          domina.set_attr_BANG_.call(null, content, name_20205, value_20206);
          var G__20207 = cljs.core.next.call(null, seq__20180_20198__$1);
          var G__20208 = null;
          var G__20209 = 0;
          var G__20210 = 0;
          seq__20180_20186 = G__20207;
          chunk__20181_20187 = G__20208;
          count__20182_20188 = G__20209;
          i__20183_20189 = G__20210;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__20215_20219 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20216_20220 = null;
  var count__20217_20221 = 0;
  var i__20218_20222 = 0;
  while (true) {
    if (i__20218_20222 < count__20217_20221) {
      var node_20223 = cljs.core._nth.call(null, chunk__20216_20220, i__20218_20222);
      goog.dom.classes.add(node_20223, class$);
      var G__20224 = seq__20215_20219;
      var G__20225 = chunk__20216_20220;
      var G__20226 = count__20217_20221;
      var G__20227 = i__20218_20222 + 1;
      seq__20215_20219 = G__20224;
      chunk__20216_20220 = G__20225;
      count__20217_20221 = G__20226;
      i__20218_20222 = G__20227;
      continue;
    } else {
      var temp__4126__auto___20228 = cljs.core.seq.call(null, seq__20215_20219);
      if (temp__4126__auto___20228) {
        var seq__20215_20229__$1 = temp__4126__auto___20228;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20215_20229__$1)) {
          var c__4314__auto___20230 = cljs.core.chunk_first.call(null, seq__20215_20229__$1);
          var G__20231 = cljs.core.chunk_rest.call(null, seq__20215_20229__$1);
          var G__20232 = c__4314__auto___20230;
          var G__20233 = cljs.core.count.call(null, c__4314__auto___20230);
          var G__20234 = 0;
          seq__20215_20219 = G__20231;
          chunk__20216_20220 = G__20232;
          count__20217_20221 = G__20233;
          i__20218_20222 = G__20234;
          continue;
        } else {
          var node_20235 = cljs.core.first.call(null, seq__20215_20229__$1);
          goog.dom.classes.add(node_20235, class$);
          var G__20236 = cljs.core.next.call(null, seq__20215_20229__$1);
          var G__20237 = null;
          var G__20238 = 0;
          var G__20239 = 0;
          seq__20215_20219 = G__20236;
          chunk__20216_20220 = G__20237;
          count__20217_20221 = G__20238;
          i__20218_20222 = G__20239;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__20244_20248 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20245_20249 = null;
  var count__20246_20250 = 0;
  var i__20247_20251 = 0;
  while (true) {
    if (i__20247_20251 < count__20246_20250) {
      var node_20252 = cljs.core._nth.call(null, chunk__20245_20249, i__20247_20251);
      goog.dom.classes.remove(node_20252, class$);
      var G__20253 = seq__20244_20248;
      var G__20254 = chunk__20245_20249;
      var G__20255 = count__20246_20250;
      var G__20256 = i__20247_20251 + 1;
      seq__20244_20248 = G__20253;
      chunk__20245_20249 = G__20254;
      count__20246_20250 = G__20255;
      i__20247_20251 = G__20256;
      continue;
    } else {
      var temp__4126__auto___20257 = cljs.core.seq.call(null, seq__20244_20248);
      if (temp__4126__auto___20257) {
        var seq__20244_20258__$1 = temp__4126__auto___20257;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20244_20258__$1)) {
          var c__4314__auto___20259 = cljs.core.chunk_first.call(null, seq__20244_20258__$1);
          var G__20260 = cljs.core.chunk_rest.call(null, seq__20244_20258__$1);
          var G__20261 = c__4314__auto___20259;
          var G__20262 = cljs.core.count.call(null, c__4314__auto___20259);
          var G__20263 = 0;
          seq__20244_20248 = G__20260;
          chunk__20245_20249 = G__20261;
          count__20246_20250 = G__20262;
          i__20247_20251 = G__20263;
          continue;
        } else {
          var node_20264 = cljs.core.first.call(null, seq__20244_20258__$1);
          goog.dom.classes.remove(node_20264, class$);
          var G__20265 = cljs.core.next.call(null, seq__20244_20258__$1);
          var G__20266 = null;
          var G__20267 = 0;
          var G__20268 = 0;
          seq__20244_20248 = G__20265;
          chunk__20245_20249 = G__20266;
          count__20246_20250 = G__20267;
          i__20247_20251 = G__20268;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__20273_20277 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20274_20278 = null;
  var count__20275_20279 = 0;
  var i__20276_20280 = 0;
  while (true) {
    if (i__20276_20280 < count__20275_20279) {
      var node_20281 = cljs.core._nth.call(null, chunk__20274_20278, i__20276_20280);
      goog.dom.classes.toggle(node_20281, class$);
      var G__20282 = seq__20273_20277;
      var G__20283 = chunk__20274_20278;
      var G__20284 = count__20275_20279;
      var G__20285 = i__20276_20280 + 1;
      seq__20273_20277 = G__20282;
      chunk__20274_20278 = G__20283;
      count__20275_20279 = G__20284;
      i__20276_20280 = G__20285;
      continue;
    } else {
      var temp__4126__auto___20286 = cljs.core.seq.call(null, seq__20273_20277);
      if (temp__4126__auto___20286) {
        var seq__20273_20287__$1 = temp__4126__auto___20286;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20273_20287__$1)) {
          var c__4314__auto___20288 = cljs.core.chunk_first.call(null, seq__20273_20287__$1);
          var G__20289 = cljs.core.chunk_rest.call(null, seq__20273_20287__$1);
          var G__20290 = c__4314__auto___20288;
          var G__20291 = cljs.core.count.call(null, c__4314__auto___20288);
          var G__20292 = 0;
          seq__20273_20277 = G__20289;
          chunk__20274_20278 = G__20290;
          count__20275_20279 = G__20291;
          i__20276_20280 = G__20292;
          continue;
        } else {
          var node_20293 = cljs.core.first.call(null, seq__20273_20287__$1);
          goog.dom.classes.toggle(node_20293, class$);
          var G__20294 = cljs.core.next.call(null, seq__20273_20287__$1);
          var G__20295 = null;
          var G__20296 = 0;
          var G__20297 = 0;
          seq__20273_20277 = G__20294;
          chunk__20274_20278 = G__20295;
          count__20275_20279 = G__20296;
          i__20276_20280 = G__20297;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_20306__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__20302_20307 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20303_20308 = null;
  var count__20304_20309 = 0;
  var i__20305_20310 = 0;
  while (true) {
    if (i__20305_20310 < count__20304_20309) {
      var node_20311 = cljs.core._nth.call(null, chunk__20303_20308, i__20305_20310);
      goog.dom.classes.set(node_20311, classes_20306__$1);
      var G__20312 = seq__20302_20307;
      var G__20313 = chunk__20303_20308;
      var G__20314 = count__20304_20309;
      var G__20315 = i__20305_20310 + 1;
      seq__20302_20307 = G__20312;
      chunk__20303_20308 = G__20313;
      count__20304_20309 = G__20314;
      i__20305_20310 = G__20315;
      continue;
    } else {
      var temp__4126__auto___20316 = cljs.core.seq.call(null, seq__20302_20307);
      if (temp__4126__auto___20316) {
        var seq__20302_20317__$1 = temp__4126__auto___20316;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20302_20317__$1)) {
          var c__4314__auto___20318 = cljs.core.chunk_first.call(null, seq__20302_20317__$1);
          var G__20319 = cljs.core.chunk_rest.call(null, seq__20302_20317__$1);
          var G__20320 = c__4314__auto___20318;
          var G__20321 = cljs.core.count.call(null, c__4314__auto___20318);
          var G__20322 = 0;
          seq__20302_20307 = G__20319;
          chunk__20303_20308 = G__20320;
          count__20304_20309 = G__20321;
          i__20305_20310 = G__20322;
          continue;
        } else {
          var node_20323 = cljs.core.first.call(null, seq__20302_20317__$1);
          goog.dom.classes.set(node_20323, classes_20306__$1);
          var G__20324 = cljs.core.next.call(null, seq__20302_20317__$1);
          var G__20325 = null;
          var G__20326 = 0;
          var G__20327 = 0;
          seq__20302_20307 = G__20324;
          chunk__20303_20308 = G__20325;
          count__20304_20309 = G__20326;
          i__20305_20310 = G__20327;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__20332_20336 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20333_20337 = null;
  var count__20334_20338 = 0;
  var i__20335_20339 = 0;
  while (true) {
    if (i__20335_20339 < count__20334_20338) {
      var node_20340 = cljs.core._nth.call(null, chunk__20333_20337, i__20335_20339);
      goog.dom.setTextContent(node_20340, value);
      var G__20341 = seq__20332_20336;
      var G__20342 = chunk__20333_20337;
      var G__20343 = count__20334_20338;
      var G__20344 = i__20335_20339 + 1;
      seq__20332_20336 = G__20341;
      chunk__20333_20337 = G__20342;
      count__20334_20338 = G__20343;
      i__20335_20339 = G__20344;
      continue;
    } else {
      var temp__4126__auto___20345 = cljs.core.seq.call(null, seq__20332_20336);
      if (temp__4126__auto___20345) {
        var seq__20332_20346__$1 = temp__4126__auto___20345;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20332_20346__$1)) {
          var c__4314__auto___20347 = cljs.core.chunk_first.call(null, seq__20332_20346__$1);
          var G__20348 = cljs.core.chunk_rest.call(null, seq__20332_20346__$1);
          var G__20349 = c__4314__auto___20347;
          var G__20350 = cljs.core.count.call(null, c__4314__auto___20347);
          var G__20351 = 0;
          seq__20332_20336 = G__20348;
          chunk__20333_20337 = G__20349;
          count__20334_20338 = G__20350;
          i__20335_20339 = G__20351;
          continue;
        } else {
          var node_20352 = cljs.core.first.call(null, seq__20332_20346__$1);
          goog.dom.setTextContent(node_20352, value);
          var G__20353 = cljs.core.next.call(null, seq__20332_20346__$1);
          var G__20354 = null;
          var G__20355 = 0;
          var G__20356 = 0;
          seq__20332_20336 = G__20353;
          chunk__20333_20337 = G__20354;
          count__20334_20338 = G__20355;
          i__20335_20339 = G__20356;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__20361_20365 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__20362_20366 = null;
  var count__20363_20367 = 0;
  var i__20364_20368 = 0;
  while (true) {
    if (i__20364_20368 < count__20363_20367) {
      var node_20369 = cljs.core._nth.call(null, chunk__20362_20366, i__20364_20368);
      goog.dom.forms.setValue(node_20369, value);
      var G__20370 = seq__20361_20365;
      var G__20371 = chunk__20362_20366;
      var G__20372 = count__20363_20367;
      var G__20373 = i__20364_20368 + 1;
      seq__20361_20365 = G__20370;
      chunk__20362_20366 = G__20371;
      count__20363_20367 = G__20372;
      i__20364_20368 = G__20373;
      continue;
    } else {
      var temp__4126__auto___20374 = cljs.core.seq.call(null, seq__20361_20365);
      if (temp__4126__auto___20374) {
        var seq__20361_20375__$1 = temp__4126__auto___20374;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20361_20375__$1)) {
          var c__4314__auto___20376 = cljs.core.chunk_first.call(null, seq__20361_20375__$1);
          var G__20377 = cljs.core.chunk_rest.call(null, seq__20361_20375__$1);
          var G__20378 = c__4314__auto___20376;
          var G__20379 = cljs.core.count.call(null, c__4314__auto___20376);
          var G__20380 = 0;
          seq__20361_20365 = G__20377;
          chunk__20362_20366 = G__20378;
          count__20363_20367 = G__20379;
          i__20364_20368 = G__20380;
          continue;
        } else {
          var node_20381 = cljs.core.first.call(null, seq__20361_20375__$1);
          goog.dom.forms.setValue(node_20381, value);
          var G__20382 = cljs.core.next.call(null, seq__20361_20375__$1);
          var G__20383 = null;
          var G__20384 = 0;
          var G__20385 = 0;
          seq__20361_20365 = G__20382;
          chunk__20362_20366 = G__20383;
          count__20363_20367 = G__20384;
          i__20364_20368 = G__20385;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))).toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = allows_inner_html_QMARK_;
    if (and__3546__auto__) {
      var and__3546__auto____$1 = function() {
        var or__3558__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__3558__auto__)) {
          return or__3558__auto__;
        } else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__3546__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__3546__auto____$1;
      }
    } else {
      return and__3546__auto__;
    }
  }())) {
    var value_20396 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__20392_20397 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__20393_20398 = null;
      var count__20394_20399 = 0;
      var i__20395_20400 = 0;
      while (true) {
        if (i__20395_20400 < count__20394_20399) {
          var node_20401 = cljs.core._nth.call(null, chunk__20393_20398, i__20395_20400);
          node_20401.innerHTML = value_20396;
          var G__20402 = seq__20392_20397;
          var G__20403 = chunk__20393_20398;
          var G__20404 = count__20394_20399;
          var G__20405 = i__20395_20400 + 1;
          seq__20392_20397 = G__20402;
          chunk__20393_20398 = G__20403;
          count__20394_20399 = G__20404;
          i__20395_20400 = G__20405;
          continue;
        } else {
          var temp__4126__auto___20406 = cljs.core.seq.call(null, seq__20392_20397);
          if (temp__4126__auto___20406) {
            var seq__20392_20407__$1 = temp__4126__auto___20406;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__20392_20407__$1)) {
              var c__4314__auto___20408 = cljs.core.chunk_first.call(null, seq__20392_20407__$1);
              var G__20409 = cljs.core.chunk_rest.call(null, seq__20392_20407__$1);
              var G__20410 = c__4314__auto___20408;
              var G__20411 = cljs.core.count.call(null, c__4314__auto___20408);
              var G__20412 = 0;
              seq__20392_20397 = G__20409;
              chunk__20393_20398 = G__20410;
              count__20394_20399 = G__20411;
              i__20395_20400 = G__20412;
              continue;
            } else {
              var node_20413 = cljs.core.first.call(null, seq__20392_20407__$1);
              node_20413.innerHTML = value_20396;
              var G__20414 = cljs.core.next.call(null, seq__20392_20407__$1);
              var G__20415 = null;
              var G__20416 = 0;
              var G__20417 = 0;
              seq__20392_20397 = G__20414;
              chunk__20393_20398 = G__20415;
              count__20394_20399 = G__20416;
              i__20395_20400 = G__20417;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e20391) {
      if (e20391 instanceof Error) {
        var e_20418 = e20391;
        domina.replace_children_BANG_.call(null, content, value_20396);
      } else {
        throw e20391;
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = bubble;
      if (cljs.core.truth_(and__3546__auto__)) {
        return value == null;
      } else {
        return and__3546__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node.call(null, node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.call(null, parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3558__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__20425_20429 = cljs.core.seq.call(null, children);
    var chunk__20426_20430 = null;
    var count__20427_20431 = 0;
    var i__20428_20432 = 0;
    while (true) {
      if (i__20428_20432 < count__20427_20431) {
        var child_20433 = cljs.core._nth.call(null, chunk__20426_20430, i__20428_20432);
        frag.appendChild(child_20433);
        var G__20434 = seq__20425_20429;
        var G__20435 = chunk__20426_20430;
        var G__20436 = count__20427_20431;
        var G__20437 = i__20428_20432 + 1;
        seq__20425_20429 = G__20434;
        chunk__20426_20430 = G__20435;
        count__20427_20431 = G__20436;
        i__20428_20432 = G__20437;
        continue;
      } else {
        var temp__4126__auto___20438 = cljs.core.seq.call(null, seq__20425_20429);
        if (temp__4126__auto___20438) {
          var seq__20425_20439__$1 = temp__4126__auto___20438;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20425_20439__$1)) {
            var c__4314__auto___20440 = cljs.core.chunk_first.call(null, seq__20425_20439__$1);
            var G__20441 = cljs.core.chunk_rest.call(null, seq__20425_20439__$1);
            var G__20442 = c__4314__auto___20440;
            var G__20443 = cljs.core.count.call(null, c__4314__auto___20440);
            var G__20444 = 0;
            seq__20425_20429 = G__20441;
            chunk__20426_20430 = G__20442;
            count__20427_20431 = G__20443;
            i__20428_20432 = G__20444;
            continue;
          } else {
            var child_20445 = cljs.core.first.call(null, seq__20425_20439__$1);
            frag.appendChild(child_20445);
            var G__20446 = cljs.core.next.call(null, seq__20425_20439__$1);
            var G__20447 = null;
            var G__20448 = 0;
            var G__20449 = 0;
            seq__20425_20429 = G__20446;
            chunk__20426_20430 = G__20447;
            count__20427_20431 = G__20448;
            i__20428_20432 = G__20449;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__20419_SHARP_, p2__20420_SHARP_) {
        return f.call(null, p1__20419_SHARP_, p2__20420_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3546__auto__ = obj;
  if (cljs.core.truth_(and__3546__auto__)) {
    var and__3546__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__3546__auto____$1) {
      return obj.length;
    } else {
      return and__3546__auto____$1;
    }
  } else {
    return and__3546__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__20451 = list_thing;
      if (G__20451) {
        var bit__4208__auto__ = G__20451.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4208__auto__ || G__20451.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__20451.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20451);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20451);
      }
    }()) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__20452 = content;
      if (G__20452) {
        var bit__4208__auto__ = G__20452.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4208__auto__ || G__20452.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__20452.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20452);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20452);
      }
    }()) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__20453 = content;
      if (G__20453) {
        var bit__4208__auto__ = G__20453.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4208__auto__ || G__20453.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__20453.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20453);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__20453);
      }
    }()) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        return content;
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.object");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = function() {
  var obj19543 = {};
  return obj19543;
}();
domina.events.prevent_default = function prevent_default(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.prevent_default[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.prevent_default["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.stop_propagation[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.stop_propagation["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.target = function target(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$target$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.target[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.target["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.current_target = function current_target(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$current_target$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.current_target[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.current_target["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.event_type = function event_type(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$event_type$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.event_type[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.event_type["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.raw_event = function raw_event(evt) {
  if (function() {
    var and__3546__auto__ = evt;
    if (and__3546__auto__) {
      return evt.domina$events$Event$raw_event$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt);
  } else {
    var x__4185__auto__ = evt == null ? null : evt;
    return function() {
      var or__3558__auto__ = domina.events.raw_event[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = domina.events.raw_event["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.root_element = window.document.documentElement;
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if (typeof domina.events.t19547 !== "undefined") {
      } else {
        domina.events.t19547 = function(evt, f, create_listener_function, meta19548) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta19548 = meta19548;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472;
        };
        domina.events.t19547.cljs$lang$type = true;
        domina.events.t19547.cljs$lang$ctorStr = "domina.events/t19547";
        domina.events.t19547.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
          return cljs.core._write.call(null, writer__4126__auto__, "domina.events/t19547");
        };
        domina.events.t19547.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var o__$1 = this;
          var temp__4124__auto__ = self__.evt[k];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var val = temp__4124__auto__;
            return val;
          } else {
            return self__.evt[cljs.core.name.call(null, k)];
          }
        };
        domina.events.t19547.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var o__$1 = this;
          var or__3558__auto__ = cljs.core._lookup.call(null, o__$1, k);
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return not_found;
          }
        };
        domina.events.t19547.prototype.domina$events$Event$ = true;
        domina.events.t19547.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.preventDefault();
        };
        domina.events.t19547.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.stopPropagation();
        };
        domina.events.t19547.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.target;
        };
        domina.events.t19547.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.currentTarget;
        };
        domina.events.t19547.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.type;
        };
        domina.events.t19547.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt;
        };
        domina.events.t19547.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19549) {
          var self__ = this;
          var _19549__$1 = this;
          return self__.meta19548;
        };
        domina.events.t19547.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19549, meta19548__$1) {
          var self__ = this;
          var _19549__$1 = this;
          return new domina.events.t19547(self__.evt, self__.f, self__.create_listener_function, meta19548__$1);
        };
        domina.events.__GT_t19547 = function __GT_t19547(evt__$1, f__$1, create_listener_function__$1, meta19548) {
          return new domina.events.t19547(evt__$1, f__$1, create_listener_function__$1, meta19548);
        };
      }
      return new domina.events.t19547(evt, f, create_listener_function, null);
    }());
    return true;
  };
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = cljs.core.name.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__4283__auto__ = function(f, t) {
      return function iter__19554(s__19555) {
        return new cljs.core.LazySeq(null, function(f, t) {
          return function() {
            var s__19555__$1 = s__19555;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__19555__$1);
              if (temp__4126__auto__) {
                var s__19555__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__19555__$2)) {
                  var c__4281__auto__ = cljs.core.chunk_first.call(null, s__19555__$2);
                  var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                  var b__19557 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                  if (function() {
                    var i__19556 = 0;
                    while (true) {
                      if (i__19556 < size__4282__auto__) {
                        var node = cljs.core._nth.call(null, c__4281__auto__, i__19556);
                        cljs.core.chunk_append.call(null, b__19557, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                        var G__19558 = i__19556 + 1;
                        i__19556 = G__19558;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19557), iter__19554.call(null, cljs.core.chunk_rest.call(null, s__19555__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__19557), null);
                  }
                } else {
                  var node = cljs.core.first.call(null, s__19555__$2);
                  return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__19554.call(null, cljs.core.rest.call(null, s__19555__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(f, t), null, null);
      };
    }(f, t);
    return iter__4283__auto__.call(null, domina.nodes.call(null, content));
  }());
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false);
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false);
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_;
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true);
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_;
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true);
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_;
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element);
  };
  var unlisten_BANG___1 = function(content) {
    var seq__19567 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__19568 = null;
    var count__19569 = 0;
    var i__19570 = 0;
    while (true) {
      if (i__19570 < count__19569) {
        var node = cljs.core._nth.call(null, chunk__19568, i__19570);
        goog.events.removeAll(node);
        var G__19575 = seq__19567;
        var G__19576 = chunk__19568;
        var G__19577 = count__19569;
        var G__19578 = i__19570 + 1;
        seq__19567 = G__19575;
        chunk__19568 = G__19576;
        count__19569 = G__19577;
        i__19570 = G__19578;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__19567);
        if (temp__4126__auto__) {
          var seq__19567__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19567__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__19567__$1);
            var G__19579 = cljs.core.chunk_rest.call(null, seq__19567__$1);
            var G__19580 = c__4314__auto__;
            var G__19581 = cljs.core.count.call(null, c__4314__auto__);
            var G__19582 = 0;
            seq__19567 = G__19579;
            chunk__19568 = G__19580;
            count__19569 = G__19581;
            i__19570 = G__19582;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__19567__$1);
            goog.events.removeAll(node);
            var G__19583 = cljs.core.next.call(null, seq__19567__$1);
            var G__19584 = null;
            var G__19585 = 0;
            var G__19586 = 0;
            seq__19567 = G__19583;
            chunk__19568 = G__19584;
            count__19569 = G__19585;
            i__19570 = G__19586;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = cljs.core.name.call(null, type);
    var seq__19571 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__19572 = null;
    var count__19573 = 0;
    var i__19574 = 0;
    while (true) {
      if (i__19574 < count__19573) {
        var node = cljs.core._nth.call(null, chunk__19572, i__19574);
        goog.events.removeAll(node, type__$1);
        var G__19587 = seq__19571;
        var G__19588 = chunk__19572;
        var G__19589 = count__19573;
        var G__19590 = i__19574 + 1;
        seq__19571 = G__19587;
        chunk__19572 = G__19588;
        count__19573 = G__19589;
        i__19574 = G__19590;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__19571);
        if (temp__4126__auto__) {
          var seq__19571__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19571__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__19571__$1);
            var G__19591 = cljs.core.chunk_rest.call(null, seq__19571__$1);
            var G__19592 = c__4314__auto__;
            var G__19593 = cljs.core.count.call(null, c__4314__auto__);
            var G__19594 = 0;
            seq__19571 = G__19591;
            chunk__19572 = G__19592;
            count__19573 = G__19593;
            i__19574 = G__19594;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__19571__$1);
            goog.events.removeAll(node, type__$1);
            var G__19595 = cljs.core.next.call(null, seq__19571__$1);
            var G__19596 = null;
            var G__19597 = 0;
            var G__19598 = 0;
            seq__19571 = G__19595;
            chunk__19572 = G__19596;
            count__19573 = G__19597;
            i__19574 = G__19598;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_;
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null));
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while (true) {
      var temp__4124__auto__ = n.parentNode;
      if (cljs.core.truth_(temp__4124__auto__)) {
        var parent = temp__4124__auto__;
        var G__19599 = parent;
        var G__19600 = cljs.core.cons.call(null, parent, so_far);
        n = G__19599;
        so_far = G__19600;
        continue;
      } else {
        return so_far;
      }
      break;
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes;
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__19609_19617 = cljs.core.seq.call(null, ancestors);
  var chunk__19610_19618 = null;
  var count__19611_19619 = 0;
  var i__19612_19620 = 0;
  while (true) {
    if (i__19612_19620 < count__19611_19619) {
      var n_19621 = cljs.core._nth.call(null, chunk__19610_19618, i__19612_19620);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_19621;
        goog.events.fireListeners(n_19621, evt.type, true, evt);
      }
      var G__19622 = seq__19609_19617;
      var G__19623 = chunk__19610_19618;
      var G__19624 = count__19611_19619;
      var G__19625 = i__19612_19620 + 1;
      seq__19609_19617 = G__19622;
      chunk__19610_19618 = G__19623;
      count__19611_19619 = G__19624;
      i__19612_19620 = G__19625;
      continue;
    } else {
      var temp__4126__auto___19626 = cljs.core.seq.call(null, seq__19609_19617);
      if (temp__4126__auto___19626) {
        var seq__19609_19627__$1 = temp__4126__auto___19626;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19609_19627__$1)) {
          var c__4314__auto___19628 = cljs.core.chunk_first.call(null, seq__19609_19627__$1);
          var G__19629 = cljs.core.chunk_rest.call(null, seq__19609_19627__$1);
          var G__19630 = c__4314__auto___19628;
          var G__19631 = cljs.core.count.call(null, c__4314__auto___19628);
          var G__19632 = 0;
          seq__19609_19617 = G__19629;
          chunk__19610_19618 = G__19630;
          count__19611_19619 = G__19631;
          i__19612_19620 = G__19632;
          continue;
        } else {
          var n_19633 = cljs.core.first.call(null, seq__19609_19627__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_19633;
            goog.events.fireListeners(n_19633, evt.type, true, evt);
          }
          var G__19634 = cljs.core.next.call(null, seq__19609_19627__$1);
          var G__19635 = null;
          var G__19636 = 0;
          var G__19637 = 0;
          seq__19609_19617 = G__19634;
          chunk__19610_19618 = G__19635;
          count__19611_19619 = G__19636;
          i__19612_19620 = G__19637;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__19613_19638 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__19614_19639 = null;
  var count__19615_19640 = 0;
  var i__19616_19641 = 0;
  while (true) {
    if (i__19616_19641 < count__19615_19640) {
      var n_19642 = cljs.core._nth.call(null, chunk__19614_19639, i__19616_19641);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_19642;
        goog.events.fireListeners(n_19642, evt.type, false, evt);
      }
      var G__19643 = seq__19613_19638;
      var G__19644 = chunk__19614_19639;
      var G__19645 = count__19615_19640;
      var G__19646 = i__19616_19641 + 1;
      seq__19613_19638 = G__19643;
      chunk__19614_19639 = G__19644;
      count__19615_19640 = G__19645;
      i__19616_19641 = G__19646;
      continue;
    } else {
      var temp__4126__auto___19647 = cljs.core.seq.call(null, seq__19613_19638);
      if (temp__4126__auto___19647) {
        var seq__19613_19648__$1 = temp__4126__auto___19647;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19613_19648__$1)) {
          var c__4314__auto___19649 = cljs.core.chunk_first.call(null, seq__19613_19648__$1);
          var G__19650 = cljs.core.chunk_rest.call(null, seq__19613_19648__$1);
          var G__19651 = c__4314__auto___19649;
          var G__19652 = cljs.core.count.call(null, c__4314__auto___19649);
          var G__19653 = 0;
          seq__19613_19638 = G__19650;
          chunk__19614_19639 = G__19651;
          count__19615_19640 = G__19652;
          i__19616_19641 = G__19653;
          continue;
        } else {
          var n_19654 = cljs.core.first.call(null, seq__19613_19648__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_19654;
            goog.events.fireListeners(n_19654, evt.type, false, evt);
          }
          var G__19655 = cljs.core.next.call(null, seq__19613_19648__$1);
          var G__19656 = null;
          var G__19657 = 0;
          var G__19658 = 0;
          seq__19613_19638 = G__19655;
          chunk__19614_19639 = G__19656;
          count__19615_19640 = G__19657;
          i__19616_19641 = G__19658;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return evt.returnValue_;
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt);
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3546__auto__ = o.getParentEventTarget;
  if (cljs.core.truth_(and__3546__auto__)) {
    return o.dispatchEvent;
  } else {
    return and__3546__auto__;
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map);
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(cljs.core.name.call(null, type));
    var seq__19665_19671 = cljs.core.seq.call(null, evt_map);
    var chunk__19666_19672 = null;
    var count__19667_19673 = 0;
    var i__19668_19674 = 0;
    while (true) {
      if (i__19668_19674 < count__19667_19673) {
        var vec__19669_19675 = cljs.core._nth.call(null, chunk__19666_19672, i__19668_19674);
        var k_19676 = cljs.core.nth.call(null, vec__19669_19675, 0, null);
        var v_19677 = cljs.core.nth.call(null, vec__19669_19675, 1, null);
        evt[k_19676] = v_19677;
        var G__19678 = seq__19665_19671;
        var G__19679 = chunk__19666_19672;
        var G__19680 = count__19667_19673;
        var G__19681 = i__19668_19674 + 1;
        seq__19665_19671 = G__19678;
        chunk__19666_19672 = G__19679;
        count__19667_19673 = G__19680;
        i__19668_19674 = G__19681;
        continue;
      } else {
        var temp__4126__auto___19682 = cljs.core.seq.call(null, seq__19665_19671);
        if (temp__4126__auto___19682) {
          var seq__19665_19683__$1 = temp__4126__auto___19682;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__19665_19683__$1)) {
            var c__4314__auto___19684 = cljs.core.chunk_first.call(null, seq__19665_19683__$1);
            var G__19685 = cljs.core.chunk_rest.call(null, seq__19665_19683__$1);
            var G__19686 = c__4314__auto___19684;
            var G__19687 = cljs.core.count.call(null, c__4314__auto___19684);
            var G__19688 = 0;
            seq__19665_19671 = G__19685;
            chunk__19666_19672 = G__19686;
            count__19667_19673 = G__19687;
            i__19668_19674 = G__19688;
            continue;
          } else {
            var vec__19670_19689 = cljs.core.first.call(null, seq__19665_19683__$1);
            var k_19690 = cljs.core.nth.call(null, vec__19670_19689, 0, null);
            var v_19691 = cljs.core.nth.call(null, vec__19670_19689, 1, null);
            evt[k_19690] = v_19691;
            var G__19692 = cljs.core.next.call(null, seq__19665_19683__$1);
            var G__19693 = null;
            var G__19694 = 0;
            var G__19695 = 0;
            seq__19665_19671 = G__19692;
            chunk__19666_19672 = G__19693;
            count__19667_19673 = G__19694;
            i__19668_19674 = G__19695;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt);
    } else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt);
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_;
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key);
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = cljs.core.name.call(null, type);
  return cljs.core.mapcat.call(null, function(type__$1) {
    return function(p1__19696_SHARP_) {
      return goog.events.getListeners(p1__19696_SHARP_, type__$1, false);
    };
  }(type__$1), domina.nodes.call(null, content));
};
goog.provide("clustermap.formats.string");
goog.require("cljs.core");
clustermap.formats.string.pluralize = function() {
  var pluralize__delegate = function(n, word, p__14681) {
    var vec__14683 = p__14681;
    var irreg = cljs.core.nth.call(null, vec__14683, 0, null);
    if (n === 1) {
      return word;
    } else {
      var or__3558__auto__ = irreg;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(word) + "s";
      }
    }
  };
  var pluralize = function(n, word, var_args) {
    var p__14681 = null;
    if (arguments.length > 2) {
      p__14681 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return pluralize__delegate.call(this, n, word, p__14681);
  };
  pluralize.cljs$lang$maxFixedArity = 2;
  pluralize.cljs$lang$applyTo = function(arglist__14684) {
    var n = cljs.core.first(arglist__14684);
    arglist__14684 = cljs.core.next(arglist__14684);
    var word = cljs.core.first(arglist__14684);
    var p__14681 = cljs.core.rest(arglist__14684);
    return pluralize__delegate(n, word, p__14681);
  };
  pluralize.cljs$core$IFn$_invoke$arity$variadic = pluralize__delegate;
  return pluralize;
}();
goog.provide("clustermap.components.reset_selection_button");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
clustermap.components.reset_selection_button.reset_selection_button = function reset_selection_button(path_fn) {
  return React.DOM.a({"className":"btn btn-link btn-reset", "href":path_fn.call(null, null, null)}, "Reset to UK wide");
};
goog.provide("clustermap.components.map_report");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.string");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("clustermap.formats.string");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("domina.events");
goog.require("domina.events");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.string");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.map_report.full_report_button = function full_report_button(comm, view_path_fn) {
  return React.DOM.a({"className":"btn btn-link", "href":view_path_fn.call(null, new cljs.core.Keyword(null, "lists", "lists", -884730684))}, React.DOM.i({"className":"icon-lists-sm"}), "Full report");
};
clustermap.components.map_report.summary_stats_report = function summary_stats_report(map_report_data, comm, view_path_fn, p__13777) {
  var map__13799 = p__13777;
  var map__13799__$1 = cljs.core.seq_QMARK_.call(null, map__13799) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13799) : map__13799;
  var summary_stats_data = map__13799__$1;
  var map__13800 = cljs.core.get.call(null, map__13799__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var map__13800__$1 = cljs.core.seq_QMARK_.call(null, map__13800) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13800) : map__13800;
  var data = map__13800__$1;
  var map__13801 = cljs.core.get.call(null, map__13800__$1, new cljs.core.Keyword(null, "!latest_employee_count", "!latest_employee_count", -1445524938));
  var map__13801__$1 = cljs.core.seq_QMARK_.call(null, map__13801) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13801) : map__13801;
  var sum_employee_count = cljs.core.get.call(null, map__13801__$1, new cljs.core.Keyword(null, "sum", "sum", 136986814));
  var count = cljs.core.get.call(null, map__13801__$1, new cljs.core.Keyword(null, "viewfilter_doc_count", "viewfilter_doc_count", 231005032));
  var map__13802 = cljs.core.get.call(null, map__13800__$1, new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", -1853433972));
  var map__13802__$1 = cljs.core.seq_QMARK_.call(null, map__13802) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13802) : map__13802;
  var sum_turnover = cljs.core.get.call(null, map__13802__$1, new cljs.core.Keyword(null, "sum", "sum", 136986814));
  return React.DOM.div(null, React.DOM.div({"className":"header secondary"}, React.DOM.h2(null, "Summary stats")), React.DOM.ul(null, function() {
    var attrs13805 = clustermap.formats.number.fnum.call(null, count, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
    return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs13805) ? sablono.interpreter.attributes.call(null, attrs13805) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13805) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Companies")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs13805), React.DOM.small(null, "Companies")], null)));
  }(), function() {
    var attrs13810 = clustermap.formats.money.fmoney.call(null, sum_turnover, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
    return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs13810) ? sablono.interpreter.attributes.call(null, attrs13810) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13810) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs13810), React.DOM.small(null, "Total revenue")], null)));
  }(), function() {
    var attrs13815 = clustermap.formats.number.fnum.call(null, sum_employee_count, new cljs.core.Keyword(null, "dec", "dec", 1888433436), 0, new cljs.core.Keyword(null, "default", "default", -1987822328), "-");
    return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs13815) ? sablono.interpreter.attributes.call(null, attrs13815) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13815) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs13815), React.DOM.small(null, "Total employees")], null)));
  }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, comm, view_path_fn)));
};
clustermap.components.map_report.request_summary_stats = function request_summary_stats(resource, index, index_type, attrs, filter, bounds) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.summary_stats, index, index_type, attrs, filter, bounds);
};
clustermap.components.map_report.map_report_component = function map_report_component(p__13820, owner) {
  var map__13840 = p__13820;
  var map__13840__$1 = cljs.core.seq_QMARK_.call(null, map__13840) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13840) : map__13840;
  var data = map__13840__$1;
  var map__13841 = cljs.core.get.call(null, map__13840__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  var map__13841__$1 = cljs.core.seq_QMARK_.call(null, map__13841) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13841) : map__13841;
  var filter_by_view = cljs.core.get.call(null, map__13841__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var filt = cljs.core.get.call(null, map__13841__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
  var map__13842 = cljs.core.get.call(null, map__13840__$1, new cljs.core.Keyword(null, "map-report", "map-report", -254073588));
  var map__13842__$1 = cljs.core.seq_QMARK_.call(null, map__13842) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13842) : map__13842;
  var map_report = map__13842__$1;
  var map__13843 = cljs.core.get.call(null, map__13842__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__13843__$1 = cljs.core.seq_QMARK_.call(null, map__13843) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13843) : map__13843;
  var controls = map__13843__$1;
  var map__13844 = cljs.core.get.call(null, map__13843__$1, new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251));
  var map__13844__$1 = cljs.core.seq_QMARK_.call(null, map__13844) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13844) : map__13844;
  var summary_stats = map__13844__$1;
  var variables = cljs.core.get.call(null, map__13844__$1, new cljs.core.Keyword(null, "variables", "variables", 1563680814));
  var index_type = cljs.core.get.call(null, map__13844__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
  var index = cljs.core.get.call(null, map__13844__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
  var summary_stats_data = cljs.core.get.call(null, map__13842__$1, new cljs.core.Keyword(null, "summary-stats-data", "summary-stats-data", 1509580588));
  var map__13845 = cljs.core.get.call(null, map__13840__$1, new cljs.core.Keyword(null, "map-controls", "map-controls", -1453318552));
  var map__13845__$1 = cljs.core.seq_QMARK_.call(null, map__13845) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13845) : map__13845;
  var bounds = cljs.core.get.call(null, map__13845__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  if (typeof clustermap.components.map_report.t13846 !== "undefined") {
  } else {
    clustermap.components.map_report.t13846 = function(map__13845, filt, index_type, owner, filter_by_view, data, map__13844, index, p__13820, map__13843, controls, summary_stats_data, map__13840, map_report, summary_stats, map_report_component, variables, bounds, map__13842, map__13841, meta13847) {
      this.map__13845 = map__13845;
      this.filt = filt;
      this.index_type = index_type;
      this.owner = owner;
      this.filter_by_view = filter_by_view;
      this.data = data;
      this.map__13844 = map__13844;
      this.index = index;
      this.p__13820 = p__13820;
      this.map__13843 = map__13843;
      this.controls = controls;
      this.summary_stats_data = summary_stats_data;
      this.map__13840 = map__13840;
      this.map_report = map_report;
      this.summary_stats = summary_stats;
      this.map_report_component = map_report_component;
      this.variables = variables;
      this.bounds = bounds;
      this.map__13842 = map__13842;
      this.map__13841 = map__13841;
      this.meta13847 = meta13847;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t13846.cljs$lang$type = true;
    clustermap.components.map_report.t13846.cljs$lang$ctorStr = "clustermap.components.map-report/t13846";
    clustermap.components.map_report.t13846.cljs$lang$ctorPrWriter = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.map-report/t13846");
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
    clustermap.components.map_report.t13846.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.map_report.t13846.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function(_, p__13849, p__13850) {
        var self__ = this;
        var map__13851 = p__13849;
        var map__13851__$1 = cljs.core.seq_QMARK_.call(null, map__13851) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13851) : map__13851;
        var next_data = map__13851__$1;
        var map__13852 = cljs.core.get.call(null, map__13851__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__13852__$1 = cljs.core.seq_QMARK_.call(null, map__13852) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13852) : map__13852;
        var next_filter_by_view = cljs.core.get.call(null, map__13852__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var next_filt = cljs.core.get.call(null, map__13852__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var map__13853 = cljs.core.get.call(null, map__13851__$1, new cljs.core.Keyword(null, "map-report", "map-report", -254073588));
        var map__13853__$1 = cljs.core.seq_QMARK_.call(null, map__13853) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13853) : map__13853;
        var next_map_report = map__13853__$1;
        var map__13854 = cljs.core.get.call(null, map__13853__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__13854__$1 = cljs.core.seq_QMARK_.call(null, map__13854) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13854) : map__13854;
        var next_controls = map__13854__$1;
        var map__13855 = cljs.core.get.call(null, map__13854__$1, new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251));
        var map__13855__$1 = cljs.core.seq_QMARK_.call(null, map__13855) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13855) : map__13855;
        var next_summary_stats = map__13855__$1;
        var next_index = cljs.core.get.call(null, map__13855__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
        var next_index_type = cljs.core.get.call(null, map__13855__$1, new cljs.core.Keyword(null, "index-type", "index-type", 500383962));
        var next_variables = cljs.core.get.call(null, map__13855__$1, new cljs.core.Keyword(null, "variables", "variables", 1563680814));
        var next_summary_stats_data = cljs.core.get.call(null, map__13853__$1, new cljs.core.Keyword(null, "summary-stats-data", "summary-stats-data", 1509580588));
        var map__13856 = cljs.core.get.call(null, map__13851__$1, new cljs.core.Keyword(null, "map-controls", "map-controls", -1453318552));
        var map__13856__$1 = cljs.core.seq_QMARK_.call(null, map__13856) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13856) : map__13856;
        var map_controls = map__13856__$1;
        var next_bounds = cljs.core.get.call(null, map__13856__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var map__13857 = p__13850;
        var map__13857__$1 = cljs.core.seq_QMARK_.call(null, map__13857) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13857) : map__13857;
        var next_state = map__13857__$1;
        var summary_stats_resource = cljs.core.get.call(null, map__13857__$1, new cljs.core.Keyword(null, "summary-stats-resource", "summary-stats-resource", -2107619160));
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not.call(null, next_summary_stats_data);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_filt, self__.filt);
            if (or__3558__auto____$1) {
              return or__3558__auto____$1;
            } else {
              var or__3558__auto____$2 = cljs.core.not_EQ_.call(null, next_filter_by_view, self__.filter_by_view);
              if (or__3558__auto____$2) {
                return or__3558__auto____$2;
              } else {
                var and__3546__auto__ = next_filter_by_view;
                if (cljs.core.truth_(and__3546__auto__)) {
                  return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
                } else {
                  return and__3546__auto__;
                }
              }
            }
          }
        }())) {
          return clustermap.components.map_report.request_summary_stats.call(null, summary_stats_resource, next_index, next_index_type, next_variables, next_filt, cljs.core.truth_(next_filter_by_view) ? om.core._value.call(null, next_bounds) : null);
        } else {
          return null;
        }
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
    clustermap.components.map_report.t13846.prototype.om$core$IRenderState$ = true;
    clustermap.components.map_report.t13846.prototype.om$core$IRenderState$render_state$arity$2 = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function(_, state) {
        var self__ = this;
        var ___$1 = this;
        var map__13858 = om.core.get_shared.call(null, self__.owner);
        var map__13858__$1 = cljs.core.seq_QMARK_.call(null, map__13858) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13858) : map__13858;
        var view_path_fn = cljs.core.get.call(null, map__13858__$1, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 630487502));
        var path_fn = cljs.core.get.call(null, map__13858__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
        var comm = cljs.core.get.call(null, map__13858__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
        return clustermap.components.map_report.summary_stats_report.call(null, self__.map_report, comm, view_path_fn, self__.summary_stats_data);
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
    clustermap.components.map_report.t13846.prototype.om$core$IDidMount$ = true;
    clustermap.components.map_report.t13846.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var ssr = clustermap.ordered_resource.make_discard_stale_resource.call(null, "summary-stats");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "summary-stats-resource", "summary-stats-resource", -2107619160), ssr);
        return clustermap.ordered_resource.retrieve_responses.call(null, ssr, function(ssr, ___$1, map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
          return function(ss) {
            return om.core.update_BANG_.call(null, self__.map_report, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "summary-stats-data", "summary-stats-data", 1509580588)], null), ss);
          };
        }(ssr, ___$1, map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds));
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
    clustermap.components.map_report.t13846.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function(_13848) {
        var self__ = this;
        var _13848__$1 = this;
        return self__.meta13847;
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
    clustermap.components.map_report.t13846.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function(_13848, meta13847__$1) {
        var self__ = this;
        var _13848__$1 = this;
        return new clustermap.components.map_report.t13846(self__.map__13845, self__.filt, self__.index_type, self__.owner, self__.filter_by_view, self__.data, self__.map__13844, self__.index, self__.p__13820, self__.map__13843, self__.controls, self__.summary_stats_data, self__.map__13840, self__.map_report, self__.summary_stats, self__.map_report_component, self__.variables, self__.bounds, self__.map__13842, self__.map__13841, meta13847__$1);
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
    clustermap.components.map_report.__GT_t13846 = function(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds) {
      return function __GT_t13846(map__13845__$2, filt__$1, index_type__$1, owner__$1, filter_by_view__$1, data__$1, map__13844__$2, index__$1, p__13820__$1, map__13843__$2, controls__$1, summary_stats_data__$1, map__13840__$2, map_report__$1, summary_stats__$1, map_report_component__$1, variables__$1, bounds__$1, map__13842__$2, map__13841__$2, meta13847) {
        return new clustermap.components.map_report.t13846(map__13845__$2, filt__$1, index_type__$1, owner__$1, filter_by_view__$1, data__$1, map__13844__$2, index__$1, p__13820__$1, map__13843__$2, controls__$1, summary_stats_data__$1, map__13840__$2, map_report__$1, summary_stats__$1, map_report_component__$1, variables__$1, bounds__$1, map__13842__$2, map__13841__$2, meta13847);
      };
    }(map__13840, map__13840__$1, data, map__13841, map__13841__$1, filter_by_view, filt, map__13842, map__13842__$1, map_report, map__13843, map__13843__$1, controls, map__13844, map__13844__$1, summary_stats, variables, index_type, index, summary_stats_data, map__13845, map__13845__$1, bounds);
  }
  return new clustermap.components.map_report.t13846(map__13845__$1, filt, index_type, owner, filter_by_view, data, map__13844__$1, index, p__13820, map__13843__$1, controls, summary_stats_data, map__13840__$1, map_report, summary_stats, map_report_component, variables, bounds, map__13842__$1, map__13841__$1, null);
};
goog.provide("clustermap.data.picker");
goog.require("cljs.core");
clustermap.data.picker.pick_variable = function pick_variable(variable, data) {
  return cljs.core.map.call(null, function(d) {
    return cljs.core.get.call(null, d, variable);
  }, data);
};
goog.provide("clustermap.data.colorbrewer");
goog.require("cljs.core");
clustermap.data.colorbrewer.schemes = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "YlGn", "YlGn", 507221536), new cljs.core.Keyword(null, "Spectral", "Spectral", -692376127), new cljs.core.Keyword(null, "Paired", "Paired", -1839552955), new cljs.core.Keyword(null, "Set2", "Set2", -444147418), new cljs.core.Keyword(null, "PuBu", "PuBu", 1525547624), new cljs.core.Keyword(null, "GnBu", "GnBu", 1316073224), new cljs.core.Keyword(null, "RdGy", "RdGy", -1158156279), new cljs.core.Keyword(null, 
"Purples", "Purples", 1309432905), new cljs.core.Keyword(null, "YlOrBr", "YlOrBr", 2072225066), new cljs.core.Keyword(null, "Pastel2", "Pastel2", 705023467), new cljs.core.Keyword(null, "Set3", "Set3", 278046667), new cljs.core.Keyword(null, "Greys", "Greys", -1509640308), new cljs.core.Keyword(null, "PRGn:", "PRGn:", 980503854), new cljs.core.Keyword(null, "Greens", "Greens", -1413705298), new cljs.core.Keyword(null, "BrBG", "BrBG", -297264113), new cljs.core.Keyword(null, "PuOr", "PuOr", -769472497), 
new cljs.core.Keyword(null, "BuPu", "BuPu", -1977891377), new cljs.core.Keyword(null, "RdYlGn", "RdYlGn", -1023051471), new cljs.core.Keyword(null, "Reds", "Reds", -1589610158), new cljs.core.Keyword(null, "Accent", "Accent", 2007651090), new cljs.core.Keyword(null, "Dark2", "Dark2", 1074570035), new cljs.core.Keyword(null, "PiYG", "PiYG", -1162651564), new cljs.core.Keyword(null, "PuR", "PuR", -1518916716), new cljs.core.Keyword(null, "OrRd", "OrRd", 673412084), new cljs.core.Keyword(null, "PuBuGn", 
"PuBuGn", 483376373), new cljs.core.Keyword(null, "YlOrRd", "YlOrRd", -1111058027), new cljs.core.Keyword(null, "BuGn", "BuGn", 985852661), new cljs.core.Keyword(null, "Oranges", "Oranges", 1752319702), new cljs.core.Keyword(null, "RdYlBu", "RdYlBu", 1160830524), new cljs.core.Keyword(null, "Blues", "Blues", -551621539), new cljs.core.Keyword(null, "RdBu", "RdBu", 119670078), new cljs.core.Keyword(null, "RdPu", "RdPu", -1880439170), new cljs.core.Keyword(null, "Pastel1", "Pastel1", 1702813470), new cljs.core.Keyword(null, 
"YlGnBu", "YlGnBu", 269339550), new cljs.core.Keyword(null, "Set1", "Set1", -621848513)], [new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcb9", "#addd8e", "#31a354"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c2e699", "#78c679", "#238443"], null), new cljs.core.Keyword(null, 
"5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c2e699", "#78c679", "#31a354", "#006837"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#31a354", "#006837"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", 
"#41ab5d", "#238443", "#006837", "#004529"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), 
new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"], null), new cljs.core.PersistentVector(null, 
4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#abdda4", "#2b83ba"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d53e4f", "#fc8d59", "#fee08b", "#ffffbf", "#e6f598", "#99d594", "#3288bd"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#ffffbf", "#abdda4", "#2b83ba"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fc8d59", "#ffffbf", "#99d594"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d53e4f", "#fc8d59", "#fee08b", "#e6f598", 
"#99d594", "#3288bd"], null)]), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "12", "12", 1779965095), new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, 
"3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99", "#b15928"], null), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99"], 
null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f"], 
null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", 
"#fb9a99"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c"], null)]), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", 
"#8da0cb"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", 
"#b3b3b3"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ece7f2", "#a6bddb", "#2b8cbe"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#bdc9e1", "#74a9cf", "#0570b0"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 
5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#bdc9e1", "#74a9cf", "#2b8cbe", "#045a8d"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#2b8cbe", "#045a8d"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", 
"#0570b0", "#034e7b"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#034e7b"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"], null)], 
null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e0f3db", "#a8ddb5", "#43a2ca"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#bae4bc", "#7bccc4", "#2b8cbe"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#bae4bc", "#7bccc4", "#43a2ca", "#0868ac"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#43a2ca", "#0868ac"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", 
"#2b8cbe", "#08589e"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#08589e"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"], null)], 
null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], 
[new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", 
"#f4a582", "#bababa", "#404040"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#ffffff", "#e0e0e0", "#999999", "#4d4d4d"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", 
"#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", "#f4a582", "#ffffff", "#bababa", "#404040"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ef8a62", "#ffffff", "#999999"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#e0e0e0", "#999999", "#4d4d4d"], null)]), 
new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#efedf5", "#bcbddc", "#756bb1"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#6a51a3"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#f2f0f7", "#cbc9e2", "#9e9ac8", "#756bb1", "#54278f"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"], null), new cljs.core.Keyword(null, 
"8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, 
"3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7bc", "#fec44f", "#d95f0e"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fed98e", "#fe9929", "#cc4c02"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fed98e", "#fe9929", "#d95f0e", 
"#993404"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 
8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"], null)], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9"], null), new cljs.core.Keyword(null, "6", 
"6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc", "#cccccc"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "12", "12", 1779965095), new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), 
new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5", "#ffed6f"], null), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", 
"#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#f0f0f0", "#bdbdbd", "#636363"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#cccccc", "#969696", "#525252"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#cccccc", "#969696", "#636363", "#252525"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#636363", "#252525"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffff", "#f0f0f0", "#d9d9d9", 
"#bdbdbd", "#969696", "#737373", "#525252", "#252525"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", 
"#00441b"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7b3294", "#c2a5cf", "#a6dba0", "#008837"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#af8dc3", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#7fbf7b", 
"#1b7837"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7b3294", "#c2a5cf", "#f7f7f7", 
"#a6dba0", "#008837"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#af8dc3", "#f7f7f7", "#7fbf7b"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e5f5e0", 
"#a1d99b", "#31a354"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#bae4b3", "#74c476", "#238b45"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#bae4b3", "#74c476", "#31a354", "#006d2c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#31a354", "#006d2c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf5", "#e5f5e0", "#c7e9c0", 
"#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", 
"#003c30"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6611a", "#dfc27d", "#80cdc1", "#018571"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#d8b365", "#f6e8c3", "#f5f5f5", "#c7eae5", "#5ab4ac", 
"#01665e"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a6611a", "#dfc27d", "#f5f5f5", 
"#80cdc1", "#018571"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d8b365", "#f5f5f5", "#5ab4ac"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8c510a", "#d8b365", "#f6e8c3", "#c7eae5", "#5ab4ac", "#01665e"], null)]), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", 
"#2d004b"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e66101", "#fdb863", "#b2abd2", "#5e3c99"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#f1a340", "#fee0b6", "#f7f7f7", "#d8daeb", "#998ec3", 
"#542788"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e66101", "#fdb863", "#f7f7f7", 
"#b2abd2", "#5e3c99"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1a340", "#f7f7f7", "#998ec3"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b35806", "#f1a340", "#fee0b6", "#d8daeb", "#998ec3", "#542788"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e0ecf4", 
"#9ebcda", "#8856a7"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b3cde3", "#8c96c6", "#88419d"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b3cde3", "#8c96c6", "#8856a7", "#810f7c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", "#e0ecf4", "#bfd3e6", 
"#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", 
"#006837"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#a6d96a", "#1a9641"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee08b", "#ffffbf", "#d9ef8b", "#91cf60", 
"#1a9850"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#ffffbf", 
"#a6d96a", "#1a9641"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fc8d59", "#ffffbf", "#91cf60"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee08b", "#d9ef8b", "#91cf60", "#1a9850"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee0d2", 
"#fc9272", "#de2d26"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcae91", "#fb6a4a", "#cb181d"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcae91", "#fb6a4a", "#de2d26", "#a50f15"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 
6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#de2d26", "#a50f15"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5f0", "#fee0d2", "#fcbba1", 
"#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"], null)], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", 
"#fdc086"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", 
"#666666"], null)], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 
5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", 
"#e6ab02", "#a6761d"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#666666"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 
993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"], null), new cljs.core.PersistentVector(null, 
10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d01c8b", "#f1b6da", "#b8e186", "#4dac26"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#e9a3c9", "#fde0ef", "#f7f7f7", "#e6f5d0", "#a1d76a", "#4d9221"], null), new cljs.core.PersistentVector(null, 
8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d01c8b", "#f1b6da", "#f7f7f7", "#b8e186", "#4dac26"], null), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e9a3c9", "#f7f7f7", "#a1d76a"], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#c51b7d", "#e9a3c9", "#fde0ef", "#e6f5d0", "#a1d76a", "#4d9221"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e7e1ef", "#c994c7", "#dd1c77"], null), new cljs.core.Keyword(null, "4", "4", 
-1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d7b5d8", "#df65b0", "#ce1256"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d7b5d8", "#df65b0", "#dd1c77", "#980043"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d4b9da", 
"#c994c7", "#df65b0", "#dd1c77", "#980043"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f1eef6", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"], null), new cljs.core.Keyword(null, 
"9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee8c8", "#fdbb84", "#e34a33"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 
4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdcc8a", "#fc8d59", "#d7301f"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdcc8a", "#fc8d59", "#e34a33", "#b30000"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000"], null), 
new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 
9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ece2f0", "#a6bddb", "#1c9099"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#f6eff7", "#bdc9e1", "#67a9cf", "#02818a"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f6eff7", "#bdc9e1", "#67a9cf", "#1c9099", "#016c59"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#1c9099", "#016c59"], null), new cljs.core.Keyword(null, "7", "7", 993885869), 
new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffeda0", "#feb24c", "#f03b20"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fecc5c", "#fd8d3c", 
"#e31a1c"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fecc5c", "#fd8d3c", "#f03b20", "#bd0026"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#f03b20", "#bd0026"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", 
"#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e5f5f9", "#99d8c9", "#2ca25f"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b2e2e2", "#66c2a4", "#238b45"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#b2e2e2", "#66c2a4", "#2ca25f", "#006d2c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#2ca25f", "#006d2c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fcfd", 
"#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fee6ce", "#fdae6b", "#e6550d"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdbe85", "#fd8d3c", "#d94701"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdbe85", "#fd8d3c", "#e6550d", "#a63603"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#e6550d", "#a63603"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff5eb", 
"#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), 
new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", 
"#313695"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#abd9e9", "#2c7bb6"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee090", "#ffffbf", "#e0f3f8", "#91bfdb", "#4575b4"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"], null), 
new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#d7191c", "#fdae61", "#ffffbf", "#abd9e9", "#2c7bb6"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fc8d59", "#ffffbf", "#91bfdb"], null), new cljs.core.PersistentVector(null, 6, 5, 
cljs.core.PersistentVector.EMPTY_NODE, ["#d73027", "#fc8d59", "#fee090", "#e0f3f8", "#91bfdb", "#4575b4"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#deebf7", "#9ecae1", "#3182bd"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#bdd7e7", "#6baed6", 
"#2171b5"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#bdd7e7", "#6baed6", "#3182bd", "#08519c"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#3182bd", "#08519c"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#f7fbff", 
"#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"], null)], null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "11", "11", 359980583), new cljs.core.Keyword(null, "10", "10", -333527256), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.Keyword(null, "5", "5", 538911032), 
new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.Keyword(null, "6", "6", -1107752709)], [new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"], null), new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", 
"#053061"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", "#f4a582", "#92c5de", "#0571b0"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#f7f7f7", "#d1e5f0", "#67a9cf", "#2166ac"], null), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"], null), 
new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ca0020", "#f4a582", "#f7f7f7", "#92c5de", "#0571b0"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ef8a62", "#f7f7f7", "#67a9cf"], null), new cljs.core.PersistentVector(null, 6, 5, 
cljs.core.PersistentVector.EMPTY_NODE, ["#b2182b", "#ef8a62", "#fddbc7", "#d1e5f0", "#67a9cf", "#2166ac"], null)]), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fde0dd", "#fa9fb5", "#c51b8a"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fbb4b9", "#f768a1", 
"#ae017e"], null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fbb4b9", "#f768a1", "#c51b8a", "#7a0177"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#c51b8a", "#7a0177"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 
7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fff7f3", 
"#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#fbb4ae", 
"#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#edf8b1", "#7fcdbb", "#2c7fb8"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#a1dab4", "#41b6c4", "#225ea8"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#253494"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#2c7fb8", "#253494"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#ffffd9", 
"#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"], null)], null), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "3", "3", 2097825370), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a"], null), new cljs.core.Keyword(null, "4", "4", -1197948085), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3"], 
null), new cljs.core.Keyword(null, "5", "5", 538911032), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"], null), new cljs.core.Keyword(null, "6", "6", -1107752709), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33"], null), new cljs.core.Keyword(null, "7", "7", 993885869), new cljs.core.PersistentVector(null, 7, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628"], null), new cljs.core.Keyword(null, "8", "8", 1405994928), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf"], null), new cljs.core.Keyword(null, "9", "9", 1664767314), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#e41a1c", 
"#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"], null)], null)]);
clustermap.data.colorbrewer.brewer = function brewer(scheme, steps, idx) {
  var steps_key = cljs.core.keyword.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(steps));
  return cljs.core.get_in.call(null, clustermap.data.colorbrewer.schemes, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [scheme, steps_key, idx], null));
};
clustermap.data.colorbrewer.colors = function colors(scheme, steps) {
  var steps_key = cljs.core.keyword.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(steps));
  return cljs.core.get_in.call(null, clustermap.data.colorbrewer.schemes, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [scheme, steps_key], null));
};
goog.provide("clustermap.data.colorchooser");
goog.require("cljs.core");
goog.require("clustermap.data.colorbrewer");
goog.require("clustermap.data.colorbrewer");
goog.require("clustermap.data.picker");
goog.require("clustermap.data.picker");
clustermap.data.colorchooser.linear_scale = function linear_scale(min, max, steps) {
  var step = (max - min) / steps;
  return cljs.core.map.call(null, function(step) {
    return function(i) {
      return min + i * step;
    };
  }(step), cljs.core.range.call(null, 1, steps));
};
clustermap.data.colorchooser.log_scale = function log_scale(min, max, steps) {
  var translation = 1 - min;
  var log_min = Math.log.call(null, min);
  var log_max = Math.log.call(null, max + translation);
  var log_linear_scale = clustermap.data.colorchooser.linear_scale.call(null, 1, log_max, steps);
  return cljs.core.map.call(null, function(translation, log_min, log_max, log_linear_scale) {
    return function(n) {
      return Math.pow.call(null, Math.E, n) - translation;
    };
  }(translation, log_min, log_max, log_linear_scale), log_linear_scale);
};
clustermap.data.colorchooser.choose_from_scheme = function choose_from_scheme(scheme, thresholds, value) {
  var scheme_thresholds = cljs.core.map.call(null, cljs.core.vector, thresholds, scheme);
  var chosen = cljs.core.last.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(scheme_thresholds) {
    return function(p__14650) {
      var vec__14651 = p__14650;
      var t = cljs.core.nth.call(null, vec__14651, 0, null);
      var i = cljs.core.nth.call(null, vec__14651, 1, null);
      return value <= t;
    };
  }(scheme_thresholds), scheme_thresholds)));
  var or__3558__auto__ = chosen;
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return cljs.core.last.call(null, scheme);
  }
};
clustermap.data.colorchooser.choose = function choose(color_scheme_spec, scale, key, variable, data) {
  var color_scheme = cljs.core.get_in.call(null, clustermap.data.colorbrewer.schemes, color_scheme_spec);
  var col_count = cljs.core.count.call(null, color_scheme);
  var values = clustermap.data.picker.pick_variable.call(null, variable, data);
  var min_value = cljs.core.apply.call(null, cljs.core.min, values);
  var max_value = cljs.core.apply.call(null, cljs.core.max, values);
  var thresholds = cljs.core._EQ_.call(null, scale, new cljs.core.Keyword(null, "log", "log", -1595516004)) ? clustermap.data.colorchooser.log_scale.call(null, min_value, max_value, col_count) : clustermap.data.colorchooser.linear_scale.call(null, min_value, max_value, col_count);
  var chooser = cljs.core.partial.call(null, clustermap.data.colorchooser.choose_from_scheme, color_scheme, thresholds);
  var value_colors = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(color_scheme, col_count, values, min_value, max_value, thresholds, chooser) {
    return function(r) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.call(null, r, key), chooser.call(null, cljs.core.get.call(null, r, variable))], null);
    };
  }(color_scheme, col_count, values, min_value, max_value, thresholds, chooser), data));
  var threshold_colors = cljs.core.map.call(null, cljs.core.vector, cljs.core.concat.call(null, thresholds, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max_value], null)), color_scheme);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [threshold_colors, value_colors], null);
};
goog.provide("clustermap.components.filter");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.filter.render = function render(p__13146, owner, state) {
  var map__13234 = p__13146;
  var map__13234__$1 = cljs.core.seq_QMARK_.call(null, map__13234) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13234) : map__13234;
  var bounds = cljs.core.get.call(null, map__13234__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  var filter_spec = cljs.core.get.call(null, map__13234__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  return React.DOM.div({"className":"filter-component"}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, React.DOM.h3(null, "Filter"))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "filter by view"), React.DOM.div({"className":"tbl-cell"}, sablono.interpreter.input.call(null, {"type":"checkbox", "name":"filter-by-view", "value":"true", "onChange":function(map__13234, map__13234__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.checked;
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255)], null), val);
    };
  }(map__13234, map__13234__$1, bounds, filter_spec)}))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "age"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(map__13234, map__13234__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(val);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "age", "age", -604307804)], null), function() {
        var pred__13309 = cljs.core._EQ_;
        var expr__13310 = val;
        if (cljs.core.truth_(pred__13309.call(null, "new", expr__13310))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!formation_date", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "2009-01-01"], null)], null)], null);
        } else {
          if (cljs.core.truth_(pred__13309.call(null, "old", expr__13310))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!formation_date", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lt", "lt", 421989243), "2009-01-01"], null)], null)], null);
          } else {
            return null;
          }
        }
      }());
    };
  }(map__13234, map__13234__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "any"), sablono.interpreter.option.call(null, {"value":"new"}, "\x3c 5 years old"), sablono.interpreter.option.call(null, {"value":"old"}, "\x3e\x3d 5 years old")))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "group ?"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(map__13234, map__13234__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(val);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "group", "group", 582596132)], null), function() {
        var pred__13312 = cljs.core._EQ_;
        var expr__13313 = val;
        if (cljs.core.truth_(pred__13312.call(null, "group", expr__13313))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "term", "term", -1817390416), new cljs.core.PersistentArrayMap(null, 1, ["!is_group", true], null)], null);
        } else {
          if (cljs.core.truth_(pred__13312.call(null, "notgroup", expr__13313))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "term", "term", -1817390416), new cljs.core.PersistentArrayMap(null, 1, ["!is_group", false], null)], null);
          } else {
            return null;
          }
        }
      }());
    };
  }(map__13234, map__13234__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "any"), sablono.interpreter.option.call(null, {"value":"group"}, "group"), sablono.interpreter.option.call(null, {"value":"notgroup"}, "not group")))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "turnover"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"onChange":function(map__13234, map__13234__$1, bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(val);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "turnover", "turnover", -1778310555)], null), function() {
        var pred__13315 = cljs.core._EQ_;
        var expr__13316 = val;
        if (cljs.core.truth_(pred__13315.call(null, "low", expr__13316))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!latest_turnover", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lt", "lt", 421989243), 1E6], null)], null)], null);
        } else {
          if (cljs.core.truth_(pred__13315.call(null, "high", expr__13316))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!latest_turnover", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), 1E6], null)], null)], null);
          } else {
            return null;
          }
        }
      }());
    };
  }(map__13234, map__13234__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "any"), sablono.interpreter.option.call(null, {"value":"low"}, "\x3c \u00a31 million"), sablono.interpreter.option.call(null, {"value":"high"}, "\x3e\x3d \u00a31 million")))), React.DOM.div({"className":"tbl-row"}, React.DOM.div({"className":"tbl-cell"}, "SIC section"), React.DOM.div({"className":"tbl-cell"}, React.DOM.select({"style":{"width":"100%"}, "onChange":function(map__13234, map__13234__$1, 
  bounds, filter_spec) {
    return function(e) {
      var val = e.target.value;
      console.log(e.target.value);
      return om.core.update_BANG_.call(null, filter_spec, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "sic", "sic", 589884826)], null), function() {
        var pred__13318 = cljs.core._EQ_;
        var expr__13319 = val;
        if (cljs.core.truth_(pred__13318.call(null, "A", expr__13319))) {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "01110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "03220"], null)], null)], null);
        } else {
          if (cljs.core.truth_(pred__13318.call(null, "B", expr__13319))) {
            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "05101", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "09900"], null)], null)], null);
          } else {
            if (cljs.core.truth_(pred__13318.call(null, "C", expr__13319))) {
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "10110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "33200"], null)], null)], null);
            } else {
              if (cljs.core.truth_(pred__13318.call(null, "D", expr__13319))) {
                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "35110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "35300"], null)], null)], null);
              } else {
                if (cljs.core.truth_(pred__13318.call(null, "E", expr__13319))) {
                  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "36000", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "39000"], null)], null)], null);
                } else {
                  if (cljs.core.truth_(pred__13318.call(null, "F", expr__13319))) {
                    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "41100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "43999"], null)], null)], null);
                  } else {
                    if (cljs.core.truth_(pred__13318.call(null, "G", expr__13319))) {
                      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "45111", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "47990"], null)], null)], null);
                    } else {
                      if (cljs.core.truth_(pred__13318.call(null, "H", expr__13319))) {
                        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "49100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "53202"], null)], null)], null);
                      } else {
                        if (cljs.core.truth_(pred__13318.call(null, "I", expr__13319))) {
                          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "55100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "56302"], null)], null)], null);
                        } else {
                          if (cljs.core.truth_(pred__13318.call(null, "J", expr__13319))) {
                            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "58110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "63990"], null)], null)], null);
                          } else {
                            if (cljs.core.truth_(pred__13318.call(null, "K", expr__13319))) {
                              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "64110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "66300"], null)], null)], null);
                            } else {
                              if (cljs.core.truth_(pred__13318.call(null, "L", expr__13319))) {
                                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "68100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "68320"], null)], null)], null);
                              } else {
                                if (cljs.core.truth_(pred__13318.call(null, "M", expr__13319))) {
                                  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "69101", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "75000"], null)], null)], null);
                                } else {
                                  if (cljs.core.truth_(pred__13318.call(null, "N", expr__13319))) {
                                    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "77110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "82990"], null)], null)], null);
                                  } else {
                                    if (cljs.core.truth_(pred__13318.call(null, "O", expr__13319))) {
                                      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "84110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "84300"], null)], null)], null);
                                    } else {
                                      if (cljs.core.truth_(pred__13318.call(null, "P", expr__13319))) {
                                        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "85100", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "85600"], null)], null)], null);
                                      } else {
                                        if (cljs.core.truth_(pred__13318.call(null, "Q", expr__13319))) {
                                          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "86101", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "88990"], null)], null)], null);
                                        } else {
                                          if (cljs.core.truth_(pred__13318.call(null, "R", expr__13319))) {
                                            return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "90010", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "93290"], null)], null)], null);
                                          } else {
                                            if (cljs.core.truth_(pred__13318.call(null, "S", expr__13319))) {
                                              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "94110", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "96090"], null)], null)], null);
                                            } else {
                                              if (cljs.core.truth_(pred__13318.call(null, "T", expr__13319))) {
                                                return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "97000", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "98200"], null)], null)], null);
                                              } else {
                                                if (cljs.core.truth_(pred__13318.call(null, "U", expr__13319))) {
                                                  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "range", "range", 1639692286), new cljs.core.PersistentArrayMap(null, 1, ["!sic07", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gte", "gte", 1000474126), "99000", new cljs.core.Keyword(null, "lte", "lte", 1005402135), "99999"], null)], null)], null);
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }());
    };
  }(map__13234, map__13234__$1, bounds, filter_spec)}, sablono.interpreter.option.call(null, {"value":""}, "all"), sablono.interpreter.option.call(null, {"value":"A"}, "A : Agriculture, Forestry and Fishing"), sablono.interpreter.option.call(null, {"value":"B"}, "B : Mining and Quarrying"), sablono.interpreter.option.call(null, {"value":"C"}, "C : Manufacturing"), sablono.interpreter.option.call(null, {"value":"D"}, "D : Electricity, gas, steam and air conditioning supply"), sablono.interpreter.option.call(null, 
  {"value":"E"}, "E : Water supply, sewerage, waste management and remediation activities"), sablono.interpreter.option.call(null, {"value":"F"}, "F : Construction"), sablono.interpreter.option.call(null, {"value":"G"}, "G : Wholesale and retail trade; repair of motor vehicles and motorcycles"), sablono.interpreter.option.call(null, {"value":"H"}, "H : Transportation and storage"), sablono.interpreter.option.call(null, {"value":"I"}, "I : Accommodation and food service activities"), sablono.interpreter.option.call(null, 
  {"value":"J"}, "J : Information and communication"), sablono.interpreter.option.call(null, {"value":"K"}, "K : Financial and insurance activities"), sablono.interpreter.option.call(null, {"value":"L"}, "L : Real estate activities"), sablono.interpreter.option.call(null, {"value":"M"}, "M : Professional, scientific and technical activities"), sablono.interpreter.option.call(null, {"value":"N"}, "N : Administrative and support service activities"), sablono.interpreter.option.call(null, {"value":"O"}, 
  "O : Public administration and defence; compulsory social security"), sablono.interpreter.option.call(null, {"value":"P"}, "P : Education"), sablono.interpreter.option.call(null, {"value":"Q"}, "Q : Human health and social work activities"), sablono.interpreter.option.call(null, {"value":"R"}, "R : Arts, entertainment and recreation"), sablono.interpreter.option.call(null, {"value":"S"}, "S : Other service activities"), sablono.interpreter.option.call(null, {"value":"T"}, "T : Activities of households as employers"), 
  sablono.interpreter.option.call(null, {"value":"U"}, "U : Activities of extraterritorial organisations and bodies"))))));
};
clustermap.components.filter.filter_component = function filter_component(p__13321, owner) {
  var map__13330 = p__13321;
  var map__13330__$1 = cljs.core.seq_QMARK_.call(null, map__13330) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13330) : map__13330;
  var props = map__13330__$1;
  var map__13331 = cljs.core.get.call(null, map__13330__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
  var map__13331__$1 = cljs.core.seq_QMARK_.call(null, map__13331) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13331) : map__13331;
  var filter_spec = map__13331__$1;
  var components = cljs.core.get.call(null, map__13331__$1, new cljs.core.Keyword(null, "components", "components", -1073188942));
  var filter_by_view = cljs.core.get.call(null, map__13331__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
  var compiled = cljs.core.get.call(null, map__13331__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
  var bounds = cljs.core.get.call(null, map__13330__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  if (typeof clustermap.components.filter.t13332 !== "undefined") {
  } else {
    clustermap.components.filter.t13332 = function(filter_component, p__13321, owner, filter_by_view, props, filter_spec, compiled, map__13330, bounds, map__13331, components, meta13333) {
      this.filter_component = filter_component;
      this.p__13321 = p__13321;
      this.owner = owner;
      this.filter_by_view = filter_by_view;
      this.props = props;
      this.filter_spec = filter_spec;
      this.compiled = compiled;
      this.map__13330 = map__13330;
      this.bounds = bounds;
      this.map__13331 = map__13331;
      this.components = components;
      this.meta13333 = meta13333;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.filter.t13332.cljs$lang$type = true;
    clustermap.components.filter.t13332.cljs$lang$ctorStr = "clustermap.components.filter/t13332";
    clustermap.components.filter.t13332.cljs$lang$ctorPrWriter = function(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.filter/t13332");
      };
    }(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t13332.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.filter.t13332.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_, p__13335, next_state) {
        var self__ = this;
        var map__13336 = p__13335;
        var map__13336__$1 = cljs.core.seq_QMARK_.call(null, map__13336) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13336) : map__13336;
        var map__13337 = cljs.core.get.call(null, map__13336__$1, new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648));
        var map__13337__$1 = cljs.core.seq_QMARK_.call(null, map__13337) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13337) : map__13337;
        var next_components = cljs.core.get.call(null, map__13337__$1, new cljs.core.Keyword(null, "components", "components", -1073188942));
        var next_filter_by_view = cljs.core.get.call(null, map__13337__$1, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255));
        var next_compiled = cljs.core.get.call(null, map__13337__$1, new cljs.core.Keyword(null, "compiled", "compiled", 850043082));
        var next_bounds = cljs.core.get.call(null, map__13336__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var ___$1 = this;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = cljs.core.not_EQ_.call(null, next_components, self__.components);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var or__3558__auto____$1 = cljs.core.not_EQ_.call(null, next_filter_by_view, self__.filter_by_view);
            if (or__3558__auto____$1) {
              return or__3558__auto____$1;
            } else {
              var and__3546__auto__ = next_filter_by_view;
              if (cljs.core.truth_(and__3546__auto__)) {
                return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
              } else {
                return and__3546__auto__;
              }
            }
          }
        }())) {
          return om.core.update_BANG_.call(null, self__.filter_spec, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "compiled", "compiled", 850043082)], null), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, om.core._value, cljs.core.vals.call(null, next_components)))));
        } else {
          return null;
        }
      };
    }(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t13332.prototype.om$core$IRenderState$ = true;
    clustermap.components.filter.t13332.prototype.om$core$IRenderState$render_state$arity$2 = function(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_, state) {
        var self__ = this;
        var ___$1 = this;
        return clustermap.components.filter.render.call(null, self__.props, self__.owner, state);
      };
    }(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t13332.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_13334) {
        var self__ = this;
        var _13334__$1 = this;
        return self__.meta13333;
      };
    }(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.t13332.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function(_13334, meta13333__$1) {
        var self__ = this;
        var _13334__$1 = this;
        return new clustermap.components.filter.t13332(self__.filter_component, self__.p__13321, self__.owner, self__.filter_by_view, self__.props, self__.filter_spec, self__.compiled, self__.map__13330, self__.bounds, self__.map__13331, self__.components, meta13333__$1);
      };
    }(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds);
    clustermap.components.filter.__GT_t13332 = function(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds) {
      return function __GT_t13332(filter_component__$1, p__13321__$1, owner__$1, filter_by_view__$1, props__$1, filter_spec__$1, compiled__$1, map__13330__$2, bounds__$1, map__13331__$2, components__$1, meta13333) {
        return new clustermap.components.filter.t13332(filter_component__$1, p__13321__$1, owner__$1, filter_by_view__$1, props__$1, filter_spec__$1, compiled__$1, map__13330__$2, bounds__$1, map__13331__$2, components__$1, meta13333);
      };
    }(map__13330, map__13330__$1, props, map__13331, map__13331__$1, filter_spec, components, filter_by_view, compiled, bounds);
  }
  return new clustermap.components.filter.t13332(filter_component, p__13321, owner, filter_by_view, props, filter_spec, compiled, map__13330__$1, bounds, map__13331__$1, components, null);
};
goog.provide("clustermap.components.mount");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
clustermap.components.mount.make_sequential = function make_sequential(v) {
  if (v == null) {
    return null;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, v)) {
      return v;
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null);
    }
  }
};
clustermap.components.mount.extract_paths_STAR_ = function extract_paths_STAR_(path, paths, cursor) {
  var _STAR_read_enabled_STAR_13872 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (cljs.core.truth_(function() {
      var and__3546__auto__ = path;
      if (cljs.core.truth_(and__3546__auto__)) {
        return paths;
      } else {
        return and__3546__auto__;
      }
    }())) {
      throw cljs.core.ex_info.call(null, cljs.core.print_str.call(null, "can't give both :path and :paths : ", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "paths", "paths", -1807389588), paths], null)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "paths", "paths", -1807389588), paths], null));
    } else {
      if (cljs.core.truth_(path)) {
        return cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path));
      } else {
        if (paths == null) {
          return cursor;
        } else {
          if (cljs.core.sequential_QMARK_.call(null, paths)) {
            var iter__4283__auto__ = function(_STAR_read_enabled_STAR_13872) {
              return function iter__13873(s__13874) {
                return new cljs.core.LazySeq(null, function(_STAR_read_enabled_STAR_13872) {
                  return function() {
                    var s__13874__$1 = s__13874;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__13874__$1);
                      if (temp__4126__auto__) {
                        var s__13874__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__13874__$2)) {
                          var c__4281__auto__ = cljs.core.chunk_first.call(null, s__13874__$2);
                          var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                          var b__13876 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                          if (function() {
                            var i__13875 = 0;
                            while (true) {
                              if (i__13875 < size__4282__auto__) {
                                var path__$1 = cljs.core._nth.call(null, c__4281__auto__, i__13875);
                                cljs.core.chunk_append.call(null, b__13876, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1)));
                                var G__13885 = i__13875 + 1;
                                i__13875 = G__13885;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13876), iter__13873.call(null, cljs.core.chunk_rest.call(null, s__13874__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13876), null);
                          }
                        } else {
                          var path__$1 = cljs.core.first.call(null, s__13874__$2);
                          return cljs.core.cons.call(null, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1)), iter__13873.call(null, cljs.core.rest.call(null, s__13874__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(_STAR_read_enabled_STAR_13872), null, null);
              };
            }(_STAR_read_enabled_STAR_13872);
            return iter__4283__auto__.call(null, paths);
          } else {
            if (cljs.core.map_QMARK_.call(null, paths)) {
              return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                var iter__4283__auto__ = function(_STAR_read_enabled_STAR_13872) {
                  return function iter__13877(s__13878) {
                    return new cljs.core.LazySeq(null, function(_STAR_read_enabled_STAR_13872) {
                      return function() {
                        var s__13878__$1 = s__13878;
                        while (true) {
                          var temp__4126__auto__ = cljs.core.seq.call(null, s__13878__$1);
                          if (temp__4126__auto__) {
                            var s__13878__$2 = temp__4126__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__13878__$2)) {
                              var c__4281__auto__ = cljs.core.chunk_first.call(null, s__13878__$2);
                              var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                              var b__13880 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                              if (function() {
                                var i__13879 = 0;
                                while (true) {
                                  if (i__13879 < size__4282__auto__) {
                                    var vec__13883 = cljs.core._nth.call(null, c__4281__auto__, i__13879);
                                    var key = cljs.core.nth.call(null, vec__13883, 0, null);
                                    var path__$1 = cljs.core.nth.call(null, vec__13883, 1, null);
                                    cljs.core.chunk_append.call(null, b__13880, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1))], null));
                                    var G__13886 = i__13879 + 1;
                                    i__13879 = G__13886;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13880), iter__13877.call(null, cljs.core.chunk_rest.call(null, s__13878__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13880), null);
                              }
                            } else {
                              var vec__13884 = cljs.core.first.call(null, s__13878__$2);
                              var key = cljs.core.nth.call(null, vec__13884, 0, null);
                              var path__$1 = cljs.core.nth.call(null, vec__13884, 1, null);
                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.get_in.call(null, cursor, clustermap.components.mount.make_sequential.call(null, path__$1))], null), iter__13877.call(null, cljs.core.rest.call(null, s__13878__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(_STAR_read_enabled_STAR_13872), null, null);
                  };
                }(_STAR_read_enabled_STAR_13872);
                return iter__4283__auto__.call(null, paths);
              }());
            } else {
              throw cljs.core.ex_info.call(null, cljs.core.print_str.call(null, "what are those paths ? :", paths), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "paths", "paths", -1807389588), paths], null));
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_13872;
  }
};
clustermap.components.mount.extract_paths = function extract_paths(cname, path, paths, cursor) {
  var x = clustermap.components.mount.extract_paths_STAR_.call(null, path, paths, cursor);
  if (cljs.core.truth_(x)) {
    return x;
  } else {
    console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["WARNING: nil cursor", cname, path, paths], null)));
    return null;
  }
};
clustermap.components.mount.mount = function() {
  var mount__delegate = function(cname, f, value, p__13887) {
    var map__13889 = p__13887;
    var map__13889__$1 = cljs.core.seq_QMARK_.call(null, map__13889) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13889) : map__13889;
    var options = map__13889__$1;
    var paths = cljs.core.get.call(null, map__13889__$1, new cljs.core.Keyword(null, "paths", "paths", -1807389588));
    var path = cljs.core.get.call(null, map__13889__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
    var target = cljs.core.get.call(null, map__13889__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
    var target__$1 = typeof target === "string" || target instanceof cljs.core.Keyword ? document.getElementById(cljs.core.name.call(null, target)) : target;
    var cursor_fn = cljs.core.partial.call(null, clustermap.components.mount.extract_paths, cname, path, paths);
    var options__$1 = cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "paths", "paths", -1807389588)), new cljs.core.Keyword(null, "target", "target", 253001721), target__$1), new cljs.core.Keyword(null, "fn", "fn", -1175266204), cursor_fn);
    return om.core.root.call(null, f, value, options__$1);
  };
  var mount = function(cname, f, value, var_args) {
    var p__13887 = null;
    if (arguments.length > 3) {
      p__13887 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return mount__delegate.call(this, cname, f, value, p__13887);
  };
  mount.cljs$lang$maxFixedArity = 3;
  mount.cljs$lang$applyTo = function(arglist__13890) {
    var cname = cljs.core.first(arglist__13890);
    arglist__13890 = cljs.core.next(arglist__13890);
    var f = cljs.core.first(arglist__13890);
    arglist__13890 = cljs.core.next(arglist__13890);
    var value = cljs.core.first(arglist__13890);
    var p__13887 = cljs.core.rest(arglist__13890);
    return mount__delegate(cname, f, value, p__13887);
  };
  mount.cljs$core$IFn$_invoke$arity$variadic = mount__delegate;
  return mount;
}();
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj19116 = {};
  return obj19116;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = secretary.core.route_matches[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = secretary.core.route_matches["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj19118 = {};
  return obj19118;
}();
secretary.core.route_value = function route_value(this$) {
  if (function() {
    var and__3546__auto__ = this$;
    if (and__3546__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__3546__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4185__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3558__auto__ = secretary.core.route_value[goog.typeOf(x__4185__auto__)];
      if (or__3558__auto__) {
        return or__3558__auto__;
      } else {
        var or__3558__auto____$1 = secretary.core.route_value["_"];
        if (or__3558__auto____$1) {
          return or__3558__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj19120 = {};
  return obj19120;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = secretary.core.render_route[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = secretary.core.render_route["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3546__auto__ = this$;
      if (and__3546__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3546__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4185__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3558__auto__ = secretary.core.render_route[goog.typeOf(x__4185__auto__)];
        if (or__3558__auto__) {
          return or__3558__auto__;
        } else {
          var or__3558__auto____$1 = secretary.core.render_route["_"];
          if (or__3558__auto____$1) {
            return or__3558__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__4424__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4425__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4426__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4427__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4428__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("encode-pair", function(method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__, hierarchy__4428__auto__) {
    return function(p__19121) {
      var vec__19122 = p__19121;
      var k = cljs.core.nth.call(null, vec__19122, 0, null);
      var v = cljs.core.nth.call(null, vec__19122, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
      } else {
        if (function() {
          var or__3558__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__3558__auto__) {
            return or__3558__auto__;
          } else {
            var G__19124 = v;
            if (G__19124) {
              var bit__4208__auto__ = G__19124.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4208__auto__ || G__19124.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__19124.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__19124);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__19124);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
        } else {
          return null;
        }
      }
    };
  }(method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__, hierarchy__4428__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4428__auto__, method_table__4424__auto__, prefer_table__4425__auto__, method_cache__4426__auto__, cached_hierarchy__4427__auto__);
}();
secretary.core.key_index = function() {
  var key_index = null;
  var key_index__1 = function(k) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[]";
  };
  var key_index__2 = function(k, index) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "]";
  };
  key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return key_index__1.call(this, k);
      case 2:
        return key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  key_index.cljs$core$IFn$_invoke$arity$1 = key_index__1;
  key_index.cljs$core$IFn$_invoke$arity$2 = key_index__2;
  return key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__19125) {
  var vec__19126 = p__19125;
  var k = cljs.core.nth.call(null, vec__19126, 0, null);
  var v = cljs.core.nth.call(null, vec__19126, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__19126, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__19126, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__19127) {
  var vec__19128 = p__19127;
  var k = cljs.core.nth.call(null, vec__19128, 0, null);
  var v = cljs.core.nth.call(null, vec__19128, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__19128, k, v) {
    return function(p__19129) {
      var vec__19130 = p__19129;
      var ik = cljs.core.nth.call(null, vec__19130, 0, null);
      var iv = cljs.core.nth.call(null, vec__19130, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__19128, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__19131) {
  var vec__19132 = p__19131;
  var k = cljs.core.nth.call(null, vec__19132, 0, null);
  var v = cljs.core.nth.call(null, vec__19132, 1, null);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.encode.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)));
});
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__19135) {
      var vec__19136 = p__19135;
      var _ = cljs.core.nth.call(null, vec__19136, 0, null);
      var part = cljs.core.nth.call(null, vec__19136, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__19138 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__19138, 0, null);
  var key = cljs.core.nth.call(null, vec__19138, 1, null);
  var path = cljs.core.nth.call(null, vec__19138, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__19140 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__19140, 0, null);
      var v = cljs.core.nth.call(null, vec__19140, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + "\\" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__19144) {
    var vec__19145 = p__19144;
    var re = cljs.core.nth.call(null, vec__19145, 0, null);
    var action = cljs.core.nth.call(null, vec__19145, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__19146 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__19146, 0, null);
      var c = cljs.core.nth.call(null, vec__19146, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__19149 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__19149, 0, null);
      var vec__19150 = cljs.core.nth.call(null, vec__19149, 1, null);
      var r = cljs.core.nth.call(null, vec__19150, 0, null);
      var p = cljs.core.nth.call(null, vec__19150, 1, null);
      var G__19151 = s__$2;
      var G__19152 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r);
      var G__19153 = cljs.core.conj.call(null, params, p);
      s__$1 = G__19151;
      pattern = G__19152;
      params = G__19153;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + "$"), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__19159 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__19159, 0, null);
  var params = cljs.core.nth.call(null, vec__19159, 1, null);
  if (typeof secretary.core.t19160 !== "undefined") {
  } else {
    secretary.core.t19160 = function(params, re, vec__19159, clauses, orig_route, compile_route, meta19161) {
      this.params = params;
      this.re = re;
      this.vec__19159 = vec__19159;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta19161 = meta19161;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t19160.cljs$lang$type = true;
    secretary.core.t19160.cljs$lang$ctorStr = "secretary.core/t19160";
    secretary.core.t19160.cljs$lang$ctorPrWriter = function(clauses, vec__19159, re, params) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "secretary.core/t19160");
      };
    }(clauses, vec__19159, re, params);
    secretary.core.t19160.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t19160.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__19159, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__19163 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__19163, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__19163, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__19159, re, params);
    secretary.core.t19160.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t19160.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__19159, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__19159, re, params);
    secretary.core.t19160.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__19159, re, params) {
      return function(_19162) {
        var self__ = this;
        var _19162__$1 = this;
        return self__.meta19161;
      };
    }(clauses, vec__19159, re, params);
    secretary.core.t19160.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__19159, re, params) {
      return function(_19162, meta19161__$1) {
        var self__ = this;
        var _19162__$1 = this;
        return new secretary.core.t19160(self__.params, self__.re, self__.vec__19159, self__.clauses, self__.orig_route, self__.compile_route, meta19161__$1);
      };
    }(clauses, vec__19159, re, params);
    secretary.core.__GT_t19160 = function(clauses, vec__19159, re, params) {
      return function __GT_t19160(params__$1, re__$1, vec__19159__$1, clauses__$1, orig_route__$1, compile_route__$1, meta19161) {
        return new secretary.core.t19160(params__$1, re__$1, vec__19159__$1, clauses__$1, orig_route__$1, compile_route__$1, meta19161);
      };
    }(clauses, vec__19159, re, params);
  }
  return new secretary.core.t19160(params, re, vec__19159, clauses, orig_route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__19165 = obj;
      if (G__19165) {
        var bit__4208__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3558__auto__ = bit__4208__auto__;
          if (cljs.core.truth_(or__3558__auto__)) {
            return or__3558__auto__;
          } else {
            return G__19165.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__19165.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__19165);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__19165);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__19166) {
    var obj = cljs.core.first(arglist__19166);
    var args = cljs.core.rest(arglist__19166);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__19169) {
      var vec__19170 = p__19169;
      var x = cljs.core.nth.call(null, vec__19170, 0, null);
      var _ = cljs.core.nth.call(null, vec__19170, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__19173) {
    var vec__19174 = p__19173;
    var compiled_route = cljs.core.nth.call(null, vec__19174, 0, null);
    var action = cljs.core.nth.call(null, vec__19174, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function prefix() {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)));
};
secretary.core.uri_without_prefix = function uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.prefix.call(null))), "");
};
secretary.core.uri_with_leading_slash = function uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(uri);
  }
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__19177 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__19177, 0, null);
  var query_string = cljs.core.nth.call(null, vec__19177, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__19178 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__19178__$1 = cljs.core.seq_QMARK_.call(null, map__19178) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19178) : map__19178;
  var params = cljs.core.get.call(null, map__19178__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action = cljs.core.get.call(null, map__19178__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var action__$1 = function() {
    var or__3558__auto__ = action;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__19181) {
    var vec__19182 = p__19181;
    var key = cljs.core.nth.call(null, vec__19182, 0, null);
    var validation = cljs.core.nth.call(null, vec__19182, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__19183, route) {
  var vec__19184 = p__19183;
  var route_string = cljs.core.nth.call(null, vec__19184, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__19184, 1);
  var vec__19185 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__19185, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__19185, 1);
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (secretary.core.params_valid_QMARK_.call(null, params, validations__$1)) {
    return params;
  } else {
    return null;
  }
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__19186 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__19186, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__19186, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__19187) {
  var vec__19188 = p__19187;
  var route_string = cljs.core.nth.call(null, vec__19188, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__19188, 1);
  var vec__19189 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__19189, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__19189, 1);
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__19190, params) {
  var vec__19191 = p__19190;
  var route_string = cljs.core.nth.call(null, vec__19191, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__19191, 1);
  var vec__19192 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__19192, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__19192, 1);
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__19193 = params;
  var map__19193__$1 = cljs.core.seq_QMARK_.call(null, map__19193) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19193) : map__19193;
  var m = map__19193__$1;
  var query_params = cljs.core.get.call(null, map__19193__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__19193, map__19193__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__19193, map__19193__$1, m, query_params, a));
  var path__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path);
  var temp__4124__auto__ = function() {
    var and__3546__auto__ = query_params;
    if (cljs.core.truth_(and__3546__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3546__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var query_string = temp__4124__auto__;
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path__$1) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_string);
  } else {
    return path__$1;
  }
};
goog.provide("clustermap.components.color_scale");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.formats.color");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.formats.color");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.color_scale.color_scale_component = function color_scale_component(threshold_colors, owner) {
  if (typeof clustermap.components.color_scale.t13134 !== "undefined") {
  } else {
    clustermap.components.color_scale.t13134 = function(owner, threshold_colors, color_scale_component, meta13135) {
      this.owner = owner;
      this.threshold_colors = threshold_colors;
      this.color_scale_component = color_scale_component;
      this.meta13135 = meta13135;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.color_scale.t13134.cljs$lang$type = true;
    clustermap.components.color_scale.t13134.cljs$lang$ctorStr = "clustermap.components.color-scale/t13134";
    clustermap.components.color_scale.t13134.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
      return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.color-scale/t13134");
    };
    clustermap.components.color_scale.t13134.prototype.om$core$IRender$ = true;
    clustermap.components.color_scale.t13134.prototype.om$core$IRender$render$arity$1 = function(this__9504__auto__) {
      var self__ = this;
      var this__9504__auto____$1 = this;
      return React.DOM.div({"className":"color-scale"}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-row"}, cljs.core.into_array.call(null, function() {
        var iter__4283__auto__ = function(this__9504__auto____$1) {
          return function iter__13137(s__13138) {
            return new cljs.core.LazySeq(null, function(this__9504__auto____$1) {
              return function() {
                var s__13138__$1 = s__13138;
                while (true) {
                  var temp__4126__auto__ = cljs.core.seq.call(null, s__13138__$1);
                  if (temp__4126__auto__) {
                    var s__13138__$2 = temp__4126__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__13138__$2)) {
                      var c__4281__auto__ = cljs.core.chunk_first.call(null, s__13138__$2);
                      var size__4282__auto__ = cljs.core.count.call(null, c__4281__auto__);
                      var b__13140 = cljs.core.chunk_buffer.call(null, size__4282__auto__);
                      if (function() {
                        var i__13139 = 0;
                        while (true) {
                          if (i__13139 < size__4282__auto__) {
                            var vec__13143 = cljs.core._nth.call(null, c__4281__auto__, i__13139);
                            var threshold = cljs.core.nth.call(null, vec__13143, 0, null);
                            var color = cljs.core.nth.call(null, vec__13143, 1, null);
                            cljs.core.chunk_append.call(null, b__13140, React.DOM.div({"className":"tbl-cell", "style":{"backgroundColor":color, "color":clustermap.formats.color.stand_out_color.call(null, color)}}, sablono.interpreter.interpret.call(null, clustermap.formats.money.readable.call(null, threshold, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "", new cljs.core.Keyword(null, "default", "default", -1987822328), ""))));
                            var G__13145 = i__13139 + 1;
                            i__13139 = G__13145;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13140), iter__13137.call(null, cljs.core.chunk_rest.call(null, s__13138__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13140), null);
                      }
                    } else {
                      var vec__13144 = cljs.core.first.call(null, s__13138__$2);
                      var threshold = cljs.core.nth.call(null, vec__13144, 0, null);
                      var color = cljs.core.nth.call(null, vec__13144, 1, null);
                      return cljs.core.cons.call(null, React.DOM.div({"className":"tbl-cell", "style":{"backgroundColor":color, "color":clustermap.formats.color.stand_out_color.call(null, color)}}, sablono.interpreter.interpret.call(null, clustermap.formats.money.readable.call(null, threshold, new cljs.core.Keyword(null, "sf", "sf", -1949491738), 2, new cljs.core.Keyword(null, "curr", "curr", -1092372808), "", new cljs.core.Keyword(null, "default", "default", -1987822328), ""))), iter__13137.call(null, 
                      cljs.core.rest.call(null, s__13138__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(this__9504__auto____$1), null, null);
          };
        }(this__9504__auto____$1);
        return iter__4283__auto__.call(null, self__.threshold_colors);
      }()))));
    };
    clustermap.components.color_scale.t13134.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13136) {
      var self__ = this;
      var _13136__$1 = this;
      return self__.meta13135;
    };
    clustermap.components.color_scale.t13134.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13136, meta13135__$1) {
      var self__ = this;
      var _13136__$1 = this;
      return new clustermap.components.color_scale.t13134(self__.owner, self__.threshold_colors, self__.color_scale_component, meta13135__$1);
    };
    clustermap.components.color_scale.__GT_t13134 = function __GT_t13134(owner__$1, threshold_colors__$1, color_scale_component__$1, meta13135) {
      return new clustermap.components.color_scale.t13134(owner__$1, threshold_colors__$1, color_scale_component__$1, meta13135);
    };
  }
  return new clustermap.components.color_scale.t13134(owner, threshold_colors, color_scale_component, null);
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if (specials.indexOf(query.slice(-1)) >= 0) {
      query += " * ";
    } else {
      query += " ";
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e));
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if (inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if (specials.indexOf(tv) < 0) {
          currentPart.tag = tv;
        } else {
          currentPart.oper = tv;
        }
        inTag = -1;
      }
    };
    var endId = function() {
      if (inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1;
      }
    };
    var endClass = function() {
      if (inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1;
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass();
    };
    var endPart = function() {
      endAll();
      if (inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)});
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if (currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase();
      }
      if (queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query;
      }
      queryParts.push(currentPart);
      currentPart = null;
    };
    for (;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if (lc == "\\") {
        continue;
      }
      if (!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag;
        }};
        inTag = x;
      }
      if (inBrackets >= 0) {
        if (cc == "]") {
          if (!cp.attr) {
            cp.attr = ts(inBrackets + 1, x);
          } else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x);
          }
          var cmf = cp.matchFor;
          if (cmf) {
            if (cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1);
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1;
        } else {
          if (cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1;
          }
        }
      } else {
        if (inParens >= 0) {
          if (cc == ")") {
            if (inPseudo >= 0) {
              cp.value = ts(inParens + 1, x);
            }
            inPseudo = inParens = -1;
          }
        } else {
          if (cc == "#") {
            endAll();
            inId = x + 1;
          } else {
            if (cc == ".") {
              endAll();
              inClass = x;
            } else {
              if (cc == ":") {
                endAll();
                inPseudo = x;
              } else {
                if (cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {};
                } else {
                  if (cc == "(") {
                    if (inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp);
                    }
                    inParens = x;
                  } else {
                    if (cc == " " && lc != cc) {
                      endPart();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts;
  };
  var agree = function(first, second) {
    if (!first) {
      return second;
    }
    if (!second) {
      return first;
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments);
    };
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if (i) {
      r.push(i);
    }
    return r;
  }
  var isElement = function(n) {
    return 1 == n.nodeType;
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if (!elem) {
      return blank;
    }
    if (attr == "class") {
      return elem.className || blank;
    }
    if (attr == "for") {
      return elem.htmlFor || blank;
    }
    if (attr == "style") {
      return elem.style.cssText || blank;
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank;
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0;
    };
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0;
    };
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length;
    };
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0;
    };
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0;
    };
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value;
    };
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while (node = node[pSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var _lookRight = function(node) {
    while (node = node[nSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if (!tret) {
      return-1;
    }
    var l = tret.length;
    if (cl == l && ci >= 0 && cl >= 0) {
      return ci;
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for (;te;te = te[nSibling]) {
      if (simpleNodeTest(te)) {
        te["_i"] = ++i;
        if (node === te) {
          ci = i;
        }
      }
    }
    return ci;
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2);
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2;
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"];
    };
  }, "first-child":function() {
    return _lookLeft;
  }, "last-child":function() {
    return _lookRight;
  }, "only-child":function(name, condition) {
    return function(node) {
      if (!_lookLeft(node)) {
        return false;
      }
      if (!_lookRight(node)) {
        return false;
      }
      return true;
    };
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for (var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if (nt === 1 || nt == 3) {
          return false;
        }
      }
      return true;
    };
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if (cz == '"' || cz == "'") {
      condition = condition.slice(1, -1);
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0;
    };
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if (p.tag != "*") {
      ignores.tag = 1;
    }
    if (!p.classes.length) {
      ignores.classes = 1;
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem);
    };
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10);
    }
    if (condition == "odd") {
      return isOdd;
    } else {
      if (condition == "even") {
        return isEven;
      }
    }
    if (condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if (pred > 0) {
        if (idx < 0) {
          idx = idx % pred && pred + idx % pred;
        } else {
          if (idx > 0) {
            if (idx >= pred) {
              lb = idx - idx % pred;
            }
            idx = idx % pred;
          }
        }
      } else {
        if (pred < 0) {
          pred *= -1;
          if (idx > 0) {
            ub = idx;
            idx = idx % pred;
          }
        }
      }
      if (pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx;
        };
      } else {
        condition = idx;
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount;
    };
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if (clc == "class") {
      cond = "className";
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc];
    };
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond);
    };
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if (!query) {
      return goog.functions.TRUE;
    }
    ignores = ignores || {};
    var ff = null;
    if (!ignores.el) {
      ff = agree(ff, isElement);
    }
    if (!ignores.tag) {
      if (query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag();
        });
      }
    }
    if (!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className);
        });
        ff.count = idx;
      });
    }
    if (!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if (pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value));
        }
      });
    }
    if (!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if (attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor);
        } else {
          if (a.length) {
            matcher = defaultGetter(a);
          }
        }
        if (matcher) {
          ff = agree(ff, matcher);
        }
      });
    }
    if (!ignores.id) {
      if (query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id;
        });
      }
    }
    if (!ff) {
      if (!("default" in ignores)) {
        ff = goog.functions.TRUE;
      }
    }
    return ff;
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while (node = node[nSibling]) {
        if (noNextElementSibling && !isElement(node)) {
          continue;
        }
        if ((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node);
        }
        break;
      }
      return ret;
    };
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while (te) {
        if (simpleNodeTest(te)) {
          if (bag && !_isUnique(te, bag)) {
            break;
          }
          if (filterFunc(te)) {
            ret.push(te);
          }
        }
        te = te[nSibling];
      }
      return ret;
    };
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while (te = tret[x++]) {
        if (simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te);
        }
      }
      return ret;
    };
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while (pn) {
      if (pn == root) {
        break;
      }
      pn = pn.parentNode;
    }
    return!!pn;
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if (retFunc) {
      return retFunc;
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if (!oper) {
      if (query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if (!te || !filterFunc(te)) {
            return;
          }
          if (9 == root.nodeType) {
            return getArr(te, arr);
          } else {
            if (_isDescendant(te, root)) {
              return getArr(te, arr);
            }
          }
        };
      } else {
        if (ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while (te = tret[x++]) {
              if (filterFunc(te, root)) {
                ret.push(te);
              }
            }
            return ret;
          };
        } else {
          if (!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                ret.push(te);
              }
              return ret;
            };
          } else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                if (filterFunc(te, root)) {
                  ret.push(te);
                }
              }
              return ret;
            };
          }
        }
      }
    } else {
      var skipFilters = {el:1};
      if (wildcardTag) {
        skipFilters.tag = 1;
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if ("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc);
      } else {
        if ("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc);
        } else {
          if ("\x3e" == oper) {
            retFunc = _childElements(filterFunc);
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc;
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for (var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if (x > 0) {
        bag = {};
        ret.nozip = true;
      }
      var gef = getElementsFunc(qp);
      for (var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag);
      }
      if (!ret.length) {
        break;
      }
      candidates = ret;
    }
    return ret;
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if (qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if (r) {
          r.nozip = true;
        }
        return r;
      };
    }
    return function(root) {
      return filterDown(root, qparts);
    };
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if (qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if (qsaCached && !opt_forceDOM) {
        return qsaCached;
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if (domCached) {
      return domCached;
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if (query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true;
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1;
    if (useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if (!(9 == root.nodeType || nospace)) {
            throw "";
          }
          var r = root[qsa](tq);
          if (goog.userAgent.IE) {
            r.commentStrip = true;
          } else {
            r.nozip = true;
          }
          return r;
        } catch (e) {
          return getQueryFunc(query, true)(root);
        }
      };
    } else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while (tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root));
        }
        return ret;
      };
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if (caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx;
    } else {
      return node.uniqueID;
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx);
  };
  var _isUnique = function(node, bag) {
    if (!bag) {
      return 1;
    }
    var id = _nodeUID(node);
    if (!bag[id]) {
      return bag[id] = 1;
    }
    return 0;
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if (arr && arr.nozip) {
      return arr;
    }
    var ret = [];
    if (!arr || !arr.length) {
      return ret;
    }
    if (arr[0]) {
      ret.push(arr[0]);
    }
    if (arr.length < 2) {
      return ret;
    }
    _zipIdx++;
    if (goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for (var x = 1, te;te = arr[x];x++) {
        if (arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te);
        }
        te.setAttribute(_zipIdxName, szidx);
      }
    } else {
      if (goog.userAgent.IE && arr.commentStrip) {
        try {
          for (var x = 1, te;te = arr[x];x++) {
            if (isElement(te)) {
              ret.push(te);
            }
          }
        } catch (e) {
        }
      } else {
        if (arr[0]) {
          arr[0][_zipIdxName] = _zipIdx;
        }
        for (var x = 1, te;te = arr[x];x++) {
          if (arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te);
          }
          te[_zipIdxName] = _zipIdx;
        }
      }
    }
    return ret;
  };
  var query = function(query, root) {
    if (!query) {
      return[];
    }
    if (query.constructor == Array) {
      return(query);
    }
    if (!goog.isString(query)) {
      return[query];
    }
    if (goog.isString(root)) {
      root = goog.dom.getElement(root);
      if (!root) {
        return[];
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if (r && r.nozip) {
      return r;
    }
    return _zip(r);
  };
  query.pseudos = pseudos;
  return query;
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr);
  };
  var sel__2 = function(base, expr) {
    if (typeof domina.css.t20001 !== "undefined") {
    } else {
      domina.css.t20001 = function(expr, base, sel, meta20002) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta20002 = meta20002;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.css.t20001.cljs$lang$type = true;
      domina.css.t20001.cljs$lang$ctorStr = "domina.css/t20001";
      domina.css.t20001.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "domina.css/t20001");
      };
      domina.css.t20001.prototype.domina$DomContent$ = true;
      domina.css.t20001.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__19996_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__19996_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base));
      };
      domina.css.t20001.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__19997_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__19997_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base))));
      };
      domina.css.t20001.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20003) {
        var self__ = this;
        var _20003__$1 = this;
        return self__.meta20002;
      };
      domina.css.t20001.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20003, meta20002__$1) {
        var self__ = this;
        var _20003__$1 = this;
        return new domina.css.t20001(self__.expr, self__.base, self__.sel, meta20002__$1);
      };
      domina.css.__GT_t20001 = function __GT_t20001(expr__$1, base__$1, sel__$1, meta20002) {
        return new domina.css.t20001(expr__$1, base__$1, sel__$1, meta20002);
      };
    }
    return new domina.css.t20001(expr, base, sel, null);
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel;
}();
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3546__auto__)) {
      return doc.setProperty;
    } else {
      return and__3546__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      throw new Error("Could not find XPath support in this browser.");
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__20456 = i + 1;
        var G__20457 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__20456;
        acc = G__20457;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t20461 !== "undefined") {
    } else {
      domina.xpath.t20461 = function(expr, base, xpath, meta20462) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta20462 = meta20462;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t20461.cljs$lang$type = true;
      domina.xpath.t20461.cljs$lang$ctorStr = "domina.xpath/t20461";
      domina.xpath.t20461.cljs$lang$ctorPrWriter = function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "domina.xpath/t20461");
      };
      domina.xpath.t20461.prototype.domina$DomContent$ = true;
      domina.xpath.t20461.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
      };
      domina.xpath.t20461.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
      };
      domina.xpath.t20461.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20463) {
        var self__ = this;
        var _20463__$1 = this;
        return self__.meta20462;
      };
      domina.xpath.t20461.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20463, meta20462__$1) {
        var self__ = this;
        var _20463__$1 = this;
        return new domina.xpath.t20461(self__.expr, self__.base, self__.xpath, meta20462__$1);
      };
      domina.xpath.__GT_t20461 = function __GT_t20461(expr__$1, base__$1, xpath__$1, meta20462) {
        return new domina.xpath.t20461(expr__$1, base__$1, xpath__$1, meta20462);
      };
    }
    return new domina.xpath.t20461(expr, base, xpath, null);
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("clustermap.nav");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("cljs.core.async");
goog.require("domina.css");
goog.require("domina");
goog.require("jayq.core");
goog.require("domina");
goog.require("cljs.core.async");
goog.require("domina.events");
goog.require("domina.events");
goog.require("jayq.core");
goog.require("domina.css");
goog.require("domina.xpath");
goog.require("domina.xpath");
clustermap.nav.init_bootstrap_tooltips = function init_bootstrap_tooltips() {
  return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']").tooltip();
};
clustermap.nav.handle_toggle_nav_search = function handle_toggle_nav_search() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav .search \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(e) {
    var target = domina.events.target.call(null, e);
    var parent = domina.xpath.xpath.call(null, target, "..");
    domina.events.prevent_default.call(null, e);
    domina.toggle_class_BANG_.call(null, parent, "open");
    return jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, domina.css.sel.call(null, "#search")))).toggle();
  });
};
clustermap.nav.handle_hide_show_map_report = function handle_hide_show_map_report() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#map-report \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(e) {
    var target = domina.events.target.call(null, e);
    var mr = domina.css.sel.call(null, "#map-report");
    domina.events.prevent_default.call(null, e);
    if (cljs.core.truth_(domina.has_class_QMARK_.call(null, mr, "open"))) {
      domina.remove_class_BANG_.call(null, mr, "open");
      return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "-270px"], null), 400);
    } else {
      domina.add_class_BANG_.call(null, mr, "open");
      return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "0px"], null), 400);
    }
  });
};
clustermap.nav.body_view_classes = new cljs.core.PersistentArrayMap(null, 2, ["map", "view-map", "lists", "view-lists"], null);
clustermap.nav.change_view = function change_view(view) {
  if (cljs.core.truth_(cljs.core.get.call(null, clustermap.nav.body_view_classes, view))) {
  } else {
    throw new Error("unknown view: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view));
  }
  var body = domina.css.sel.call(null, "body");
  var target_selector = "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view);
  var target_li = domina.css.sel.call(null, target_selector);
  var ul = domina.xpath.xpath.call(null, target_li, "..");
  var active_li = domina.css.sel.call(null, ul, "\x3e .active");
  domina.remove_class_BANG_.call(null, active_li, "active");
  domina.add_class_BANG_.call(null, target_li, "active");
  var seq__14701_14707 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__14702_14708 = null;
  var count__14703_14709 = 0;
  var i__14704_14710 = 0;
  while (true) {
    if (i__14704_14710 < count__14703_14709) {
      var vec__14705_14711 = cljs.core._nth.call(null, chunk__14702_14708, i__14704_14710);
      var v_14712 = cljs.core.nth.call(null, vec__14705_14711, 0, null);
      var body_class_14713 = cljs.core.nth.call(null, vec__14705_14711, 1, null);
      if (cljs.core._EQ_.call(null, v_14712, view)) {
        domina.add_class_BANG_.call(null, body, body_class_14713);
      } else {
        domina.remove_class_BANG_.call(null, body, body_class_14713);
      }
      var G__14714 = seq__14701_14707;
      var G__14715 = chunk__14702_14708;
      var G__14716 = count__14703_14709;
      var G__14717 = i__14704_14710 + 1;
      seq__14701_14707 = G__14714;
      chunk__14702_14708 = G__14715;
      count__14703_14709 = G__14716;
      i__14704_14710 = G__14717;
      continue;
    } else {
      var temp__4126__auto___14718 = cljs.core.seq.call(null, seq__14701_14707);
      if (temp__4126__auto___14718) {
        var seq__14701_14719__$1 = temp__4126__auto___14718;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14701_14719__$1)) {
          var c__4314__auto___14720 = cljs.core.chunk_first.call(null, seq__14701_14719__$1);
          var G__14721 = cljs.core.chunk_rest.call(null, seq__14701_14719__$1);
          var G__14722 = c__4314__auto___14720;
          var G__14723 = cljs.core.count.call(null, c__4314__auto___14720);
          var G__14724 = 0;
          seq__14701_14707 = G__14721;
          chunk__14702_14708 = G__14722;
          count__14703_14709 = G__14723;
          i__14704_14710 = G__14724;
          continue;
        } else {
          var vec__14706_14725 = cljs.core.first.call(null, seq__14701_14719__$1);
          var v_14726 = cljs.core.nth.call(null, vec__14706_14725, 0, null);
          var body_class_14727 = cljs.core.nth.call(null, vec__14706_14725, 1, null);
          if (cljs.core._EQ_.call(null, v_14726, view)) {
            domina.add_class_BANG_.call(null, body, body_class_14727);
          } else {
            domina.remove_class_BANG_.call(null, body, body_class_14727);
          }
          var G__14728 = cljs.core.next.call(null, seq__14701_14719__$1);
          var G__14729 = null;
          var G__14730 = 0;
          var G__14731 = 0;
          seq__14701_14707 = G__14728;
          chunk__14702_14708 = G__14729;
          count__14703_14709 = G__14730;
          i__14704_14710 = G__14731;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return jayq.core.$.call(null, document).trigger("clustermap-change-view");
};
clustermap.nav.handle_view_switches = function handle_view_switches(comm) {
  var seq__14738 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__14739 = null;
  var count__14740 = 0;
  var i__14741 = 0;
  while (true) {
    if (i__14741 < count__14740) {
      var vec__14742 = cljs.core._nth.call(null, chunk__14739, i__14741);
      var v = cljs.core.nth.call(null, vec__14742, 0, null);
      var _ = cljs.core.nth.call(null, vec__14742, 1, null);
      domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(seq__14738, chunk__14739, count__14740, i__14741, vec__14742, v, _) {
        return function(e) {
          domina.events.prevent_default.call(null, e);
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", -1206699831), v], null));
        };
      }(seq__14738, chunk__14739, count__14740, i__14741, vec__14742, v, _));
      var G__14744 = seq__14738;
      var G__14745 = chunk__14739;
      var G__14746 = count__14740;
      var G__14747 = i__14741 + 1;
      seq__14738 = G__14744;
      chunk__14739 = G__14745;
      count__14740 = G__14746;
      i__14741 = G__14747;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__14738);
      if (temp__4126__auto__) {
        var seq__14738__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14738__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__14738__$1);
          var G__14748 = cljs.core.chunk_rest.call(null, seq__14738__$1);
          var G__14749 = c__4314__auto__;
          var G__14750 = cljs.core.count.call(null, c__4314__auto__);
          var G__14751 = 0;
          seq__14738 = G__14748;
          chunk__14739 = G__14749;
          count__14740 = G__14750;
          i__14741 = G__14751;
          continue;
        } else {
          var vec__14743 = cljs.core.first.call(null, seq__14738__$1);
          var v = cljs.core.nth.call(null, vec__14743, 0, null);
          var _ = cljs.core.nth.call(null, vec__14743, 1, null);
          domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1912301393), function(seq__14738, chunk__14739, count__14740, i__14741, vec__14743, v, _, seq__14738__$1, temp__4126__auto__) {
            return function(e) {
              domina.events.prevent_default.call(null, e);
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", -1206699831), v], null));
            };
          }(seq__14738, chunk__14739, count__14740, i__14741, vec__14743, v, _, seq__14738__$1, temp__4126__auto__));
          var G__14752 = cljs.core.next.call(null, seq__14738__$1);
          var G__14753 = null;
          var G__14754 = 0;
          var G__14755 = 0;
          seq__14738 = G__14752;
          chunk__14739 = G__14753;
          count__14740 = G__14754;
          i__14741 = G__14755;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.nav.init = function init(comm) {
  clustermap.nav.init_bootstrap_tooltips.call(null);
  clustermap.nav.handle_toggle_nav_search.call(null);
  clustermap.nav.handle_hide_show_map_report.call(null);
  return clustermap.nav.handle_view_switches.call(null, comm);
};
goog.provide("clustermap.components.page_title");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.page_title.describe_type = function describe_type(type) {
  var pred__13894 = cljs.core._EQ_;
  var expr__13895 = type;
  if (cljs.core.truth_(pred__13894.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__13895))) {
    return "Investor-backed company";
  } else {
    if (cljs.core.truth_(pred__13894.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__13895))) {
      return "Investor";
    } else {
      if (cljs.core.truth_(pred__13894.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__13895))) {
        return "Constituency";
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13895));
      }
    }
  }
};
clustermap.components.page_title.page_title_component = function page_title_component(p__13897, owner) {
  var map__13908 = p__13897;
  var map__13908__$1 = cljs.core.seq_QMARK_.call(null, map__13908) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13908) : map__13908;
  var selection = map__13908__$1;
  var value = cljs.core.get.call(null, map__13908__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var type = cljs.core.get.call(null, map__13908__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var map__13909 = om.core.get_shared.call(null, owner);
  var map__13909__$1 = cljs.core.seq_QMARK_.call(null, map__13909) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13909) : map__13909;
  var view_path_fn = cljs.core.get.call(null, map__13909__$1, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 630487502));
  var path_fn = cljs.core.get.call(null, map__13909__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
  var comm = cljs.core.get.call(null, map__13909__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", -884730684));
  var type_descr = function() {
    var G__13910 = selection;
    var G__13910__$1 = G__13910 == null ? null : (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__13910);
    var G__13910__$2 = G__13910__$1 == null ? null : clustermap.components.page_title.describe_type.call(null, G__13910__$1);
    return G__13910__$2;
  }();
  var name = function() {
    var G__13911 = selection;
    var G__13911__$1 = G__13911 == null ? null : (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(G__13911);
    var G__13911__$2 = G__13911__$1 == null ? null : (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(G__13911__$1);
    return G__13911__$2;
  }();
  var url = function() {
    var G__13912 = selection;
    var G__13912__$1 = G__13912 == null ? null : (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(G__13912);
    var G__13912__$2 = G__13912__$1 == null ? null : (new cljs.core.Keyword(null, "web_url", "web_url", 2107881046)).cljs$core$IFn$_invoke$arity$1(G__13912__$1);
    return G__13912__$2;
  }();
  if (typeof clustermap.components.page_title.t13913 !== "undefined") {
  } else {
    clustermap.components.page_title.t13913 = function(selection, owner, path_fn, type_descr, value, name, comm, page_title_component, type, view_path_fn, map__13909, p__13897, map__13908, url, meta13914) {
      this.selection = selection;
      this.owner = owner;
      this.path_fn = path_fn;
      this.type_descr = type_descr;
      this.value = value;
      this.name = name;
      this.comm = comm;
      this.page_title_component = page_title_component;
      this.type = type;
      this.view_path_fn = view_path_fn;
      this.map__13909 = map__13909;
      this.p__13897 = p__13897;
      this.map__13908 = map__13908;
      this.url = url;
      this.meta13914 = meta13914;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.page_title.t13913.cljs$lang$type = true;
    clustermap.components.page_title.t13913.cljs$lang$ctorStr = "clustermap.components.page-title/t13913";
    clustermap.components.page_title.t13913.cljs$lang$ctorPrWriter = function(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.page-title/t13913");
      };
    }(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type);
    clustermap.components.page_title.t13913.prototype.om$core$IRender$ = true;
    clustermap.components.page_title.t13913.prototype.om$core$IRender$render$arity$1 = function(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type) {
      return function(this__9504__auto__) {
        var self__ = this;
        var this__9504__auto____$1 = this;
        return React.DOM.div({"id":"page-title"}, React.DOM.a({"className":"btn btn-link", "href":self__.view_path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461))}, "View on map"), sablono.interpreter.interpret.call(null, cljs.core.truth_(self__.type_descr) ? clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn) : null), function() {
          var attrs13916 = function() {
            var or__3558__auto__ = self__.type_descr;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "All investor-backed companies";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h2, cljs.core.map_QMARK_.call(null, attrs13916) ? sablono.interpreter.attributes.call(null, attrs13916) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13916) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13916)], null)));
        }(), function() {
          var attrs13917 = function() {
            var or__3558__auto__ = self__.name;
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return "UK wide";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs13917) ? sablono.interpreter.attributes.call(null, attrs13917) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs13917) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324)) ? new cljs.core.PersistentVector(null, 
          6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 2133478704), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", -480607843)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 1372996762)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs13917), sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324)) ? new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 2133478704), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", -480607843)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 
          1372996762)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null)));
        }(), cljs.core.truth_(self__.url) ? React.DOM.a({"href":self__.url, "target":"_blank"}, sablono.interpreter.interpret.call(null, self__.url)) : null);
      };
    }(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type);
    clustermap.components.page_title.t13913.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type) {
      return function(_13915) {
        var self__ = this;
        var _13915__$1 = this;
        return self__.meta13914;
      };
    }(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type);
    clustermap.components.page_title.t13913.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type) {
      return function(_13915, meta13914__$1) {
        var self__ = this;
        var _13915__$1 = this;
        return new clustermap.components.page_title.t13913(self__.selection, self__.owner, self__.path_fn, self__.type_descr, self__.value, self__.name, self__.comm, self__.page_title_component, self__.type, self__.view_path_fn, self__.map__13909, self__.p__13897, self__.map__13908, self__.url, meta13914__$1);
      };
    }(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type);
    clustermap.components.page_title.__GT_t13913 = function(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type) {
      return function __GT_t13913(selection__$1, owner__$1, path_fn__$2, type_descr__$1, value__$1, name__$1, comm__$1, page_title_component__$1, type__$1, view_path_fn__$1, map__13909__$2, p__13897__$1, map__13908__$2, url__$1, meta13914) {
        return new clustermap.components.page_title.t13913(selection__$1, owner__$1, path_fn__$2, type_descr__$1, value__$1, name__$1, comm__$1, page_title_component__$1, type__$1, view_path_fn__$1, map__13909__$2, p__13897__$1, map__13908__$2, url__$1, meta13914);
      };
    }(map__13909, map__13909__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__13908, map__13908__$1, selection, value, type);
  }
  return new clustermap.components.page_title.t13913(selection, owner, path_fn__$1, type_descr, value, name, comm, page_title_component, type, view_path_fn, map__13909__$1, p__13897, map__13908__$1, url, null);
};
clustermap.components.page_title.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.om.burrow.call(null, clustermap.components.page_title.page_title_component, new cljs.core.Keyword(null, "selection", "selection", 975998651)), app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById(elem_id)], null));
};
goog.provide("clustermap.components.map");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("cljs.core.async");
goog.require("clustermap.boundarylines");
goog.require("clustermap.data.colorchooser");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("clustermap.ordered_resource");
goog.require("clustermap.boundarylines");
goog.require("jayq.core");
goog.require("clustermap.data.colorchooser");
goog.require("om.core");
goog.require("om.core");
goog.require("hiccups.runtime");
goog.require("clustermap.api");
goog.require("clustermap.ordered_resource");
clustermap.components.map.ticket = cljs.core.atom.call(null, 0);
clustermap.components.map.next_ticket = function next_ticket() {
  return cljs.core.swap_BANG_.call(null, clustermap.components.map.ticket, cljs.core.inc);
};
clustermap.components.map.bounds_array = function bounds_array(bounds) {
  if (bounds instanceof L.LatLngBounds) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bounds.getSouth(), bounds.getWest()], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bounds.getNorth(), bounds.getEast()], null)], null);
  } else {
    return bounds;
  }
};
clustermap.components.map.geojson_point_bounds = function geojson_point_bounds(longlats) {
  var s = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.last, longlats));
  var w = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.first, longlats));
  var n = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.last, longlats));
  var e = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.first, longlats));
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = s;
    if (cljs.core.truth_(and__3546__auto__)) {
      var and__3546__auto____$1 = w;
      if (cljs.core.truth_(and__3546__auto____$1)) {
        var and__3546__auto____$2 = n;
        if (cljs.core.truth_(and__3546__auto____$2)) {
          return e;
        } else {
          return and__3546__auto____$2;
        }
      } else {
        return and__3546__auto____$1;
      }
    } else {
      return and__3546__auto__;
    }
  }())) {
    return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, w], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, e], null)], null)));
  } else {
    return null;
  }
};
clustermap.components.map.locate_map = function locate_map(m, initial_bounds) {
  return m.fitBounds(cljs.core.clj__GT_js.call(null, initial_bounds), cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["paddingTopLeft", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), "paddingBottomRight", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null)));
};
clustermap.components.map.api_key = function() {
  var or__3558__auto__ = function() {
    var G__13582 = config;
    var G__13582__$1 = G__13582 == null ? null : G__13582.components;
    var G__13582__$2 = G__13582__$1 == null ? null : G__13582__$1.map;
    var G__13582__$3 = G__13582__$2 == null ? null : G__13582__$2.api_key;
    return G__13582__$3;
  }();
  if (cljs.core.truth_(or__3558__auto__)) {
    return or__3558__auto__;
  } else {
    return "mccraigmccraig.h4f921b9";
  }
}();
clustermap.components.map.create_map = function create_map(id_or_el, initial_bounds) {
  var m = L.map.call(null, id_or_el, {"maxZoom":19, "zoomControl":false});
  var tiles = L.mapbox.tileLayer.call(null, clustermap.components.map.api_key, {"detectRetina":cljs.core.not.call(null, config.repl)});
  var zoom = L.control.zoom.call(null, {"position":"bottomright"});
  m.addLayer(tiles);
  m.addControl(zoom);
  clustermap.components.map.locate_map.call(null, m, initial_bounds);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", -132492747), m, new cljs.core.Keyword(null, "markers", "markers", -246919693), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "paths", "paths", -1807389588), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "path-selections", "path-selections", -1495179033), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY)], 
  null);
};
clustermap.components.map.pan_to_show = function() {
  var pan_to_show__delegate = function(m, all_bounds) {
    if (cljs.core.truth_(cljs.core.not_empty.call(null, all_bounds))) {
      var fb = cljs.core.first.call(null, all_bounds);
      var fb_copy = new L.LatLngBounds(fb.getSouthWest(), fb.getNorthEast());
      var super_bounds = cljs.core.reduce.call(null, function(fb, fb_copy) {
        return function(sb, bounds) {
          return sb.extend(bounds);
        };
      }(fb, fb_copy), fb_copy, cljs.core.rest.call(null, all_bounds));
      return m.fitBounds(super_bounds);
    } else {
      return null;
    }
  };
  var pan_to_show = function(m, var_args) {
    var all_bounds = null;
    if (arguments.length > 1) {
      all_bounds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pan_to_show__delegate.call(this, m, all_bounds);
  };
  pan_to_show.cljs$lang$maxFixedArity = 1;
  pan_to_show.cljs$lang$applyTo = function(arglist__13583) {
    var m = cljs.core.first(arglist__13583);
    var all_bounds = cljs.core.rest(arglist__13583);
    return pan_to_show__delegate(m, all_bounds);
  };
  pan_to_show.cljs$core$IFn$_invoke$arity$variadic = pan_to_show__delegate;
  return pan_to_show;
}();
clustermap.components.map.marker_popup_content = function marker_popup_content(path_fn, location_sites) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs13585 = cljs.core.map.call(null, function(site) {
      return "\x3cli\x3e\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), site), new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), 
      null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(site))) + "\x3c/a\x3e\x3c/li\x3e";
    }, location_sites);
    if (cljs.core.map_QMARK_.call(null, attrs13585)) {
      return "\x3cul" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), "map-marker-popup-location-list"], null), attrs13585))) + "\x3e\x3c/ul\x3e";
    } else {
      return'\x3cul class\x3d"map-marker-popup-location-list"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs13585)) + "\x3c/ul\x3e";
    }
  }());
};
clustermap.components.map.create_marker = function create_marker(path_fn, leaflet_map, location_sites) {
  var temp__4124__auto__ = function() {
    var G__13588 = location_sites;
    var G__13588__$1 = G__13588 == null ? null : cljs.core.first.call(null, G__13588);
    var G__13588__$2 = G__13588__$1 == null ? null : (new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(G__13588__$1);
    var G__13588__$3 = G__13588__$2 == null ? null : cljs.core.reverse.call(null, G__13588__$2);
    var G__13588__$4 = G__13588__$3 == null ? null : cljs.core.clj__GT_js.call(null, G__13588__$3);
    return G__13588__$4;
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var latlong = temp__4124__auto__;
    var icon = L.divIcon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", -1983287057), "map-marker", new cljs.core.Keyword(null, "iconSize", "iconSize", 253109071), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [24, 28], null), new cljs.core.Keyword(null, "iconAnchor", "iconAnchor", 970343173), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 14], 
    null), new cljs.core.Keyword(null, "popupAnchor", "popupAnchor", 931949236), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -8], null)], null)));
    var marker = L.marker(latlong, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "icon", "icon", 1679606541), icon], null)));
    var popup_content = clustermap.components.map.marker_popup_content.call(null, path_fn, location_sites);
    marker.bindPopup(popup_content);
    marker.addTo(leaflet_map);
    return marker;
  } else {
    return console.log("missing location: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var sb__4485__auto__ = new goog.string.StringBuffer;
      var _STAR_print_fn_STAR_13589_13590 = cljs.core._STAR_print_fn_STAR_;
      try {
        cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_fn_STAR_13589_13590, sb__4485__auto__, temp__4124__auto__) {
          return function(x__4486__auto__) {
            return sb__4485__auto__.append(x__4486__auto__);
          };
        }(_STAR_print_fn_STAR_13589_13590, sb__4485__auto__, temp__4124__auto__);
        cljs.core.pr.call(null, location_sites);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_13589_13590;
      }
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4485__auto__);
    }()));
  }
};
clustermap.components.map.update_marker = function update_marker(path_fn, leaflet_map, marker, location) {
  marker.setPopupContent(clustermap.components.map.marker_popup_content.call(null, path_fn, location));
  return marker;
};
clustermap.components.map.remove_marker = function remove_marker(leaflet_map, marker) {
  return leaflet_map.removeLayer(marker);
};
clustermap.components.map.update_markers = function update_markers(path_fn, leaflet_map, markers_atom, new_locations) {
  var markers = cljs.core.deref.call(null, markers_atom);
  var marker_keys = cljs.core.set.call(null, cljs.core.keys.call(null, markers));
  var location_keys = cljs.core.set.call(null, cljs.core.keys.call(null, new_locations));
  var _ = console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, location_keys), location_keys], null)));
  var update_marker_keys = clojure.set.intersection.call(null, marker_keys, location_keys);
  var new_marker_keys = clojure.set.difference.call(null, location_keys, marker_keys);
  var remove_marker_keys = clojure.set.difference.call(null, marker_keys, location_keys);
  var new_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.create_marker.call(null, path_fn, leaflet_map, cljs.core.get_in.call(null, new_locations, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "records", "records", 1326822832)], null)))], null);
    };
  }(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys), new_marker_keys));
  var updated_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.update_marker.call(null, path_fn, leaflet_map, cljs.core.get.call(null, markers, k), cljs.core.get_in.call(null, new_locations, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.Keyword(null, "records", "records", 1326822832)], null)))], null);
    };
  }(markers, marker_keys, location_keys, _, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers), update_marker_keys));
  var ___$1 = function() {
    var seq__13595 = cljs.core.seq.call(null, remove_marker_keys);
    var chunk__13596 = null;
    var count__13597 = 0;
    var i__13598 = 0;
    while (true) {
      if (i__13598 < count__13597) {
        var k = cljs.core._nth.call(null, chunk__13596, i__13598);
        clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
        var G__13599 = seq__13595;
        var G__13600 = chunk__13596;
        var G__13601 = count__13597;
        var G__13602 = i__13598 + 1;
        seq__13595 = G__13599;
        chunk__13596 = G__13600;
        count__13597 = G__13601;
        i__13598 = G__13602;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__13595);
        if (temp__4126__auto__) {
          var seq__13595__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13595__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__13595__$1);
            var G__13603 = cljs.core.chunk_rest.call(null, seq__13595__$1);
            var G__13604 = c__4314__auto__;
            var G__13605 = cljs.core.count.call(null, c__4314__auto__);
            var G__13606 = 0;
            seq__13595 = G__13603;
            chunk__13596 = G__13604;
            count__13597 = G__13605;
            i__13598 = G__13606;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__13595__$1);
            clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
            var G__13607 = cljs.core.next.call(null, seq__13595__$1);
            var G__13608 = null;
            var G__13609 = 0;
            var G__13610 = 0;
            seq__13595 = G__13607;
            chunk__13596 = G__13608;
            count__13597 = G__13609;
            i__13598 = G__13610;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  return cljs.core.reset_BANG_.call(null, markers_atom, cljs.core.merge.call(null, updated_markers, new_markers));
};
clustermap.components.map.postgis_envelope__GT_latlngbounds = function postgis_envelope__GT_latlngbounds(envelope) {
  var map__13619 = cljs.core.js__GT_clj.call(null, envelope);
  var map__13619__$1 = cljs.core.seq_QMARK_.call(null, map__13619) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13619) : map__13619;
  var clj_envelope = map__13619__$1;
  var vec__13620 = cljs.core.get.call(null, map__13619__$1, "coordinates");
  var vec__13621 = cljs.core.nth.call(null, vec__13620, 0, null);
  var vec__13622 = cljs.core.nth.call(null, vec__13621, 0, null);
  var miny0 = cljs.core.nth.call(null, vec__13622, 0, null);
  var minx0 = cljs.core.nth.call(null, vec__13622, 1, null);
  var vec__13623 = cljs.core.nth.call(null, vec__13621, 1, null);
  var maxy1 = cljs.core.nth.call(null, vec__13623, 0, null);
  var minx1 = cljs.core.nth.call(null, vec__13623, 1, null);
  var vec__13624 = cljs.core.nth.call(null, vec__13621, 2, null);
  var maxy2 = cljs.core.nth.call(null, vec__13624, 0, null);
  var maxx2 = cljs.core.nth.call(null, vec__13624, 1, null);
  var vec__13625 = cljs.core.nth.call(null, vec__13621, 3, null);
  var miny3 = cljs.core.nth.call(null, vec__13625, 0, null);
  var maxx3 = cljs.core.nth.call(null, vec__13625, 1, null);
  var vec__13626 = cljs.core.nth.call(null, vec__13621, 4, null);
  var miny4 = cljs.core.nth.call(null, vec__13626, 0, null);
  var minx4 = cljs.core.nth.call(null, vec__13626, 1, null);
  var inner = vec__13621;
  var coords = vec__13620;
  return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [minx0, miny0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [maxx2, maxy2], null)], null)));
};
clustermap.components.map.style_leaflet_path = function style_leaflet_path(leaflet_path, p__13627) {
  var map__13629 = p__13627;
  var map__13629__$1 = cljs.core.seq_QMARK_.call(null, map__13629) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13629) : map__13629;
  var fill_color = cljs.core.get.call(null, map__13629__$1, new cljs.core.Keyword(null, "fill-color", "fill-color", -1156875903));
  var highlighted = cljs.core.get.call(null, map__13629__$1, new cljs.core.Keyword(null, "highlighted", "highlighted", 1723498733));
  var selected = cljs.core.get.call(null, map__13629__$1, new cljs.core.Keyword(null, "selected", "selected", 574897764));
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = selected;
    if (cljs.core.truth_(and__3546__auto__)) {
      return highlighted;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#000000", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 2, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 1, new cljs.core.Keyword(null, "fill", "fill", 883462889), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 
    619211981), .6], null)));
  } else {
    if (cljs.core.truth_(selected)) {
      return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#8c2d04", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 1, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 1, new cljs.core.Keyword(null, "fill", "fill", 883462889), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 
      619211981), .6], null)));
    } else {
      if (cljs.core.truth_(highlighted)) {
        return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#000000", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 2, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 1, new cljs.core.Keyword(null, "fill", "fill", 883462889), false], null)));
      } else {
        return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#8c2d04", new cljs.core.Keyword(null, "fillColor", "fillColor", -176906116), fill_color, new cljs.core.Keyword(null, "weight", "weight", -1262796205), 1, new cljs.core.Keyword(null, "opacity", "opacity", 397153780), 0, new cljs.core.Keyword(null, "fill", "fill", 883462889), false, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 
        619211981), 0], null)));
      }
    }
  }
};
clustermap.components.map.create_path = function create_path(comm, leaflet_map, boundaryline_id, js_boundaryline, p__13630) {
  var map__13632 = p__13630;
  var map__13632__$1 = cljs.core.seq_QMARK_.call(null, map__13632) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13632) : map__13632;
  var path_attrs = map__13632__$1;
  var selected = cljs.core.get.call(null, map__13632__$1, new cljs.core.Keyword(null, "selected", "selected", 574897764));
  var tolerance = js_boundaryline["tolerance"];
  var bounds = clustermap.components.map.postgis_envelope__GT_latlngbounds.call(null, js_boundaryline["envelope"]);
  var leaflet_path = L.geoJson(js_boundaryline["geojson"]);
  clustermap.components.map.style_leaflet_path.call(null, leaflet_path, path_attrs);
  leaflet_path.addTo(leaflet_map);
  leaflet_path.on("click", function(tolerance, bounds, leaflet_path, map__13632, map__13632__$1, path_attrs, selected) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), boundaryline_id], null)], null));
    };
  }(tolerance, bounds, leaflet_path, map__13632, map__13632__$1, path_attrs, selected));
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), boundaryline_id, new cljs.core.Keyword(null, "tolerance", "tolerance", 406811818), tolerance, new cljs.core.Keyword(null, "selected", "selected", 574897764), selected, new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390), leaflet_path, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), bounds], null);
};
clustermap.components.map.fetch_create_path = function fetch_create_path(comm, leaflet_map, boundaryline_id, tolerance, js_boundaryline, path_attrs) {
  return clustermap.components.map.create_path.call(null, comm, leaflet_map, boundaryline_id, js_boundaryline, path_attrs);
};
clustermap.components.map.replace_path = function replace_path(comm, leaflet_map, boundaryline_id, old_path, js_boundaryline, path_attrs) {
  leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390)).cljs$core$IFn$_invoke$arity$1(old_path));
  return clustermap.components.map.create_path.call(null, comm, leaflet_map, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(old_path), js_boundaryline, path_attrs);
};
clustermap.components.map.update_path = function update_path(comm, leaflet_map, p__13633, tolerance, js_boundaryline, path_attrs) {
  var map__13635 = p__13633;
  var map__13635__$1 = cljs.core.seq_QMARK_.call(null, map__13635) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13635) : map__13635;
  var path = map__13635__$1;
  var boundaryline_id = cljs.core.get.call(null, map__13635__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  if (cljs.core.not_EQ_.call(null, tolerance, (new cljs.core.Keyword(null, "tolerance", "tolerance", 406811818)).cljs$core$IFn$_invoke$arity$1(path))) {
    return clustermap.components.map.replace_path.call(null, comm, leaflet_map, boundaryline_id, path, js_boundaryline, path_attrs);
  } else {
    clustermap.components.map.style_leaflet_path.call(null, (new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390)).cljs$core$IFn$_invoke$arity$1(path), path_attrs);
    return path;
  }
};
clustermap.components.map.delete_path = function delete_path(leaflet_map, path) {
  return leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", -201564390)).cljs$core$IFn$_invoke$arity$1(path));
};
clustermap.components.map.update_paths = function update_paths(comm, fetch_boundarylines_fn, leaflet_map, paths_atom, path_selections_atom, new_path_highlights, new_selection_paths) {
  var paths = cljs.core.deref.call(null, paths_atom);
  var path_keys = cljs.core.set.call(null, cljs.core.keys.call(null, paths));
  var old_selection_path_keys = cljs.core.deref.call(null, path_selections_atom);
  var new_selection_path_keys = cljs.core.set.call(null, cljs.core.keys.call(null, new_selection_paths));
  var live_path_keys = clojure.set.union.call(null, new_selection_path_keys, new_path_highlights);
  var create_path_keys = clojure.set.difference.call(null, live_path_keys, path_keys);
  var delete_path_keys = clojure.set.difference.call(null, path_keys, live_path_keys);
  var update_path_keys = clojure.set.intersection.call(null, path_keys, live_path_keys);
  var _ = console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "create", "create", -1301499256), create_path_keys, new cljs.core.Keyword(null, "delete", "delete", -1768633620), delete_path_keys, new cljs.core.Keyword(null, "update", "update", 1045576396), update_path_keys], null)));
  var vec__13649 = fetch_boundarylines_fn.call(null, clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()), leaflet_map.getZoom(), new cljs.core.Keyword(null, "boundaryline-ids", "boundaryline-ids", 1352066869), live_path_keys);
  var tolerance_paths = cljs.core.nth.call(null, vec__13649, 0, null);
  var notifychan = cljs.core.nth.call(null, vec__13649, 1, null);
  var created_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan) {
    return function(p__13650) {
      var vec__13651 = p__13650;
      var k = cljs.core.nth.call(null, vec__13651, 0, null);
      var tolerance = cljs.core.nth.call(null, vec__13651, 1, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__13651, 2, null);
      return clustermap.components.map.fetch_create_path.call(null, comm, leaflet_map, k, tolerance, js_boundaryline, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "fill-color", "fill-color", -1156875903), new_selection_paths.call(null, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 1723498733), cljs.core.contains_QMARK_.call(null, 
      new_path_highlights, k)], null));
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan), cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan) {
    return function(k) {
      var vec__13652 = cljs.core.get.call(null, tolerance_paths, k);
      var tolerance = cljs.core.nth.call(null, vec__13652, 0, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__13652, 1, null);
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = k;
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = tolerance;
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return js_boundaryline;
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, tolerance, js_boundaryline], null);
      } else {
        return null;
      }
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan), create_path_keys)));
  var updated_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan, created_paths) {
    return function(p__13653) {
      var vec__13654 = p__13653;
      var k = cljs.core.nth.call(null, vec__13654, 0, null);
      var tolerance = cljs.core.nth.call(null, vec__13654, 1, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__13654, 2, null);
      return clustermap.components.map.update_path.call(null, comm, leaflet_map, cljs.core.get.call(null, paths, k), tolerance, js_boundaryline, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selected", "selected", 574897764), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "fill-color", "fill-color", -1156875903), new_selection_paths.call(null, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 1723498733), cljs.core.contains_QMARK_.call(null, 
      new_path_highlights, k)], null));
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan, created_paths), cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan, created_paths) {
    return function(k) {
      var vec__13655 = cljs.core.get.call(null, tolerance_paths, k);
      var tolerance = cljs.core.nth.call(null, vec__13655, 0, null);
      var js_boundaryline = cljs.core.nth.call(null, vec__13655, 1, null);
      if (cljs.core.truth_(function() {
        var and__3546__auto__ = k;
        if (cljs.core.truth_(and__3546__auto__)) {
          var and__3546__auto____$1 = tolerance;
          if (cljs.core.truth_(and__3546__auto____$1)) {
            return js_boundaryline;
          } else {
            return and__3546__auto____$1;
          }
        } else {
          return and__3546__auto__;
        }
      }())) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, tolerance, js_boundaryline], null);
      } else {
        return null;
      }
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan, created_paths), update_path_keys)));
  var ___$1 = function() {
    var seq__13656 = cljs.core.seq.call(null, delete_path_keys);
    var chunk__13657 = null;
    var count__13658 = 0;
    var i__13659 = 0;
    while (true) {
      if (i__13659 < count__13658) {
        var k = cljs.core._nth.call(null, chunk__13657, i__13659);
        var temp__4124__auto___13662 = cljs.core.get.call(null, paths, k);
        if (cljs.core.truth_(temp__4124__auto___13662)) {
          var path_13663 = temp__4124__auto___13662;
          clustermap.components.map.delete_path.call(null, leaflet_map, path_13663);
        } else {
        }
        var G__13664 = seq__13656;
        var G__13665 = chunk__13657;
        var G__13666 = count__13658;
        var G__13667 = i__13659 + 1;
        seq__13656 = G__13664;
        chunk__13657 = G__13665;
        count__13658 = G__13666;
        i__13659 = G__13667;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__13656);
        if (temp__4126__auto__) {
          var seq__13656__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13656__$1)) {
            var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__13656__$1);
            var G__13668 = cljs.core.chunk_rest.call(null, seq__13656__$1);
            var G__13669 = c__4314__auto__;
            var G__13670 = cljs.core.count.call(null, c__4314__auto__);
            var G__13671 = 0;
            seq__13656 = G__13668;
            chunk__13657 = G__13669;
            count__13658 = G__13670;
            i__13659 = G__13671;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__13656__$1);
            var temp__4124__auto___13672 = cljs.core.get.call(null, paths, k);
            if (cljs.core.truth_(temp__4124__auto___13672)) {
              var path_13673 = temp__4124__auto___13672;
              clustermap.components.map.delete_path.call(null, leaflet_map, path_13673);
            } else {
            }
            var G__13674 = cljs.core.next.call(null, seq__13656__$1);
            var G__13675 = null;
            var G__13676 = 0;
            var G__13677 = 0;
            seq__13656 = G__13674;
            chunk__13657 = G__13675;
            count__13658 = G__13676;
            i__13659 = G__13677;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  var new_paths = cljs.core.reduce.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan, created_paths, updated_paths, ___$1) {
    return function(m, p__13660) {
      var map__13661 = p__13660;
      var map__13661__$1 = cljs.core.seq_QMARK_.call(null, map__13661) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13661) : map__13661;
      var path = map__13661__$1;
      var id = cljs.core.get.call(null, map__13661__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      return cljs.core.assoc.call(null, m, id, path);
    };
  }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, _, vec__13649, tolerance_paths, notifychan, created_paths, updated_paths, ___$1), cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, cljs.core.identity, cljs.core.concat.call(null, created_paths, updated_paths)));
  cljs.core.reset_BANG_.call(null, path_selections_atom, new_selection_path_keys);
  cljs.core.reset_BANG_.call(null, paths_atom, new_paths);
  return notifychan;
};
clustermap.components.map.constituency_marker_popup_content = function constituency_marker_popup_content(path_fn, constituency) {
  var bl_id = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(constituency);
  var bl_name = (new cljs.core.Keyword(null, "compact_name", "compact_name", 1525822383)).cljs$core$IFn$_invoke$arity$1(constituency);
  return "\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", -793805698), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), bl_id, new cljs.core.Keyword(null, 
  "compact_name", "compact_name", 1525822383), bl_name], null)), new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs13679 = bl_name;
    if (cljs.core.map_QMARK_.call(null, attrs13679)) {
      return "\x3cspan" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "class", "class", -2030961996), "map-marker-constituency-name"], null), attrs13679))) + "\x3e\x3c/span\x3e";
    } else {
      return'\x3cspan class\x3d"map-marker-constituency-name"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs13679)) + "\x3c/span\x3e";
    }
  }()) + "\x3c/a\x3e";
};
clustermap.components.map.choose_boundaryline_collection = function choose_boundaryline_collection(threshold_collections, zoom) {
  return cljs.core.last.call(null, cljs.core.first.call(null, cljs.core.reverse.call(null, cljs.core.filter.call(null, function(p__13682) {
    var vec__13683 = p__13682;
    var tz = cljs.core.nth.call(null, vec__13683, 0, null);
    var collection = cljs.core.nth.call(null, vec__13683, 1, null);
    return zoom >= tz;
  }, threshold_collections))));
};
clustermap.components.map.request_aggregation_data = function request_aggregation_data(resource, index, index_type, blcoll, variable, filter, bounds) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.boundaryline_aggregation, index, index_type, blcoll, variable, filter, bounds);
};
clustermap.components.map.request_point_data = function request_point_data(resource, index, index_type, filter, bounds) {
  return clustermap.ordered_resource.api_call.call(null, resource, clustermap.api.location_lists, index, index_type, "!postcode", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!name", "!location", "!latest_employee_count", "!latest_turnover"], null), 1E3, filter, bounds);
};
clustermap.components.map.map_component = function map_component(p__13684, owner) {
  var map__13723 = p__13684;
  var map__13723__$1 = cljs.core.seq_QMARK_.call(null, map__13723) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13723) : map__13723;
  var cursor_data = map__13723__$1;
  var map__13724 = cljs.core.get.call(null, map__13723__$1, new cljs.core.Keyword(null, "map-state", "map-state", -1227493550));
  var map__13724__$1 = cljs.core.seq_QMARK_.call(null, map__13724) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13724) : map__13724;
  var cursor = map__13724__$1;
  var data = cljs.core.get.call(null, map__13724__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var point_data = cljs.core.get.call(null, map__13724__$1, new cljs.core.Keyword(null, "point-data", "point-data", -1294572970));
  var boundaryline_collections = cljs.core.get.call(null, map__13724__$1, new cljs.core.Keyword(null, "boundaryline-collections", "boundaryline-collections", 1750591980));
  var map__13725 = cljs.core.get.call(null, map__13724__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
  var map__13725__$1 = cljs.core.seq_QMARK_.call(null, map__13725) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13725) : map__13725;
  var threshold_colors = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983));
  var boundaryline_agg = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775));
  var colorchooser = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729));
  var boundaryline_collection = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936));
  var zoom = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "zoom", "zoom", -1827487038));
  var bounds = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
  var initial_bounds = cljs.core.get.call(null, map__13725__$1, new cljs.core.Keyword(null, "initial-bounds", "initial-bounds", -1404401542));
  var filter = cljs.core.get.call(null, map__13723__$1, new cljs.core.Keyword(null, "filter", "filter", -948537934));
  if (typeof clustermap.components.map.t13726 !== "undefined") {
  } else {
    clustermap.components.map.t13726 = function(colorchooser, initial_bounds, owner, data, map__13725, zoom, cursor_data, map_component, boundaryline_collections, map__13723, map__13724, cursor, threshold_colors, bounds, boundaryline_collection, p__13684, filter, point_data, boundaryline_agg, meta13727) {
      this.colorchooser = colorchooser;
      this.initial_bounds = initial_bounds;
      this.owner = owner;
      this.data = data;
      this.map__13725 = map__13725;
      this.zoom = zoom;
      this.cursor_data = cursor_data;
      this.map_component = map_component;
      this.boundaryline_collections = boundaryline_collections;
      this.map__13723 = map__13723;
      this.map__13724 = map__13724;
      this.cursor = cursor;
      this.threshold_colors = threshold_colors;
      this.bounds = bounds;
      this.boundaryline_collection = boundaryline_collection;
      this.p__13684 = p__13684;
      this.filter = filter;
      this.point_data = point_data;
      this.boundaryline_agg = boundaryline_agg;
      this.meta13727 = meta13727;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map.t13726.cljs$lang$type = true;
    clustermap.components.map.t13726.cljs$lang$ctorStr = "clustermap.components.map/t13726";
    clustermap.components.map.t13726.cljs$lang$ctorPrWriter = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this__4125__auto__, writer__4126__auto__, opt__4127__auto__) {
        return cljs.core._write.call(null, writer__4126__auto__, "clustermap.components.map/t13726");
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t13726.prototype.om$core$IWillUnmount$ = true;
    clustermap.components.map.t13726.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var map__13729 = om.core.get_state.call(null, self__.owner);
        var map__13729__$1 = cljs.core.seq_QMARK_.call(null, map__13729) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13729) : map__13729;
        var point_data_resource = cljs.core.get.call(null, map__13729__$1, new cljs.core.Keyword(null, "point-data-resource", "point-data-resource", -64127097));
        var aggregation_data_resource = cljs.core.get.call(null, map__13729__$1, new cljs.core.Keyword(null, "aggregation-data-resource", "aggregation-data-resource", 992435689));
        clustermap.ordered_resource.close.call(null, aggregation_data_resource);
        return clustermap.ordered_resource.close.call(null, point_data_resource);
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t13726.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.map.t13726.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$, p__13730, p__13731) {
        var self__ = this;
        var map__13732 = p__13730;
        var map__13732__$1 = cljs.core.seq_QMARK_.call(null, map__13732) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13732) : map__13732;
        var next_cursor_data = map__13732__$1;
        var map__13733 = cljs.core.get.call(null, map__13732__$1, new cljs.core.Keyword(null, "map-state", "map-state", -1227493550));
        var map__13733__$1 = cljs.core.seq_QMARK_.call(null, map__13733) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13733) : map__13733;
        var next_cursor = map__13733__$1;
        var next_data = cljs.core.get.call(null, map__13733__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
        var next_point_data = cljs.core.get.call(null, map__13733__$1, new cljs.core.Keyword(null, "point-data", "point-data", -1294572970));
        var next_boundaryline_collections = cljs.core.get.call(null, map__13733__$1, new cljs.core.Keyword(null, "boundaryline-collections", "boundaryline-collections", 1750591980));
        var map__13734 = cljs.core.get.call(null, map__13733__$1, new cljs.core.Keyword(null, "controls", "controls", 1340701452));
        var map__13734__$1 = cljs.core.seq_QMARK_.call(null, map__13734) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13734) : map__13734;
        var next_zoom = cljs.core.get.call(null, map__13734__$1, new cljs.core.Keyword(null, "zoom", "zoom", -1827487038));
        var next_bounds = cljs.core.get.call(null, map__13734__$1, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455));
        var next_boundaryline_collection = cljs.core.get.call(null, map__13734__$1, new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936));
        var next_colorchooser = cljs.core.get.call(null, map__13734__$1, new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729));
        var next_boundaryline_agg = cljs.core.get.call(null, map__13734__$1, new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775));
        var next_threshold_colors = cljs.core.get.call(null, map__13734__$1, new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983));
        var next_filter = cljs.core.get.call(null, map__13732__$1, new cljs.core.Keyword(null, "filter", "filter", -948537934));
        var map__13735 = p__13731;
        var map__13735__$1 = cljs.core.seq_QMARK_.call(null, map__13735) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13735) : map__13735;
        var map__13736 = cljs.core.get.call(null, map__13735__$1, new cljs.core.Keyword(null, "map", "map", 1371690461));
        var map__13736__$1 = cljs.core.seq_QMARK_.call(null, map__13736) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13736) : map__13736;
        var next_markers = cljs.core.get.call(null, map__13736__$1, new cljs.core.Keyword(null, "markers", "markers", -246919693));
        var next_paths = cljs.core.get.call(null, map__13736__$1, new cljs.core.Keyword(null, "paths", "paths", -1807389588));
        var next_path_selections = cljs.core.get.call(null, map__13736__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", -1495179033));
        var next_path_highlights = cljs.core.get.call(null, map__13735__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411));
        var next_aggregation_data_resource = cljs.core.get.call(null, map__13735__$1, new cljs.core.Keyword(null, "aggregation-data-resource", "aggregation-data-resource", 992435689));
        var next_point_data_resource = cljs.core.get.call(null, map__13735__$1, new cljs.core.Keyword(null, "point-data-resource", "point-data-resource", -64127097));
        var this$__$1 = this;
        var map__13737 = om.core.get_shared.call(null, self__.owner);
        var map__13737__$1 = cljs.core.seq_QMARK_.call(null, map__13737) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13737) : map__13737;
        var point_in_boundarylines_fn = cljs.core.get.call(null, map__13737__$1, new cljs.core.Keyword(null, "point-in-boundarylines-fn", "point-in-boundarylines-fn", -1836497614));
        var fetch_boundarylines_fn = cljs.core.get.call(null, map__13737__$1, new cljs.core.Keyword(null, "fetch-boundarylines-fn", "fetch-boundarylines-fn", 1291845393));
        var link_fn = cljs.core.get.call(null, map__13737__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
        var path_fn = cljs.core.get.call(null, map__13737__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
        var comm = cljs.core.get.call(null, map__13737__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
        var map__13738 = om.core.get_state.call(null, self__.owner);
        var map__13738__$1 = cljs.core.seq_QMARK_.call(null, map__13738) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13738) : map__13738;
        var map__13739 = cljs.core.get.call(null, map__13738__$1, new cljs.core.Keyword(null, "map", "map", 1371690461));
        var map__13739__$1 = cljs.core.seq_QMARK_.call(null, map__13739) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13739) : map__13739;
        var path_selections = cljs.core.get.call(null, map__13739__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", -1495179033));
        var paths = cljs.core.get.call(null, map__13739__$1, new cljs.core.Keyword(null, "paths", "paths", -1807389588));
        var markers = cljs.core.get.call(null, map__13739__$1, new cljs.core.Keyword(null, "markers", "markers", -246919693));
        var leaflet_map = cljs.core.get.call(null, map__13739__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", -132492747));
        var pan_pending = cljs.core.get.call(null, map__13738__$1, new cljs.core.Keyword(null, "pan-pending", "pan-pending", -1898979779));
        var path_highlights = cljs.core.get.call(null, map__13738__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411));
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = leaflet_map;
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = next_zoom;
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return cljs.core.not_EQ_.call(null, next_zoom, self__.zoom) && cljs.core.not_EQ_.call(null, next_zoom, leaflet_map.getZoom());
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          leaflet_map.setZoom(next_zoom);
        } else {
        }
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = leaflet_map;
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = next_bounds;
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return cljs.core.not_EQ_.call(null, next_bounds, self__.bounds) && cljs.core.not_EQ_.call(null, next_bounds, clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          leaflet_map.fitBounds(cljs.core.clj__GT_js.call(null, next_bounds));
          om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
        } else {
        }
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = leaflet_map;
          if (cljs.core.truth_(and__3546__auto__)) {
            var and__3546__auto____$1 = self__.boundaryline_collections;
            if (cljs.core.truth_(and__3546__auto____$1)) {
              return cljs.core.not_EQ_.call(null, next_boundaryline_collection, clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom()));
            } else {
              return and__3546__auto____$1;
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          console.log(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["change-collection", clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom())], null)));
          om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936)], null), clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom()));
        } else {
        }
        if (cljs.core.truth_(function() {
          var and__3546__auto__ = next_boundaryline_collection;
          if (cljs.core.truth_(and__3546__auto__)) {
            var or__3558__auto__ = function() {
              var and__3546__auto____$1 = next_boundaryline_agg;
              if (cljs.core.truth_(and__3546__auto____$1)) {
                return cljs.core.not_EQ_.call(null, next_boundaryline_agg, self__.boundaryline_agg);
              } else {
                return and__3546__auto____$1;
              }
            }();
            if (cljs.core.truth_(or__3558__auto__)) {
              return or__3558__auto__;
            } else {
              return cljs.core.not_EQ_.call(null, next_filter, self__.filter) || cljs.core.not_EQ_.call(null, next_bounds, self__.bounds);
            }
          } else {
            return and__3546__auto__;
          }
        }())) {
          var ticket_13761 = clustermap.components.map.next_ticket.call(null);
          om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "ticket", "ticket", 1810559700)], null), ticket_13761);
          clustermap.components.map.request_aggregation_data.call(null, next_aggregation_data_resource, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), (new cljs.core.Keyword(null, "index-type", "index-type", 500383962)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), clustermap.components.map.choose_boundaryline_collection.call(null, next_boundaryline_collections, leaflet_map.getZoom()), (new cljs.core.Keyword(null, "variable", 
          "variable", -281346492)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), om.core._value.call(null, next_filter), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
          clustermap.components.map.request_point_data.call(null, next_point_data_resource, (new cljs.core.Keyword(null, "index", "index", -1531685915)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), (new cljs.core.Keyword(null, "index-type", "index-type", 500383962)).cljs$core$IFn$_invoke$arity$1(next_boundaryline_agg), om.core._value.call(null, next_filter), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
        } else {
        }
        if (cljs.core.not_EQ_.call(null, next_data, self__.data) || cljs.core.not_EQ_.call(null, next_colorchooser, self__.colorchooser)) {
          var vec__13740_13762 = clustermap.data.colorchooser.choose.call(null, (new cljs.core.Keyword(null, "scheme", "scheme", 90199613)).cljs$core$IFn$_invoke$arity$1(next_colorchooser), cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "scale", "scale", -230427353)).cljs$core$IFn$_invoke$arity$1(next_colorchooser)), new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", -1827697395), cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "variable", "variable", -281346492)).cljs$core$IFn$_invoke$arity$1(next_colorchooser)), 
          (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(next_data));
          var new_threshold_colors_13763 = cljs.core.nth.call(null, vec__13740_13762, 0, null);
          var selection_path_colours_13764 = cljs.core.nth.call(null, vec__13740_13762, 1, null);
          var update_paths_invocation_13765 = function(vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, next_cursor_data, map__13733, map__13733__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, 
          map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, 
          threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
            return function() {
              return clustermap.components.map.update_paths.call(null, comm, cljs.core.partial.call(null, fetch_boundarylines_fn, next_boundaryline_collection), leaflet_map, next_paths, next_path_selections, next_path_highlights, selection_path_colours_13764);
            };
          }(vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, next_cursor_data, map__13733, map__13733__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, 
          next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, 
          colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
          if (cljs.core.not_EQ_.call(null, new_threshold_colors_13763, next_threshold_colors)) {
            om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983)], null), new_threshold_colors_13763);
          } else {
          }
          var temp__4126__auto___13766 = update_paths_invocation_13765.call(null);
          if (cljs.core.truth_(temp__4126__auto___13766)) {
            var notify_chan_13767 = temp__4126__auto___13766;
            var c__5708__auto___13768 = cljs.core.async.chan.call(null, 1);
            cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___13768, notify_chan_13767, temp__4126__auto___13766, vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, update_paths_invocation_13765, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, 
            next_cursor_data, map__13733, map__13733__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, 
            cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
              return function() {
                var f__5709__auto__ = function() {
                  var switch__5693__auto__ = function(c__5708__auto___13768, notify_chan_13767, temp__4126__auto___13766, vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, update_paths_invocation_13765, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, 
                  next_cursor_data, map__13733, map__13733__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, 
                  cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
                    return function(state_13745) {
                      var state_val_13746 = state_13745[1];
                      if (state_val_13746 === 2) {
                        var inst_13742 = state_13745[2];
                        var inst_13743 = update_paths_invocation_13765.call(null);
                        var state_13745__$1 = function() {
                          var statearr_13747 = state_13745;
                          statearr_13747[7] = inst_13742;
                          return statearr_13747;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13745__$1, inst_13743);
                      } else {
                        if (state_val_13746 === 1) {
                          var state_13745__$1 = state_13745;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13745__$1, 2, notify_chan_13767);
                        } else {
                          return null;
                        }
                      }
                    };
                  }(c__5708__auto___13768, notify_chan_13767, temp__4126__auto___13766, vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, update_paths_invocation_13765, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, next_cursor_data, map__13733, map__13733__$1, 
                  next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, 
                  cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
                  return function(switch__5693__auto__, c__5708__auto___13768, notify_chan_13767, temp__4126__auto___13766, vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, update_paths_invocation_13765, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, 
                  next_cursor_data, map__13733, map__13733__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, 
                  cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
                    return function() {
                      var state_machine__5694__auto__ = null;
                      var state_machine__5694__auto____0 = function() {
                        var statearr_13751 = [null, null, null, null, null, null, null, null];
                        statearr_13751[0] = state_machine__5694__auto__;
                        statearr_13751[1] = 1;
                        return statearr_13751;
                      };
                      var state_machine__5694__auto____1 = function(state_13745) {
                        while (true) {
                          var ret_value__5695__auto__ = function() {
                            try {
                              while (true) {
                                var result__5696__auto__ = switch__5693__auto__.call(null, state_13745);
                                if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                  continue;
                                } else {
                                  return result__5696__auto__;
                                }
                                break;
                              }
                            } catch (e13752) {
                              if (e13752 instanceof Object) {
                                var ex__5697__auto__ = e13752;
                                var statearr_13753_13769 = state_13745;
                                statearr_13753_13769[5] = ex__5697__auto__;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13745);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                throw e13752;
                              }
                            }
                          }();
                          if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var G__13770 = state_13745;
                            state_13745 = G__13770;
                            continue;
                          } else {
                            return ret_value__5695__auto__;
                          }
                          break;
                        }
                      };
                      state_machine__5694__auto__ = function(state_13745) {
                        switch(arguments.length) {
                          case 0:
                            return state_machine__5694__auto____0.call(this);
                          case 1:
                            return state_machine__5694__auto____1.call(this, state_13745);
                        }
                        throw new Error("Invalid arity: " + arguments.length);
                      };
                      state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
                      state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
                      return state_machine__5694__auto__;
                    }();
                  }(switch__5693__auto__, c__5708__auto___13768, notify_chan_13767, temp__4126__auto___13766, vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, update_paths_invocation_13765, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, next_cursor_data, 
                  map__13733, map__13733__$1, next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, cursor_data, 
                  map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
                }();
                var state__5710__auto__ = function() {
                  var statearr_13754 = f__5709__auto__.call(null);
                  statearr_13754[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___13768;
                  return statearr_13754;
                }();
                return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
              };
            }(c__5708__auto___13768, notify_chan_13767, temp__4126__auto___13766, vec__13740_13762, new_threshold_colors_13763, selection_path_colours_13764, update_paths_invocation_13765, map__13737, map__13737__$1, point_in_boundarylines_fn, fetch_boundarylines_fn, link_fn, path_fn, comm, map__13738, map__13738__$1, map__13739, map__13739__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, this$__$1, map__13732, map__13732__$1, next_cursor_data, map__13733, map__13733__$1, 
            next_cursor, next_data, next_point_data, next_boundaryline_collections, map__13734, map__13734__$1, next_zoom, next_bounds, next_boundaryline_collection, next_colorchooser, next_boundaryline_agg, next_threshold_colors, next_filter, map__13735, map__13735__$1, map__13736, map__13736__$1, next_markers, next_paths, next_path_selections, next_path_highlights, next_aggregation_data_resource, next_point_data_resource, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, 
            data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
          } else {
          }
        } else {
        }
        if (cljs.core.not_EQ_.call(null, next_point_data, self__.point_data)) {
          return clustermap.components.map.update_markers.call(null, path_fn, leaflet_map, next_markers, (new cljs.core.Keyword(null, "records", "records", 1326822832)).cljs$core$IFn$_invoke$arity$1(next_point_data));
        } else {
          return null;
        }
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t13726.prototype.om$core$IDidMount$ = true;
    clustermap.components.map.t13726.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        var map__13755 = clustermap.components.map.create_map.call(null, node, self__.initial_bounds);
        var map__13755__$1 = cljs.core.seq_QMARK_.call(null, map__13755) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13755) : map__13755;
        var map = map__13755__$1;
        var path = cljs.core.get.call(null, map__13755__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
        var markers = cljs.core.get.call(null, map__13755__$1, new cljs.core.Keyword(null, "markers", "markers", -246919693));
        var leaflet_map = cljs.core.get.call(null, map__13755__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", -132492747));
        var map__13756 = om.core.get_shared.call(null, self__.owner);
        var map__13756__$1 = cljs.core.seq_QMARK_.call(null, map__13756) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13756) : map__13756;
        var path_fn = cljs.core.get.call(null, map__13756__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691));
        var link_fn = cljs.core.get.call(null, map__13756__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857));
        var point_in_boundarylines_fn = cljs.core.get.call(null, map__13756__$1, new cljs.core.Keyword(null, "point-in-boundarylines-fn", "point-in-boundarylines-fn", -1836497614));
        var fetch_boundarylines_fn = cljs.core.get.call(null, map__13756__$1, new cljs.core.Keyword(null, "fetch-boundarylines-fn", "fetch-boundarylines-fn", 1291845393));
        var comm = cljs.core.get.call(null, map__13756__$1, new cljs.core.Keyword(null, "comm", "comm", -1689770614));
        om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038)], null), leaflet_map.getZoom());
        om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "map", "map", 1371690461), map);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411), cljs.core.PersistentHashSet.EMPTY);
        leaflet_map.on("moveend", function(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            console.log("moveend");
            om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038)], null), leaflet_map.getZoom());
            return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null), clustermap.components.map.bounds_array.call(null, leaflet_map.getBounds()));
          };
        }(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("popupopen", function(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            var popup_el = e.popup._container;
            var marker_popup_location_list_cnt = jayq.core.$.call(null, popup_el).find(".map-marker-popup-location-list").length;
            if (marker_popup_location_list_cnt > 0) {
              om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 1632807134), true);
            } else {
            }
            return jayq.core.$.call(null, popup_el).on("mousemove", function(popup_el, marker_popup_location_list_cnt, node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, 
            zoom, bounds, initial_bounds, filter) {
              return function(e__$1) {
                e__$1.preventDefault();
                return false;
              };
            }(popup_el, marker_popup_location_list_cnt, node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
          };
        }(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("popupclose", function(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 1632807134), null);
          };
        }(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("mousemove", function(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            var lat = e.latlng.lat;
            var lng = e.latlng.lng;
            var hits = point_in_boundarylines_fn.call(null, lng, lat);
            var highlight_hit = cljs.core.first.call(null, hits);
            var highlight_path_id = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(highlight_hit);
            var highlight_path_ids = cljs.core.truth_(highlight_path_id) ? cljs.core.set.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [highlight_path_id], null)) : null;
            var old_path_highlights = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411));
            if (cljs.core.truth_(function() {
              var and__3546__auto__ = highlight_hit;
              if (cljs.core.truth_(and__3546__auto__)) {
                return cljs.core.not_EQ_.call(null, old_path_highlights, highlight_path_ids) && cljs.core.not.call(null, om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 1632807134)));
              } else {
                return and__3546__auto__;
              }
            }())) {
              var G__13757_13771 = L.popup();
              G__13757_13771.setLatLng(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lat, lng], null)));
              G__13757_13771.setContent(clustermap.components.map.constituency_marker_popup_content.call(null, path_fn, highlight_hit));
              G__13757_13771.openOn(leaflet_map);
            } else {
            }
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", -1452960411), highlight_path_ids);
          };
        }(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        leaflet_map.on("click", function(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
          return function(e) {
            var hits = point_in_boundarylines_fn.call(null, e.latlng.lng, e.latlng.lat);
            var boundaryline_id = function() {
              var G__13758 = hits;
              var G__13758__$1 = G__13758 == null ? null : cljs.core.first.call(null, G__13758);
              var G__13758__$2 = G__13758__$1 == null ? null : (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(G__13758__$1);
              return G__13758__$2;
            }();
            if (cljs.core.truth_(boundaryline_id)) {
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), boundaryline_id], null)], null));
            } else {
              return null;
            }
          };
        }(node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        var adr_13772 = clustermap.ordered_resource.make_discard_stale_resource.call(null, "aggregation-data-resource");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "aggregation-data-resource", "aggregation-data-resource", 992435689), adr_13772);
        clustermap.ordered_resource.retrieve_responses.call(null, adr_13772, function(adr_13772, node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, 
        zoom, bounds, initial_bounds, filter) {
          return function(data__$2) {
            return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377)], null), data__$2);
          };
        }(adr_13772, node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
        var pdr = clustermap.ordered_resource.make_discard_stale_resource.call(null, "point-data-resource");
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "point-data-resource", "point-data-resource", -64127097), pdr);
        return clustermap.ordered_resource.retrieve_responses.call(null, pdr, function(pdr, node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, 
        bounds, initial_bounds, filter) {
          return function(point_data__$2) {
            return om.core.update_BANG_.call(null, self__.cursor, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point-data", "point-data", -1294572970)], null), point_data__$2);
          };
        }(pdr, node, map__13755, map__13755__$1, map, path, markers, leaflet_map, map__13756, map__13756__$1, path_fn, link_fn, point_in_boundarylines_fn, fetch_boundarylines_fn, comm, this$__$1, map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter));
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t13726.prototype.om$core$IRender$ = true;
    clustermap.components.map.t13726.prototype.om$core$IRender$render$arity$1 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"map", "ref":"map"});
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t13726.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(_13728) {
        var self__ = this;
        var _13728__$1 = this;
        return self__.meta13727;
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.t13726.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function(_13728, meta13727__$1) {
        var self__ = this;
        var _13728__$1 = this;
        return new clustermap.components.map.t13726(self__.colorchooser, self__.initial_bounds, self__.owner, self__.data, self__.map__13725, self__.zoom, self__.cursor_data, self__.map_component, self__.boundaryline_collections, self__.map__13723, self__.map__13724, self__.cursor, self__.threshold_colors, self__.bounds, self__.boundaryline_collection, self__.p__13684, self__.filter, self__.point_data, self__.boundaryline_agg, meta13727__$1);
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
    clustermap.components.map.__GT_t13726 = function(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter) {
      return function __GT_t13726(colorchooser__$1, initial_bounds__$1, owner__$1, data__$1, map__13725__$2, zoom__$1, cursor_data__$1, map_component__$1, boundaryline_collections__$1, map__13723__$2, map__13724__$2, cursor__$1, threshold_colors__$1, bounds__$1, boundaryline_collection__$1, p__13684__$1, filter__$1, point_data__$1, boundaryline_agg__$1, meta13727) {
        return new clustermap.components.map.t13726(colorchooser__$1, initial_bounds__$1, owner__$1, data__$1, map__13725__$2, zoom__$1, cursor_data__$1, map_component__$1, boundaryline_collections__$1, map__13723__$2, map__13724__$2, cursor__$1, threshold_colors__$1, bounds__$1, boundaryline_collection__$1, p__13684__$1, filter__$1, point_data__$1, boundaryline_agg__$1, meta13727);
      };
    }(map__13723, map__13723__$1, cursor_data, map__13724, map__13724__$1, cursor, data, point_data, boundaryline_collections, map__13725, map__13725__$1, threshold_colors, boundaryline_agg, colorchooser, boundaryline_collection, zoom, bounds, initial_bounds, filter);
  }
  return new clustermap.components.map.t13726(colorchooser, initial_bounds, owner, data, map__13725__$1, zoom, cursor_data, map_component, boundaryline_collections, map__13723__$1, map__13724__$1, cursor, threshold_colors, bounds, boundaryline_collection, p__13684, filter, point_data, boundaryline_agg, null);
};
goog.provide("clustermap.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.boundarylines");
goog.require("clustermap.data.colorchooser");
goog.require("clustermap.components.mount");
goog.require("secretary.core");
goog.require("clustermap.components.map");
goog.require("clustermap.nav");
goog.require("om.dom");
goog.require("goog.history.EventType");
goog.require("clustermap.routes");
goog.require("clustermap.components.table");
goog.require("om.dom");
goog.require("clustermap.components.table");
goog.require("clustermap.api");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.full_report");
goog.require("cljs.core.async");
goog.require("clustermap.components.select_chooser");
goog.require("clustermap.components.select_chooser");
goog.require("goog.History");
goog.require("goog.events");
goog.require("clustermap.boundarylines");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.color_scale");
goog.require("clustermap.components.search");
goog.require("clustermap.components.map_report");
goog.require("clustermap.data.colorchooser");
goog.require("clustermap.components.filter");
goog.require("clustermap.components.mount");
goog.require("clustermap.components.map_report");
goog.require("clustermap.routes");
goog.require("clustermap.components.full_report");
goog.require("clustermap.components.search");
goog.require("om.core");
goog.require("om.core");
goog.require("secretary.core");
goog.require("clustermap.components.page_title");
goog.require("clustermap.components.color_scale");
goog.require("clustermap.components.filter");
goog.require("clustermap.nav");
goog.require("clojure.string");
goog.require("clustermap.components.page_title");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("clustermap.components.map");
goog.require("clustermap.api");
clustermap.app.state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "collections", "collections", -2114643505), new cljs.core.PersistentArrayMap(null, 3, ["uk_boroughs", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", -1531685915), null, new cljs.core.Keyword(null, "rtree", "rtree", -82448827), 
null, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null), "uk_wards", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", -1531685915), null, new cljs.core.Keyword(null, "rtree", "rtree", -82448827), null, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null), "uk_regions", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"index", "index", -1531685915), null, new cljs.core.Keyword(null, "rtree", "rtree", -82448827), null, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null)], null), new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), cljs.core.PersistentArrayMap.EMPTY], null), new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "components", 
"components", -1073188942), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "filter-by-view", "filter-by-view", 902292255), false, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), null, new cljs.core.Keyword(null, "compiled", "compiled", 850043082), null], null), new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "geoport", "geoport", 534549910), 
new cljs.core.Keyword(null, "datasource", "datasource", -246060221), "companies", new cljs.core.Keyword(null, "boundaryline-collections", "boundaryline-collections", 1750591980), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "uk_regions"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [5, "uk_counties"], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [7, "uk_boroughs"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, "uk_wards"], null)], null), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "initial-bounds", "initial-bounds", -1404401542), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[59.54, 2.3], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [49.29, -11.29], null)], null), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038), null, new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), null, new cljs.core.Keyword(null, "boundaryline-collection", "boundaryline-collection", 853329936), null, new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
"type", "type", 1174270348), new cljs.core.Keyword(null, "stats", "stats", -85643011), new cljs.core.Keyword(null, "index", "index", -1531685915), "companies", new cljs.core.Keyword(null, "index-type", "index-type", 500383962), "company", new cljs.core.Keyword(null, "key", "key", -1516042587), "boundaryline_id", new cljs.core.Keyword(null, "variable", "variable", -281346492), "!latest_employee_count"], null), new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "scheme", "scheme", 90199613), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "Oranges", "Oranges", 1752319702), new cljs.core.Keyword(null, "9", "9", 1664767314)], null), new cljs.core.Keyword(null, "scale", "scale", -230427353), new cljs.core.Keyword(null, "log", "log", -1595516004), new cljs.core.Keyword(null, "variable", "variable", -281346492), new cljs.core.Keyword(null, "sum", "sum", 136986814)], 
null)], null), new cljs.core.Keyword(null, "data", "data", -232669377), null], null), new cljs.core.Keyword(null, "map-report", "map-report", -254073588), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "index", "index", -1531685915), "companies", new cljs.core.Keyword(null, 
"index-type", "index-type", 500383962), "company", new cljs.core.Keyword(null, "variables", "variables", 1563680814), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!latest_employee_count", "!latest_turnover"], null)], null)], null), new cljs.core.Keyword(null, "summary-stats", "summary-stats", -1745571251), null], null), new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 
1174270348), new cljs.core.Keyword(null, "table", "table", -564943036), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "index", "index", -1531685915), "companies", new cljs.core.Keyword(null, "index-type", "index-type", 500383962), "company", new cljs.core.Keyword(null, "sort-spec", "sort-spec", 104043994), null, new cljs.core.Keyword(null, "from", "from", 1815293044), 0, new cljs.core.Keyword(null, "size", "size", 
1098693007), 50, new cljs.core.Keyword(null, "columns", "columns", 1998437288), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!name", "!name", 1164538490), "Name"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!postcode", "!postcode", 1728852280), "Postcode"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!formation_date", 
"!formation_date", -1967327335), "Formation date"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_accounts_date", "!latest_accounts_date", -259857093), "Filing date"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_employee_count", "!latest_employee_count", -1445524938), "Employees"], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", -1853433972), "Turnover"], 
null)], null)], null), new cljs.core.Keyword(null, "table-data", "table-data", -1783738205), null], null), new cljs.core.Keyword(null, "turnover_timeline", "turnover_timeline", -2042271101), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "timeline", "timeline", 192903161), new cljs.core.Keyword(null, "datasource", "datasource", -246060221), "company_accounts", new cljs.core.Keyword(null, "controls", "controls", 1340701452), 
new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "variable", "variable", -281346492), "accounts_date", new cljs.core.Keyword(null, "after", "after", 594996914), "2003-01-01", new cljs.core.Keyword(null, "before", "before", -1633692388), "2012-01-01", new cljs.core.Keyword(null, "interval", "interval", 1708495417), "year"], null), new cljs.core.Keyword(null, "data", "data", -232669377), null], null), new cljs.core.Keyword(null, "view", "view", 1247994814), new cljs.core.Keyword(null, 
"map", "map", 1371690461)], null));
clustermap.app.new_state = function new_state(state, path_values) {
  return cljs.core.reduce.call(null, function(s, p__12541) {
    var vec__12542 = p__12541;
    var key_or_path = cljs.core.nth.call(null, vec__12542, 0, null);
    var value_or_fn = cljs.core.nth.call(null, vec__12542, 1, null);
    var path = cljs.core.sequential_QMARK_.call(null, key_or_path) ? key_or_path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_path], null);
    return cljs.core.update_in.call(null, s, path, cljs.core.fn_QMARK_.call(null, value_or_fn) ? value_or_fn : function(path, vec__12542, key_or_path, value_or_fn) {
      return function(ov) {
        return value_or_fn;
      };
    }(path, vec__12542, key_or_path, value_or_fn));
  }, state, path_values);
};
clustermap.app.set_state = function() {
  var set_state__delegate = function(p__12543) {
    var map__12545 = p__12543;
    var map__12545__$1 = cljs.core.seq_QMARK_.call(null, map__12545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12545) : map__12545;
    var path_values = map__12545__$1;
    return cljs.core.swap_BANG_.call(null, clustermap.app.state, clustermap.app.new_state, path_values);
  };
  var set_state = function(var_args) {
    var p__12543 = null;
    if (arguments.length > 0) {
      p__12543 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_state__delegate.call(this, p__12543);
  };
  set_state.cljs$lang$maxFixedArity = 0;
  set_state.cljs$lang$applyTo = function(arglist__12546) {
    var p__12543 = cljs.core.seq(arglist__12546);
    return set_state__delegate(p__12543);
  };
  set_state.cljs$core$IFn$_invoke$arity$variadic = set_state__delegate;
  return set_state;
}();
clustermap.app.get_state = function() {
  var get_state__delegate = function(path) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, clustermap.app.state), cljs.core.flatten.call(null, path));
  };
  var get_state = function(var_args) {
    var path = null;
    if (arguments.length > 0) {
      path = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return get_state__delegate.call(this, path);
  };
  get_state.cljs$lang$maxFixedArity = 0;
  get_state.cljs$lang$applyTo = function(arglist__12547) {
    var path = cljs.core.seq(arglist__12547);
    return get_state__delegate(path);
  };
  get_state.cljs$core$IFn$_invoke$arity$variadic = get_state__delegate;
  return get_state;
}();
clustermap.app.bl_collections = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["uk_regions", "uk_boroughs", "uk_wards"], null);
clustermap.app.load_boundaryline_collection_indexes = function load_boundaryline_collection_indexes() {
  var seq__12552 = cljs.core.seq.call(null, clustermap.app.bl_collections);
  var chunk__12553 = null;
  var count__12554 = 0;
  var i__12555 = 0;
  while (true) {
    if (i__12555 < count__12554) {
      var blcoll = cljs.core._nth.call(null, chunk__12553, i__12555);
      clustermap.boundarylines.fetch_boundaryline_collection_index.call(null, clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), blcoll);
      var G__12556 = seq__12552;
      var G__12557 = chunk__12553;
      var G__12558 = count__12554;
      var G__12559 = i__12555 + 1;
      seq__12552 = G__12556;
      chunk__12553 = G__12557;
      count__12554 = G__12558;
      i__12555 = G__12559;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__12552);
      if (temp__4126__auto__) {
        var seq__12552__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12552__$1)) {
          var c__4314__auto__ = cljs.core.chunk_first.call(null, seq__12552__$1);
          var G__12560 = cljs.core.chunk_rest.call(null, seq__12552__$1);
          var G__12561 = c__4314__auto__;
          var G__12562 = cljs.core.count.call(null, c__4314__auto__);
          var G__12563 = 0;
          seq__12552 = G__12560;
          chunk__12553 = G__12561;
          count__12554 = G__12562;
          i__12555 = G__12563;
          continue;
        } else {
          var blcoll = cljs.core.first.call(null, seq__12552__$1);
          clustermap.boundarylines.fetch_boundaryline_collection_index.call(null, clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), blcoll);
          var G__12564 = cljs.core.next.call(null, seq__12552__$1);
          var G__12565 = null;
          var G__12566 = 0;
          var G__12567 = 0;
          seq__12552 = G__12564;
          chunk__12553 = G__12565;
          count__12554 = G__12566;
          i__12555 = G__12567;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.app.load_all_investment_stats = function load_all_investment_stats() {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_12587) {
            var state_val_12588 = state_12587[1];
            if (state_val_12588 === 2) {
              var inst_12584 = state_12587[2];
              var inst_12585 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 1476039495), inst_12584);
              var state_12587__$1 = state_12587;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12587__$1, inst_12585);
            } else {
              if (state_val_12588 === 1) {
                var inst_12582 = clustermap.api.investment_stats.call(null);
                var state_12587__$1 = state_12587;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12587__$1, 2, inst_12582);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_12592 = [null, null, null, null, null, null, null];
              statearr_12592[0] = state_machine__5694__auto__;
              statearr_12592[1] = 1;
              return statearr_12592;
            };
            var state_machine__5694__auto____1 = function(state_12587) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_12587);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e12593) {
                    if (e12593 instanceof Object) {
                      var ex__5697__auto__ = e12593;
                      var statearr_12594_12596 = state_12587;
                      statearr_12594_12596[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12587);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12593;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12597 = state_12587;
                  state_12587 = G__12597;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_12587) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_12587);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_12595 = f__5709__auto__.call(null);
        statearr_12595[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_12595;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.app.process_search_results = function process_search_results(results) {
  return clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "search-results", "search-results", 306464634), cljs.core.js__GT_clj.call(null, results));
};
clustermap.app.process_selection = function process_selection(p__12598, type) {
  var vec__12600 = p__12598;
  var selection = cljs.core.nth.call(null, vec__12600, 0, null);
  var selection_investment_stats = cljs.core.nth.call(null, vec__12600, 1, null);
  var selection_investment_account_timelines = cljs.core.nth.call(null, vec__12600, 2, null);
  var selection_investment_aggs = cljs.core.nth.call(null, vec__12600, 3, null);
  var selection_investments = cljs.core.nth.call(null, vec__12600, 4, null);
  var selection_portfolio_company_locations = cljs.core.nth.call(null, vec__12600, 5, null);
  clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection", "selection", 975998651), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "value", "value", 305978217), selection], null), new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", -1048685843), selection_investment_stats, new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 
  2127671062), selection_investment_account_timelines, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479), selection_investment_aggs, new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610), selection_investments, new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", -1948963855));
  return selection_portfolio_company_locations;
};
clustermap.app.make_selection = function make_selection(p__12601) {
  var vec__12606 = p__12601;
  var type = cljs.core.nth.call(null, vec__12606, 0, null);
  var id = cljs.core.nth.call(null, vec__12606, 1, null);
  var selector = cljs.core.truth_(type) ? new cljs.core.PersistentArrayMap.fromArray([type, id], true, false) : cljs.core.PersistentArrayMap.EMPTY;
  var old_selector = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state));
  if (cljs.core.not_EQ_.call(null, selector, old_selector)) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selector", "selector", 762528866), selector);
    var pred__12607 = cljs.core._EQ_;
    var expr__12608 = type;
    if (cljs.core.truth_(pred__12607.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 2036028415), expr__12608))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.portfolio_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
      selector)], null), type], null);
    } else {
      if (cljs.core.truth_(pred__12607.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 13706558), expr__12608))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.investor_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
        selector)], null), type], null);
      } else {
        if (cljs.core.truth_(pred__12607.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 1803637324), expr__12608))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.constituency.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
          selector)], null), type], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), null], null), type], null);
        }
      }
    }
  } else {
    return null;
  }
};
clustermap.app.change_view = function change_view(view) {
  var view__$1 = cljs.core.keyword.call(null, view);
  if (cljs.core.not_EQ_.call(null, view__$1, (new cljs.core.Keyword(null, "view", "view", 1247994814)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state)))) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "view", "view", 1247994814), view__$1);
    return clustermap.nav.change_view.call(null, cljs.core.name.call(null, view__$1));
  } else {
    return null;
  }
};
clustermap.app.history = new goog.History;
clustermap.app.set_route = function set_route(view, type, id) {
  if (cljs.core.truth_(function() {
    var and__3546__auto__ = type;
    if (cljs.core.truth_(and__3546__auto__)) {
      return id;
    } else {
      return and__3546__auto__;
    }
  }())) {
    return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, function() {
      var or__3558__auto__ = view;
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return "map";
      }
    }())) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, type)) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, id)));
  } else {
    if (cljs.core.truth_(view)) {
      return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view)));
    } else {
      return clustermap.app.history.setToken("");
    }
  }
};
clustermap.app.parse_route = function parse_route() {
  var fragment = clustermap.app.history.getToken();
  var vec__12613 = cljs.core.re_matches.call(null, /\/([^\/]+)(?:\/([^\/]+)\/(.+))?$/, fragment);
  var _ = cljs.core.nth.call(null, vec__12613, 0, null);
  var view = cljs.core.nth.call(null, vec__12613, 1, null);
  var type = cljs.core.nth.call(null, vec__12613, 2, null);
  var id = cljs.core.nth.call(null, vec__12613, 3, null);
  var type__$1 = function() {
    var G__12614 = type;
    var G__12614__$1 = G__12614 == null ? null : clojure.string.trim.call(null, G__12614);
    var G__12614__$2 = G__12614__$1 == null ? null : cljs.core.count.call(null, G__12614__$1);
    return G__12614__$2;
  }() > 0 ? clojure.string.trim.call(null, type) : null;
  var id__$1 = function() {
    var G__12615 = id;
    var G__12615__$1 = G__12615 == null ? null : clojure.string.trim.call(null, G__12615);
    var G__12615__$2 = G__12615__$1 == null ? null : cljs.core.count.call(null, G__12615__$1);
    return G__12615__$2;
  }() > 0 ? clojure.string.trim.call(null, id) : null;
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "view", "view", 1247994814), view, new cljs.core.Keyword(null, "type", "type", 1174270348), type__$1, new cljs.core.Keyword(null, "id", "id", -1388402092), id__$1], null);
};
clustermap.app.change_view_path = cljs.core.partial.call(null, clustermap.routes.path_for_view, clustermap.app.parse_route);
clustermap.app.set_selection_route = function set_selection_route(p__12616) {
  var vec__12619 = p__12616;
  var type = cljs.core.nth.call(null, vec__12619, 0, null);
  var id = cljs.core.nth.call(null, vec__12619, 1, null);
  var map__12620 = clustermap.app.parse_route.call(null);
  var map__12620__$1 = cljs.core.seq_QMARK_.call(null, map__12620) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12620) : map__12620;
  var view = cljs.core.get.call(null, map__12620__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.set_view_route = function set_view_route(view) {
  var map__12622 = clustermap.app.parse_route.call(null);
  var map__12622__$1 = cljs.core.seq_QMARK_.call(null, map__12622) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12622) : map__12622;
  var id = cljs.core.get.call(null, map__12622__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var type = cljs.core.get.call(null, map__12622__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.update_selection_investment_aggs_table_view = function update_selection_investment_aggs_table_view(table_view) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_12655) {
            var state_val_12656 = state_12655[1];
            if (state_val_12656 === 2) {
              var inst_12646 = state_12655[7];
              var inst_12652 = state_12655[2];
              var inst_12653 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", -1031011048), inst_12646, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", -292421479), inst_12652);
              var state_12655__$1 = state_12655;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12655__$1, inst_12653);
            } else {
              if (state_val_12656 === 1) {
                var inst_12646 = state_12655[7];
                var inst_12644 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_12645 = (new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", -1031011048)).cljs$core$IFn$_invoke$arity$1(inst_12644);
                var inst_12646__$1 = cljs.core.merge.call(null, inst_12645, table_view);
                var inst_12647 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_12648 = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(inst_12647);
                var inst_12649 = cljs.core.merge.call(null, inst_12648, inst_12646__$1);
                var inst_12650 = clustermap.api.investment_aggs.call(null, inst_12649);
                var state_12655__$1 = function() {
                  var statearr_12657 = state_12655;
                  statearr_12657[7] = inst_12646__$1;
                  return statearr_12657;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12655__$1, 2, inst_12650);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_12661 = [null, null, null, null, null, null, null, null];
              statearr_12661[0] = state_machine__5694__auto__;
              statearr_12661[1] = 1;
              return statearr_12661;
            };
            var state_machine__5694__auto____1 = function(state_12655) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_12655);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e12662) {
                    if (e12662 instanceof Object) {
                      var ex__5697__auto__ = e12662;
                      var statearr_12663_12665 = state_12655;
                      statearr_12663_12665[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12655);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12662;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12666 = state_12655;
                  state_12655 = G__12666;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_12655) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_12655);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_12664 = f__5709__auto__.call(null);
        statearr_12664[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_12664;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.app.update_selection_investments_table_view = function update_selection_investments_table_view(table_view) {
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__) {
          return function(state_12699) {
            var state_val_12700 = state_12699[1];
            if (state_val_12700 === 2) {
              var inst_12690 = state_12699[7];
              var inst_12696 = state_12699[2];
              var inst_12697 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 1654650362), inst_12690, new cljs.core.Keyword(null, "selection-investments", "selection-investments", -647516610), inst_12696);
              var state_12699__$1 = state_12699;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12699__$1, inst_12697);
            } else {
              if (state_val_12700 === 1) {
                var inst_12690 = state_12699[7];
                var inst_12688 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_12689 = (new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 1654650362)).cljs$core$IFn$_invoke$arity$1(inst_12688);
                var inst_12690__$1 = cljs.core.merge.call(null, inst_12689, table_view);
                var inst_12691 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_12692 = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(inst_12691);
                var inst_12693 = cljs.core.merge.call(null, inst_12692, inst_12690__$1);
                var inst_12694 = clustermap.api.investments.call(null, inst_12693);
                var state_12699__$1 = function() {
                  var statearr_12701 = state_12699;
                  statearr_12701[7] = inst_12690__$1;
                  return statearr_12701;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12699__$1, 2, inst_12694);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__);
        return function(switch__5693__auto__, c__5708__auto__) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_12705 = [null, null, null, null, null, null, null, null];
              statearr_12705[0] = state_machine__5694__auto__;
              statearr_12705[1] = 1;
              return statearr_12705;
            };
            var state_machine__5694__auto____1 = function(state_12699) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_12699);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e12706) {
                    if (e12706 instanceof Object) {
                      var ex__5697__auto__ = e12706;
                      var statearr_12707_12709 = state_12699;
                      statearr_12707_12709[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12699);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12706;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12710 = state_12699;
                  state_12699 = G__12710;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_12699) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_12699);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__);
      }();
      var state__5710__auto__ = function() {
        var statearr_12708 = f__5709__auto__.call(null);
        statearr_12708[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_12708;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__));
  return c__5708__auto__;
};
clustermap.app.event_handlers = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "search", "search", 1564939822), clustermap.api.ordered_api.call(null, clustermap.api.search, clustermap.app.process_search_results), new cljs.core.Keyword(null, "select", "select", 1147833503), clustermap.app.set_selection_route, new cljs.core.Keyword(null, "route-select", "route-select", 1501475360), clustermap.api.ordered_api.call(null, clustermap.app.make_selection, clustermap.app.process_selection), 
new cljs.core.Keyword(null, "change-view", "change-view", -1206699831), clustermap.app.set_view_route, new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), clustermap.app.change_view, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 1219799193), clustermap.app.update_selection_investment_aggs_table_view, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 
1261701637), clustermap.app.update_selection_investments_table_view], null);
clustermap.app.handle_event = function handle_event(type, val) {
  var handler = cljs.core.get.call(null, clustermap.app.event_handlers, type);
  if (cljs.core.not.call(null, handler)) {
    throw new Error("no handler for event-type: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type));
  } else {
  }
  return handler.call(null, val);
};
clustermap.app.init_routes = function init_routes(comm) {
  var action__9531__auto___12727 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__12719 = params__9532__auto__;
      var map__12719__$1 = cljs.core.seq_QMARK_.call(null, map__12719) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12719) : map__12719;
      return null;
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__12720 = params__9532__auto__;
        return null;
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "", action__9531__auto___12727);
  var action__9531__auto___12728 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__12721 = params__9532__auto__;
      var map__12721__$1 = cljs.core.seq_QMARK_.call(null, map__12721) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12721) : map__12721;
      return null;
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__12722 = params__9532__auto__;
        return null;
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/", action__9531__auto___12728);
  var action__9531__auto___12729 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__12723 = params__9532__auto__;
      var map__12723__$1 = cljs.core.seq_QMARK_.call(null, map__12723) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12723) : map__12723;
      var view = cljs.core.get.call(null, map__12723__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__12724 = params__9532__auto__;
        var view = cljs.core.nth.call(null, vec__12724, 0, null);
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view", action__9531__auto___12729);
  var action__9531__auto___12730 = function(params__9532__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9532__auto__)) {
      var map__12725 = params__9532__auto__;
      var map__12725__$1 = cljs.core.seq_QMARK_.call(null, map__12725) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12725) : map__12725;
      var id = cljs.core.get.call(null, map__12725__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
      var type = cljs.core.get.call(null, map__12725__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
      var view = cljs.core.get.call(null, map__12725__$1, new cljs.core.Keyword(null, "view", "view", 1247994814));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9532__auto__)) {
        var vec__12726 = params__9532__auto__;
        var view = cljs.core.nth.call(null, vec__12726, 0, null);
        var type = cljs.core.nth.call(null, vec__12726, 1, null);
        var id = cljs.core.nth.call(null, vec__12726, 2, null);
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", -1825638950), view], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view/:type/:id", action__9531__auto___12730);
  goog.events.listen(clustermap.app.history, goog.history.EventType.NAVIGATE, function(e) {
    var token = e.token;
    clustermap.ganalytics.send_pageview.call(null, token);
    return secretary.core.dispatch_BANG_.call(null, token);
  });
  return clustermap.app.history.setEnabled(true);
};
clustermap.app.init = function init() {
  var comm = cljs.core.async.chan.call(null);
  var path_fn = clustermap.routes.path_for;
  var link_fn = clustermap.routes.link_for;
  var shared = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "comm", "comm", -1689770614), comm, new cljs.core.Keyword(null, "path-fn", "path-fn", -778614691), path_fn, new cljs.core.Keyword(null, "link-fn", "link-fn", -205760857), link_fn, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 630487502), clustermap.app.change_view_path, new cljs.core.Keyword(null, "fetch-boundarylines-fn", "fetch-boundarylines-fn", 1291845393), cljs.core.partial.call(null, clustermap.boundarylines.get_or_fetch_best_boundarylines, 
  clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708)), new cljs.core.Keyword(null, "point-in-boundarylines-fn", "point-in-boundarylines-fn", -1836497614), cljs.core.partial.call(null, clustermap.boundarylines.point_in_boundarylines, clustermap.app.state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 1568915708), new cljs.core.Keyword(null, "uk_boroughs", "uk_boroughs", 800727440))], null);
  clustermap.nav.init.call(null, comm);
  clustermap.app.init_routes.call(null, comm);
  clustermap.app.load_boundaryline_collection_indexes.call(null);
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "map", "map", 1371690461), clustermap.components.map.map_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "map-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map-state", "map-state", -1227493550), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461)], null), new cljs.core.Keyword(null, "filter", "filter", -948537934), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.Keyword(null, "compiled", "compiled", 850043082)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "map-report", "map-report", -254073588), clustermap.components.map_report.map_report_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "map-report-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", 
  -1101318648), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "map-controls", "map-controls", -1453318552), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452)], null), new cljs.core.Keyword(null, "map-report", 
  "map-report", -254073588), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map-report", "map-report", -254073588)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "search", "search", 1564939822), clustermap.components.filter.filter_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "search-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "var-select", "var-select", -284006595), cljs.core.partial.call(null, clustermap.components.select_chooser.select_chooser_component, "Variable", new cljs.core.Keyword(null, "variable", "variable", -281346492), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!latest_employee_count", "Employee count"], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["!latest_turnover", "Turnover"], null)], null)), clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "variable-selection-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), 
  new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "boundaryline-agg", "boundaryline-agg", 1246510775)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "stat-select", "stat-select", 587769134), cljs.core.partial.call(null, clustermap.components.select_chooser.select_chooser_component, "Statistic", new cljs.core.Keyword(null, "variable", "variable", -281346492), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sum", "Sum"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["max", "Maximum"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["avg", "Mean"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["boundaryline_id_doc_count", "Count"], null)], null)), clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "stat-selection-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, 
  "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "scale-select", "scale-select", 1690031490), cljs.core.partial.call(null, clustermap.components.select_chooser.select_chooser_component, "Scale", new cljs.core.Keyword(null, "scale", "scale", -230427353), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["log", "Log"], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear", "Linear"], null)], null)), clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "scale-selection-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 
  1340701452), new cljs.core.Keyword(null, "colorchooser", "colorchooser", 1990432729)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "color-scale", "color-scale", -2117745622), clustermap.components.color_scale.color_scale_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "color-scale-component", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "threshold-colors", "threshold-colors", 615635983)], null));
  clustermap.components.mount.mount.call(null, new cljs.core.Keyword(null, "table", "table", -564943036), clustermap.components.table.table_component, clustermap.app.state, new cljs.core.Keyword(null, "target", "target", 253001721), "full-report-table", new cljs.core.Keyword(null, "shared", "shared", -384145993), shared, new cljs.core.Keyword(null, "paths", "paths", -1807389588), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "table-state", "table-state", -1662785974), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table", "table", -564943036)], null), new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "filter-spec", "filter-spec", -1101318648)], null), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "map", "map", 1371690461), new cljs.core.Keyword(null, "controls", "controls", 1340701452), new cljs.core.Keyword(null, "bounds", "bounds", 1691609455)], null)], null));
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, comm, path_fn, link_fn, shared) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__, comm, path_fn, link_fn, shared) {
          return function(state_12777) {
            var state_val_12778 = state_12777[1];
            if (state_val_12778 === 7) {
              var inst_12766 = state_12777[2];
              var inst_12767 = cljs.core.nth.call(null, inst_12766, 0, null);
              var inst_12768 = cljs.core.nth.call(null, inst_12766, 1, null);
              var inst_12769 = clustermap.app.handle_event.call(null, inst_12767, inst_12768);
              var state_12777__$1 = function() {
                var statearr_12779 = state_12777;
                statearr_12779[7] = inst_12769;
                return statearr_12779;
              }();
              var statearr_12780_12793 = state_12777__$1;
              statearr_12780_12793[2] = null;
              statearr_12780_12793[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12778 === 6) {
                var inst_12773 = state_12777[2];
                var state_12777__$1 = state_12777;
                var statearr_12781_12794 = state_12777__$1;
                statearr_12781_12794[2] = inst_12773;
                statearr_12781_12794[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12778 === 5) {
                  var state_12777__$1 = state_12777;
                  var statearr_12782_12795 = state_12777__$1;
                  statearr_12782_12795[2] = null;
                  statearr_12782_12795[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12778 === 4) {
                    var state_12777__$1 = state_12777;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12777__$1, 7, comm);
                  } else {
                    if (state_val_12778 === 3) {
                      var inst_12775 = state_12777[2];
                      var state_12777__$1 = state_12777;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12777__$1, inst_12775);
                    } else {
                      if (state_val_12778 === 2) {
                        var state_12777__$1 = state_12777;
                        var statearr_12783_12796 = state_12777__$1;
                        statearr_12783_12796[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12778 === 1) {
                          var state_12777__$1 = state_12777;
                          var statearr_12785_12797 = state_12777__$1;
                          statearr_12785_12797[2] = null;
                          statearr_12785_12797[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__, comm, path_fn, link_fn, shared);
        return function(switch__5693__auto__, c__5708__auto__, comm, path_fn, link_fn, shared) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_12789 = [null, null, null, null, null, null, null, null];
              statearr_12789[0] = state_machine__5694__auto__;
              statearr_12789[1] = 1;
              return statearr_12789;
            };
            var state_machine__5694__auto____1 = function(state_12777) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_12777);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e12790) {
                    if (e12790 instanceof Object) {
                      var ex__5697__auto__ = e12790;
                      var statearr_12791_12798 = state_12777;
                      statearr_12791_12798[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12777);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12790;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12799 = state_12777;
                  state_12777 = G__12799;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_12777) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_12777);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__, comm, path_fn, link_fn, shared);
      }();
      var state__5710__auto__ = function() {
        var statearr_12792 = f__5709__auto__.call(null);
        statearr_12792[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_12792;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__, comm, path_fn, link_fn, shared));
  return c__5708__auto__;
};
goog.provide("figwheel.client");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.reader");
goog.require("goog.net.jsloader");
goog.require("goog.net.jsloader");
figwheel.client.log = function() {
  var log__delegate = function(p__19734, args) {
    var map__19736 = p__19734;
    var map__19736__$1 = cljs.core.seq_QMARK_.call(null, map__19736) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19736) : map__19736;
    var debug = cljs.core.get.call(null, map__19736__$1, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
    if (cljs.core.truth_(debug)) {
      return console.log(cljs.core.to_array.call(null, args));
    } else {
      return null;
    }
  };
  var log = function(p__19734, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return log__delegate.call(this, p__19734, args);
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__19737) {
    var p__19734 = cljs.core.first(arglist__19737);
    var args = cljs.core.rest(arglist__19737);
    return log__delegate(p__19734, args);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
figwheel.client.reload_host = function reload_host(p__19738) {
  var map__19740 = p__19738;
  var map__19740__$1 = cljs.core.seq_QMARK_.call(null, map__19740) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19740) : map__19740;
  var websocket_url = cljs.core.get.call(null, map__19740__$1, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938));
  return cljs.core.first.call(null, clojure.string.split.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, websocket_url, /^ws:/, ""), /^\/\//, ""), /\//));
};
figwheel.client.add_cache_buster = function add_cache_buster(url) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(url) + "?rel\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new Date).getTime());
};
figwheel.client.js_reload = function js_reload(p__19741, callback) {
  var map__19743 = p__19741;
  var map__19743__$1 = cljs.core.seq_QMARK_.call(null, map__19743) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19743) : map__19743;
  var msg = map__19743__$1;
  var dependency_file = cljs.core.get.call(null, map__19743__$1, new cljs.core.Keyword(null, "dependency-file", "dependency-file", -1682436382));
  var namespace = cljs.core.get.call(null, map__19743__$1, new cljs.core.Keyword(null, "namespace", "namespace", -377510372));
  var request_url = cljs.core.get.call(null, map__19743__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  if (cljs.core.truth_(function() {
    var or__3558__auto__ = dependency_file;
    if (cljs.core.truth_(or__3558__auto__)) {
      return or__3558__auto__;
    } else {
      return goog.isProvided_(namespace);
    }
  }())) {
    return goog.net.jsloader.load(figwheel.client.add_cache_buster.call(null, request_url)).addCallback(function(map__19743, map__19743__$1, msg, dependency_file, namespace, request_url) {
      return function() {
        return cljs.core.apply.call(null, callback, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null));
      };
    }(map__19743, map__19743__$1, msg, dependency_file, namespace, request_url));
  } else {
    return cljs.core.apply.call(null, callback, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null));
  }
};
figwheel.client.reload_js_file = function reload_js_file(file_msg) {
  var out = cljs.core.async.chan.call(null);
  figwheel.client.js_reload.call(null, file_msg, function(out) {
    return function(url) {
      cljs.core.async.put_BANG_.call(null, out, url);
      return cljs.core.async.close_BANG_.call(null, out);
    };
  }(out));
  return out;
};
figwheel.client.load_all_js_files = function load_all_js_files(files) {
  return cljs.core.async.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.async.filter_LT_.call(null, cljs.core.identity, cljs.core.async.merge.call(null, cljs.core.mapv.call(null, figwheel.client.reload_js_file, files))));
};
figwheel.client.add_request_url = function add_request_url(p__19744, p__19745) {
  var map__19748 = p__19744;
  var map__19748__$1 = cljs.core.seq_QMARK_.call(null, map__19748) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19748) : map__19748;
  var opts = map__19748__$1;
  var url_rewriter = cljs.core.get.call(null, map__19748__$1, new cljs.core.Keyword(null, "url-rewriter", "url-rewriter", 200543838));
  var map__19749 = p__19745;
  var map__19749__$1 = cljs.core.seq_QMARK_.call(null, map__19749) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19749) : map__19749;
  var d = map__19749__$1;
  var file = cljs.core.get.call(null, map__19749__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596), url_rewriter.call(null, "//" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(figwheel.client.reload_host.call(null, opts)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)));
};
figwheel.client.add_request_urls = function add_request_urls(opts, files) {
  return cljs.core.map.call(null, cljs.core.partial.call(null, figwheel.client.add_request_url, opts), files);
};
figwheel.client.reload_js_files = function reload_js_files(p__19750, p__19751) {
  var map__19793 = p__19750;
  var map__19793__$1 = cljs.core.seq_QMARK_.call(null, map__19793) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19793) : map__19793;
  var opts = map__19793__$1;
  var on_jsload = cljs.core.get.call(null, map__19793__$1, new cljs.core.Keyword(null, "on-jsload", "on-jsload", -395756602));
  var before_jsload = cljs.core.get.call(null, map__19793__$1, new cljs.core.Keyword(null, "before-jsload", "before-jsload", -847513128));
  var map__19794 = p__19751;
  var map__19794__$1 = cljs.core.seq_QMARK_.call(null, map__19794) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19794) : map__19794;
  var files = cljs.core.get.call(null, map__19794__$1, new cljs.core.Keyword(null, "files", "files", -472457450));
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, map__19793, map__19793__$1, opts, on_jsload, before_jsload, map__19794, map__19794__$1, files) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__, map__19793, map__19793__$1, opts, on_jsload, before_jsload, map__19794, map__19794__$1, files) {
          return function(state_19817) {
            var state_val_19818 = state_19817[1];
            if (state_val_19818 === 6) {
              var inst_19799 = state_19817[7];
              var inst_19808 = state_19817[2];
              var inst_19809 = cljs.core.PersistentVector.EMPTY_NODE;
              var inst_19810 = [inst_19799];
              var inst_19811 = new cljs.core.PersistentVector(null, 1, 5, inst_19809, inst_19810, null);
              var inst_19812 = cljs.core.apply.call(null, on_jsload, inst_19811);
              var state_19817__$1 = function() {
                var statearr_19819 = state_19817;
                statearr_19819[8] = inst_19808;
                return statearr_19819;
              }();
              var statearr_19820_19834 = state_19817__$1;
              statearr_19820_19834[2] = inst_19812;
              statearr_19820_19834[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_19818 === 5) {
                var inst_19815 = state_19817[2];
                var state_19817__$1 = state_19817;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19817__$1, inst_19815);
              } else {
                if (state_val_19818 === 4) {
                  var state_19817__$1 = state_19817;
                  var statearr_19821_19835 = state_19817__$1;
                  statearr_19821_19835[2] = null;
                  statearr_19821_19835[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19818 === 3) {
                    var inst_19799 = state_19817[7];
                    var inst_19802 = console.debug("Figwheel: loaded these files");
                    var inst_19803 = cljs.core.map.call(null, new cljs.core.Keyword(null, "file", "file", -1269645878), inst_19799);
                    var inst_19804 = cljs.core.prn_str.call(null, inst_19803);
                    var inst_19805 = console.log(inst_19804);
                    var inst_19806 = cljs.core.async.timeout.call(null, 10);
                    var state_19817__$1 = function() {
                      var statearr_19822 = state_19817;
                      statearr_19822[9] = inst_19802;
                      statearr_19822[10] = inst_19805;
                      return statearr_19822;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19817__$1, 6, inst_19806);
                  } else {
                    if (state_val_19818 === 2) {
                      var inst_19799 = state_19817[7];
                      var inst_19799__$1 = state_19817[2];
                      var inst_19800 = cljs.core.not_empty.call(null, inst_19799__$1);
                      var state_19817__$1 = function() {
                        var statearr_19823 = state_19817;
                        statearr_19823[7] = inst_19799__$1;
                        return statearr_19823;
                      }();
                      if (cljs.core.truth_(inst_19800)) {
                        var statearr_19824_19836 = state_19817__$1;
                        statearr_19824_19836[1] = 3;
                      } else {
                        var statearr_19825_19837 = state_19817__$1;
                        statearr_19825_19837[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19818 === 1) {
                        var inst_19795 = before_jsload.call(null, files);
                        var inst_19796 = figwheel.client.add_request_urls.call(null, opts, files);
                        var inst_19797 = figwheel.client.load_all_js_files.call(null, inst_19796);
                        var state_19817__$1 = function() {
                          var statearr_19826 = state_19817;
                          statearr_19826[11] = inst_19795;
                          return statearr_19826;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19817__$1, 2, inst_19797);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5708__auto__, map__19793, map__19793__$1, opts, on_jsload, before_jsload, map__19794, map__19794__$1, files);
        return function(switch__5693__auto__, c__5708__auto__, map__19793, map__19793__$1, opts, on_jsload, before_jsload, map__19794, map__19794__$1, files) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_19830 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_19830[0] = state_machine__5694__auto__;
              statearr_19830[1] = 1;
              return statearr_19830;
            };
            var state_machine__5694__auto____1 = function(state_19817) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_19817);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e19831) {
                    if (e19831 instanceof Object) {
                      var ex__5697__auto__ = e19831;
                      var statearr_19832_19838 = state_19817;
                      statearr_19832_19838[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19817);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19831;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19839 = state_19817;
                  state_19817 = G__19839;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_19817) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_19817);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__, map__19793, map__19793__$1, opts, on_jsload, before_jsload, map__19794, map__19794__$1, files);
      }();
      var state__5710__auto__ = function() {
        var statearr_19833 = f__5709__auto__.call(null);
        statearr_19833[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_19833;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__, map__19793, map__19793__$1, opts, on_jsload, before_jsload, map__19794, map__19794__$1, files));
  return c__5708__auto__;
};
figwheel.client.current_links = function current_links() {
  return Array.prototype.slice.call(document.getElementsByTagName("link"));
};
figwheel.client.truncate_url = function truncate_url(url) {
  return clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, clojure.string.replace_first.call(null, cljs.core.first.call(null, clojure.string.split.call(null, url, /\?/)), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(location.protocol) + "//", ""), "http://", ""), "https://", ""), /^\/\//, ""), /[^\\/]*/, "");
};
figwheel.client.matches_file_QMARK_ = function matches_file_QMARK_(p__19840, link_href) {
  var map__19842 = p__19840;
  var map__19842__$1 = cljs.core.seq_QMARK_.call(null, map__19842) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19842) : map__19842;
  var request_url = cljs.core.get.call(null, map__19842__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  var file = cljs.core.get.call(null, map__19842__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var trunc_href = figwheel.client.truncate_url.call(null, link_href);
  return cljs.core._EQ_.call(null, file, trunc_href) || cljs.core._EQ_.call(null, figwheel.client.truncate_url.call(null, request_url), trunc_href);
};
figwheel.client.get_correct_link = function get_correct_link(f_data) {
  return cljs.core.some.call(null, function(l) {
    if (figwheel.client.matches_file_QMARK_.call(null, f_data, l.href)) {
      return l;
    } else {
      return null;
    }
  }, figwheel.client.current_links.call(null));
};
figwheel.client.clone_link = function clone_link(link, url) {
  var clone = document.createElement("link");
  clone.rel = "stylesheet";
  clone.media = link.media;
  clone.disabled = link.disabled;
  clone.href = figwheel.client.add_cache_buster.call(null, url);
  return clone;
};
figwheel.client.create_link = function create_link(url) {
  var link = document.createElement("link");
  link.rel = "stylesheet";
  link.href = figwheel.client.add_cache_buster.call(null, url);
  return link;
};
figwheel.client.add_link_to_doc = function() {
  var add_link_to_doc = null;
  var add_link_to_doc__1 = function(new_link) {
    return document.getElementsByTagName("head")[0].appendChild(new_link);
  };
  var add_link_to_doc__2 = function(orig_link, klone) {
    var parent = orig_link.parentNode;
    if (cljs.core._EQ_.call(null, orig_link, parent.lastChild)) {
      parent.appendChild(klone);
    } else {
      parent.insertBefore(klone, orig_link.nextSibling);
    }
    var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, parent) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto__, parent) {
            return function(state_19863) {
              var state_val_19864 = state_19863[1];
              if (state_val_19864 === 2) {
                var inst_19860 = state_19863[2];
                var inst_19861 = parent.removeChild(orig_link);
                var state_19863__$1 = function() {
                  var statearr_19865 = state_19863;
                  statearr_19865[7] = inst_19860;
                  return statearr_19865;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19863__$1, inst_19861);
              } else {
                if (state_val_19864 === 1) {
                  var inst_19858 = cljs.core.async.timeout.call(null, 200);
                  var state_19863__$1 = state_19863;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19863__$1, 2, inst_19858);
                } else {
                  return null;
                }
              }
            };
          }(c__5708__auto__, parent);
          return function(switch__5693__auto__, c__5708__auto__, parent) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_19869 = [null, null, null, null, null, null, null, null];
                statearr_19869[0] = state_machine__5694__auto__;
                statearr_19869[1] = 1;
                return statearr_19869;
              };
              var state_machine__5694__auto____1 = function(state_19863) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_19863);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e19870) {
                      if (e19870 instanceof Object) {
                        var ex__5697__auto__ = e19870;
                        var statearr_19871_19873 = state_19863;
                        statearr_19871_19873[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19863);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19870;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19874 = state_19863;
                    state_19863 = G__19874;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_19863) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_19863);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto__, parent);
        }();
        var state__5710__auto__ = function() {
          var statearr_19872 = f__5709__auto__.call(null);
          statearr_19872[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
          return statearr_19872;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto__, parent));
    return c__5708__auto__;
  };
  add_link_to_doc = function(orig_link, klone) {
    switch(arguments.length) {
      case 1:
        return add_link_to_doc__1.call(this, orig_link);
      case 2:
        return add_link_to_doc__2.call(this, orig_link, klone);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_link_to_doc.cljs$core$IFn$_invoke$arity$1 = add_link_to_doc__1;
  add_link_to_doc.cljs$core$IFn$_invoke$arity$2 = add_link_to_doc__2;
  return add_link_to_doc;
}();
figwheel.client.reload_css_file = function reload_css_file(p__19875) {
  var map__19877 = p__19875;
  var map__19877__$1 = cljs.core.seq_QMARK_.call(null, map__19877) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19877) : map__19877;
  var f_data = map__19877__$1;
  var request_url = cljs.core.get.call(null, map__19877__$1, new cljs.core.Keyword(null, "request-url", "request-url", 2100346596));
  var file = cljs.core.get.call(null, map__19877__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var temp__4124__auto__ = figwheel.client.get_correct_link.call(null, f_data);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var link = temp__4124__auto__;
    return figwheel.client.add_link_to_doc.call(null, link, figwheel.client.clone_link.call(null, link, request_url));
  } else {
    return figwheel.client.add_link_to_doc.call(null, figwheel.client.create_link.call(null, request_url));
  }
};
figwheel.client.reload_css_files = function reload_css_files(p__19878, files_msg) {
  var map__19900 = p__19878;
  var map__19900__$1 = cljs.core.seq_QMARK_.call(null, map__19900) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19900) : map__19900;
  var opts = map__19900__$1;
  var on_cssload = cljs.core.get.call(null, map__19900__$1, new cljs.core.Keyword(null, "on-cssload", "on-cssload", 1825432318));
  var seq__19901_19921 = cljs.core.seq.call(null, figwheel.client.add_request_urls.call(null, opts, (new cljs.core.Keyword(null, "files", "files", -472457450)).cljs$core$IFn$_invoke$arity$1(files_msg)));
  var chunk__19902_19922 = null;
  var count__19903_19923 = 0;
  var i__19904_19924 = 0;
  while (true) {
    if (i__19904_19924 < count__19903_19923) {
      var f_19925 = cljs.core._nth.call(null, chunk__19902_19922, i__19904_19924);
      figwheel.client.reload_css_file.call(null, f_19925);
      var G__19926 = seq__19901_19921;
      var G__19927 = chunk__19902_19922;
      var G__19928 = count__19903_19923;
      var G__19929 = i__19904_19924 + 1;
      seq__19901_19921 = G__19926;
      chunk__19902_19922 = G__19927;
      count__19903_19923 = G__19928;
      i__19904_19924 = G__19929;
      continue;
    } else {
      var temp__4126__auto___19930 = cljs.core.seq.call(null, seq__19901_19921);
      if (temp__4126__auto___19930) {
        var seq__19901_19931__$1 = temp__4126__auto___19930;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19901_19931__$1)) {
          var c__4314__auto___19932 = cljs.core.chunk_first.call(null, seq__19901_19931__$1);
          var G__19933 = cljs.core.chunk_rest.call(null, seq__19901_19931__$1);
          var G__19934 = c__4314__auto___19932;
          var G__19935 = cljs.core.count.call(null, c__4314__auto___19932);
          var G__19936 = 0;
          seq__19901_19921 = G__19933;
          chunk__19902_19922 = G__19934;
          count__19903_19923 = G__19935;
          i__19904_19924 = G__19936;
          continue;
        } else {
          var f_19937 = cljs.core.first.call(null, seq__19901_19931__$1);
          figwheel.client.reload_css_file.call(null, f_19937);
          var G__19938 = cljs.core.next.call(null, seq__19901_19931__$1);
          var G__19939 = null;
          var G__19940 = 0;
          var G__19941 = 0;
          seq__19901_19921 = G__19938;
          chunk__19902_19922 = G__19939;
          count__19903_19923 = G__19940;
          i__19904_19924 = G__19941;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var c__5708__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto__, map__19900, map__19900__$1, opts, on_cssload) {
    return function() {
      var f__5709__auto__ = function() {
        var switch__5693__auto__ = function(c__5708__auto__, map__19900, map__19900__$1, opts, on_cssload) {
          return function(state_19911) {
            var state_val_19912 = state_19911[1];
            if (state_val_19912 === 2) {
              var inst_19907 = state_19911[2];
              var inst_19908 = (new cljs.core.Keyword(null, "files", "files", -472457450)).cljs$core$IFn$_invoke$arity$1(files_msg);
              var inst_19909 = on_cssload.call(null, inst_19908);
              var state_19911__$1 = function() {
                var statearr_19913 = state_19911;
                statearr_19913[7] = inst_19907;
                return statearr_19913;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19911__$1, inst_19909);
            } else {
              if (state_val_19912 === 1) {
                var inst_19905 = cljs.core.async.timeout.call(null, 100);
                var state_19911__$1 = state_19911;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19911__$1, 2, inst_19905);
              } else {
                return null;
              }
            }
          };
        }(c__5708__auto__, map__19900, map__19900__$1, opts, on_cssload);
        return function(switch__5693__auto__, c__5708__auto__, map__19900, map__19900__$1, opts, on_cssload) {
          return function() {
            var state_machine__5694__auto__ = null;
            var state_machine__5694__auto____0 = function() {
              var statearr_19917 = [null, null, null, null, null, null, null, null];
              statearr_19917[0] = state_machine__5694__auto__;
              statearr_19917[1] = 1;
              return statearr_19917;
            };
            var state_machine__5694__auto____1 = function(state_19911) {
              while (true) {
                var ret_value__5695__auto__ = function() {
                  try {
                    while (true) {
                      var result__5696__auto__ = switch__5693__auto__.call(null, state_19911);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5696__auto__;
                      }
                      break;
                    }
                  } catch (e19918) {
                    if (e19918 instanceof Object) {
                      var ex__5697__auto__ = e19918;
                      var statearr_19919_19942 = state_19911;
                      statearr_19919_19942[5] = ex__5697__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19911);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e19918;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__19943 = state_19911;
                  state_19911 = G__19943;
                  continue;
                } else {
                  return ret_value__5695__auto__;
                }
                break;
              }
            };
            state_machine__5694__auto__ = function(state_19911) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5694__auto____0.call(this);
                case 1:
                  return state_machine__5694__auto____1.call(this, state_19911);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
            state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
            return state_machine__5694__auto__;
          }();
        }(switch__5693__auto__, c__5708__auto__, map__19900, map__19900__$1, opts, on_cssload);
      }();
      var state__5710__auto__ = function() {
        var statearr_19920 = f__5709__auto__.call(null);
        statearr_19920[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto__;
        return statearr_19920;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
    };
  }(c__5708__auto__, map__19900, map__19900__$1, opts, on_cssload));
  return c__5708__auto__;
};
figwheel.client.compile_failed = function compile_failed(fail_msg, compile_fail_callback) {
  return compile_fail_callback.call(null, cljs.core.dissoc.call(null, fail_msg, new cljs.core.Keyword(null, "msg-name", "msg-name", -353709863)));
};
figwheel.client.figwheel_closure_import_script = function figwheel_closure_import_script(src) {
  if (cljs.core.truth_(goog.inHtmlDocument_())) {
    goog.net.jsloader.load(figwheel.client.add_cache_buster.call(null, src));
    return true;
  } else {
    return false;
  }
};
figwheel.client.patch_goog_base = function patch_goog_base() {
  goog.provide = goog.exportPath_;
  return goog.global.CLOSURE_IMPORT_SCRIPT = figwheel.client.figwheel_closure_import_script;
};
figwheel.client.watch_and_reload_STAR_ = function watch_and_reload_STAR_(p__19944) {
  var map__19949 = p__19944;
  var map__19949__$1 = cljs.core.seq_QMARK_.call(null, map__19949) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19949) : map__19949;
  var opts = map__19949__$1;
  var on_compile_fail = cljs.core.get.call(null, map__19949__$1, new cljs.core.Keyword(null, "on-compile-fail", "on-compile-fail", 728013036));
  var jsload_callback = cljs.core.get.call(null, map__19949__$1, new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369));
  var websocket_url = cljs.core.get.call(null, map__19949__$1, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938));
  var retry_count = cljs.core.get.call(null, map__19949__$1, new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875));
  console.debug("Figwheel: trying to open cljs reload socket");
  var socket = new WebSocket(websocket_url);
  socket.onmessage = function(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(msg_str) {
      var msg = cljs.reader.read_string.call(null, msg_str.data);
      var pred__19950 = cljs.core._EQ_;
      var expr__19951 = (new cljs.core.Keyword(null, "msg-name", "msg-name", -353709863)).cljs$core$IFn$_invoke$arity$1(msg);
      if (cljs.core.truth_(pred__19950.call(null, new cljs.core.Keyword(null, "files-changed", "files-changed", -1418200563), expr__19951))) {
        return figwheel.client.reload_js_files.call(null, opts, msg);
      } else {
        if (cljs.core.truth_(pred__19950.call(null, new cljs.core.Keyword(null, "css-files-changed", "css-files-changed", 720773874), expr__19951))) {
          return figwheel.client.reload_css_files.call(null, opts, msg);
        } else {
          if (cljs.core.truth_(pred__19950.call(null, new cljs.core.Keyword(null, "compile-failed", "compile-failed", -477639289), expr__19951))) {
            return figwheel.client.compile_failed.call(null, msg, on_compile_fail);
          } else {
            return null;
          }
        }
      }
    };
  }(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  socket.onopen = function(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      figwheel.client.patch_goog_base.call(null);
      return console.debug("Figwheel: socket connection established");
    };
  }(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  socket.onclose = function(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      figwheel.client.log.call(null, opts, "Figwheel: socket closed or failed to open");
      if (retry_count > 0) {
        return window.setTimeout(function(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
          return function() {
            return watch_and_reload_STAR_.call(null, cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875), retry_count - 1));
          };
        }(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count), 2E3);
      } else {
        return null;
      }
    };
  }(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
  return socket.onerror = function(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count) {
    return function(x) {
      return figwheel.client.log.call(null, opts, "Figwheel: socket error ");
    };
  }(socket, map__19949, map__19949__$1, opts, on_compile_fail, jsload_callback, websocket_url, retry_count);
};
figwheel.client.default_on_jsload = function default_on_jsload(url) {
  return document.querySelector("body").dispatchEvent(new CustomEvent("figwheel.js-reload", function() {
    var obj19956 = {"detail":url};
    return obj19956;
  }()));
};
figwheel.client.get_essential_messages = function get_essential_messages(ed) {
  if (cljs.core.truth_(ed)) {
    return cljs.core.cons.call(null, cljs.core.select_keys.call(null, ed, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "message", "message", -406056002), new cljs.core.Keyword(null, "class", "class", -2030961996)], null)), get_essential_messages.call(null, (new cljs.core.Keyword(null, "cause", "cause", 231901252)).cljs$core$IFn$_invoke$arity$1(ed)));
  } else {
    return null;
  }
};
figwheel.client.error_msg_format = function error_msg_format(p__19957) {
  var map__19959 = p__19957;
  var map__19959__$1 = cljs.core.seq_QMARK_.call(null, map__19959) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19959) : map__19959;
  var class$ = cljs.core.get.call(null, map__19959__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
  var message = cljs.core.get.call(null, map__19959__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(class$) + " : " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(message);
};
figwheel.client.format_messages = cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.map, figwheel.client.error_msg_format), figwheel.client.get_essential_messages);
figwheel.client.default_on_compile_fail = function default_on_compile_fail(p__19960) {
  var map__19966 = p__19960;
  var map__19966__$1 = cljs.core.seq_QMARK_.call(null, map__19966) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19966) : map__19966;
  var ed = map__19966__$1;
  var exception_data = cljs.core.get.call(null, map__19966__$1, new cljs.core.Keyword(null, "exception-data", "exception-data", -512474886));
  var formatted_exception = cljs.core.get.call(null, map__19966__$1, new cljs.core.Keyword(null, "formatted-exception", "formatted-exception", -116489026));
  console.debug("Figwheel: Compile Exception");
  var seq__19967_19971 = cljs.core.seq.call(null, figwheel.client.format_messages.call(null, exception_data));
  var chunk__19968_19972 = null;
  var count__19969_19973 = 0;
  var i__19970_19974 = 0;
  while (true) {
    if (i__19970_19974 < count__19969_19973) {
      var msg_19975 = cljs.core._nth.call(null, chunk__19968_19972, i__19970_19974);
      console.log(msg_19975);
      var G__19976 = seq__19967_19971;
      var G__19977 = chunk__19968_19972;
      var G__19978 = count__19969_19973;
      var G__19979 = i__19970_19974 + 1;
      seq__19967_19971 = G__19976;
      chunk__19968_19972 = G__19977;
      count__19969_19973 = G__19978;
      i__19970_19974 = G__19979;
      continue;
    } else {
      var temp__4126__auto___19980 = cljs.core.seq.call(null, seq__19967_19971);
      if (temp__4126__auto___19980) {
        var seq__19967_19981__$1 = temp__4126__auto___19980;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19967_19981__$1)) {
          var c__4314__auto___19982 = cljs.core.chunk_first.call(null, seq__19967_19981__$1);
          var G__19983 = cljs.core.chunk_rest.call(null, seq__19967_19981__$1);
          var G__19984 = c__4314__auto___19982;
          var G__19985 = cljs.core.count.call(null, c__4314__auto___19982);
          var G__19986 = 0;
          seq__19967_19971 = G__19983;
          chunk__19968_19972 = G__19984;
          count__19969_19973 = G__19985;
          i__19970_19974 = G__19986;
          continue;
        } else {
          var msg_19987 = cljs.core.first.call(null, seq__19967_19981__$1);
          console.log(msg_19987);
          var G__19988 = cljs.core.next.call(null, seq__19967_19981__$1);
          var G__19989 = null;
          var G__19990 = 0;
          var G__19991 = 0;
          seq__19967_19971 = G__19988;
          chunk__19968_19972 = G__19989;
          count__19969_19973 = G__19990;
          i__19970_19974 = G__19991;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ed;
};
figwheel.client.default_before_load = function default_before_load(files) {
  console.debug("Figwheel: loading files");
  return files;
};
figwheel.client.default_on_cssload = function default_on_cssload(files) {
  console.debug("Figwheel: loaded CSS files");
  console.log(cljs.core.prn_str.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "file", "file", -1269645878), files)));
  return files;
};
figwheel.client.watch_and_reload_with_opts = function watch_and_reload_with_opts(opts) {
  if (cljs.core.truth_(figwheel.client.hasOwnProperty("watch_and_reload_singleton"))) {
    return null;
  } else {
    figwheel.client.watch_and_reload_singleton = figwheel.client.watch_and_reload_STAR_.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "retry-count", "retry-count", 1936122875), 100, new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369), figwheel.client.default_on_jsload, new cljs.core.Keyword(null, "on-jsload", "on-jsload", -395756602), function() {
      var or__3558__auto__ = (new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369)).cljs$core$IFn$_invoke$arity$1(opts);
      if (cljs.core.truth_(or__3558__auto__)) {
        return or__3558__auto__;
      } else {
        return figwheel.client.default_on_jsload;
      }
    }(), new cljs.core.Keyword(null, "on-cssload", "on-cssload", 1825432318), figwheel.client.default_on_cssload, new cljs.core.Keyword(null, "before-jsload", "before-jsload", -847513128), figwheel.client.default_before_load, new cljs.core.Keyword(null, "on-compile-fail", "on-compile-fail", 728013036), figwheel.client.default_on_compile_fail, new cljs.core.Keyword(null, "url-rewriter", "url-rewriter", 200543838), cljs.core.identity, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938), 
    "ws://" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(location.host) + "/figwheel-ws"], null), opts));
  }
};
figwheel.client.watch_and_reload = function() {
  var watch_and_reload__delegate = function(p__19992) {
    var map__19994 = p__19992;
    var map__19994__$1 = cljs.core.seq_QMARK_.call(null, map__19994) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19994) : map__19994;
    var opts = map__19994__$1;
    return figwheel.client.watch_and_reload_with_opts.call(null, opts);
  };
  var watch_and_reload = function(var_args) {
    var p__19992 = null;
    if (arguments.length > 0) {
      p__19992 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return watch_and_reload__delegate.call(this, p__19992);
  };
  watch_and_reload.cljs$lang$maxFixedArity = 0;
  watch_and_reload.cljs$lang$applyTo = function(arglist__19995) {
    var p__19992 = cljs.core.seq(arglist__19995);
    return watch_and_reload__delegate(p__19992);
  };
  watch_and_reload.cljs$core$IFn$_invoke$arity$variadic = watch_and_reload__delegate;
  return watch_and_reload;
}();
goog.provide("clustermap.core");
goog.require("cljs.core");
goog.require("clustermap.app");
goog.require("clustermap.app");
goog.require("figwheel.client");
goog.require("figwheel.client");
goog.require("weasel.repl");
goog.require("weasel.repl");
clustermap.core.init = function init() {
  return clustermap.app.init.call(null);
};
if (cljs.core.truth_(config.repl)) {
  weasel.repl.connect.call(null, "ws://localhost:9001", new cljs.core.Keyword(null, "verbose", "verbose", 1694226060), true);
  figwheel.client.watch_and_reload.call(null, new cljs.core.Keyword(null, "websocket-url", "websocket-url", -490444938), "ws://localhost:3449/figwheel-ws", new cljs.core.Keyword(null, "jsload-callback", "jsload-callback", -1949628369), function() {
    return console.log("reloaded");
  });
  clustermap.core.init.call(null);
} else {
  clustermap.core.init.call(null);
}
;goog.provide("clustermap.async");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.async.map_async = function() {
  var map_async__delegate = function(f, colls) {
    var coll_chs = cljs.core.map.call(null, function(coll) {
      var ch = cljs.core.async.chan.call(null);
      cljs.core.async.onto_chan.call(null, ch, coll);
      return ch;
    }, colls);
    return cljs.core.async.map.call(null, f, coll_chs);
  };
  var map_async = function(f, var_args) {
    var colls = null;
    if (arguments.length > 1) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map_async__delegate.call(this, f, colls);
  };
  map_async.cljs$lang$maxFixedArity = 1;
  map_async.cljs$lang$applyTo = function(arglist__12800) {
    var f = cljs.core.first(arglist__12800);
    var colls = cljs.core.rest(arglist__12800);
    return map_async__delegate(f, colls);
  };
  map_async.cljs$core$IFn$_invoke$arity$variadic = map_async__delegate;
  return map_async;
}();
clustermap.async.dorun_async = function() {
  var dorun_async__delegate = function(ch, p__12801) {
    var map__12861 = p__12801;
    var map__12861__$1 = cljs.core.seq_QMARK_.call(null, map__12861) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12861) : map__12861;
    var delay = cljs.core.get.call(null, map__12861__$1, new cljs.core.Keyword(null, "delay", "delay", -574225219));
    var log = cljs.core.get.call(null, map__12861__$1, new cljs.core.Keyword(null, "log", "log", -1595516004));
    var c__5708__auto___12920 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5708__auto___12920, map__12861, map__12861__$1, delay, log) {
      return function() {
        var f__5709__auto__ = function() {
          var switch__5693__auto__ = function(c__5708__auto___12920, map__12861, map__12861__$1, delay, log) {
            return function(state_12890) {
              var state_val_12891 = state_12890[1];
              if (state_val_12891 === 7) {
                var inst_12881 = state_12890[2];
                var state_12890__$1 = state_12890;
                if (cljs.core.truth_(inst_12881)) {
                  var statearr_12892_12921 = state_12890__$1;
                  statearr_12892_12921[1] = 15;
                } else {
                  var statearr_12893_12922 = state_12890__$1;
                  statearr_12893_12922[1] = 16;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12891 === 1) {
                  var state_12890__$1 = state_12890;
                  var statearr_12894_12923 = state_12890__$1;
                  statearr_12894_12923[2] = null;
                  statearr_12894_12923[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12891 === 4) {
                    var inst_12864 = state_12890[7];
                    var inst_12864__$1 = state_12890[2];
                    var state_12890__$1 = function() {
                      var statearr_12895 = state_12890;
                      statearr_12895[7] = inst_12864__$1;
                      return statearr_12895;
                    }();
                    if (cljs.core.truth_(inst_12864__$1)) {
                      var statearr_12896_12924 = state_12890__$1;
                      statearr_12896_12924[1] = 5;
                    } else {
                      var statearr_12897_12925 = state_12890__$1;
                      statearr_12897_12925[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12891 === 15) {
                      var state_12890__$1 = state_12890;
                      var statearr_12898_12926 = state_12890__$1;
                      statearr_12898_12926[2] = null;
                      statearr_12898_12926[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12891 === 13) {
                        var state_12890__$1 = state_12890;
                        var statearr_12899_12927 = state_12890__$1;
                        statearr_12899_12927[2] = null;
                        statearr_12899_12927[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12891 === 6) {
                          var state_12890__$1 = state_12890;
                          var statearr_12900_12928 = state_12890__$1;
                          statearr_12900_12928[2] = null;
                          statearr_12900_12928[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12891 === 17) {
                            var inst_12886 = state_12890[2];
                            var state_12890__$1 = state_12890;
                            var statearr_12901_12929 = state_12890__$1;
                            statearr_12901_12929[2] = inst_12886;
                            statearr_12901_12929[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12891 === 3) {
                              var inst_12888 = state_12890[2];
                              var state_12890__$1 = state_12890;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12890__$1, inst_12888);
                            } else {
                              if (state_val_12891 === 12) {
                                var inst_12864 = state_12890[7];
                                var inst_12874 = cljs.core.clj__GT_js.call(null, inst_12864);
                                var inst_12875 = console.log(inst_12874);
                                var state_12890__$1 = state_12890;
                                var statearr_12902_12930 = state_12890__$1;
                                statearr_12902_12930[2] = inst_12875;
                                statearr_12902_12930[1] = 14;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12891 === 2) {
                                  var state_12890__$1 = state_12890;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12890__$1, 4, ch);
                                } else {
                                  if (state_val_12891 === 11) {
                                    var inst_12869 = state_12890[2];
                                    var state_12890__$1 = state_12890;
                                    var statearr_12903_12931 = state_12890__$1;
                                    statearr_12903_12931[2] = inst_12869;
                                    statearr_12903_12931[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12891 === 9) {
                                      var state_12890__$1 = state_12890;
                                      var statearr_12904_12932 = state_12890__$1;
                                      statearr_12904_12932[2] = null;
                                      statearr_12904_12932[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12891 === 5) {
                                        var state_12890__$1 = state_12890;
                                        if (cljs.core.truth_(delay)) {
                                          var statearr_12905_12933 = state_12890__$1;
                                          statearr_12905_12933[1] = 8;
                                        } else {
                                          var statearr_12906_12934 = state_12890__$1;
                                          statearr_12906_12934[1] = 9;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12891 === 14) {
                                          var inst_12864 = state_12890[7];
                                          var inst_12878 = state_12890[2];
                                          var state_12890__$1 = function() {
                                            var statearr_12907 = state_12890;
                                            statearr_12907[8] = inst_12878;
                                            return statearr_12907;
                                          }();
                                          var statearr_12908_12935 = state_12890__$1;
                                          statearr_12908_12935[2] = inst_12864;
                                          statearr_12908_12935[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12891 === 16) {
                                            var state_12890__$1 = state_12890;
                                            var statearr_12909_12936 = state_12890__$1;
                                            statearr_12909_12936[2] = null;
                                            statearr_12909_12936[1] = 17;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12891 === 10) {
                                              var inst_12872 = state_12890[2];
                                              var state_12890__$1 = function() {
                                                var statearr_12910 = state_12890;
                                                statearr_12910[9] = inst_12872;
                                                return statearr_12910;
                                              }();
                                              if (cljs.core.truth_(log)) {
                                                var statearr_12911_12937 = state_12890__$1;
                                                statearr_12911_12937[1] = 12;
                                              } else {
                                                var statearr_12912_12938 = state_12890__$1;
                                                statearr_12912_12938[1] = 13;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12891 === 8) {
                                                var inst_12867 = cljs.core.async.timeout.call(null, delay);
                                                var state_12890__$1 = state_12890;
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12890__$1, 11, inst_12867);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5708__auto___12920, map__12861, map__12861__$1, delay, log);
          return function(switch__5693__auto__, c__5708__auto___12920, map__12861, map__12861__$1, delay, log) {
            return function() {
              var state_machine__5694__auto__ = null;
              var state_machine__5694__auto____0 = function() {
                var statearr_12916 = [null, null, null, null, null, null, null, null, null, null];
                statearr_12916[0] = state_machine__5694__auto__;
                statearr_12916[1] = 1;
                return statearr_12916;
              };
              var state_machine__5694__auto____1 = function(state_12890) {
                while (true) {
                  var ret_value__5695__auto__ = function() {
                    try {
                      while (true) {
                        var result__5696__auto__ = switch__5693__auto__.call(null, state_12890);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5696__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5696__auto__;
                        }
                        break;
                      }
                    } catch (e12917) {
                      if (e12917 instanceof Object) {
                        var ex__5697__auto__ = e12917;
                        var statearr_12918_12939 = state_12890;
                        statearr_12918_12939[5] = ex__5697__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12890);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12917;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5695__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12940 = state_12890;
                    state_12890 = G__12940;
                    continue;
                  } else {
                    return ret_value__5695__auto__;
                  }
                  break;
                }
              };
              state_machine__5694__auto__ = function(state_12890) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5694__auto____0.call(this);
                  case 1:
                    return state_machine__5694__auto____1.call(this, state_12890);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5694__auto____0;
              state_machine__5694__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5694__auto____1;
              return state_machine__5694__auto__;
            }();
          }(switch__5693__auto__, c__5708__auto___12920, map__12861, map__12861__$1, delay, log);
        }();
        var state__5710__auto__ = function() {
          var statearr_12919 = f__5709__auto__.call(null);
          statearr_12919[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5708__auto___12920;
          return statearr_12919;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5710__auto__);
      };
    }(c__5708__auto___12920, map__12861, map__12861__$1, delay, log));
    return null;
  };
  var dorun_async = function(ch, var_args) {
    var p__12801 = null;
    if (arguments.length > 1) {
      p__12801 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dorun_async__delegate.call(this, ch, p__12801);
  };
  dorun_async.cljs$lang$maxFixedArity = 1;
  dorun_async.cljs$lang$applyTo = function(arglist__12941) {
    var ch = cljs.core.first(arglist__12941);
    var p__12801 = cljs.core.rest(arglist__12941);
    return dorun_async__delegate(ch, p__12801);
  };
  dorun_async.cljs$core$IFn$_invoke$arity$variadic = dorun_async__delegate;
  return dorun_async;
}();

//# sourceMappingURL=clustermap.js.map