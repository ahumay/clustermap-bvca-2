var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2227";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__13214__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__13214 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__13214__delegate.call(this, args);
    };
    G__13214.cljs$lang$maxFixedArity = 0;
    G__13214.cljs$lang$applyTo = function(arglist__13215) {
      var args = cljs.core.seq(arglist__13215);
      return G__13214__delegate(args);
    };
    G__13214.cljs$core$IFn$_invoke$arity$variadic = G__13214__delegate;
    return G__13214;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3529__auto__ = ty;
    if (cljs.core.truth_(and__3529__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3529__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4397__auto___13216 = len;
  var i_13217 = 0;
  while (true) {
    if (i_13217 < n__4397__auto___13216) {
      new_arr[i_13217] = arr[i_13217];
      var G__13218 = i_13217 + 1;
      i_13217 = G__13218;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__13219__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__13219 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13219__delegate.call(this, array, i, idxs);
    };
    G__13219.cljs$lang$maxFixedArity = 2;
    G__13219.cljs$lang$applyTo = function(arglist__13220) {
      var array = cljs.core.first(arglist__13220);
      arglist__13220 = cljs.core.next(arglist__13220);
      var i = cljs.core.first(arglist__13220);
      var idxs = cljs.core.rest(arglist__13220);
      return G__13219__delegate(array, i, idxs);
    };
    G__13219.cljs$core$IFn$_invoke$arity$variadic = G__13219__delegate;
    return G__13219;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__13221__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__13221 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__13221__delegate.call(this, array, idx, idx2, idxv);
    };
    G__13221.cljs$lang$maxFixedArity = 3;
    G__13221.cljs$lang$applyTo = function(arglist__13222) {
      var array = cljs.core.first(arglist__13222);
      arglist__13222 = cljs.core.next(arglist__13222);
      var idx = cljs.core.first(arglist__13222);
      arglist__13222 = cljs.core.next(arglist__13222);
      var idx2 = cljs.core.first(arglist__13222);
      var idxv = cljs.core.rest(arglist__13222);
      return G__13221__delegate(array, idx, idx2, idxv);
    };
    G__13221.cljs$core$IFn$_invoke$arity$variadic = G__13221__delegate;
    return G__13221;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj13224 = {};
  return obj13224;
}();
cljs.core.IFn = function() {
  var obj13226 = {};
  return obj13226;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = cljs.core._invoke[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._invoke["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj13228 = {};
  return obj13228;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3529__auto__ = value;
    if (and__3529__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4168__auto__ = value == null ? null : value;
    return function() {
      var or__3541__auto__ = cljs.core._clone[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._clone["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj13230 = {};
  return obj13230;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._count[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._count["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj13232 = {};
  return obj13232;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._empty[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._empty["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj13234 = {};
  return obj13234;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._conj[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._conj["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj13236 = {};
  return obj13236;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._nth[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._nth["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._nth[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._nth["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj13238 = {};
  return obj13238;
}();
cljs.core.ISeq = function() {
  var obj13240 = {};
  return obj13240;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._first[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._first["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._rest[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._rest["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj13242 = {};
  return obj13242;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._next[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._next["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj13244 = {};
  return obj13244;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._lookup[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._lookup["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._lookup[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._lookup["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj13246 = {};
  return obj13246;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj13248 = {};
  return obj13248;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._dissoc[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._dissoc["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj13250 = {};
  return obj13250;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._key[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._key["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._val[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._val["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj13252 = {};
  return obj13252;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._disjoin[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._disjoin["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj13254 = {};
  return obj13254;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._peek[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._peek["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._pop[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._pop["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj13256 = {};
  return obj13256;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc_n[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj13258 = {};
  return obj13258;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._deref[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._deref["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj13260 = {};
  return obj13260;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj13262 = {};
  return obj13262;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._meta[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._meta["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj13264 = {};
  return obj13264;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._with_meta[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._with_meta["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj13266 = {};
  return obj13266;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._reduce[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._reduce["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3529__auto__ = coll;
      if (and__3529__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4168__auto__ = coll == null ? null : coll;
      return function() {
        var or__3541__auto__ = cljs.core._reduce[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._reduce["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj13268 = {};
  return obj13268;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj13270 = {};
  return obj13270;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._equiv[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._equiv["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj13272 = {};
  return obj13272;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._hash[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._hash["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj13274 = {};
  return obj13274;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._seq[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._seq["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj13276 = {};
  return obj13276;
}();
cljs.core.IList = function() {
  var obj13278 = {};
  return obj13278;
}();
cljs.core.IRecord = function() {
  var obj13280 = {};
  return obj13280;
}();
cljs.core.IReversible = function() {
  var obj13282 = {};
  return obj13282;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._rseq[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._rseq["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj13284 = {};
  return obj13284;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._entry_key[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._entry_key["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._comparator[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._comparator["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj13286 = {};
  return obj13286;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3529__auto__ = writer;
    if (and__3529__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4168__auto__ = writer == null ? null : writer;
    return function() {
      var or__3541__auto__ = cljs.core._write[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._write["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3529__auto__ = writer;
    if (and__3529__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4168__auto__ = writer == null ? null : writer;
    return function() {
      var or__3541__auto__ = cljs.core._flush[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._flush["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj13288 = {};
  return obj13288;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._pr_writer[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj13290 = {};
  return obj13290;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3529__auto__ = d;
    if (and__3529__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4168__auto__ = d == null ? null : d;
    return function() {
      var or__3541__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj13292 = {};
  return obj13292;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = cljs.core._notify_watches[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = cljs.core._add_watch[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._add_watch["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = cljs.core._remove_watch[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj13294 = {};
  return obj13294;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._as_transient[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._as_transient["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj13296 = {};
  return obj13296;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj13298 = {};
  return obj13298;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj13300 = {};
  return obj13300;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj13302 = {};
  return obj13302;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj13304 = {};
  return obj13304;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3529__auto__ = tcoll;
    if (and__3529__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4168__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3541__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj13306 = {};
  return obj13306;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._compare[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._compare["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj13308 = {};
  return obj13308;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._drop_first[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._drop_first["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj13310 = {};
  return obj13310;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._chunked_first[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj13312 = {};
  return obj13312;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3529__auto__ = coll;
    if (and__3529__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4168__auto__ = coll == null ? null : coll;
    return function() {
      var or__3541__auto__ = cljs.core._chunked_next[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj13314 = {};
  return obj13314;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._name[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._name["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._namespace[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._namespace["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3529__auto__) {
        return b.ns;
      } else {
        return and__3529__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3952__auto__ = self__._hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__13316 = null;
  var G__13316__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__13316__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__13316 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13316__2.call(this, self__, coll);
      case 3:
        return G__13316__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13316;
}();
cljs.core.Symbol.prototype.apply = function(self__, args13315) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13315)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__13318 = value;
  if (G__13318) {
    var bit__4191__auto__ = G__13318.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4191__auto__ || G__13318.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__13318.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__13318);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__13318);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__13320 = coll;
      if (G__13320) {
        var bit__4184__auto__ = G__13320.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4184__auto__ || G__13320.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__13322 = coll;
      if (G__13322) {
        var bit__4184__auto__ = G__13322.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4184__auto__ || G__13322.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__13324 = coll;
      if (G__13324) {
        var bit__4184__auto__ = G__13324.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4184__auto__ || G__13324.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__13326 = coll;
      if (G__13326) {
        var bit__4184__auto__ = G__13326.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4184__auto__ || G__13326.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__13327__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__13328 = y;
            var G__13329 = cljs.core.first.call(null, more);
            var G__13330 = cljs.core.next.call(null, more);
            x = G__13328;
            y = G__13329;
            more = G__13330;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13327 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13327__delegate.call(this, x, y, more);
    };
    G__13327.cljs$lang$maxFixedArity = 2;
    G__13327.cljs$lang$applyTo = function(arglist__13331) {
      var x = cljs.core.first(arglist__13331);
      arglist__13331 = cljs.core.next(arglist__13331);
      var y = cljs.core.first(arglist__13331);
      var more = cljs.core.rest(arglist__13331);
      return G__13327__delegate(x, y, more);
    };
    G__13327.cljs$core$IFn$_invoke$arity$variadic = G__13327__delegate;
    return G__13327;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__13332 = nval;
            var G__13333 = n + 1;
            val = G__13332;
            n = G__13333;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__13334 = nval;
          var G__13335 = n + 1;
          val__$1 = G__13334;
          n = G__13335;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__13336 = nval;
          var G__13337 = n + 1;
          val__$1 = G__13336;
          n = G__13337;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__13338 = nval;
            var G__13339 = n + 1;
            val = G__13338;
            n = G__13339;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__13340 = nval;
          var G__13341 = n + 1;
          val__$1 = G__13340;
          n = G__13341;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__13342 = nval;
          var G__13343 = n + 1;
          val__$1 = G__13342;
          n = G__13343;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__13345 = x;
  if (G__13345) {
    var bit__4191__auto__ = G__13345.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4191__auto__ || G__13345.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__13345.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__13345);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__13345);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__13347 = x;
  if (G__13347) {
    var bit__4191__auto__ = G__13347.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4191__auto__ || G__13347.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__13347.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__13347);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__13347);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__13348 = sn;
      s = G__13348;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__13349__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__13350 = conj.call(null, coll, x);
          var G__13351 = cljs.core.first.call(null, xs);
          var G__13352 = cljs.core.next.call(null, xs);
          coll = G__13350;
          x = G__13351;
          xs = G__13352;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__13349 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13349__delegate.call(this, coll, x, xs);
    };
    G__13349.cljs$lang$maxFixedArity = 2;
    G__13349.cljs$lang$applyTo = function(arglist__13353) {
      var coll = cljs.core.first(arglist__13353);
      arglist__13353 = cljs.core.next(arglist__13353);
      var x = cljs.core.first(arglist__13353);
      var xs = cljs.core.rest(arglist__13353);
      return G__13349__delegate(coll, x, xs);
    };
    G__13349.cljs$core$IFn$_invoke$arity$variadic = G__13349__delegate;
    return G__13349;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__13354 = cljs.core.next.call(null, s);
      var G__13355 = acc + 1;
      s = G__13354;
      acc = G__13355;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__13357 = coll;
      if (G__13357) {
        var bit__4184__auto__ = G__13357.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4184__auto__ || G__13357.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__13358 = cljs.core.next.call(null, coll);
              var G__13359 = n - 1;
              coll = G__13358;
              n = G__13359;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__13360 = cljs.core.next.call(null, coll);
              var G__13361 = n - 1;
              var G__13362 = not_found;
              coll = G__13360;
              n = G__13361;
              not_found = G__13362;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__13367 = coll;
          if (G__13367) {
            var bit__4184__auto__ = G__13367.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4184__auto__ || G__13367.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__13368 = coll;
                  if (G__13368) {
                    var bit__4191__auto__ = G__13368.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4191__auto__ || G__13368.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__13368.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13368);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13368);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__13369 = coll;
          if (G__13369) {
            var bit__4184__auto__ = G__13369.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4184__auto__ || G__13369.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__13370 = coll;
                  if (G__13370) {
                    var bit__4191__auto__ = G__13370.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4191__auto__ || G__13370.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__13370.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13370);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13370);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__13373 = o;
        if (G__13373) {
          var bit__4184__auto__ = G__13373.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4184__auto__ || G__13373.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__13374 = o;
        if (G__13374) {
          var bit__4184__auto__ = G__13374.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4184__auto__ || G__13374.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__13375__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__13376 = ret;
          var G__13377 = cljs.core.first.call(null, kvs);
          var G__13378 = cljs.core.second.call(null, kvs);
          var G__13379 = cljs.core.nnext.call(null, kvs);
          coll = G__13376;
          k = G__13377;
          v = G__13378;
          kvs = G__13379;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__13375 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__13375__delegate.call(this, coll, k, v, kvs);
    };
    G__13375.cljs$lang$maxFixedArity = 3;
    G__13375.cljs$lang$applyTo = function(arglist__13380) {
      var coll = cljs.core.first(arglist__13380);
      arglist__13380 = cljs.core.next(arglist__13380);
      var k = cljs.core.first(arglist__13380);
      arglist__13380 = cljs.core.next(arglist__13380);
      var v = cljs.core.first(arglist__13380);
      var kvs = cljs.core.rest(arglist__13380);
      return G__13375__delegate(coll, k, v, kvs);
    };
    G__13375.cljs$core$IFn$_invoke$arity$variadic = G__13375__delegate;
    return G__13375;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__13381__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__13382 = ret;
            var G__13383 = cljs.core.first.call(null, ks);
            var G__13384 = cljs.core.next.call(null, ks);
            coll = G__13382;
            k = G__13383;
            ks = G__13384;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__13381 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13381__delegate.call(this, coll, k, ks);
    };
    G__13381.cljs$lang$maxFixedArity = 2;
    G__13381.cljs$lang$applyTo = function(arglist__13385) {
      var coll = cljs.core.first(arglist__13385);
      arglist__13385 = cljs.core.next(arglist__13385);
      var k = cljs.core.first(arglist__13385);
      var ks = cljs.core.rest(arglist__13385);
      return G__13381__delegate(coll, k, ks);
    };
    G__13381.cljs$core$IFn$_invoke$arity$variadic = G__13381__delegate;
    return G__13381;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3541__auto__ = goog.isFunction(f);
  if (or__3541__auto__) {
    return or__3541__auto__;
  } else {
    var G__13389 = f;
    if (G__13389) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto____$1 = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto____$1)) {
          return or__3541__auto____$1;
        } else {
          return G__13389.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__13389.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__13389);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__13389);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__13397 = o;
    if (G__13397) {
      var bit__4191__auto__ = G__13397.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4191__auto__ || G__13397.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__13397.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13397);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13397);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t13398 !== "undefined") {
      } else {
        cljs.core.t13398 = function(meta, o, with_meta, meta13399) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta13399 = meta13399;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t13398.cljs$lang$type = true;
        cljs.core.t13398.cljs$lang$ctorStr = "cljs.core/t13398";
        cljs.core.t13398.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/t13398");
        };
        cljs.core.t13398.prototype.call = function() {
          var G__13402__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__13402 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__13402__delegate.call(this, self__, args);
          };
          G__13402.cljs$lang$maxFixedArity = 1;
          G__13402.cljs$lang$applyTo = function(arglist__13403) {
            var self__ = cljs.core.first(arglist__13403);
            var args = cljs.core.rest(arglist__13403);
            return G__13402__delegate(self__, args);
          };
          G__13402.cljs$core$IFn$_invoke$arity$variadic = G__13402__delegate;
          return G__13402;
        }();
        cljs.core.t13398.prototype.apply = function(self__, args13401) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13401)));
        };
        cljs.core.t13398.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__13404__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__13404 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__13404__delegate.call(this, args);
          };
          G__13404.cljs$lang$maxFixedArity = 0;
          G__13404.cljs$lang$applyTo = function(arglist__13405) {
            var args = cljs.core.seq(arglist__13405);
            return G__13404__delegate(args);
          };
          G__13404.cljs$core$IFn$_invoke$arity$variadic = G__13404__delegate;
          return G__13404;
        }();
        cljs.core.t13398.prototype.cljs$core$Fn$ = true;
        cljs.core.t13398.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13400) {
          var self__ = this;
          var _13400__$1 = this;
          return self__.meta13399;
        };
        cljs.core.t13398.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13400, meta13399__$1) {
          var self__ = this;
          var _13400__$1 = this;
          return new cljs.core.t13398(self__.meta, self__.o, self__.with_meta, meta13399__$1);
        };
        cljs.core.__GT_t13398 = function __GT_t13398(meta__$1, o__$1, with_meta__$1, meta13399) {
          return new cljs.core.t13398(meta__$1, o__$1, with_meta__$1, meta13399);
        };
      }
      return new cljs.core.t13398(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3529__auto__ = !(o == null);
    if (and__3529__auto__) {
      var G__13409 = o;
      if (G__13409) {
        var bit__4191__auto__ = G__13409.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4191__auto__ || G__13409.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__13409.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__13409);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__13409);
      }
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__13410__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__13411 = ret;
            var G__13412 = cljs.core.first.call(null, ks);
            var G__13413 = cljs.core.next.call(null, ks);
            coll = G__13411;
            k = G__13412;
            ks = G__13413;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__13410 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13410__delegate.call(this, coll, k, ks);
    };
    G__13410.cljs$lang$maxFixedArity = 2;
    G__13410.cljs$lang$applyTo = function(arglist__13414) {
      var coll = cljs.core.first(arglist__13414);
      arglist__13414 = cljs.core.next(arglist__13414);
      var k = cljs.core.first(arglist__13414);
      var ks = cljs.core.rest(arglist__13414);
      return G__13410__delegate(coll, k, ks);
    };
    G__13410.cljs$core$IFn$_invoke$arity$variadic = G__13410__delegate;
    return G__13410;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj13416 = {};
  return obj13416;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj13420 = {};
      return obj13420;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__13422 = o;
    if (G__13422) {
      var bit__4184__auto__ = G__13422.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4184__auto__ || G__13422.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__13424 = x;
    if (G__13424) {
      var bit__4191__auto__ = G__13424.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4191__auto__ || G__13424.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__13424.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__13424);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__13424);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__13426 = x;
    if (G__13426) {
      var bit__4191__auto__ = G__13426.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4191__auto__ || G__13426.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__13426.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__13426);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__13426);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__13428 = x;
  if (G__13428) {
    var bit__4191__auto__ = G__13428.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4191__auto__ || G__13428.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__13428.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__13428);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__13428);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__13430 = x;
  if (G__13430) {
    var bit__4191__auto__ = G__13430.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4191__auto__ || G__13430.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__13430.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__13430);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__13430);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__13432 = x;
  if (G__13432) {
    var bit__4191__auto__ = G__13432.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4191__auto__ || G__13432.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__13432.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__13432);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__13432);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__13434 = x;
  if (G__13434) {
    var bit__4191__auto__ = G__13434.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4191__auto__ || G__13434.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__13434.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__13434);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__13434);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__13436 = x;
    if (G__13436) {
      var bit__4191__auto__ = G__13436.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4191__auto__ || G__13436.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__13436.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__13436);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__13436);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__13438 = x;
  if (G__13438) {
    var bit__4191__auto__ = G__13438.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4191__auto__ || G__13438.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__13438.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__13438);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__13438);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__13440 = x;
  if (G__13440) {
    var bit__4184__auto__ = G__13440.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4184__auto__ || G__13440.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj13444 = {};
    return obj13444;
  };
  var js_obj__1 = function() {
    var G__13445__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__13445 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__13445__delegate.call(this, keyvals);
    };
    G__13445.cljs$lang$maxFixedArity = 0;
    G__13445.cljs$lang$applyTo = function(arglist__13446) {
      var keyvals = cljs.core.seq(arglist__13446);
      return G__13445__delegate(keyvals);
    };
    G__13445.cljs$core$IFn$_invoke$arity$variadic = G__13445__delegate;
    return G__13445;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13447 = i__$1 + 1;
      var G__13448 = j__$1 + 1;
      var G__13449 = len__$1 - 1;
      i__$1 = G__13447;
      j__$1 = G__13448;
      len__$1 = G__13449;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13450 = i__$1 - 1;
      var G__13451 = j__$1 - 1;
      var G__13452 = len__$1 - 1;
      i__$1 = G__13450;
      j__$1 = G__13451;
      len__$1 = G__13452;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj13454 = {};
  return obj13454;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__13456 = s;
    if (G__13456) {
      var bit__4191__auto__ = G__13456.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4191__auto__ || G__13456.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__13456.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13456);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13456);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__13458 = s;
  if (G__13458) {
    var bit__4191__auto__ = G__13458.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4191__auto__ || G__13458.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__13458.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__13458);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__13458);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3541__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3541__auto__) {
    return or__3541__auto__;
  } else {
    var G__13462 = f;
    if (G__13462) {
      var bit__4191__auto__ = G__13462.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4191__auto__ || G__13462.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__13462.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__13462);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__13462);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__13463__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__13464 = cljs.core.conj.call(null, s, x__$1);
              var G__13465 = etc;
              s = G__13464;
              xs = G__13465;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__13463 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13463__delegate.call(this, x, y, more);
    };
    G__13463.cljs$lang$maxFixedArity = 2;
    G__13463.cljs$lang$applyTo = function(arglist__13466) {
      var x = cljs.core.first(arglist__13466);
      arglist__13466 = cljs.core.next(arglist__13466);
      var y = cljs.core.first(arglist__13466);
      var more = cljs.core.rest(arglist__13466);
      return G__13463__delegate(x, y, more);
    };
    G__13463.cljs$core$IFn$_invoke$arity$variadic = G__13463__delegate;
    return G__13463;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3541__auto__ = cljs.core.seq.call(null, coll);
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__13468 = x;
            if (G__13468) {
              var bit__4184__auto__ = G__13468.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4184__auto__ || G__13468.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__13469 = xs;
        var G__13470 = ys;
        var G__13471 = len;
        var G__13472 = n + 1;
        xs = G__13469;
        ys = G__13470;
        len = G__13471;
        n = G__13472;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__13473 = nval;
          var G__13474 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__13473;
          coll__$1 = G__13474;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__13477 = coll;
      if (G__13477) {
        var bit__4184__auto__ = G__13477.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4184__auto__ || G__13477.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__13478 = coll;
      if (G__13478) {
        var bit__4184__auto__ = G__13478.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4184__auto__ || G__13478.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__13479__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__13479 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13479__delegate.call(this, x, y, more);
    };
    G__13479.cljs$lang$maxFixedArity = 2;
    G__13479.cljs$lang$applyTo = function(arglist__13480) {
      var x = cljs.core.first(arglist__13480);
      arglist__13480 = cljs.core.next(arglist__13480);
      var y = cljs.core.first(arglist__13480);
      var more = cljs.core.rest(arglist__13480);
      return G__13479__delegate(x, y, more);
    };
    G__13479.cljs$core$IFn$_invoke$arity$variadic = G__13479__delegate;
    return G__13479;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__13481__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__13481 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13481__delegate.call(this, x, y, more);
    };
    G__13481.cljs$lang$maxFixedArity = 2;
    G__13481.cljs$lang$applyTo = function(arglist__13482) {
      var x = cljs.core.first(arglist__13482);
      arglist__13482 = cljs.core.next(arglist__13482);
      var y = cljs.core.first(arglist__13482);
      var more = cljs.core.rest(arglist__13482);
      return G__13481__delegate(x, y, more);
    };
    G__13481.cljs$core$IFn$_invoke$arity$variadic = G__13481__delegate;
    return G__13481;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__13483__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__13483 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13483__delegate.call(this, x, y, more);
    };
    G__13483.cljs$lang$maxFixedArity = 2;
    G__13483.cljs$lang$applyTo = function(arglist__13484) {
      var x = cljs.core.first(arglist__13484);
      arglist__13484 = cljs.core.next(arglist__13484);
      var y = cljs.core.first(arglist__13484);
      var more = cljs.core.rest(arglist__13484);
      return G__13483__delegate(x, y, more);
    };
    G__13483.cljs$core$IFn$_invoke$arity$variadic = G__13483__delegate;
    return G__13483;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__13485__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__13485 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13485__delegate.call(this, x, y, more);
    };
    G__13485.cljs$lang$maxFixedArity = 2;
    G__13485.cljs$lang$applyTo = function(arglist__13486) {
      var x = cljs.core.first(arglist__13486);
      arglist__13486 = cljs.core.next(arglist__13486);
      var y = cljs.core.first(arglist__13486);
      var more = cljs.core.rest(arglist__13486);
      return G__13485__delegate(x, y, more);
    };
    G__13485.cljs$core$IFn$_invoke$arity$variadic = G__13485__delegate;
    return G__13485;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__13487__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__13488 = y;
            var G__13489 = cljs.core.first.call(null, more);
            var G__13490 = cljs.core.next.call(null, more);
            x = G__13488;
            y = G__13489;
            more = G__13490;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13487 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13487__delegate.call(this, x, y, more);
    };
    G__13487.cljs$lang$maxFixedArity = 2;
    G__13487.cljs$lang$applyTo = function(arglist__13491) {
      var x = cljs.core.first(arglist__13491);
      arglist__13491 = cljs.core.next(arglist__13491);
      var y = cljs.core.first(arglist__13491);
      var more = cljs.core.rest(arglist__13491);
      return G__13487__delegate(x, y, more);
    };
    G__13487.cljs$core$IFn$_invoke$arity$variadic = G__13487__delegate;
    return G__13487;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__13492__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__13493 = y;
            var G__13494 = cljs.core.first.call(null, more);
            var G__13495 = cljs.core.next.call(null, more);
            x = G__13493;
            y = G__13494;
            more = G__13495;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13492 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13492__delegate.call(this, x, y, more);
    };
    G__13492.cljs$lang$maxFixedArity = 2;
    G__13492.cljs$lang$applyTo = function(arglist__13496) {
      var x = cljs.core.first(arglist__13496);
      arglist__13496 = cljs.core.next(arglist__13496);
      var y = cljs.core.first(arglist__13496);
      var more = cljs.core.rest(arglist__13496);
      return G__13492__delegate(x, y, more);
    };
    G__13492.cljs$core$IFn$_invoke$arity$variadic = G__13492__delegate;
    return G__13492;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__13497__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__13498 = y;
            var G__13499 = cljs.core.first.call(null, more);
            var G__13500 = cljs.core.next.call(null, more);
            x = G__13498;
            y = G__13499;
            more = G__13500;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13497 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13497__delegate.call(this, x, y, more);
    };
    G__13497.cljs$lang$maxFixedArity = 2;
    G__13497.cljs$lang$applyTo = function(arglist__13501) {
      var x = cljs.core.first(arglist__13501);
      arglist__13501 = cljs.core.next(arglist__13501);
      var y = cljs.core.first(arglist__13501);
      var more = cljs.core.rest(arglist__13501);
      return G__13497__delegate(x, y, more);
    };
    G__13497.cljs$core$IFn$_invoke$arity$variadic = G__13497__delegate;
    return G__13497;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__13502__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__13503 = y;
            var G__13504 = cljs.core.first.call(null, more);
            var G__13505 = cljs.core.next.call(null, more);
            x = G__13503;
            y = G__13504;
            more = G__13505;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13502 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13502__delegate.call(this, x, y, more);
    };
    G__13502.cljs$lang$maxFixedArity = 2;
    G__13502.cljs$lang$applyTo = function(arglist__13506) {
      var x = cljs.core.first(arglist__13506);
      arglist__13506 = cljs.core.next(arglist__13506);
      var y = cljs.core.first(arglist__13506);
      var more = cljs.core.rest(arglist__13506);
      return G__13502__delegate(x, y, more);
    };
    G__13502.cljs$core$IFn$_invoke$arity$variadic = G__13502__delegate;
    return G__13502;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3848__auto__ = x;
    var y__3849__auto__ = y;
    return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
  };
  var max__3 = function() {
    var G__13507__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3848__auto__ = x;
        var y__3849__auto__ = y;
        return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
      }(), more);
    };
    var G__13507 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13507__delegate.call(this, x, y, more);
    };
    G__13507.cljs$lang$maxFixedArity = 2;
    G__13507.cljs$lang$applyTo = function(arglist__13508) {
      var x = cljs.core.first(arglist__13508);
      arglist__13508 = cljs.core.next(arglist__13508);
      var y = cljs.core.first(arglist__13508);
      var more = cljs.core.rest(arglist__13508);
      return G__13507__delegate(x, y, more);
    };
    G__13507.cljs$core$IFn$_invoke$arity$variadic = G__13507__delegate;
    return G__13507;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3855__auto__ = x;
    var y__3856__auto__ = y;
    return x__3855__auto__ < y__3856__auto__ ? x__3855__auto__ : y__3856__auto__;
  };
  var min__3 = function() {
    var G__13509__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3855__auto__ = x;
        var y__3856__auto__ = y;
        return x__3855__auto__ < y__3856__auto__ ? x__3855__auto__ : y__3856__auto__;
      }(), more);
    };
    var G__13509 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13509__delegate.call(this, x, y, more);
    };
    G__13509.cljs$lang$maxFixedArity = 2;
    G__13509.cljs$lang$applyTo = function(arglist__13510) {
      var x = cljs.core.first(arglist__13510);
      arglist__13510 = cljs.core.next(arglist__13510);
      var y = cljs.core.first(arglist__13510);
      var more = cljs.core.rest(arglist__13510);
      return G__13509__delegate(x, y, more);
    };
    G__13509.cljs$core$IFn$_invoke$arity$variadic = G__13509__delegate;
    return G__13509;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__13511__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__13511 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13511__delegate.call(this, x, y, more);
    };
    G__13511.cljs$lang$maxFixedArity = 2;
    G__13511.cljs$lang$applyTo = function(arglist__13512) {
      var x = cljs.core.first(arglist__13512);
      arglist__13512 = cljs.core.next(arglist__13512);
      var y = cljs.core.first(arglist__13512);
      var more = cljs.core.rest(arglist__13512);
      return G__13511__delegate(x, y, more);
    };
    G__13511.cljs$core$IFn$_invoke$arity$variadic = G__13511__delegate;
    return G__13511;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__13513__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__13513 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13513__delegate.call(this, x, y, more);
    };
    G__13513.cljs$lang$maxFixedArity = 2;
    G__13513.cljs$lang$applyTo = function(arglist__13514) {
      var x = cljs.core.first(arglist__13514);
      arglist__13514 = cljs.core.next(arglist__13514);
      var y = cljs.core.first(arglist__13514);
      var more = cljs.core.rest(arglist__13514);
      return G__13513__delegate(x, y, more);
    };
    G__13513.cljs$core$IFn$_invoke$arity$variadic = G__13513__delegate;
    return G__13513;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__13515__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__13515 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13515__delegate.call(this, x, y, more);
    };
    G__13515.cljs$lang$maxFixedArity = 2;
    G__13515.cljs$lang$applyTo = function(arglist__13516) {
      var x = cljs.core.first(arglist__13516);
      arglist__13516 = cljs.core.next(arglist__13516);
      var y = cljs.core.first(arglist__13516);
      var more = cljs.core.rest(arglist__13516);
      return G__13515__delegate(x, y, more);
    };
    G__13515.cljs$core$IFn$_invoke$arity$variadic = G__13515__delegate;
    return G__13515;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__13517__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__13517 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13517__delegate.call(this, x, y, more);
    };
    G__13517.cljs$lang$maxFixedArity = 2;
    G__13517.cljs$lang$applyTo = function(arglist__13518) {
      var x = cljs.core.first(arglist__13518);
      arglist__13518 = cljs.core.next(arglist__13518);
      var y = cljs.core.first(arglist__13518);
      var more = cljs.core.rest(arglist__13518);
      return G__13517__delegate(x, y, more);
    };
    G__13517.cljs$core$IFn$_invoke$arity$variadic = G__13517__delegate;
    return G__13517;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__13519__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__13519 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13519__delegate.call(this, x, y, more);
    };
    G__13519.cljs$lang$maxFixedArity = 2;
    G__13519.cljs$lang$applyTo = function(arglist__13520) {
      var x = cljs.core.first(arglist__13520);
      arglist__13520 = cljs.core.next(arglist__13520);
      var y = cljs.core.first(arglist__13520);
      var more = cljs.core.rest(arglist__13520);
      return G__13519__delegate(x, y, more);
    };
    G__13519.cljs$core$IFn$_invoke$arity$variadic = G__13519__delegate;
    return G__13519;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__13521__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__13521 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13521__delegate.call(this, x, y, more);
    };
    G__13521.cljs$lang$maxFixedArity = 2;
    G__13521.cljs$lang$applyTo = function(arglist__13522) {
      var x = cljs.core.first(arglist__13522);
      arglist__13522 = cljs.core.next(arglist__13522);
      var y = cljs.core.first(arglist__13522);
      var more = cljs.core.rest(arglist__13522);
      return G__13521__delegate(x, y, more);
    };
    G__13521.cljs$core$IFn$_invoke$arity$variadic = G__13521__delegate;
    return G__13521;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__13523__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__13523 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13523__delegate.call(this, x, y, more);
    };
    G__13523.cljs$lang$maxFixedArity = 2;
    G__13523.cljs$lang$applyTo = function(arglist__13524) {
      var x = cljs.core.first(arglist__13524);
      arglist__13524 = cljs.core.next(arglist__13524);
      var y = cljs.core.first(arglist__13524);
      var more = cljs.core.rest(arglist__13524);
      return G__13523__delegate(x, y, more);
    };
    G__13523.cljs$core$IFn$_invoke$arity$variadic = G__13523__delegate;
    return G__13523;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__13525__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__13526 = y;
            var G__13527 = cljs.core.first.call(null, more);
            var G__13528 = cljs.core.next.call(null, more);
            x = G__13526;
            y = G__13527;
            more = G__13528;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13525 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13525__delegate.call(this, x, y, more);
    };
    G__13525.cljs$lang$maxFixedArity = 2;
    G__13525.cljs$lang$applyTo = function(arglist__13529) {
      var x = cljs.core.first(arglist__13529);
      arglist__13529 = cljs.core.next(arglist__13529);
      var y = cljs.core.first(arglist__13529);
      var more = cljs.core.rest(arglist__13529);
      return G__13525__delegate(x, y, more);
    };
    G__13525.cljs$core$IFn$_invoke$arity$variadic = G__13525__delegate;
    return G__13525;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__13530 = n__$1 - 1;
      var G__13531 = cljs.core.next.call(null, xs);
      n__$1 = G__13530;
      xs = G__13531;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__13532__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__13533 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__13534 = cljs.core.next.call(null, more);
          sb = G__13533;
          more = G__13534;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__13532 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__13532__delegate.call(this, x, ys);
    };
    G__13532.cljs$lang$maxFixedArity = 1;
    G__13532.cljs$lang$applyTo = function(arglist__13535) {
      var x = cljs.core.first(arglist__13535);
      var ys = cljs.core.rest(arglist__13535);
      return G__13532__delegate(x, ys);
    };
    G__13532.cljs$core$IFn$_invoke$arity$variadic = G__13532__delegate;
    return G__13532;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__13536 = cljs.core.next.call(null, xs);
            var G__13537 = cljs.core.next.call(null, ys);
            xs = G__13536;
            ys = G__13537;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__13538 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__13539 = cljs.core.next.call(null, s);
        res = G__13538;
        s = G__13539;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__13540 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__13541 = cljs.core.next.call(null, s);
      h = G__13540;
      s = G__13541;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__13542 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__13543 = cljs.core.next.call(null, s__$1);
      h = G__13542;
      s__$1 = G__13543;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__13550_13556 = cljs.core.seq.call(null, fn_map);
  var chunk__13551_13557 = null;
  var count__13552_13558 = 0;
  var i__13553_13559 = 0;
  while (true) {
    if (i__13553_13559 < count__13552_13558) {
      var vec__13554_13560 = cljs.core._nth.call(null, chunk__13551_13557, i__13553_13559);
      var key_name_13561 = cljs.core.nth.call(null, vec__13554_13560, 0, null);
      var f_13562 = cljs.core.nth.call(null, vec__13554_13560, 1, null);
      var str_name_13563 = cljs.core.name.call(null, key_name_13561);
      obj[str_name_13563] = f_13562;
      var G__13564 = seq__13550_13556;
      var G__13565 = chunk__13551_13557;
      var G__13566 = count__13552_13558;
      var G__13567 = i__13553_13559 + 1;
      seq__13550_13556 = G__13564;
      chunk__13551_13557 = G__13565;
      count__13552_13558 = G__13566;
      i__13553_13559 = G__13567;
      continue;
    } else {
      var temp__4126__auto___13568 = cljs.core.seq.call(null, seq__13550_13556);
      if (temp__4126__auto___13568) {
        var seq__13550_13569__$1 = temp__4126__auto___13568;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13550_13569__$1)) {
          var c__4297__auto___13570 = cljs.core.chunk_first.call(null, seq__13550_13569__$1);
          var G__13571 = cljs.core.chunk_rest.call(null, seq__13550_13569__$1);
          var G__13572 = c__4297__auto___13570;
          var G__13573 = cljs.core.count.call(null, c__4297__auto___13570);
          var G__13574 = 0;
          seq__13550_13556 = G__13571;
          chunk__13551_13557 = G__13572;
          count__13552_13558 = G__13573;
          i__13553_13559 = G__13574;
          continue;
        } else {
          var vec__13555_13575 = cljs.core.first.call(null, seq__13550_13569__$1);
          var key_name_13576 = cljs.core.nth.call(null, vec__13555_13575, 0, null);
          var f_13577 = cljs.core.nth.call(null, vec__13555_13575, 1, null);
          var str_name_13578 = cljs.core.name.call(null, key_name_13576);
          obj[str_name_13578] = f_13577;
          var G__13579 = cljs.core.next.call(null, seq__13550_13569__$1);
          var G__13580 = null;
          var G__13581 = 0;
          var G__13582 = 0;
          seq__13550_13556 = G__13579;
          chunk__13551_13557 = G__13580;
          count__13552_13558 = G__13581;
          i__13553_13559 = G__13582;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__13584 = coll;
  if (G__13584) {
    var bit__4191__auto__ = G__13584.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4191__auto__ || G__13584.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__13584.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__13584);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__13584);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__13585 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__13585;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__13586 = i - 1;
        var G__13587 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__13586;
        r = G__13587;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__13588) {
    var xs = cljs.core.seq(arglist__13588);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3541__auto__ = coll == null;
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      var G__13592 = coll;
      if (G__13592) {
        var bit__4184__auto__ = G__13592.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4184__auto__ || G__13592.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__13594 = x;
  if (G__13594) {
    var bit__4191__auto__ = G__13594.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4191__auto__ || G__13594.cljs$core$IList$) {
      return true;
    } else {
      if (!G__13594.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__13594);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__13594);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__13596 = null;
  var G__13596__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__13596__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__13596 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13596__2.call(this, self__, coll);
      case 3:
        return G__13596__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13596;
}();
cljs.core.Keyword.prototype.apply = function(self__, args13595) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13595)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__13598 = x;
    if (G__13598) {
      var bit__4184__auto__ = G__13598.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4184__auto__ || G__13598.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__13599 = ls.sval();
        ls = G__13599;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__13601 = s;
    if (G__13601) {
      var bit__4184__auto__ = G__13601.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4184__auto__ || G__13601.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__13602 = cljs.core.next.call(null, s__$1);
      s__$1 = G__13602;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_13603 = 0;
  var xs_13604 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_13604) {
      ret[i_13603] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_13604));
      var G__13605 = i_13603 + 1;
      var G__13606 = cljs.core.next.call(null, xs_13604);
      i_13603 = G__13605;
      xs_13604 = G__13606;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13607 = i + 1;
          var G__13608 = cljs.core.next.call(null, s__$1);
          i = G__13607;
          s__$1 = G__13608;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___13609 = size;
      var i_13610 = 0;
      while (true) {
        if (i_13610 < n__4397__auto___13609) {
          a[i_13610] = init_val_or_seq;
          var G__13611 = i_13610 + 1;
          i_13610 = G__13611;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13612 = i + 1;
          var G__13613 = cljs.core.next.call(null, s__$1);
          i = G__13612;
          s__$1 = G__13613;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___13614 = size;
      var i_13615 = 0;
      while (true) {
        if (i_13615 < n__4397__auto___13614) {
          a[i_13615] = init_val_or_seq;
          var G__13616 = i_13615 + 1;
          i_13615 = G__13616;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13617 = i + 1;
          var G__13618 = cljs.core.next.call(null, s__$1);
          i = G__13617;
          s__$1 = G__13618;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___13619 = size;
      var i_13620 = 0;
      while (true) {
        if (i_13620 < n__4397__auto___13619) {
          a[i_13620] = init_val_or_seq;
          var G__13621 = i_13620 + 1;
          i_13620 = G__13621;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__13622 = i + 1;
          var G__13623 = cljs.core.next.call(null, s__$1);
          i = G__13622;
          s__$1 = G__13623;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4397__auto___13624 = size;
      var i_13625 = 0;
      while (true) {
        if (i_13625 < n__4397__auto___13624) {
          a[i_13625] = init_val_or_seq;
          var G__13626 = i_13625 + 1;
          i_13625 = G__13626;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__13627 = cljs.core.next.call(null, s__$1);
        var G__13628 = i - 1;
        var G__13629 = sum + 1;
        s__$1 = G__13627;
        i = G__13628;
        sum = G__13629;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__13630__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__13630 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13630__delegate.call(this, x, y, zs);
    };
    G__13630.cljs$lang$maxFixedArity = 2;
    G__13630.cljs$lang$applyTo = function(arglist__13631) {
      var x = cljs.core.first(arglist__13631);
      arglist__13631 = cljs.core.next(arglist__13631);
      var y = cljs.core.first(arglist__13631);
      var zs = cljs.core.rest(arglist__13631);
      return G__13630__delegate(x, y, zs);
    };
    G__13630.cljs$core$IFn$_invoke$arity$variadic = G__13630__delegate;
    return G__13630;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__13632__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__13632 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__13632__delegate.call(this, a, b, c, d, more);
    };
    G__13632.cljs$lang$maxFixedArity = 4;
    G__13632.cljs$lang$applyTo = function(arglist__13633) {
      var a = cljs.core.first(arglist__13633);
      arglist__13633 = cljs.core.next(arglist__13633);
      var b = cljs.core.first(arglist__13633);
      arglist__13633 = cljs.core.next(arglist__13633);
      var c = cljs.core.first(arglist__13633);
      arglist__13633 = cljs.core.next(arglist__13633);
      var d = cljs.core.first(arglist__13633);
      var more = cljs.core.rest(arglist__13633);
      return G__13632__delegate(a, b, c, d, more);
    };
    G__13632.cljs$core$IFn$_invoke$arity$variadic = G__13632__delegate;
    return G__13632;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__13634__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13635 = ntcoll;
          var G__13636 = cljs.core.first.call(null, vals);
          var G__13637 = cljs.core.next.call(null, vals);
          tcoll = G__13635;
          val = G__13636;
          vals = G__13637;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13634 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13634__delegate.call(this, tcoll, val, vals);
    };
    G__13634.cljs$lang$maxFixedArity = 2;
    G__13634.cljs$lang$applyTo = function(arglist__13638) {
      var tcoll = cljs.core.first(arglist__13638);
      arglist__13638 = cljs.core.next(arglist__13638);
      var val = cljs.core.first(arglist__13638);
      var vals = cljs.core.rest(arglist__13638);
      return G__13634__delegate(tcoll, val, vals);
    };
    G__13634.cljs$core$IFn$_invoke$arity$variadic = G__13634__delegate;
    return G__13634;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__13639__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__13640 = ntcoll;
          var G__13641 = cljs.core.first.call(null, kvs);
          var G__13642 = cljs.core.second.call(null, kvs);
          var G__13643 = cljs.core.nnext.call(null, kvs);
          tcoll = G__13640;
          key = G__13641;
          val = G__13642;
          kvs = G__13643;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13639 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__13639__delegate.call(this, tcoll, key, val, kvs);
    };
    G__13639.cljs$lang$maxFixedArity = 3;
    G__13639.cljs$lang$applyTo = function(arglist__13644) {
      var tcoll = cljs.core.first(arglist__13644);
      arglist__13644 = cljs.core.next(arglist__13644);
      var key = cljs.core.first(arglist__13644);
      arglist__13644 = cljs.core.next(arglist__13644);
      var val = cljs.core.first(arglist__13644);
      var kvs = cljs.core.rest(arglist__13644);
      return G__13639__delegate(tcoll, key, val, kvs);
    };
    G__13639.cljs$core$IFn$_invoke$arity$variadic = G__13639__delegate;
    return G__13639;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__13645__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__13646 = ntcoll;
          var G__13647 = cljs.core.first.call(null, ks);
          var G__13648 = cljs.core.next.call(null, ks);
          tcoll = G__13646;
          key = G__13647;
          ks = G__13648;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13645 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13645__delegate.call(this, tcoll, key, ks);
    };
    G__13645.cljs$lang$maxFixedArity = 2;
    G__13645.cljs$lang$applyTo = function(arglist__13649) {
      var tcoll = cljs.core.first(arglist__13649);
      arglist__13649 = cljs.core.next(arglist__13649);
      var key = cljs.core.first(arglist__13649);
      var ks = cljs.core.rest(arglist__13649);
      return G__13645__delegate(tcoll, key, ks);
    };
    G__13645.cljs$core$IFn$_invoke$arity$variadic = G__13645__delegate;
    return G__13645;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__13650__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13651 = ntcoll;
          var G__13652 = cljs.core.first.call(null, vals);
          var G__13653 = cljs.core.next.call(null, vals);
          tcoll = G__13651;
          val = G__13652;
          vals = G__13653;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13650 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13650__delegate.call(this, tcoll, val, vals);
    };
    G__13650.cljs$lang$maxFixedArity = 2;
    G__13650.cljs$lang$applyTo = function(arglist__13654) {
      var tcoll = cljs.core.first(arglist__13654);
      arglist__13654 = cljs.core.next(arglist__13654);
      var val = cljs.core.first(arglist__13654);
      var vals = cljs.core.rest(arglist__13654);
      return G__13650__delegate(tcoll, val, vals);
    };
    G__13650.cljs$core$IFn$_invoke$arity$variadic = G__13650__delegate;
    return G__13650;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4441 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4441);
      } else {
        return f.call(null, a4441);
      }
    } else {
      var b4442 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4441, b4442);
        } else {
          return f.call(null, a4441, b4442);
        }
      } else {
        var c4443 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4441, b4442, c4443);
          } else {
            return f.call(null, a4441, b4442, c4443);
          }
        } else {
          var d4444 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4441, b4442, c4443, d4444);
            } else {
              return f.call(null, a4441, b4442, c4443, d4444);
            }
          } else {
            var e4445 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4441, b4442, c4443, d4444, e4445);
              } else {
                return f.call(null, a4441, b4442, c4443, d4444, e4445);
              }
            } else {
              var f4446 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4441, b4442, c4443, d4444, e4445, f4446);
                } else {
                  return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446);
                }
              } else {
                var g4447 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4441, b4442, c4443, d4444, e4445, f4446, g4447);
                  } else {
                    return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447);
                  }
                } else {
                  var h4448 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448);
                    } else {
                      return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448);
                    }
                  } else {
                    var i4449 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449);
                      } else {
                        return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449);
                      }
                    } else {
                      var j4450 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450);
                        } else {
                          return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450);
                        }
                      } else {
                        var k4451 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451);
                          } else {
                            return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451);
                          }
                        } else {
                          var l4452 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452);
                            } else {
                              return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452);
                            }
                          } else {
                            var m4453 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453);
                              } else {
                                return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453);
                              }
                            } else {
                              var n4454 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454);
                                } else {
                                  return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454);
                                }
                              } else {
                                var o4455 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455);
                                  } else {
                                    return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455);
                                  }
                                } else {
                                  var p4456 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456);
                                    } else {
                                      return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456);
                                    }
                                  } else {
                                    var q4457 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457);
                                      } else {
                                        return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457);
                                      }
                                    } else {
                                      var r4458 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458);
                                        } else {
                                          return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458);
                                        }
                                      } else {
                                        var s4459 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459);
                                          } else {
                                            return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459);
                                          }
                                        } else {
                                          var t4460 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459, t4460);
                                            } else {
                                              return f.call(null, a4441, b4442, c4443, d4444, e4445, f4446, g4447, h4448, i4449, j4450, k4451, l4452, m4453, n4454, o4455, p4456, q4457, r4458, s4459, t4460);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__13655__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__13655 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__13655__delegate.call(this, f, a, b, c, d, args);
    };
    G__13655.cljs$lang$maxFixedArity = 5;
    G__13655.cljs$lang$applyTo = function(arglist__13656) {
      var f = cljs.core.first(arglist__13656);
      arglist__13656 = cljs.core.next(arglist__13656);
      var a = cljs.core.first(arglist__13656);
      arglist__13656 = cljs.core.next(arglist__13656);
      var b = cljs.core.first(arglist__13656);
      arglist__13656 = cljs.core.next(arglist__13656);
      var c = cljs.core.first(arglist__13656);
      arglist__13656 = cljs.core.next(arglist__13656);
      var d = cljs.core.first(arglist__13656);
      var args = cljs.core.rest(arglist__13656);
      return G__13655__delegate(f, a, b, c, d, args);
    };
    G__13655.cljs$core$IFn$_invoke$arity$variadic = G__13655__delegate;
    return G__13655;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__13657__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__13657 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__13657__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__13657.cljs$lang$maxFixedArity = 6;
    G__13657.cljs$lang$applyTo = function(arglist__13658) {
      var obj = cljs.core.first(arglist__13658);
      arglist__13658 = cljs.core.next(arglist__13658);
      var f = cljs.core.first(arglist__13658);
      arglist__13658 = cljs.core.next(arglist__13658);
      var a = cljs.core.first(arglist__13658);
      arglist__13658 = cljs.core.next(arglist__13658);
      var b = cljs.core.first(arglist__13658);
      arglist__13658 = cljs.core.next(arglist__13658);
      var c = cljs.core.first(arglist__13658);
      arglist__13658 = cljs.core.next(arglist__13658);
      var d = cljs.core.first(arglist__13658);
      var args = cljs.core.rest(arglist__13658);
      return G__13657__delegate(obj, f, a, b, c, d, args);
    };
    G__13657.cljs$core$IFn$_invoke$arity$variadic = G__13657__delegate;
    return G__13657;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__13659__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__13659 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13659__delegate.call(this, x, y, more);
    };
    G__13659.cljs$lang$maxFixedArity = 2;
    G__13659.cljs$lang$applyTo = function(arglist__13660) {
      var x = cljs.core.first(arglist__13660);
      arglist__13660 = cljs.core.next(arglist__13660);
      var y = cljs.core.first(arglist__13660);
      var more = cljs.core.rest(arglist__13660);
      return G__13659__delegate(x, y, more);
    };
    G__13659.cljs$core$IFn$_invoke$arity$variadic = G__13659__delegate;
    return G__13659;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__13661 = pred;
        var G__13662 = cljs.core.next.call(null, coll);
        pred = G__13661;
        coll = G__13662;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3541__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        var G__13663 = pred;
        var G__13664 = cljs.core.next.call(null, coll);
        pred = G__13663;
        coll = G__13664;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__13665 = null;
    var G__13665__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__13665__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__13665__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__13665__3 = function() {
      var G__13666__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__13666 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__13666__delegate.call(this, x, y, zs);
      };
      G__13666.cljs$lang$maxFixedArity = 2;
      G__13666.cljs$lang$applyTo = function(arglist__13667) {
        var x = cljs.core.first(arglist__13667);
        arglist__13667 = cljs.core.next(arglist__13667);
        var y = cljs.core.first(arglist__13667);
        var zs = cljs.core.rest(arglist__13667);
        return G__13666__delegate(x, y, zs);
      };
      G__13666.cljs$core$IFn$_invoke$arity$variadic = G__13666__delegate;
      return G__13666;
    }();
    G__13665 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13665__0.call(this);
        case 1:
          return G__13665__1.call(this, x);
        case 2:
          return G__13665__2.call(this, x, y);
        default:
          return G__13665__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13665.cljs$lang$maxFixedArity = 2;
    G__13665.cljs$lang$applyTo = G__13665__3.cljs$lang$applyTo;
    return G__13665;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__13668__delegate = function(args) {
      return x;
    };
    var G__13668 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__13668__delegate.call(this, args);
    };
    G__13668.cljs$lang$maxFixedArity = 0;
    G__13668.cljs$lang$applyTo = function(arglist__13669) {
      var args = cljs.core.seq(arglist__13669);
      return G__13668__delegate(args);
    };
    G__13668.cljs$core$IFn$_invoke$arity$variadic = G__13668__delegate;
    return G__13668;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__13670 = null;
      var G__13670__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__13670__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__13670__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__13670__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__13670__4 = function() {
        var G__13671__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__13671 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13671__delegate.call(this, x, y, z, args);
        };
        G__13671.cljs$lang$maxFixedArity = 3;
        G__13671.cljs$lang$applyTo = function(arglist__13672) {
          var x = cljs.core.first(arglist__13672);
          arglist__13672 = cljs.core.next(arglist__13672);
          var y = cljs.core.first(arglist__13672);
          arglist__13672 = cljs.core.next(arglist__13672);
          var z = cljs.core.first(arglist__13672);
          var args = cljs.core.rest(arglist__13672);
          return G__13671__delegate(x, y, z, args);
        };
        G__13671.cljs$core$IFn$_invoke$arity$variadic = G__13671__delegate;
        return G__13671;
      }();
      G__13670 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13670__0.call(this);
          case 1:
            return G__13670__1.call(this, x);
          case 2:
            return G__13670__2.call(this, x, y);
          case 3:
            return G__13670__3.call(this, x, y, z);
          default:
            return G__13670__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13670.cljs$lang$maxFixedArity = 3;
      G__13670.cljs$lang$applyTo = G__13670__4.cljs$lang$applyTo;
      return G__13670;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__13673 = null;
      var G__13673__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__13673__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__13673__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__13673__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__13673__4 = function() {
        var G__13674__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__13674 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13674__delegate.call(this, x, y, z, args);
        };
        G__13674.cljs$lang$maxFixedArity = 3;
        G__13674.cljs$lang$applyTo = function(arglist__13675) {
          var x = cljs.core.first(arglist__13675);
          arglist__13675 = cljs.core.next(arglist__13675);
          var y = cljs.core.first(arglist__13675);
          arglist__13675 = cljs.core.next(arglist__13675);
          var z = cljs.core.first(arglist__13675);
          var args = cljs.core.rest(arglist__13675);
          return G__13674__delegate(x, y, z, args);
        };
        G__13674.cljs$core$IFn$_invoke$arity$variadic = G__13674__delegate;
        return G__13674;
      }();
      G__13673 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__13673__0.call(this);
          case 1:
            return G__13673__1.call(this, x);
          case 2:
            return G__13673__2.call(this, x, y);
          case 3:
            return G__13673__3.call(this, x, y, z);
          default:
            return G__13673__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13673.cljs$lang$maxFixedArity = 3;
      G__13673.cljs$lang$applyTo = G__13673__4.cljs$lang$applyTo;
      return G__13673;
    }();
  };
  var comp__4 = function() {
    var G__13676__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__13677__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__13678 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__13679 = cljs.core.next.call(null, fs__$2);
                ret = G__13678;
                fs__$2 = G__13679;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__13677 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__13677__delegate.call(this, args);
          };
          G__13677.cljs$lang$maxFixedArity = 0;
          G__13677.cljs$lang$applyTo = function(arglist__13680) {
            var args = cljs.core.seq(arglist__13680);
            return G__13677__delegate(args);
          };
          G__13677.cljs$core$IFn$_invoke$arity$variadic = G__13677__delegate;
          return G__13677;
        }();
      }(fs__$1);
    };
    var G__13676 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__13676__delegate.call(this, f1, f2, f3, fs);
    };
    G__13676.cljs$lang$maxFixedArity = 3;
    G__13676.cljs$lang$applyTo = function(arglist__13681) {
      var f1 = cljs.core.first(arglist__13681);
      arglist__13681 = cljs.core.next(arglist__13681);
      var f2 = cljs.core.first(arglist__13681);
      arglist__13681 = cljs.core.next(arglist__13681);
      var f3 = cljs.core.first(arglist__13681);
      var fs = cljs.core.rest(arglist__13681);
      return G__13676__delegate(f1, f2, f3, fs);
    };
    G__13676.cljs$core$IFn$_invoke$arity$variadic = G__13676__delegate;
    return G__13676;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__13682__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__13682 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__13682__delegate.call(this, args);
      };
      G__13682.cljs$lang$maxFixedArity = 0;
      G__13682.cljs$lang$applyTo = function(arglist__13683) {
        var args = cljs.core.seq(arglist__13683);
        return G__13682__delegate(args);
      };
      G__13682.cljs$core$IFn$_invoke$arity$variadic = G__13682__delegate;
      return G__13682;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__13684__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__13684 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__13684__delegate.call(this, args);
      };
      G__13684.cljs$lang$maxFixedArity = 0;
      G__13684.cljs$lang$applyTo = function(arglist__13685) {
        var args = cljs.core.seq(arglist__13685);
        return G__13684__delegate(args);
      };
      G__13684.cljs$core$IFn$_invoke$arity$variadic = G__13684__delegate;
      return G__13684;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__13686__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__13686 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__13686__delegate.call(this, args);
      };
      G__13686.cljs$lang$maxFixedArity = 0;
      G__13686.cljs$lang$applyTo = function(arglist__13687) {
        var args = cljs.core.seq(arglist__13687);
        return G__13686__delegate(args);
      };
      G__13686.cljs$core$IFn$_invoke$arity$variadic = G__13686__delegate;
      return G__13686;
    }();
  };
  var partial__5 = function() {
    var G__13688__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__13689__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__13689 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__13689__delegate.call(this, args);
        };
        G__13689.cljs$lang$maxFixedArity = 0;
        G__13689.cljs$lang$applyTo = function(arglist__13690) {
          var args = cljs.core.seq(arglist__13690);
          return G__13689__delegate(args);
        };
        G__13689.cljs$core$IFn$_invoke$arity$variadic = G__13689__delegate;
        return G__13689;
      }();
    };
    var G__13688 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__13688__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__13688.cljs$lang$maxFixedArity = 4;
    G__13688.cljs$lang$applyTo = function(arglist__13691) {
      var f = cljs.core.first(arglist__13691);
      arglist__13691 = cljs.core.next(arglist__13691);
      var arg1 = cljs.core.first(arglist__13691);
      arglist__13691 = cljs.core.next(arglist__13691);
      var arg2 = cljs.core.first(arglist__13691);
      arglist__13691 = cljs.core.next(arglist__13691);
      var arg3 = cljs.core.first(arglist__13691);
      var more = cljs.core.rest(arglist__13691);
      return G__13688__delegate(f, arg1, arg2, arg3, more);
    };
    G__13688.cljs$core$IFn$_invoke$arity$variadic = G__13688__delegate;
    return G__13688;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__13692 = null;
      var G__13692__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__13692__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__13692__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__13692__4 = function() {
        var G__13693__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__13693 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13693__delegate.call(this, a, b, c, ds);
        };
        G__13693.cljs$lang$maxFixedArity = 3;
        G__13693.cljs$lang$applyTo = function(arglist__13694) {
          var a = cljs.core.first(arglist__13694);
          arglist__13694 = cljs.core.next(arglist__13694);
          var b = cljs.core.first(arglist__13694);
          arglist__13694 = cljs.core.next(arglist__13694);
          var c = cljs.core.first(arglist__13694);
          var ds = cljs.core.rest(arglist__13694);
          return G__13693__delegate(a, b, c, ds);
        };
        G__13693.cljs$core$IFn$_invoke$arity$variadic = G__13693__delegate;
        return G__13693;
      }();
      G__13692 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__13692__1.call(this, a);
          case 2:
            return G__13692__2.call(this, a, b);
          case 3:
            return G__13692__3.call(this, a, b, c);
          default:
            return G__13692__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13692.cljs$lang$maxFixedArity = 3;
      G__13692.cljs$lang$applyTo = G__13692__4.cljs$lang$applyTo;
      return G__13692;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__13695 = null;
      var G__13695__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__13695__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__13695__4 = function() {
        var G__13696__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__13696 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13696__delegate.call(this, a, b, c, ds);
        };
        G__13696.cljs$lang$maxFixedArity = 3;
        G__13696.cljs$lang$applyTo = function(arglist__13697) {
          var a = cljs.core.first(arglist__13697);
          arglist__13697 = cljs.core.next(arglist__13697);
          var b = cljs.core.first(arglist__13697);
          arglist__13697 = cljs.core.next(arglist__13697);
          var c = cljs.core.first(arglist__13697);
          var ds = cljs.core.rest(arglist__13697);
          return G__13696__delegate(a, b, c, ds);
        };
        G__13696.cljs$core$IFn$_invoke$arity$variadic = G__13696__delegate;
        return G__13696;
      }();
      G__13695 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13695__2.call(this, a, b);
          case 3:
            return G__13695__3.call(this, a, b, c);
          default:
            return G__13695__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13695.cljs$lang$maxFixedArity = 3;
      G__13695.cljs$lang$applyTo = G__13695__4.cljs$lang$applyTo;
      return G__13695;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__13698 = null;
      var G__13698__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__13698__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__13698__4 = function() {
        var G__13699__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__13699 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13699__delegate.call(this, a, b, c, ds);
        };
        G__13699.cljs$lang$maxFixedArity = 3;
        G__13699.cljs$lang$applyTo = function(arglist__13700) {
          var a = cljs.core.first(arglist__13700);
          arglist__13700 = cljs.core.next(arglist__13700);
          var b = cljs.core.first(arglist__13700);
          arglist__13700 = cljs.core.next(arglist__13700);
          var c = cljs.core.first(arglist__13700);
          var ds = cljs.core.rest(arglist__13700);
          return G__13699__delegate(a, b, c, ds);
        };
        G__13699.cljs$core$IFn$_invoke$arity$variadic = G__13699__delegate;
        return G__13699;
      }();
      G__13698 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__13698__2.call(this, a, b);
          case 3:
            return G__13698__3.call(this, a, b, c);
          default:
            return G__13698__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13698.cljs$lang$maxFixedArity = 3;
      G__13698.cljs$lang$applyTo = G__13698__4.cljs$lang$applyTo;
      return G__13698;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4397__auto___13701 = size;
          var i_13702 = 0;
          while (true) {
            if (i_13702 < n__4397__auto___13701) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_13702, cljs.core._nth.call(null, c, i_13702)));
              var G__13703 = i_13702 + 1;
              i_13702 = G__13703;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4397__auto___13704 = size;
        var i_13705 = 0;
        while (true) {
          if (i_13705 < n__4397__auto___13704) {
            var x_13706 = f.call(null, cljs.core._nth.call(null, c, i_13705));
            if (x_13706 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_13706);
            }
            var G__13707 = i_13705 + 1;
            i_13705 = G__13707;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4397__auto___13708 = size;
          var i_13709 = 0;
          while (true) {
            if (i_13709 < n__4397__auto___13708) {
              var x_13710 = f.call(null, idx + i_13709, cljs.core._nth.call(null, c, i_13709));
              if (x_13710 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_13710);
              }
              var G__13711 = i_13709 + 1;
              i_13709 = G__13711;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            return p.call(null, y);
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__13718__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__13718 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13718__delegate.call(this, x, y, z, args);
        };
        G__13718.cljs$lang$maxFixedArity = 3;
        G__13718.cljs$lang$applyTo = function(arglist__13719) {
          var x = cljs.core.first(arglist__13719);
          arglist__13719 = cljs.core.next(arglist__13719);
          var y = cljs.core.first(arglist__13719);
          arglist__13719 = cljs.core.next(arglist__13719);
          var z = cljs.core.first(arglist__13719);
          var args = cljs.core.rest(arglist__13719);
          return G__13718__delegate(x, y, z, args);
        };
        G__13718.cljs$core$IFn$_invoke$arity$variadic = G__13718__delegate;
        return G__13718;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                var and__3529__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3529__auto____$3)) {
                  var and__3529__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3529__auto____$4;
                  }
                } else {
                  return and__3529__auto____$3;
                }
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__13720__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__13712_SHARP_) {
            var and__3529__auto__ = p1.call(null, p1__13712_SHARP_);
            if (cljs.core.truth_(and__3529__auto__)) {
              return p2.call(null, p1__13712_SHARP_);
            } else {
              return and__3529__auto__;
            }
          }, args));
        };
        var G__13720 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13720__delegate.call(this, x, y, z, args);
        };
        G__13720.cljs$lang$maxFixedArity = 3;
        G__13720.cljs$lang$applyTo = function(arglist__13721) {
          var x = cljs.core.first(arglist__13721);
          arglist__13721 = cljs.core.next(arglist__13721);
          var y = cljs.core.first(arglist__13721);
          arglist__13721 = cljs.core.next(arglist__13721);
          var z = cljs.core.first(arglist__13721);
          var args = cljs.core.rest(arglist__13721);
          return G__13720__delegate(x, y, z, args);
        };
        G__13720.cljs$core$IFn$_invoke$arity$variadic = G__13720__delegate;
        return G__13720;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                var and__3529__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3529__auto____$3)) {
                  var and__3529__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3529__auto____$4;
                  }
                } else {
                  return and__3529__auto____$3;
                }
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3529__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3529__auto____$1)) {
              var and__3529__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3529__auto____$2)) {
                var and__3529__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3529__auto____$3)) {
                  var and__3529__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$4)) {
                    var and__3529__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3529__auto____$5)) {
                      var and__3529__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3529__auto____$6)) {
                        var and__3529__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3529__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3529__auto____$7;
                        }
                      } else {
                        return and__3529__auto____$6;
                      }
                    } else {
                      return and__3529__auto____$5;
                    }
                  } else {
                    return and__3529__auto____$4;
                  }
                } else {
                  return and__3529__auto____$3;
                }
              } else {
                return and__3529__auto____$2;
              }
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__13722__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__13713_SHARP_) {
            var and__3529__auto__ = p1.call(null, p1__13713_SHARP_);
            if (cljs.core.truth_(and__3529__auto__)) {
              var and__3529__auto____$1 = p2.call(null, p1__13713_SHARP_);
              if (cljs.core.truth_(and__3529__auto____$1)) {
                return p3.call(null, p1__13713_SHARP_);
              } else {
                return and__3529__auto____$1;
              }
            } else {
              return and__3529__auto__;
            }
          }, args));
        };
        var G__13722 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13722__delegate.call(this, x, y, z, args);
        };
        G__13722.cljs$lang$maxFixedArity = 3;
        G__13722.cljs$lang$applyTo = function(arglist__13723) {
          var x = cljs.core.first(arglist__13723);
          arglist__13723 = cljs.core.next(arglist__13723);
          var y = cljs.core.first(arglist__13723);
          arglist__13723 = cljs.core.next(arglist__13723);
          var z = cljs.core.first(arglist__13723);
          var args = cljs.core.rest(arglist__13723);
          return G__13722__delegate(x, y, z, args);
        };
        G__13722.cljs$core$IFn$_invoke$arity$variadic = G__13722__delegate;
        return G__13722;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__13724__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__13714_SHARP_) {
                return p1__13714_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__13715_SHARP_) {
                var and__3529__auto__ = p1__13715_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3529__auto__)) {
                  return p1__13715_SHARP_.call(null, y);
                } else {
                  return and__3529__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__13716_SHARP_) {
                var and__3529__auto__ = p1__13716_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3529__auto__)) {
                  var and__3529__auto____$1 = p1__13716_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3529__auto____$1)) {
                    return p1__13716_SHARP_.call(null, z);
                  } else {
                    return and__3529__auto____$1;
                  }
                } else {
                  return and__3529__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__13725__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__13717_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__13717_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__13725 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__13725__delegate.call(this, x, y, z, args);
            };
            G__13725.cljs$lang$maxFixedArity = 3;
            G__13725.cljs$lang$applyTo = function(arglist__13726) {
              var x = cljs.core.first(arglist__13726);
              arglist__13726 = cljs.core.next(arglist__13726);
              var y = cljs.core.first(arglist__13726);
              arglist__13726 = cljs.core.next(arglist__13726);
              var z = cljs.core.first(arglist__13726);
              var args = cljs.core.rest(arglist__13726);
              return G__13725__delegate(x, y, z, args);
            };
            G__13725.cljs$core$IFn$_invoke$arity$variadic = G__13725__delegate;
            return G__13725;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__13724 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__13724__delegate.call(this, p1, p2, p3, ps);
    };
    G__13724.cljs$lang$maxFixedArity = 3;
    G__13724.cljs$lang$applyTo = function(arglist__13727) {
      var p1 = cljs.core.first(arglist__13727);
      arglist__13727 = cljs.core.next(arglist__13727);
      var p2 = cljs.core.first(arglist__13727);
      arglist__13727 = cljs.core.next(arglist__13727);
      var p3 = cljs.core.first(arglist__13727);
      var ps = cljs.core.rest(arglist__13727);
      return G__13724__delegate(p1, p2, p3, ps);
    };
    G__13724.cljs$core$IFn$_invoke$arity$variadic = G__13724__delegate;
    return G__13724;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3541__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3541__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__13734__delegate = function(x, y, z, args) {
          var or__3541__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__13734 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13734__delegate.call(this, x, y, z, args);
        };
        G__13734.cljs$lang$maxFixedArity = 3;
        G__13734.cljs$lang$applyTo = function(arglist__13735) {
          var x = cljs.core.first(arglist__13735);
          arglist__13735 = cljs.core.next(arglist__13735);
          var y = cljs.core.first(arglist__13735);
          arglist__13735 = cljs.core.next(arglist__13735);
          var z = cljs.core.first(arglist__13735);
          var args = cljs.core.rest(arglist__13735);
          return G__13734__delegate(x, y, z, args);
        };
        G__13734.cljs$core$IFn$_invoke$arity$variadic = G__13734__delegate;
        return G__13734;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              var or__3541__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3541__auto____$3)) {
                return or__3541__auto____$3;
              } else {
                var or__3541__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3541__auto____$4)) {
                  return or__3541__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13736__delegate = function(x, y, z, args) {
          var or__3541__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3541__auto__) {
              return function(p1__13728_SHARP_) {
                var or__3541__auto____$1 = p1.call(null, p1__13728_SHARP_);
                if (cljs.core.truth_(or__3541__auto____$1)) {
                  return or__3541__auto____$1;
                } else {
                  return p2.call(null, p1__13728_SHARP_);
                }
              };
            }(or__3541__auto__), args);
          }
        };
        var G__13736 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13736__delegate.call(this, x, y, z, args);
        };
        G__13736.cljs$lang$maxFixedArity = 3;
        G__13736.cljs$lang$applyTo = function(arglist__13737) {
          var x = cljs.core.first(arglist__13737);
          arglist__13737 = cljs.core.next(arglist__13737);
          var y = cljs.core.first(arglist__13737);
          arglist__13737 = cljs.core.next(arglist__13737);
          var z = cljs.core.first(arglist__13737);
          var args = cljs.core.rest(arglist__13737);
          return G__13736__delegate(x, y, z, args);
        };
        G__13736.cljs$core$IFn$_invoke$arity$variadic = G__13736__delegate;
        return G__13736;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              var or__3541__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3541__auto____$3)) {
                return or__3541__auto____$3;
              } else {
                var or__3541__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3541__auto____$4)) {
                  return or__3541__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3541__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3541__auto____$1)) {
            return or__3541__auto____$1;
          } else {
            var or__3541__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3541__auto____$2)) {
              return or__3541__auto____$2;
            } else {
              var or__3541__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3541__auto____$3)) {
                return or__3541__auto____$3;
              } else {
                var or__3541__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3541__auto____$4)) {
                  return or__3541__auto____$4;
                } else {
                  var or__3541__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3541__auto____$5)) {
                    return or__3541__auto____$5;
                  } else {
                    var or__3541__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3541__auto____$6)) {
                      return or__3541__auto____$6;
                    } else {
                      var or__3541__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3541__auto____$7)) {
                        return or__3541__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13738__delegate = function(x, y, z, args) {
          var or__3541__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3541__auto__) {
              return function(p1__13729_SHARP_) {
                var or__3541__auto____$1 = p1.call(null, p1__13729_SHARP_);
                if (cljs.core.truth_(or__3541__auto____$1)) {
                  return or__3541__auto____$1;
                } else {
                  var or__3541__auto____$2 = p2.call(null, p1__13729_SHARP_);
                  if (cljs.core.truth_(or__3541__auto____$2)) {
                    return or__3541__auto____$2;
                  } else {
                    return p3.call(null, p1__13729_SHARP_);
                  }
                }
              };
            }(or__3541__auto__), args);
          }
        };
        var G__13738 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__13738__delegate.call(this, x, y, z, args);
        };
        G__13738.cljs$lang$maxFixedArity = 3;
        G__13738.cljs$lang$applyTo = function(arglist__13739) {
          var x = cljs.core.first(arglist__13739);
          arglist__13739 = cljs.core.next(arglist__13739);
          var y = cljs.core.first(arglist__13739);
          arglist__13739 = cljs.core.next(arglist__13739);
          var z = cljs.core.first(arglist__13739);
          var args = cljs.core.rest(arglist__13739);
          return G__13738__delegate(x, y, z, args);
        };
        G__13738.cljs$core$IFn$_invoke$arity$variadic = G__13738__delegate;
        return G__13738;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__13740__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__13730_SHARP_) {
                return p1__13730_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__13731_SHARP_) {
                var or__3541__auto__ = p1__13731_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3541__auto__)) {
                  return or__3541__auto__;
                } else {
                  return p1__13731_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__13732_SHARP_) {
                var or__3541__auto__ = p1__13732_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3541__auto__)) {
                  return or__3541__auto__;
                } else {
                  var or__3541__auto____$1 = p1__13732_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3541__auto____$1)) {
                    return or__3541__auto____$1;
                  } else {
                    return p1__13732_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__13741__delegate = function(x, y, z, args) {
              var or__3541__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3541__auto__)) {
                return or__3541__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3541__auto__, ps__$1) {
                  return function(p1__13733_SHARP_) {
                    return cljs.core.some.call(null, p1__13733_SHARP_, args);
                  };
                }(or__3541__auto__, ps__$1), ps__$1);
              }
            };
            var G__13741 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__13741__delegate.call(this, x, y, z, args);
            };
            G__13741.cljs$lang$maxFixedArity = 3;
            G__13741.cljs$lang$applyTo = function(arglist__13742) {
              var x = cljs.core.first(arglist__13742);
              arglist__13742 = cljs.core.next(arglist__13742);
              var y = cljs.core.first(arglist__13742);
              arglist__13742 = cljs.core.next(arglist__13742);
              var z = cljs.core.first(arglist__13742);
              var args = cljs.core.rest(arglist__13742);
              return G__13741__delegate(x, y, z, args);
            };
            G__13741.cljs$core$IFn$_invoke$arity$variadic = G__13741__delegate;
            return G__13741;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__13740 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__13740__delegate.call(this, p1, p2, p3, ps);
    };
    G__13740.cljs$lang$maxFixedArity = 3;
    G__13740.cljs$lang$applyTo = function(arglist__13743) {
      var p1 = cljs.core.first(arglist__13743);
      arglist__13743 = cljs.core.next(arglist__13743);
      var p2 = cljs.core.first(arglist__13743);
      arglist__13743 = cljs.core.next(arglist__13743);
      var p3 = cljs.core.first(arglist__13743);
      var ps = cljs.core.rest(arglist__13743);
      return G__13740__delegate(p1, p2, p3, ps);
    };
    G__13740.cljs$core$IFn$_invoke$arity$variadic = G__13740__delegate;
    return G__13740;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4397__auto___13745 = size;
          var i_13746 = 0;
          while (true) {
            if (i_13746 < n__4397__auto___13745) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_13746)));
              var G__13747 = i_13746 + 1;
              i_13746 = G__13747;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__13748__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__13744_SHARP_) {
          return cljs.core.apply.call(null, f, p1__13744_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__13748 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__13748__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13748.cljs$lang$maxFixedArity = 4;
    G__13748.cljs$lang$applyTo = function(arglist__13749) {
      var f = cljs.core.first(arglist__13749);
      arglist__13749 = cljs.core.next(arglist__13749);
      var c1 = cljs.core.first(arglist__13749);
      arglist__13749 = cljs.core.next(arglist__13749);
      var c2 = cljs.core.first(arglist__13749);
      arglist__13749 = cljs.core.next(arglist__13749);
      var c3 = cljs.core.first(arglist__13749);
      var colls = cljs.core.rest(arglist__13749);
      return G__13748__delegate(f, c1, c2, c3, colls);
    };
    G__13748.cljs$core$IFn$_invoke$arity$variadic = G__13748__delegate;
    return G__13748;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__13750 = n__$1 - 1;
        var G__13751 = cljs.core.rest.call(null, s);
        n__$1 = G__13750;
        coll__$1 = G__13751;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__13752 = cljs.core.next.call(null, s);
      var G__13753 = cljs.core.next.call(null, lead);
      s = G__13752;
      lead = G__13753;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3529__auto__ = s;
        if (and__3529__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3529__auto__;
        }
      }())) {
        var G__13754 = pred__$1;
        var G__13755 = cljs.core.rest.call(null, s);
        pred__$1 = G__13754;
        coll__$1 = G__13755;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__13756__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__13756 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13756__delegate.call(this, c1, c2, colls);
    };
    G__13756.cljs$lang$maxFixedArity = 2;
    G__13756.cljs$lang$applyTo = function(arglist__13757) {
      var c1 = cljs.core.first(arglist__13757);
      arglist__13757 = cljs.core.next(arglist__13757);
      var c2 = cljs.core.first(arglist__13757);
      var colls = cljs.core.rest(arglist__13757);
      return G__13756__delegate(c1, c2, colls);
    };
    G__13756.cljs$core$IFn$_invoke$arity$variadic = G__13756__delegate;
    return G__13756;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__13758__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__13758 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13758__delegate.call(this, f, coll, colls);
    };
    G__13758.cljs$lang$maxFixedArity = 2;
    G__13758.cljs$lang$applyTo = function(arglist__13759) {
      var f = cljs.core.first(arglist__13759);
      arglist__13759 = cljs.core.next(arglist__13759);
      var coll = cljs.core.first(arglist__13759);
      var colls = cljs.core.rest(arglist__13759);
      return G__13758__delegate(f, coll, colls);
    };
    G__13758.cljs$core$IFn$_invoke$arity$variadic = G__13758__delegate;
    return G__13758;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4397__auto___13760 = size;
        var i_13761 = 0;
        while (true) {
          if (i_13761 < n__4397__auto___13760) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_13761)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_13761));
            } else {
            }
            var G__13762 = i_13761 + 1;
            i_13761 = G__13762;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__13763_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__13763_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__13765 = to;
      if (G__13765) {
        var bit__4184__auto__ = G__13765.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4184__auto__ || G__13765.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__13766__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__13766 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__13766__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13766.cljs$lang$maxFixedArity = 4;
    G__13766.cljs$lang$applyTo = function(arglist__13767) {
      var f = cljs.core.first(arglist__13767);
      arglist__13767 = cljs.core.next(arglist__13767);
      var c1 = cljs.core.first(arglist__13767);
      arglist__13767 = cljs.core.next(arglist__13767);
      var c2 = cljs.core.first(arglist__13767);
      arglist__13767 = cljs.core.next(arglist__13767);
      var c3 = cljs.core.first(arglist__13767);
      var colls = cljs.core.rest(arglist__13767);
      return G__13766__delegate(f, c1, c2, c3, colls);
    };
    G__13766.cljs$core$IFn$_invoke$arity$variadic = G__13766__delegate;
    return G__13766;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__13769 = m__$1;
          if (G__13769) {
            var bit__4191__auto__ = G__13769.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4191__auto__ || G__13769.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__13769.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__13769);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__13769);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__13770 = sentinel;
            var G__13771 = m__$2;
            var G__13772 = cljs.core.next.call(null, ks__$1);
            sentinel = G__13770;
            m__$1 = G__13771;
            ks__$1 = G__13772;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__13773, v) {
  var vec__13775 = p__13773;
  var k = cljs.core.nth.call(null, vec__13775, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__13775, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__13776, f) {
    var vec__13786 = p__13776;
    var k = cljs.core.nth.call(null, vec__13786, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13786, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__13777, f, a) {
    var vec__13787 = p__13777;
    var k = cljs.core.nth.call(null, vec__13787, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13787, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__13778, f, a, b) {
    var vec__13788 = p__13778;
    var k = cljs.core.nth.call(null, vec__13788, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13788, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__13779, f, a, b, c) {
    var vec__13789 = p__13779;
    var k = cljs.core.nth.call(null, vec__13789, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__13789, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__13791__delegate = function(m, p__13780, f, a, b, c, args) {
      var vec__13790 = p__13780;
      var k = cljs.core.nth.call(null, vec__13790, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__13790, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__13791 = function(m, p__13780, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__13791__delegate.call(this, m, p__13780, f, a, b, c, args);
    };
    G__13791.cljs$lang$maxFixedArity = 6;
    G__13791.cljs$lang$applyTo = function(arglist__13792) {
      var m = cljs.core.first(arglist__13792);
      arglist__13792 = cljs.core.next(arglist__13792);
      var p__13780 = cljs.core.first(arglist__13792);
      arglist__13792 = cljs.core.next(arglist__13792);
      var f = cljs.core.first(arglist__13792);
      arglist__13792 = cljs.core.next(arglist__13792);
      var a = cljs.core.first(arglist__13792);
      arglist__13792 = cljs.core.next(arglist__13792);
      var b = cljs.core.first(arglist__13792);
      arglist__13792 = cljs.core.next(arglist__13792);
      var c = cljs.core.first(arglist__13792);
      var args = cljs.core.rest(arglist__13792);
      return G__13791__delegate(m, p__13780, f, a, b, c, args);
    };
    G__13791.cljs$core$IFn$_invoke$arity$variadic = G__13791__delegate;
    return G__13791;
  }();
  update_in = function(m, p__13780, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__13780, f);
      case 4:
        return update_in__4.call(this, m, p__13780, f, a);
      case 5:
        return update_in__5.call(this, m, p__13780, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__13780, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__13780, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__13793 = ll - 5;
      var G__13794 = r;
      ll = G__13793;
      ret = G__13794;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__13795 = cljs.core.pv_aget.call(null, node, 0);
      var G__13796 = level - 5;
      node = G__13795;
      level = G__13796;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__13797 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__13798 = level - 5;
        node = G__13797;
        level = G__13798;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__13800 = j + 1;
              var G__13801 = init__$2;
              j = G__13800;
              init__$1 = G__13801;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__13802 = i + step_init[0];
        i = G__13802;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4397__auto___13803 = len;
    var i_13804 = 0;
    while (true) {
      if (i_13804 < n__4397__auto___13803) {
        new_tail[i_13804] = self__.tail[i_13804];
        var G__13805 = i_13804 + 1;
        i_13804 = G__13805;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__13806 = null;
  var G__13806__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__13806__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__13806 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13806__2.call(this, self__, k);
      case 3:
        return G__13806__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13806;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args13799) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13799)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__13807 = i + 1;
        var G__13808 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__13807;
        out = G__13808;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__13809) {
    var args = cljs.core.seq(arglist__13809);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3848__auto__ = self__.end;
    var y__3849__auto__ = v_pos + 1;
    return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__13811 = null;
  var G__13811__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__13811__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__13811 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13811__2.call(this, self__, k);
      case 3:
        return G__13811__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13811;
}();
cljs.core.Subvec.prototype.apply = function(self__, args13810) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13810)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__13812 = meta;
      var G__13813 = v.v;
      var G__13814 = v.start + start;
      var G__13815 = v.start + end;
      var G__13816 = __hash;
      meta = G__13812;
      v = G__13813;
      start = G__13814;
      end = G__13815;
      __hash = G__13816;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj13820 = {};
    return obj13820;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__13821 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__13822 = level - 5;
        node = G__13821;
        level = G__13822;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__13824 = null;
  var G__13824__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13824__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13824 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13824__2.call(this, self__, k);
      case 3:
        return G__13824__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13824;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args13823) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13823)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3541__auto__ = self__.front;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3541__auto__ = self__.rear;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__13825 = i + incr;
        i = G__13825;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__13826 = i + 1;
      var G__13827 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__13826;
      out = G__13827;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj13831 = {};
    return obj13831;
  }();
  var l = ks.length;
  var i_13832 = 0;
  while (true) {
    if (i_13832 < l) {
      var k_13833 = ks[i_13832];
      new_obj[k_13833] = obj[k_13833];
      var G__13834 = i_13832 + 1;
      i_13832 = G__13834;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__13837 = cljs.core.rest.call(null, keys__$1);
        var G__13838 = init__$2;
        keys__$1 = G__13837;
        init__$1 = G__13838;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__13835_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__13835_SHARP_, self__.strobj[p1__13835_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13839 = null;
  var G__13839__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13839__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13839 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13839__2.call(this, self__, k);
      case 3:
        return G__13839__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13839;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args13836) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13836)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj13841 = {};
  return obj13841;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__13842 = i + 2;
          i = G__13842;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__13843 = i + 2;
          i = G__13843;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__13844 = i + 2;
          i = G__13844;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__13845 = i + 2;
          i = G__13845;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__13846 = i + 2;
          i = G__13846;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_13847 = 0;
  while (true) {
    if (i_13847 < l) {
      narr[i_13847] = arr[i_13847];
      var G__13848 = i_13847 + 1;
      i_13847 = G__13848;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__13853 = i + 2;
        var G__13854 = init__$2;
        i = G__13853;
        init__$1 = G__13854;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj13851 = {};
    return obj13851;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__13855 = s + 2;
            var G__13856 = d;
            s = G__13855;
            d = G__13856;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__13857 = s + 2;
              var G__13858 = d + 2;
              s = G__13857;
              d = G__13858;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__13852 = cljs.core.aclone.call(null, self__.arr);
          G__13852[idx + 1] = v;
          return G__13852;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__13859 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__13860 = cljs.core.next.call(null, es);
          ret = G__13859;
          es = G__13860;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13861 = null;
  var G__13861__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13861__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13861 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13861__2.call(this, self__, k);
      case 3:
        return G__13861__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13861;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args13849) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13849)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__13862 = i + 2;
        var G__13863 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__13862;
        ret = G__13863;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__13864_13866 = self__.arr;
      G__13864_13866.pop();
      G__13864_13866.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__13865 = o;
      if (G__13865) {
        var bit__4191__auto__ = G__13865.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4191__auto__ || G__13865.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__13865.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__13865);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__13865);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__13867 = cljs.core.next.call(null, es);
          var G__13868 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__13867;
          tcoll__$2 = G__13868;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__13869 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__13870 = i + 2;
      out = G__13869;
      i = G__13870;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13873 = cljs.core.aclone.call(null, arr);
    G__13873[i] = a;
    return G__13873;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13874 = cljs.core.aclone.call(null, arr);
    G__13874[i] = a;
    G__13874[j] = b;
    return G__13874;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__13875 = i + 2;
        var G__13876 = init__$2;
        i = G__13875;
        init__$1 = G__13876;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_13877 = 0;
        var j_13878 = 0;
        while (true) {
          if (i_13877 < 32) {
            if ((self__.bitmap >>> i_13877 & 1) === 0) {
              var G__13879 = i_13877 + 1;
              var G__13880 = j_13878;
              i_13877 = G__13879;
              j_13878 = G__13880;
              continue;
            } else {
              nodes[i_13877] = !(self__.arr[j_13878] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_13878]), self__.arr[j_13878], self__.arr[j_13878 + 1], added_leaf_QMARK_) : self__.arr[j_13878 + 1];
              var G__13881 = i_13877 + 1;
              var G__13882 = j_13878 + 2;
              i_13877 = G__13881;
              j_13878 = G__13882;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_13883 = 0;
      var j_13884 = 0;
      while (true) {
        if (i_13883 < 32) {
          if ((self__.bitmap >>> i_13883 & 1) === 0) {
            var G__13885 = i_13883 + 1;
            var G__13886 = j_13884;
            i_13883 = G__13885;
            j_13884 = G__13886;
            continue;
          } else {
            nodes[i_13883] = !(self__.arr[j_13884] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_13884]), self__.arr[j_13884], self__.arr[j_13884 + 1], added_leaf_QMARK_) : self__.arr[j_13884 + 1];
            var G__13887 = i_13883 + 1;
            var G__13888 = j_13884 + 2;
            i_13883 = G__13887;
            j_13884 = G__13888;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__13889 = i + 1;
        var G__13890 = j + 2;
        var G__13891 = bitmap | 1 << i;
        i = G__13889;
        j = G__13890;
        bitmap = G__13891;
        continue;
      } else {
        var G__13892 = i + 1;
        var G__13893 = j;
        var G__13894 = bitmap;
        i = G__13892;
        j = G__13893;
        bitmap = G__13894;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__13895 = i + 1;
          var G__13896 = init__$2;
          i = G__13895;
          init__$1 = G__13896;
          continue;
        }
      } else {
        var G__13897 = i + 1;
        var G__13898 = init__$1;
        i = G__13897;
        init__$1 = G__13898;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__13899 = i + 2;
        i = G__13899;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__13900 = j + 2;
                j = G__13900;
                continue;
              }
            } else {
              var G__13901 = j + 2;
              j = G__13901;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__13902 = j + 1;
              j = G__13902;
              continue;
            }
          } else {
            var G__13903 = j + 1;
            j = G__13903;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj13906 = {};
    return obj13906;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__13907 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__13908 = cljs.core.next.call(null, es);
          ret = G__13907;
          es = G__13908;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__13909 = null;
  var G__13909__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13909__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13909 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13909__2.call(this, self__, k);
      case 3:
        return G__13909__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13909;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args13904) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13904)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__13910 = i + 1;
      var G__13911 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__13910;
      out = G__13911;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__13912 = o;
      if (G__13912) {
        var bit__4191__auto__ = G__13912.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4191__auto__ || G__13912.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__13912.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__13912);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__13912);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__13913 = cljs.core.next.call(null, es);
          var G__13914 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__13913;
          tcoll__$1 = G__13914;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__13915 = ascending_QMARK_ ? t.left : t.right;
      var G__13916 = cljs.core.conj.call(null, stack__$1, t);
      t = G__13915;
      stack__$1 = G__13916;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__13918 = null;
  var G__13918__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13918__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13918 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13918__2.call(this, self__, k);
      case 3:
        return G__13918__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13918;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args13917) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13917)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__13920 = null;
  var G__13920__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13920__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13920 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13920__2.call(this, self__, k);
      case 3:
        return G__13920__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13920;
}();
cljs.core.RedNode.prototype.apply = function(self__, args13919) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13919)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__13922 = t.left;
          t = G__13922;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__13923 = t.right;
            t = G__13923;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__13924 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__13925 = cljs.core.next.call(null, es);
          ret = G__13924;
          es = G__13925;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__13926 = null;
  var G__13926__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13926__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13926 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13926__2.call(this, self__, k);
      case 3:
        return G__13926__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13926;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args13921) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13921)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__13927 = cljs.core.conj.call(null, stack, t);
              var G__13928 = t.left;
              stack = G__13927;
              t = G__13928;
              continue;
            } else {
              var G__13929 = stack;
              var G__13930 = t.right;
              stack = G__13929;
              t = G__13930;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__13931 = cljs.core.conj.call(null, stack, t);
                var G__13932 = t.right;
                stack = G__13931;
                t = G__13932;
                continue;
              } else {
                var G__13933 = stack;
                var G__13934 = t.left;
                stack = G__13933;
                t = G__13934;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__13935 = cljs.core.nnext.call(null, in$);
        var G__13936 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__13935;
        out = G__13936;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__13937) {
    var keyvals = cljs.core.seq(arglist__13937);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__13938) {
    var keyvals = cljs.core.seq(arglist__13938);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj13942 = {};
      return obj13942;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__13943 = cljs.core.nnext.call(null, kvs);
        kvs = G__13943;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__13944) {
    var keyvals = cljs.core.seq(arglist__13944);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__13945 = cljs.core.nnext.call(null, in$);
        var G__13946 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__13945;
        out = G__13946;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__13947) {
    var keyvals = cljs.core.seq(arglist__13947);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__13948 = cljs.core.nnext.call(null, in$);
        var G__13949 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__13948;
        out = G__13949;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__13950) {
    var comparator = cljs.core.first(arglist__13950);
    var keyvals = cljs.core.rest(arglist__13950);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13951 = self__.mseq;
    if (G__13951) {
      var bit__4191__auto__ = G__13951.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__13951.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13951.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13951);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13951);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13952 = self__.mseq;
    if (G__13952) {
      var bit__4191__auto__ = G__13952.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__13952.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13952.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13952);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13952);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13953 = self__.mseq;
    if (G__13953) {
      var bit__4191__auto__ = G__13953.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__13953.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13953.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13953);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13953);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13954 = self__.mseq;
    if (G__13954) {
      var bit__4191__auto__ = G__13954.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4191__auto__ || G__13954.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13954.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13954);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__13954);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__13955_SHARP_, p2__13956_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3541__auto__ = p1__13955_SHARP_;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__13956_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__13957) {
    var maps = cljs.core.seq(arglist__13957);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3541__auto__ = m1;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__13958) {
    var f = cljs.core.first(arglist__13958);
    var maps = cljs.core.rest(arglist__13958);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__13959 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__13960 = cljs.core.next.call(null, keys);
      ret = G__13959;
      keys = G__13960;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__13961_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__13961_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__13963 = null;
  var G__13963__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13963__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13963 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13963__2.call(this, self__, k);
      case 3:
        return G__13963__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13963;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args13962) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13962)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__13964 = i + 1;
        var G__13965 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__13964;
        out = G__13965;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__13966 = i + 1;
        var G__13967 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__13966;
        out = G__13967;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__13969 = null;
  var G__13969__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__13969__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__13969 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13969__2.call(this, self__, k);
      case 3:
        return G__13969__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13969;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args13968) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13968)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__13970_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__13970_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__13972 = null;
  var G__13972__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13972__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13972 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13972__2.call(this, self__, k);
      case 3:
        return G__13972__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13972;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args13971) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args13971)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4391__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4391__auto__.length) {
        var G__13973 = i + 1;
        var G__13974 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__13973;
        res = G__13974;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__13975 = cljs.core._next.call(null, in$__$1);
            var G__13976 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__13975;
            out = G__13976;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__13977__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__13977 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__13977__delegate.call(this, keys);
    };
    G__13977.cljs$lang$maxFixedArity = 0;
    G__13977.cljs$lang$applyTo = function(arglist__13978) {
      var keys = cljs.core.seq(arglist__13978);
      return G__13977__delegate(keys);
    };
    G__13977.cljs$core$IFn$_invoke$arity$variadic = G__13977__delegate;
    return G__13977;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__13979) {
    var keys = cljs.core.seq(arglist__13979);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__13980) {
    var comparator = cljs.core.first(arglist__13980);
    var keys = cljs.core.rest(arglist__13980);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__13981_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__13981_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__13981_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__13988, seen__$1) {
        while (true) {
          var vec__13989 = p__13988;
          var f = cljs.core.nth.call(null, vec__13989, 0, null);
          var xs__$1 = vec__13989;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__13990 = cljs.core.rest.call(null, s);
              var G__13991 = seen__$1;
              p__13988 = G__13990;
              seen__$1 = G__13991;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__13992 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__13993 = cljs.core.next.call(null, s__$1);
      ret = G__13992;
      s__$1 = G__13993;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__13995 = x;
    if (G__13995) {
      var bit__4184__auto__ = G__13995.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4184__auto__ || G__13995.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__13996 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__13997 = cljs.core.next.call(null, ks);
      var G__13998 = cljs.core.next.call(null, vs);
      map = G__13996;
      ks = G__13997;
      vs = G__13998;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__14001__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__13999_SHARP_, p2__14000_SHARP_) {
        return max_key.call(null, k, p1__13999_SHARP_, p2__14000_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__14001 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14001__delegate.call(this, k, x, y, more);
    };
    G__14001.cljs$lang$maxFixedArity = 3;
    G__14001.cljs$lang$applyTo = function(arglist__14002) {
      var k = cljs.core.first(arglist__14002);
      arglist__14002 = cljs.core.next(arglist__14002);
      var x = cljs.core.first(arglist__14002);
      arglist__14002 = cljs.core.next(arglist__14002);
      var y = cljs.core.first(arglist__14002);
      var more = cljs.core.rest(arglist__14002);
      return G__14001__delegate(k, x, y, more);
    };
    G__14001.cljs$core$IFn$_invoke$arity$variadic = G__14001__delegate;
    return G__14001;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__14005__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14003_SHARP_, p2__14004_SHARP_) {
        return min_key.call(null, k, p1__14003_SHARP_, p2__14004_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__14005 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14005__delegate.call(this, k, x, y, more);
    };
    G__14005.cljs$lang$maxFixedArity = 3;
    G__14005.cljs$lang$applyTo = function(arglist__14006) {
      var k = cljs.core.first(arglist__14006);
      arglist__14006 = cljs.core.next(arglist__14006);
      var x = cljs.core.first(arglist__14006);
      arglist__14006 = cljs.core.next(arglist__14006);
      var y = cljs.core.first(arglist__14006);
      var more = cljs.core.rest(arglist__14006);
      return G__14005__delegate(k, x, y, more);
    };
    G__14005.cljs$core$IFn$_invoke$arity$variadic = G__14005__delegate;
    return G__14005;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14009 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__14009, 0, null);
        var s = vec__14009;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14010 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__14010, 0, null);
      var s = vec__14010;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14013 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__14013, 0, null);
        var s = vec__14013;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14014 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__14014, 0, null);
      var s = vec__14014;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
        return function(p1__14015_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__14015_SHARP_));
        };
      }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14026 = null;
      var G__14026__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__14026__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__14026__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__14026__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__14026__4 = function() {
        var G__14027__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__14027 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14027__delegate.call(this, x, y, z, args);
        };
        G__14027.cljs$lang$maxFixedArity = 3;
        G__14027.cljs$lang$applyTo = function(arglist__14028) {
          var x = cljs.core.first(arglist__14028);
          arglist__14028 = cljs.core.next(arglist__14028);
          var y = cljs.core.first(arglist__14028);
          arglist__14028 = cljs.core.next(arglist__14028);
          var z = cljs.core.first(arglist__14028);
          var args = cljs.core.rest(arglist__14028);
          return G__14027__delegate(x, y, z, args);
        };
        G__14027.cljs$core$IFn$_invoke$arity$variadic = G__14027__delegate;
        return G__14027;
      }();
      G__14026 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14026__0.call(this);
          case 1:
            return G__14026__1.call(this, x);
          case 2:
            return G__14026__2.call(this, x, y);
          case 3:
            return G__14026__3.call(this, x, y, z);
          default:
            return G__14026__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14026.cljs$lang$maxFixedArity = 3;
      G__14026.cljs$lang$applyTo = G__14026__4.cljs$lang$applyTo;
      return G__14026;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14029 = null;
      var G__14029__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__14029__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__14029__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__14029__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__14029__4 = function() {
        var G__14030__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__14030 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14030__delegate.call(this, x, y, z, args);
        };
        G__14030.cljs$lang$maxFixedArity = 3;
        G__14030.cljs$lang$applyTo = function(arglist__14031) {
          var x = cljs.core.first(arglist__14031);
          arglist__14031 = cljs.core.next(arglist__14031);
          var y = cljs.core.first(arglist__14031);
          arglist__14031 = cljs.core.next(arglist__14031);
          var z = cljs.core.first(arglist__14031);
          var args = cljs.core.rest(arglist__14031);
          return G__14030__delegate(x, y, z, args);
        };
        G__14030.cljs$core$IFn$_invoke$arity$variadic = G__14030__delegate;
        return G__14030;
      }();
      G__14029 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14029__0.call(this);
          case 1:
            return G__14029__1.call(this, x);
          case 2:
            return G__14029__2.call(this, x, y);
          case 3:
            return G__14029__3.call(this, x, y, z);
          default:
            return G__14029__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14029.cljs$lang$maxFixedArity = 3;
      G__14029.cljs$lang$applyTo = G__14029__4.cljs$lang$applyTo;
      return G__14029;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14032 = null;
      var G__14032__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__14032__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__14032__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__14032__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__14032__4 = function() {
        var G__14033__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__14033 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__14033__delegate.call(this, x, y, z, args);
        };
        G__14033.cljs$lang$maxFixedArity = 3;
        G__14033.cljs$lang$applyTo = function(arglist__14034) {
          var x = cljs.core.first(arglist__14034);
          arglist__14034 = cljs.core.next(arglist__14034);
          var y = cljs.core.first(arglist__14034);
          arglist__14034 = cljs.core.next(arglist__14034);
          var z = cljs.core.first(arglist__14034);
          var args = cljs.core.rest(arglist__14034);
          return G__14033__delegate(x, y, z, args);
        };
        G__14033.cljs$core$IFn$_invoke$arity$variadic = G__14033__delegate;
        return G__14033;
      }();
      G__14032 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14032__0.call(this);
          case 1:
            return G__14032__1.call(this, x);
          case 2:
            return G__14032__2.call(this, x, y);
          case 3:
            return G__14032__3.call(this, x, y, z);
          default:
            return G__14032__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14032.cljs$lang$maxFixedArity = 3;
      G__14032.cljs$lang$applyTo = G__14032__4.cljs$lang$applyTo;
      return G__14032;
    }();
  };
  var juxt__4 = function() {
    var G__14035__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__14036 = null;
          var G__14036__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__14016_SHARP_, p2__14017_SHARP_) {
                return cljs.core.conj.call(null, p1__14016_SHARP_, p2__14017_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14036__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__14018_SHARP_, p2__14019_SHARP_) {
                return cljs.core.conj.call(null, p1__14018_SHARP_, p2__14019_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14036__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__14020_SHARP_, p2__14021_SHARP_) {
                return cljs.core.conj.call(null, p1__14020_SHARP_, p2__14021_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14036__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__14022_SHARP_, p2__14023_SHARP_) {
                return cljs.core.conj.call(null, p1__14022_SHARP_, p2__14023_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14036__4 = function() {
            var G__14037__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__14024_SHARP_, p2__14025_SHARP_) {
                  return cljs.core.conj.call(null, p1__14024_SHARP_, cljs.core.apply.call(null, p2__14025_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__14037 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__14037__delegate.call(this, x, y, z, args);
            };
            G__14037.cljs$lang$maxFixedArity = 3;
            G__14037.cljs$lang$applyTo = function(arglist__14038) {
              var x = cljs.core.first(arglist__14038);
              arglist__14038 = cljs.core.next(arglist__14038);
              var y = cljs.core.first(arglist__14038);
              arglist__14038 = cljs.core.next(arglist__14038);
              var z = cljs.core.first(arglist__14038);
              var args = cljs.core.rest(arglist__14038);
              return G__14037__delegate(x, y, z, args);
            };
            G__14037.cljs$core$IFn$_invoke$arity$variadic = G__14037__delegate;
            return G__14037;
          }();
          G__14036 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__14036__0.call(this);
              case 1:
                return G__14036__1.call(this, x);
              case 2:
                return G__14036__2.call(this, x, y);
              case 3:
                return G__14036__3.call(this, x, y, z);
              default:
                return G__14036__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14036.cljs$lang$maxFixedArity = 3;
          G__14036.cljs$lang$applyTo = G__14036__4.cljs$lang$applyTo;
          return G__14036;
        }();
      }(fs__$1);
    };
    var G__14035 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__14035__delegate.call(this, f, g, h, fs);
    };
    G__14035.cljs$lang$maxFixedArity = 3;
    G__14035.cljs$lang$applyTo = function(arglist__14039) {
      var f = cljs.core.first(arglist__14039);
      arglist__14039 = cljs.core.next(arglist__14039);
      var g = cljs.core.first(arglist__14039);
      arglist__14039 = cljs.core.next(arglist__14039);
      var h = cljs.core.first(arglist__14039);
      var fs = cljs.core.rest(arglist__14039);
      return G__14035__delegate(f, g, h, fs);
    };
    G__14035.cljs$core$IFn$_invoke$arity$variadic = G__14035__delegate;
    return G__14035;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__14040 = cljs.core.next.call(null, coll);
        coll = G__14040;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__14041 = n - 1;
        var G__14042 = cljs.core.next.call(null, coll);
        n = G__14041;
        coll = G__14042;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__14044 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__14044, 0, null);
  var flags = cljs.core.nth.call(null, vec__14044, 1, null);
  var pattern = cljs.core.nth.call(null, vec__14044, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_14046 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_14047__$1 = cljs.core.next.call(null, coll);
      var n_14048 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_14047__$1 && (n_14048 == null || !(n_14048 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_14047__$1), writer, opts);
          var G__14049 = cljs.core.next.call(null, coll_14047__$1);
          var G__14050 = n_14048 - 1;
          coll_14047__$1 = G__14049;
          n_14048 = G__14050;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_14047__$1) && n_14048 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14046;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__14055 = cljs.core.seq.call(null, ss);
    var chunk__14056 = null;
    var count__14057 = 0;
    var i__14058 = 0;
    while (true) {
      if (i__14058 < count__14057) {
        var s = cljs.core._nth.call(null, chunk__14056, i__14058);
        cljs.core._write.call(null, writer, s);
        var G__14059 = seq__14055;
        var G__14060 = chunk__14056;
        var G__14061 = count__14057;
        var G__14062 = i__14058 + 1;
        seq__14055 = G__14059;
        chunk__14056 = G__14060;
        count__14057 = G__14061;
        i__14058 = G__14062;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__14055);
        if (temp__4126__auto__) {
          var seq__14055__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__14055__$1)) {
            var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__14055__$1);
            var G__14063 = cljs.core.chunk_rest.call(null, seq__14055__$1);
            var G__14064 = c__4297__auto__;
            var G__14065 = cljs.core.count.call(null, c__4297__auto__);
            var G__14066 = 0;
            seq__14055 = G__14063;
            chunk__14056 = G__14064;
            count__14057 = G__14065;
            i__14058 = G__14066;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__14055__$1);
            cljs.core._write.call(null, writer, s);
            var G__14067 = cljs.core.next.call(null, seq__14055__$1);
            var G__14068 = null;
            var G__14069 = 0;
            var G__14070 = 0;
            seq__14055 = G__14067;
            chunk__14056 = G__14068;
            count__14057 = G__14069;
            i__14058 = G__14070;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__14071) {
    var writer = cljs.core.first(arglist__14071);
    var ss = cljs.core.rest(arglist__14071);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj14073 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj14073;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3529__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3529__auto__)) {
            var and__3529__auto____$1 = function() {
              var G__14079 = obj;
              if (G__14079) {
                var bit__4191__auto__ = G__14079.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4191__auto__ || G__14079.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__14079.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14079);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14079);
              }
            }();
            if (and__3529__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3529__auto____$1;
            }
          } else {
            return and__3529__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__14080 = obj;
              if (G__14080) {
                var bit__4184__auto__ = G__14080.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4184__auto__ || G__14080.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__14082 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                                ns = G__14082;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__14081 = obj;
                              if (G__14081) {
                                var bit__4191__auto__ = G__14081.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4191__auto__ || G__14081.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__14081.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__14081);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__14081);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__14087 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__14088 = null;
  var count__14089 = 0;
  var i__14090 = 0;
  while (true) {
    if (i__14090 < count__14089) {
      var obj = cljs.core._nth.call(null, chunk__14088, i__14090);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__14091 = seq__14087;
      var G__14092 = chunk__14088;
      var G__14093 = count__14089;
      var G__14094 = i__14090 + 1;
      seq__14087 = G__14091;
      chunk__14088 = G__14092;
      count__14089 = G__14093;
      i__14090 = G__14094;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__14087);
      if (temp__4126__auto__) {
        var seq__14087__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14087__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__14087__$1);
          var G__14095 = cljs.core.chunk_rest.call(null, seq__14087__$1);
          var G__14096 = c__4297__auto__;
          var G__14097 = cljs.core.count.call(null, c__4297__auto__);
          var G__14098 = 0;
          seq__14087 = G__14095;
          chunk__14088 = G__14096;
          count__14089 = G__14097;
          i__14090 = G__14098;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__14087__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__14099 = cljs.core.next.call(null, seq__14087__$1);
          var G__14100 = null;
          var G__14101 = 0;
          var G__14102 = 0;
          seq__14087 = G__14099;
          chunk__14088 = G__14100;
          count__14089 = G__14101;
          i__14090 = G__14102;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14103) {
    var objs = cljs.core.seq(arglist__14103);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14104) {
    var objs = cljs.core.seq(arglist__14104);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14105) {
    var objs = cljs.core.seq(arglist__14105);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14106) {
    var objs = cljs.core.seq(arglist__14106);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14107) {
    var objs = cljs.core.seq(arglist__14107);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14108) {
    var objs = cljs.core.seq(arglist__14108);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14109) {
    var objs = cljs.core.seq(arglist__14109);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14110) {
    var objs = cljs.core.seq(arglist__14110);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj14112 = {};
  return obj14112;
}();
cljs.core.IReset = function() {
  var obj14114 = {};
  return obj14114;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3529__auto__ = o;
    if (and__3529__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4168__auto__ = o == null ? null : o;
    return function() {
      var or__3541__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj14116 = {};
  return obj14116;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3529__auto__ = o;
      if (and__3529__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4168__auto__ = o == null ? null : o;
      return function() {
        var or__3541__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__14117 = cljs.core.seq.call(null, self__.watches);
  var chunk__14118 = null;
  var count__14119 = 0;
  var i__14120 = 0;
  while (true) {
    if (i__14120 < count__14119) {
      var vec__14121 = cljs.core._nth.call(null, chunk__14118, i__14120);
      var key = cljs.core.nth.call(null, vec__14121, 0, null);
      var f = cljs.core.nth.call(null, vec__14121, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__14123 = seq__14117;
      var G__14124 = chunk__14118;
      var G__14125 = count__14119;
      var G__14126 = i__14120 + 1;
      seq__14117 = G__14123;
      chunk__14118 = G__14124;
      count__14119 = G__14125;
      i__14120 = G__14126;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__14117);
      if (temp__4126__auto__) {
        var seq__14117__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__14117__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__14117__$1);
          var G__14127 = cljs.core.chunk_rest.call(null, seq__14117__$1);
          var G__14128 = c__4297__auto__;
          var G__14129 = cljs.core.count.call(null, c__4297__auto__);
          var G__14130 = 0;
          seq__14117 = G__14127;
          chunk__14118 = G__14128;
          count__14119 = G__14129;
          i__14120 = G__14130;
          continue;
        } else {
          var vec__14122 = cljs.core.first.call(null, seq__14117__$1);
          var key = cljs.core.nth.call(null, vec__14122, 0, null);
          var f = cljs.core.nth.call(null, vec__14122, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__14131 = cljs.core.next.call(null, seq__14117__$1);
          var G__14132 = null;
          var G__14133 = 0;
          var G__14134 = 0;
          seq__14117 = G__14131;
          chunk__14118 = G__14132;
          count__14119 = G__14133;
          i__14120 = G__14134;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__14138__delegate = function(x, p__14135) {
      var map__14137 = p__14135;
      var map__14137__$1 = cljs.core.seq_QMARK_.call(null, map__14137) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14137) : map__14137;
      var validator = cljs.core.get.call(null, map__14137__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__14137__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__14138 = function(x, var_args) {
      var p__14135 = null;
      if (arguments.length > 1) {
        p__14135 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__14138__delegate.call(this, x, p__14135);
    };
    G__14138.cljs$lang$maxFixedArity = 1;
    G__14138.cljs$lang$applyTo = function(arglist__14139) {
      var x = cljs.core.first(arglist__14139);
      var p__14135 = cljs.core.rest(arglist__14139);
      return G__14138__delegate(x, p__14135);
    };
    G__14138.cljs$core$IFn$_invoke$arity$variadic = G__14138__delegate;
    return G__14138;
  }();
  atom = function(x, var_args) {
    var p__14135 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__14140__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__14140 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__14140__delegate.call(this, a, f, x, y, more);
    };
    G__14140.cljs$lang$maxFixedArity = 4;
    G__14140.cljs$lang$applyTo = function(arglist__14141) {
      var a = cljs.core.first(arglist__14141);
      arglist__14141 = cljs.core.next(arglist__14141);
      var f = cljs.core.first(arglist__14141);
      arglist__14141 = cljs.core.next(arglist__14141);
      var x = cljs.core.first(arglist__14141);
      arglist__14141 = cljs.core.next(arglist__14141);
      var y = cljs.core.first(arglist__14141);
      var more = cljs.core.rest(arglist__14141);
      return G__14140__delegate(a, f, x, y, more);
    };
    G__14140.cljs$core$IFn$_invoke$arity$variadic = G__14140__delegate;
    return G__14140;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14142) {
    var iref = cljs.core.first(arglist__14142);
    arglist__14142 = cljs.core.next(arglist__14142);
    var f = cljs.core.first(arglist__14142);
    var args = cljs.core.rest(arglist__14142);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__14143) {
      var map__14144 = p__14143;
      var map__14144__$1 = cljs.core.seq_QMARK_.call(null, map__14144) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14144) : map__14144;
      var curr_state = map__14144__$1;
      var done = cljs.core.get.call(null, map__14144__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj14146 = {};
  return obj14146;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__14148 = k;
    if (G__14148) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__14148.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__14148.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14148);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14148);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__14162 = x;
      if (G__14162) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__14162.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__14162.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14162);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14162);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj14164 = {};
              return obj14164;
            }();
            var seq__14165_14175 = cljs.core.seq.call(null, x);
            var chunk__14166_14176 = null;
            var count__14167_14177 = 0;
            var i__14168_14178 = 0;
            while (true) {
              if (i__14168_14178 < count__14167_14177) {
                var vec__14169_14179 = cljs.core._nth.call(null, chunk__14166_14176, i__14168_14178);
                var k_14180 = cljs.core.nth.call(null, vec__14169_14179, 0, null);
                var v_14181 = cljs.core.nth.call(null, vec__14169_14179, 1, null);
                m[cljs.core.key__GT_js.call(null, k_14180)] = clj__GT_js.call(null, v_14181);
                var G__14182 = seq__14165_14175;
                var G__14183 = chunk__14166_14176;
                var G__14184 = count__14167_14177;
                var G__14185 = i__14168_14178 + 1;
                seq__14165_14175 = G__14182;
                chunk__14166_14176 = G__14183;
                count__14167_14177 = G__14184;
                i__14168_14178 = G__14185;
                continue;
              } else {
                var temp__4126__auto___14186 = cljs.core.seq.call(null, seq__14165_14175);
                if (temp__4126__auto___14186) {
                  var seq__14165_14187__$1 = temp__4126__auto___14186;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__14165_14187__$1)) {
                    var c__4297__auto___14188 = cljs.core.chunk_first.call(null, seq__14165_14187__$1);
                    var G__14189 = cljs.core.chunk_rest.call(null, seq__14165_14187__$1);
                    var G__14190 = c__4297__auto___14188;
                    var G__14191 = cljs.core.count.call(null, c__4297__auto___14188);
                    var G__14192 = 0;
                    seq__14165_14175 = G__14189;
                    chunk__14166_14176 = G__14190;
                    count__14167_14177 = G__14191;
                    i__14168_14178 = G__14192;
                    continue;
                  } else {
                    var vec__14170_14193 = cljs.core.first.call(null, seq__14165_14187__$1);
                    var k_14194 = cljs.core.nth.call(null, vec__14170_14193, 0, null);
                    var v_14195 = cljs.core.nth.call(null, vec__14170_14193, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_14194)] = clj__GT_js.call(null, v_14195);
                    var G__14196 = cljs.core.next.call(null, seq__14165_14187__$1);
                    var G__14197 = null;
                    var G__14198 = 0;
                    var G__14199 = 0;
                    seq__14165_14175 = G__14196;
                    chunk__14166_14176 = G__14197;
                    count__14167_14177 = G__14198;
                    i__14168_14178 = G__14199;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__14171_14200 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__14172_14201 = null;
              var count__14173_14202 = 0;
              var i__14174_14203 = 0;
              while (true) {
                if (i__14174_14203 < count__14173_14202) {
                  var x_14204__$1 = cljs.core._nth.call(null, chunk__14172_14201, i__14174_14203);
                  arr.push(x_14204__$1);
                  var G__14205 = seq__14171_14200;
                  var G__14206 = chunk__14172_14201;
                  var G__14207 = count__14173_14202;
                  var G__14208 = i__14174_14203 + 1;
                  seq__14171_14200 = G__14205;
                  chunk__14172_14201 = G__14206;
                  count__14173_14202 = G__14207;
                  i__14174_14203 = G__14208;
                  continue;
                } else {
                  var temp__4126__auto___14209 = cljs.core.seq.call(null, seq__14171_14200);
                  if (temp__4126__auto___14209) {
                    var seq__14171_14210__$1 = temp__4126__auto___14209;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__14171_14210__$1)) {
                      var c__4297__auto___14211 = cljs.core.chunk_first.call(null, seq__14171_14210__$1);
                      var G__14212 = cljs.core.chunk_rest.call(null, seq__14171_14210__$1);
                      var G__14213 = c__4297__auto___14211;
                      var G__14214 = cljs.core.count.call(null, c__4297__auto___14211);
                      var G__14215 = 0;
                      seq__14171_14200 = G__14212;
                      chunk__14172_14201 = G__14213;
                      count__14173_14202 = G__14214;
                      i__14174_14203 = G__14215;
                      continue;
                    } else {
                      var x_14216__$1 = cljs.core.first.call(null, seq__14171_14210__$1);
                      arr.push(x_14216__$1);
                      var G__14217 = cljs.core.next.call(null, seq__14171_14210__$1);
                      var G__14218 = null;
                      var G__14219 = 0;
                      var G__14220 = 0;
                      seq__14171_14200 = G__14217;
                      chunk__14172_14201 = G__14218;
                      count__14173_14202 = G__14219;
                      i__14174_14203 = G__14220;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj14222 = {};
  return obj14222;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__14243__delegate = function(x, opts) {
      if (function() {
        var G__14233 = x;
        if (G__14233) {
          var bit__4191__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3541__auto__ = bit__4191__auto__;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return G__14233.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__14233.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__14233);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__14233);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__14234 = opts;
          var map__14234__$1 = cljs.core.seq_QMARK_.call(null, map__14234) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14234) : map__14234;
          var keywordize_keys = cljs.core.get.call(null, map__14234__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__14234, map__14234__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4266__auto__ = function(map__14234, map__14234__$1, keywordize_keys, keyfn) {
                          return function iter__14239(s__14240) {
                            return new cljs.core.LazySeq(null, function(map__14234, map__14234__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__14240__$1 = s__14240;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__14240__$1);
                                  if (temp__4126__auto__) {
                                    var s__14240__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__14240__$2)) {
                                      var c__4264__auto__ = cljs.core.chunk_first.call(null, s__14240__$2);
                                      var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
                                      var b__14242 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
                                      if (function() {
                                        var i__14241 = 0;
                                        while (true) {
                                          if (i__14241 < size__4265__auto__) {
                                            var k = cljs.core._nth.call(null, c__4264__auto__, i__14241);
                                            cljs.core.chunk_append.call(null, b__14242, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__14244 = i__14241 + 1;
                                            i__14241 = G__14244;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14242), iter__14239.call(null, cljs.core.chunk_rest.call(null, s__14240__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14242), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__14240__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__14239.call(null, cljs.core.rest.call(null, s__14240__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__14234, map__14234__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__14234, map__14234__$1, keywordize_keys, keyfn);
                        return iter__4266__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__14234, map__14234__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__14243 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__14243__delegate.call(this, x, opts);
    };
    G__14243.cljs$lang$maxFixedArity = 1;
    G__14243.cljs$lang$applyTo = function(arglist__14245) {
      var x = cljs.core.first(arglist__14245);
      var opts = cljs.core.rest(arglist__14245);
      return G__14243__delegate(x, opts);
    };
    G__14243.cljs$core$IFn$_invoke$arity$variadic = G__14243__delegate;
    return G__14243;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__14246__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__14246 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__14246__delegate.call(this, args);
      };
      G__14246.cljs$lang$maxFixedArity = 0;
      G__14246.cljs$lang$applyTo = function(arglist__14247) {
        var args = cljs.core.seq(arglist__14247);
        return G__14246__delegate(args);
      };
      G__14246.cljs$core$IFn$_invoke$arity$variadic = G__14246__delegate;
      return G__14246;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__14248 = ret;
        f = G__14248;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__14249__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__14249 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__14249__delegate.call(this, f, args);
    };
    G__14249.cljs$lang$maxFixedArity = 1;
    G__14249.cljs$lang$applyTo = function(arglist__14250) {
      var f = cljs.core.first(arglist__14250);
      var args = cljs.core.rest(arglist__14250);
      return G__14249__delegate(f, args);
    };
    G__14249.cljs$core$IFn$_invoke$arity$variadic = G__14249__delegate;
    return G__14249;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__14251) {
    var f = cljs.core.first(arglist__14251);
    var args = cljs.core.rest(arglist__14251);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3541__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3541__auto__) {
      return or__3541__auto__;
    } else {
      var or__3541__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3541__auto____$1) {
        return or__3541__auto____$1;
      } else {
        var and__3529__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3529__auto__) {
          var and__3529__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3529__auto____$1) {
            var and__3529__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3529__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__14252 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__14253 = i + 1;
                  ret = G__14252;
                  i = G__14253;
                  continue;
                }
                break;
              }
            } else {
              return and__3529__auto____$2;
            }
          } else {
            return and__3529__auto____$1;
          }
        } else {
          return and__3529__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3541__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__14254_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__14254_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__14254_SHARP_), cljs.core.second.call(null, p1__14254_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__14255_SHARP_, p2__14256_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__14255_SHARP_, p2__14256_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3541__auto__ = cljs.core.truth_(function() {
    var and__3529__auto__ = xprefs;
    if (cljs.core.truth_(and__3529__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3529__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    var or__3541__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__14257 = cljs.core.rest.call(null, ps);
          ps = G__14257;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3541__auto____$1)) {
      return or__3541__auto____$1;
    } else {
      var or__3541__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__14258 = cljs.core.rest.call(null, ps);
            ps = G__14258;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3541__auto____$2)) {
        return or__3541__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3541__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__14261) {
    var vec__14262 = p__14261;
    var k = cljs.core.nth.call(null, vec__14262, 0, null);
    var _ = cljs.core.nth.call(null, vec__14262, 1, null);
    var e = vec__14262;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3541__auto__ = be == null;
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj14264 = {};
  return obj14264;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._reset[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._reset["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._add_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._add_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._remove_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._remove_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._prefer_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._get_method[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._get_method["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._methods[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._methods["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3529__auto__ = mf;
    if (and__3529__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4168__auto__ = mf == null ? null : mf;
    return function() {
      var or__3541__auto__ = cljs.core._prefers[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core._prefers["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__14266 = null;
  var G__14266__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__14266__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__14266__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__14266__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__14266__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__14266__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__14266__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__14266__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__14266__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__14266__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__14266__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__14266__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__14266__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__14266__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__14266__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__14266__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__14266__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__14266__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__14266__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__14266__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__14266__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__14266 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__14266__2.call(this, self__, a);
      case 3:
        return G__14266__3.call(this, self__, a, b);
      case 4:
        return G__14266__4.call(this, self__, a, b, c);
      case 5:
        return G__14266__5.call(this, self__, a, b, c, d);
      case 6:
        return G__14266__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__14266__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__14266__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__14266__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__14266__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__14266__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__14266__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__14266__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__14266__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__14266__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__14266__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__14266__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__14266__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__14266__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__14266__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__14266__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__14266__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14266;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args14265) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args14265)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("clustermap.rtree");
goog.require("cljs.core");
clustermap.rtree.rtree_index = function rtree_index(js_index) {
  var rtree = new RTree(10);
  var keys = Object.keys(js_index);
  var features = [];
  var js_feature_coll = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), "FeatureCollection"], null));
  var _ = js_feature_coll["features"] = features;
  var seq__13181_13185 = cljs.core.seq.call(null, keys);
  var chunk__13182_13186 = null;
  var count__13183_13187 = 0;
  var i__13184_13188 = 0;
  while (true) {
    if (i__13184_13188 < count__13183_13187) {
      var k_13189 = cljs.core._nth.call(null, chunk__13182_13186, i__13184_13188);
      var obj_13190 = js_index[k_13189];
      var geom_13191 = obj_13190["geojson"];
      var feature_13192 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "Feature", new cljs.core.Keyword(null, "properties", "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), obj_13190["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), obj_13190["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
      1128032665), obj_13190["compact_name"]], null)], null));
      var __13193__$1 = feature_13192["geometry"] = geom_13191;
      features.push(feature_13192);
      var G__13194 = seq__13181_13185;
      var G__13195 = chunk__13182_13186;
      var G__13196 = count__13183_13187;
      var G__13197 = i__13184_13188 + 1;
      seq__13181_13185 = G__13194;
      chunk__13182_13186 = G__13195;
      count__13183_13187 = G__13196;
      i__13184_13188 = G__13197;
      continue;
    } else {
      var temp__4126__auto___13198 = cljs.core.seq.call(null, seq__13181_13185);
      if (temp__4126__auto___13198) {
        var seq__13181_13199__$1 = temp__4126__auto___13198;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13181_13199__$1)) {
          var c__4297__auto___13200 = cljs.core.chunk_first.call(null, seq__13181_13199__$1);
          var G__13201 = cljs.core.chunk_rest.call(null, seq__13181_13199__$1);
          var G__13202 = c__4297__auto___13200;
          var G__13203 = cljs.core.count.call(null, c__4297__auto___13200);
          var G__13204 = 0;
          seq__13181_13185 = G__13201;
          chunk__13182_13186 = G__13202;
          count__13183_13187 = G__13203;
          i__13184_13188 = G__13204;
          continue;
        } else {
          var k_13205 = cljs.core.first.call(null, seq__13181_13199__$1);
          var obj_13206 = js_index[k_13205];
          var geom_13207 = obj_13206["geojson"];
          var feature_13208 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "Feature", new cljs.core.Keyword(null, "properties", "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), obj_13206["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), obj_13206["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
          1128032665), obj_13206["compact_name"]], null)], null));
          var __13209__$1 = feature_13208["geometry"] = geom_13207;
          features.push(feature_13208);
          var G__13210 = cljs.core.next.call(null, seq__13181_13199__$1);
          var G__13211 = null;
          var G__13212 = 0;
          var G__13213 = 0;
          seq__13181_13185 = G__13210;
          chunk__13182_13186 = G__13211;
          count__13183_13187 = G__13212;
          i__13184_13188 = G__13213;
          continue;
        }
      } else {
      }
    }
    break;
  }
  rtree.geoJSON(js_feature_coll);
  return rtree;
};
clustermap.rtree.point_in_polygons = function point_in_polygons(js_index, x, y) {
  var hits = js_index.search(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), x, new cljs.core.Keyword(null, "y", "y", 1013904363), y, new cljs.core.Keyword(null, "w", "w", 1013904361), 0, new cljs.core.Keyword(null, "h", "h", 1013904346), 0], null)));
  return cljs.core.filter.call(null, function(hits) {
    return function(hit) {
      return gju.pointInPolygon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "Point", new cljs.core.Keyword(null, "coordinates", "coordinates", 2885823853), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)], null)), hit.geometry);
    };
  }(hits), hits);
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && (!!document.documentMode && document.documentMode >= documentMode));
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", 
FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", 
SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  element.className = newClasses.join(" ");
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    element.className = classes.join(" ");
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  element.className = classes.join(" ");
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content);
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content);
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || href));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  this.disposed_ = false;
  if (goog.Disposable.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return!!this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    if (goog.Disposable.ENABLE_MONITORING) {
      if (this.disposed_ == undefined) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor");
      }
      var uid = goog.getUid(this);
      delete goog.Disposable.instances_[uid];
    }
    this.disposed_ = true;
    this.disposeInternal();
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if (!this.dependentDisposables_) {
    this.dependentDisposables_ = [];
  }
  this.dependentDisposables_.push(disposable);
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_);
  }
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.net.xpc.logger.fine("error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.net.xpc.logger.fine("transport connect called");
  if (!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.net.xpc.logger.finest("Inner peer reconnect triggered.");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && (message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect")) {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.net.xpc.logger.warning("got ack with wrong sequence");
      }
    } else {
      goog.net.xpc.logger.warning("received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery");
  } else {
    this.channel_.deliver_(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for (var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive();
    }
  } catch (e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if (!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.net.xpc.logger.severe("sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj16901 = {};
  return obj16901;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3529__auto__ = port;
    if (and__3529__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4168__auto__ = port == null ? null : port;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj16903 = {};
  return obj16903;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3529__auto__ = port;
    if (and__3529__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4168__auto__ = port == null ? null : port;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj16905 = {};
  return obj16905;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3529__auto__ = chan;
    if (and__3529__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4168__auto__ = chan == null ? null : chan;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj16907 = {};
  return obj16907;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3529__auto__ = h;
    if (and__3529__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4168__auto__ = h == null ? null : h;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3529__auto__ = h;
    if (and__3529__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4168__auto__ = h == null ? null : h;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj16909 = {};
  return obj16909;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3529__auto__ = b;
    if (and__3529__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4168__auto__ = b == null ? null : b;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3529__auto__ = b;
    if (and__3529__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4168__auto__ = b == null ? null : b;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3529__auto__ = b;
    if (and__3529__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4168__auto__ = b == null ? null : b;
    return function() {
      var or__3541__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj16911 = {};
  return obj16911;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__16912 = cnt + 1;
      cnt = G__16912;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4397__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4397__auto__) {
      var v_16913 = this$.pop();
      if (keep_QMARK_.call(null, v_16913)) {
        this$.unshift(v_16913);
      } else {
      }
      var G__16914 = x + 1;
      x = G__16914;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_16915 = 0;
  while (true) {
    var m_16916 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_16916 == null) {
    } else {
      m_16916.call(null);
      if (count_16915 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__16917 = count_16915 + 1;
        count_16915 = G__16917;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3529__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3529__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t16921 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t16921 = function(val, box, meta16922) {
      this.val = val;
      this.box = box;
      this.meta16922 = meta16922;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t16921.cljs$lang$type = true;
    cljs.core.async.impl.channels.t16921.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t16921";
    cljs.core.async.impl.channels.t16921.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.channels/t16921");
    };
    cljs.core.async.impl.channels.t16921.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t16921.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16923) {
      var self__ = this;
      var _16923__$1 = this;
      return self__.meta16922;
    };
    cljs.core.async.impl.channels.t16921.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16923, meta16922__$1) {
      var self__ = this;
      var _16923__$1 = this;
      return new cljs.core.async.impl.channels.t16921(self__.val, self__.box, meta16922__$1);
    };
    cljs.core.async.impl.channels.__GT_t16921 = function __GT_t16921(val__$1, box__$1, meta16922) {
      return new cljs.core.async.impl.channels.t16921(val__$1, box__$1, meta16922);
    };
  }
  return new cljs.core.async.impl.channels.t16921(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4111__auto__, writer__4112__auto__, opts__4113__auto__) {
  return cljs.core._write.call(null, writer__4112__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_16924 = self__.takes.pop();
      if (taker_16924 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_16924)) {
          var take_cb_16925 = cljs.core.async.impl.protocols.commit.call(null, taker_16924);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_16925, taker_16924, this$__$1) {
            return function() {
              return take_cb_16925.call(null, null);
            };
          }(take_cb_16925, taker_16924, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t16848 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t16848 = function(f, fn_handler, meta16849) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16849 = meta16849;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t16848.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t16848.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t16848";
    cljs.core.async.impl.ioc_helpers.t16848.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.ioc-helpers/t16848");
    };
    cljs.core.async.impl.ioc_helpers.t16848.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t16848.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t16848.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t16848.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16850) {
      var self__ = this;
      var _16850__$1 = this;
      return self__.meta16849;
    };
    cljs.core.async.impl.ioc_helpers.t16848.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16850, meta16849__$1) {
      var self__ = this;
      var _16850__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t16848(self__.f, self__.fn_handler, meta16849__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t16848 = function __GT_t16848(f__$1, fn_handler__$1, meta16849) {
      return new cljs.core.async.impl.ioc_helpers.t16848(f__$1, fn_handler__$1, meta16849);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t16848(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e16852) {
    if (e16852 instanceof Object) {
      var ex = e16852;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e16852;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_16855_16857 = state;
    statearr_16855_16857[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_16855_16857[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_16856_16858 = state;
    statearr_16856_16858[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16856_16858[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_16861_16863 = state;
    statearr_16861_16863[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_16861_16863[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_16862_16864 = state;
    statearr_16862_16864[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16862_16864[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__16865) {
    var map__16870 = p__16865;
    var map__16870__$1 = cljs.core.seq_QMARK_.call(null, map__16870) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16870) : map__16870;
    var opts = map__16870__$1;
    var statearr_16871_16874 = state;
    statearr_16871_16874[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__16870, map__16870__$1, opts) {
      return function(val) {
        var statearr_16872_16875 = state;
        statearr_16872_16875[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__16870, map__16870__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_16873_16876 = state;
      statearr_16873_16876[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__16865 = null;
    if (arguments.length > 3) {
      p__16865 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__16865);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__16877) {
    var state = cljs.core.first(arglist__16877);
    arglist__16877 = cljs.core.next(arglist__16877);
    var cont_block = cljs.core.first(arglist__16877);
    arglist__16877 = cljs.core.next(arglist__16877);
    var ports = cljs.core.first(arglist__16877);
    var p__16865 = cljs.core.rest(arglist__16877);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__16865);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4127__auto__, k__4128__auto__) {
  var self__ = this;
  var this__4127__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4127__auto____$1, k__4128__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4129__auto__, k16879, else__4130__auto__) {
  var self__ = this;
  var this__4129__auto____$1 = this;
  var G__16881 = k16879 instanceof cljs.core.Keyword ? k16879.fqn : null;
  var caseval__16885;
  switch(G__16881) {
    case "prev":
      caseval__16885 = self__.prev;
      break;
    case "continue-block":
      caseval__16885 = self__.continue_block;
      break;
    case "finally-block":
      caseval__16885 = self__.finally_block;
      break;
    case "catch-exception":
      caseval__16885 = self__.catch_exception;
      break;
    case "catch-block":
      caseval__16885 = self__.catch_block;
      break;
    default:
      caseval__16885 = cljs.core.get.call(null, self__.__extmap, k16879, else__4130__auto__);
  }
  return caseval__16885;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4141__auto__, writer__4142__auto__, opts__4143__auto__) {
  var self__ = this;
  var this__4141__auto____$1 = this;
  var pr_pair__4144__auto__ = function(this__4141__auto____$1) {
    return function(keyval__4145__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4142__auto__, cljs.core.pr_writer, "", " ", "", opts__4143__auto__, keyval__4145__auto__);
    };
  }(this__4141__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4142__auto__, pr_pair__4144__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4143__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4125__auto__) {
  var self__ = this;
  var this__4125__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4121__auto__) {
  var self__ = this;
  var this__4121__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4131__auto__) {
  var self__ = this;
  var this__4131__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4122__auto__) {
  var self__ = this;
  var this__4122__auto____$1 = this;
  var h__3952__auto__ = self__.__hash;
  if (!(h__3952__auto__ == null)) {
    return h__3952__auto__;
  } else {
    var h__3952__auto____$1 = cljs.core.hash_imap.call(null, this__4122__auto____$1);
    self__.__hash = h__3952__auto____$1;
    return h__3952__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4123__auto__, other__4124__auto__) {
  var self__ = this;
  var this__4123__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = other__4124__auto__;
    if (cljs.core.truth_(and__3529__auto__)) {
      return this__4123__auto____$1.constructor === other__4124__auto__.constructor && cljs.core.equiv_map.call(null, this__4123__auto____$1, other__4124__auto__);
    } else {
      return and__3529__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4136__auto__, k__4137__auto__) {
  var self__ = this;
  var this__4136__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  null], null), null), k__4137__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4136__auto____$1), self__.__meta), k__4137__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4137__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4134__auto__, k__4135__auto__, G__16878) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  var pred__16882 = cljs.core.keyword_identical_QMARK_;
  var expr__16883 = k__4135__auto__;
  if (cljs.core.truth_(pred__16882.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__16883))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__16878, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__16882.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__16883))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__16878, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__16882.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__16883))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__16878, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__16882.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__16883))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__16878, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__16882.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__16883))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__16878, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4135__auto__, G__16878), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4139__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4126__auto__, G__16878) {
  var self__ = this;
  var this__4126__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__16878, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4132__auto__, entry__4133__auto__) {
  var self__ = this;
  var this__4132__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4133__auto__)) {
    return cljs.core._assoc.call(null, this__4132__auto____$1, cljs.core._nth.call(null, entry__4133__auto__, 0), cljs.core._nth.call(null, entry__4133__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4132__auto____$1, entry__4133__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4161__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4161__auto__, writer__4162__auto__) {
  return cljs.core._write.call(null, writer__4162__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__16880) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__16880), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__16880), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__16880), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__16880), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__16880), null, cljs.core.dissoc.call(null, G__16880, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_16887 = state;
  statearr_16887[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_16887;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = exception;
      if (cljs.core.truth_(and__3529__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3529__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3529__auto__ = exception;
        if (cljs.core.truth_(and__3529__auto__)) {
          var and__3529__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3529__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3529__auto____$1;
          }
        } else {
          return and__3529__auto__;
        }
      }())) {
        var statearr_16893 = state;
        statearr_16893[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_16893[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_16893[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_16893[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_16893;
      } else {
        if (cljs.core.truth_(function() {
          var and__3529__auto__ = exception;
          if (cljs.core.truth_(and__3529__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3529__auto__;
          }
        }())) {
          var statearr_16894_16898 = state;
          statearr_16894_16898[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__16899 = state;
          state = G__16899;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3529__auto__ = exception;
            if (cljs.core.truth_(and__3529__auto__)) {
              var and__3529__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3529__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3529__auto____$1;
              }
            } else {
              return and__3529__auto__;
            }
          }())) {
            var statearr_16895 = state;
            statearr_16895[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_16895[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_16895;
          } else {
            if (cljs.core.truth_(function() {
              var and__3529__auto__ = cljs.core.not.call(null, exception);
              if (and__3529__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3529__auto__;
              }
            }())) {
              var statearr_16896 = state;
              statearr_16896[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_16896[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_16896;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_16897 = state;
                statearr_16897[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_16897[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_16897;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__16821 = level + 1;
        level = G__16821;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_16822 = 0;
    while (true) {
      if (i_16822 < arr.length) {
        arr[i_16822] = null;
        var G__16823 = i_16822 + 1;
        i_16822 = G__16823;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__16824 = x_SINGLEQUOTE_;
                x__$1 = G__16824;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__16825 = x__$1;
        var G__16826 = k;
        var G__16827 = level - 1;
        var G__16828 = update;
        x = G__16825;
        k = G__16826;
        level = G__16827;
        update = G__16828;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_16829 = self__.level + 1;
      while (true) {
        if (i_16829 <= new_level + 1) {
          update[i_16829] = self__.header;
          var G__16830 = i_16829 + 1;
          i_16829 = G__16830;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_16831 = 0;
    while (true) {
      if (i_16831 <= self__.level) {
        var links_16832 = update[i_16831].forward;
        if (links_16832[i_16831] === x__$1) {
          links_16832[i_16831] = x__$1.forward[i_16831];
          var G__16833 = i_16831 + 1;
          i_16831 = G__16833;
          continue;
        } else {
          var G__16834 = i_16831 + 1;
          i_16831 = G__16834;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__16835 = x_SINGLEQUOTE_;
              x__$1 = G__16835;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__16836 = nx;
        var G__16837 = level__$1 - 1;
        x = G__16836;
        level__$1 = G__16837;
        continue;
      } else {
        var G__16838 = x;
        var G__16839 = level__$1 - 1;
        x = G__16838;
        level__$1 = G__16839;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__16840 = x_SINGLEQUOTE_;
              x__$1 = G__16840;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__16841 = nx;
        var G__16842 = level__$1 - 1;
        x = G__16841;
        level__$1 = G__16842;
        continue;
      } else {
        var G__16843 = x;
        var G__16844 = level__$1 - 1;
        x = G__16843;
        level__$1 = G__16844;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3541__auto__ = cljs.core.truth_(function() {
    var and__3529__auto__ = me;
    if (cljs.core.truth_(and__3529__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3529__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3541__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3541__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t14270 !== "undefined") {
  } else {
    cljs.core.async.t14270 = function(f, fn_handler, meta14271) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14271 = meta14271;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14270.cljs$lang$type = true;
    cljs.core.async.t14270.cljs$lang$ctorStr = "cljs.core.async/t14270";
    cljs.core.async.t14270.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14270");
    };
    cljs.core.async.t14270.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14270.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t14270.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t14270.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14272) {
      var self__ = this;
      var _14272__$1 = this;
      return self__.meta14271;
    };
    cljs.core.async.t14270.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14272, meta14271__$1) {
      var self__ = this;
      var _14272__$1 = this;
      return new cljs.core.async.t14270(self__.f, self__.fn_handler, meta14271__$1);
    };
    cljs.core.async.__GT_t14270 = function __GT_t14270(f__$1, fn_handler__$1, meta14271) {
      return new cljs.core.async.t14270(f__$1, fn_handler__$1, meta14271);
    };
  }
  return new cljs.core.async.t14270(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__14274 = buff;
  if (G__14274) {
    var bit__4191__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3541__auto__ = bit__4191__auto__;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return G__14274.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__14274.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__14274);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__14274);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_14275 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_14275);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_14275, ret) {
          return function() {
            return fn1.call(null, val_14275);
          };
        }(val_14275, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = ret;
      if (cljs.core.truth_(and__3529__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3529__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4397__auto___14276 = n;
  var x_14277 = 0;
  while (true) {
    if (x_14277 < n__4397__auto___14276) {
      a[x_14277] = 0;
      var G__14278 = x_14277 + 1;
      x_14277 = G__14278;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14279 = i + 1;
      i = G__14279;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t14283 !== "undefined") {
  } else {
    cljs.core.async.t14283 = function(flag, alt_flag, meta14284) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14284 = meta14284;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14283.cljs$lang$type = true;
    cljs.core.async.t14283.cljs$lang$ctorStr = "cljs.core.async/t14283";
    cljs.core.async.t14283.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14283");
      };
    }(flag);
    cljs.core.async.t14283.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14283.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t14283.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t14283.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_14285) {
        var self__ = this;
        var _14285__$1 = this;
        return self__.meta14284;
      };
    }(flag);
    cljs.core.async.t14283.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_14285, meta14284__$1) {
        var self__ = this;
        var _14285__$1 = this;
        return new cljs.core.async.t14283(self__.flag, self__.alt_flag, meta14284__$1);
      };
    }(flag);
    cljs.core.async.__GT_t14283 = function(flag) {
      return function __GT_t14283(flag__$1, alt_flag__$1, meta14284) {
        return new cljs.core.async.t14283(flag__$1, alt_flag__$1, meta14284);
      };
    }(flag);
  }
  return new cljs.core.async.t14283(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t14289 !== "undefined") {
  } else {
    cljs.core.async.t14289 = function(cb, flag, alt_handler, meta14290) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14290 = meta14290;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14289.cljs$lang$type = true;
    cljs.core.async.t14289.cljs$lang$ctorStr = "cljs.core.async/t14289";
    cljs.core.async.t14289.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14289");
    };
    cljs.core.async.t14289.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14289.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t14289.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t14289.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14291) {
      var self__ = this;
      var _14291__$1 = this;
      return self__.meta14290;
    };
    cljs.core.async.t14289.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14291, meta14290__$1) {
      var self__ = this;
      var _14291__$1 = this;
      return new cljs.core.async.t14289(self__.cb, self__.flag, self__.alt_handler, meta14290__$1);
    };
    cljs.core.async.__GT_t14289 = function __GT_t14289(cb__$1, flag__$1, alt_handler__$1, meta14290) {
      return new cljs.core.async.t14289(cb__$1, flag__$1, alt_handler__$1, meta14290);
    };
  }
  return new cljs.core.async.t14289(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14292_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14292_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3541__auto__ = wport;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__14293 = i + 1;
          i = G__14293;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3541__auto__ = ret;
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4126__auto__ = function() {
        var and__3529__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3529__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3529__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__14294) {
    var map__14296 = p__14294;
    var map__14296__$1 = cljs.core.seq_QMARK_.call(null, map__14296) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14296) : map__14296;
    var opts = map__14296__$1;
    if (null) {
      return null;
    } else {
      throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__14294 = null;
    if (arguments.length > 1) {
      p__14294 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__14294);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__14297) {
    var ports = cljs.core.first(arglist__14297);
    var p__14294 = cljs.core.rest(arglist__14297);
    return alts_BANG___delegate(ports, p__14294);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t14305 !== "undefined") {
  } else {
    cljs.core.async.t14305 = function(ch, f, map_LT_, meta14306) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta14306 = meta14306;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14305.cljs$lang$type = true;
    cljs.core.async.t14305.cljs$lang$ctorStr = "cljs.core.async/t14305";
    cljs.core.async.t14305.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14305");
    };
    cljs.core.async.t14305.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14305.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t14305.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14305.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t14308 !== "undefined") {
        } else {
          cljs.core.async.t14308 = function(fn1, _, meta14306, ch, f, map_LT_, meta14309) {
            this.fn1 = fn1;
            this._ = _;
            this.meta14306 = meta14306;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta14309 = meta14309;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t14308.cljs$lang$type = true;
          cljs.core.async.t14308.cljs$lang$ctorStr = "cljs.core.async/t14308";
          cljs.core.async.t14308.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
              return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14308");
            };
          }(___$1);
          cljs.core.async.t14308.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t14308.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t14308.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t14308.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__14298_SHARP_) {
                  return f1.call(null, p1__14298_SHARP_ == null ? null : self__.f.call(null, p1__14298_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t14308.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_14310) {
              var self__ = this;
              var _14310__$1 = this;
              return self__.meta14309;
            };
          }(___$1);
          cljs.core.async.t14308.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_14310, meta14309__$1) {
              var self__ = this;
              var _14310__$1 = this;
              return new cljs.core.async.t14308(self__.fn1, self__._, self__.meta14306, self__.ch, self__.f, self__.map_LT_, meta14309__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t14308 = function(___$1) {
            return function __GT_t14308(fn1__$1, ___$2, meta14306__$1, ch__$2, f__$2, map_LT___$2, meta14309) {
              return new cljs.core.async.t14308(fn1__$1, ___$2, meta14306__$1, ch__$2, f__$2, map_LT___$2, meta14309);
            };
          }(___$1);
        }
        return new cljs.core.async.t14308(fn1, ___$1, self__.meta14306, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3529__auto__ = ret;
        if (cljs.core.truth_(and__3529__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3529__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t14305.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14305.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14305.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14307) {
      var self__ = this;
      var _14307__$1 = this;
      return self__.meta14306;
    };
    cljs.core.async.t14305.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14307, meta14306__$1) {
      var self__ = this;
      var _14307__$1 = this;
      return new cljs.core.async.t14305(self__.ch, self__.f, self__.map_LT_, meta14306__$1);
    };
    cljs.core.async.__GT_t14305 = function __GT_t14305(ch__$1, f__$1, map_LT___$1, meta14306) {
      return new cljs.core.async.t14305(ch__$1, f__$1, map_LT___$1, meta14306);
    };
  }
  return new cljs.core.async.t14305(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t14314 !== "undefined") {
  } else {
    cljs.core.async.t14314 = function(ch, f, map_GT_, meta14315) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta14315 = meta14315;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14314.cljs$lang$type = true;
    cljs.core.async.t14314.cljs$lang$ctorStr = "cljs.core.async/t14314";
    cljs.core.async.t14314.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14314");
    };
    cljs.core.async.t14314.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14314.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t14314.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14314.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t14314.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14314.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14314.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14316) {
      var self__ = this;
      var _14316__$1 = this;
      return self__.meta14315;
    };
    cljs.core.async.t14314.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14316, meta14315__$1) {
      var self__ = this;
      var _14316__$1 = this;
      return new cljs.core.async.t14314(self__.ch, self__.f, self__.map_GT_, meta14315__$1);
    };
    cljs.core.async.__GT_t14314 = function __GT_t14314(ch__$1, f__$1, map_GT___$1, meta14315) {
      return new cljs.core.async.t14314(ch__$1, f__$1, map_GT___$1, meta14315);
    };
  }
  return new cljs.core.async.t14314(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t14320 !== "undefined") {
  } else {
    cljs.core.async.t14320 = function(ch, p, filter_GT_, meta14321) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta14321 = meta14321;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14320.cljs$lang$type = true;
    cljs.core.async.t14320.cljs$lang$ctorStr = "cljs.core.async/t14320";
    cljs.core.async.t14320.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t14320");
    };
    cljs.core.async.t14320.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14320.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t14320.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14320.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t14320.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14320.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14320.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14322) {
      var self__ = this;
      var _14322__$1 = this;
      return self__.meta14321;
    };
    cljs.core.async.t14320.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14322, meta14321__$1) {
      var self__ = this;
      var _14322__$1 = this;
      return new cljs.core.async.t14320(self__.ch, self__.p, self__.filter_GT_, meta14321__$1);
    };
    cljs.core.async.__GT_t14320 = function __GT_t14320(ch__$1, p__$1, filter_GT___$1, meta14321) {
      return new cljs.core.async.t14320(ch__$1, p__$1, filter_GT___$1, meta14321);
    };
  }
  return new cljs.core.async.t14320(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5691__auto___14405 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___14405, out) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___14405, out) {
            return function(state_14384) {
              var state_val_14385 = state_14384[1];
              if (state_val_14385 === 7) {
                var inst_14380 = state_14384[2];
                var state_14384__$1 = state_14384;
                var statearr_14386_14406 = state_14384__$1;
                statearr_14386_14406[2] = inst_14380;
                statearr_14386_14406[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14385 === 1) {
                  var state_14384__$1 = state_14384;
                  var statearr_14387_14407 = state_14384__$1;
                  statearr_14387_14407[2] = null;
                  statearr_14387_14407[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14385 === 4) {
                    var inst_14366 = state_14384[7];
                    var inst_14366__$1 = state_14384[2];
                    var inst_14367 = inst_14366__$1 == null;
                    var state_14384__$1 = function() {
                      var statearr_14388 = state_14384;
                      statearr_14388[7] = inst_14366__$1;
                      return statearr_14388;
                    }();
                    if (cljs.core.truth_(inst_14367)) {
                      var statearr_14389_14408 = state_14384__$1;
                      statearr_14389_14408[1] = 5;
                    } else {
                      var statearr_14390_14409 = state_14384__$1;
                      statearr_14390_14409[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_14385 === 6) {
                      var inst_14366 = state_14384[7];
                      var inst_14371 = p.call(null, inst_14366);
                      var state_14384__$1 = state_14384;
                      if (cljs.core.truth_(inst_14371)) {
                        var statearr_14391_14410 = state_14384__$1;
                        statearr_14391_14410[1] = 8;
                      } else {
                        var statearr_14392_14411 = state_14384__$1;
                        statearr_14392_14411[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_14385 === 3) {
                        var inst_14382 = state_14384[2];
                        var state_14384__$1 = state_14384;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14384__$1, inst_14382);
                      } else {
                        if (state_val_14385 === 2) {
                          var state_14384__$1 = state_14384;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14384__$1, 4, ch);
                        } else {
                          if (state_val_14385 === 11) {
                            var inst_14374 = state_14384[2];
                            var state_14384__$1 = state_14384;
                            var statearr_14393_14412 = state_14384__$1;
                            statearr_14393_14412[2] = inst_14374;
                            statearr_14393_14412[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_14385 === 9) {
                              var state_14384__$1 = state_14384;
                              var statearr_14394_14413 = state_14384__$1;
                              statearr_14394_14413[2] = null;
                              statearr_14394_14413[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_14385 === 5) {
                                var inst_14369 = cljs.core.async.close_BANG_.call(null, out);
                                var state_14384__$1 = state_14384;
                                var statearr_14395_14414 = state_14384__$1;
                                statearr_14395_14414[2] = inst_14369;
                                statearr_14395_14414[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_14385 === 10) {
                                  var inst_14377 = state_14384[2];
                                  var state_14384__$1 = function() {
                                    var statearr_14396 = state_14384;
                                    statearr_14396[8] = inst_14377;
                                    return statearr_14396;
                                  }();
                                  var statearr_14397_14415 = state_14384__$1;
                                  statearr_14397_14415[2] = null;
                                  statearr_14397_14415[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_14385 === 8) {
                                    var inst_14366 = state_14384[7];
                                    var state_14384__$1 = state_14384;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14384__$1, 11, out, inst_14366);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___14405, out);
          return function(switch__5676__auto__, c__5691__auto___14405, out) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_14401 = [null, null, null, null, null, null, null, null, null];
                statearr_14401[0] = state_machine__5677__auto__;
                statearr_14401[1] = 1;
                return statearr_14401;
              };
              var state_machine__5677__auto____1 = function(state_14384) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_14384);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e14402) {
                      if (e14402 instanceof Object) {
                        var ex__5680__auto__ = e14402;
                        var statearr_14403_14416 = state_14384;
                        statearr_14403_14416[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14384);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e14402;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__14417 = state_14384;
                    state_14384 = G__14417;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_14384) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_14384);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___14405, out);
        }();
        var state__5693__auto__ = function() {
          var statearr_14404 = f__5692__auto__.call(null);
          statearr_14404[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___14405;
          return statearr_14404;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___14405, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_14569) {
            var state_val_14570 = state_14569[1];
            if (state_val_14570 === 7) {
              var inst_14565 = state_14569[2];
              var state_14569__$1 = state_14569;
              var statearr_14571_14608 = state_14569__$1;
              statearr_14571_14608[2] = inst_14565;
              statearr_14571_14608[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_14570 === 20) {
                var inst_14540 = state_14569[7];
                var inst_14551 = state_14569[2];
                var inst_14552 = cljs.core.next.call(null, inst_14540);
                var inst_14526 = inst_14552;
                var inst_14527 = null;
                var inst_14528 = 0;
                var inst_14529 = 0;
                var state_14569__$1 = function() {
                  var statearr_14572 = state_14569;
                  statearr_14572[8] = inst_14529;
                  statearr_14572[9] = inst_14528;
                  statearr_14572[10] = inst_14526;
                  statearr_14572[11] = inst_14527;
                  statearr_14572[12] = inst_14551;
                  return statearr_14572;
                }();
                var statearr_14573_14609 = state_14569__$1;
                statearr_14573_14609[2] = null;
                statearr_14573_14609[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14570 === 1) {
                  var state_14569__$1 = state_14569;
                  var statearr_14574_14610 = state_14569__$1;
                  statearr_14574_14610[2] = null;
                  statearr_14574_14610[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14570 === 4) {
                    var inst_14515 = state_14569[13];
                    var inst_14515__$1 = state_14569[2];
                    var inst_14516 = inst_14515__$1 == null;
                    var state_14569__$1 = function() {
                      var statearr_14578 = state_14569;
                      statearr_14578[13] = inst_14515__$1;
                      return statearr_14578;
                    }();
                    if (cljs.core.truth_(inst_14516)) {
                      var statearr_14579_14611 = state_14569__$1;
                      statearr_14579_14611[1] = 5;
                    } else {
                      var statearr_14580_14612 = state_14569__$1;
                      statearr_14580_14612[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_14570 === 15) {
                      var state_14569__$1 = state_14569;
                      var statearr_14581_14613 = state_14569__$1;
                      statearr_14581_14613[2] = null;
                      statearr_14581_14613[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_14570 === 13) {
                        var inst_14529 = state_14569[8];
                        var inst_14528 = state_14569[9];
                        var inst_14526 = state_14569[10];
                        var inst_14527 = state_14569[11];
                        var inst_14536 = state_14569[2];
                        var inst_14537 = inst_14529 + 1;
                        var tmp14575 = inst_14528;
                        var tmp14576 = inst_14526;
                        var tmp14577 = inst_14527;
                        var inst_14526__$1 = tmp14576;
                        var inst_14527__$1 = tmp14577;
                        var inst_14528__$1 = tmp14575;
                        var inst_14529__$1 = inst_14537;
                        var state_14569__$1 = function() {
                          var statearr_14582 = state_14569;
                          statearr_14582[8] = inst_14529__$1;
                          statearr_14582[9] = inst_14528__$1;
                          statearr_14582[10] = inst_14526__$1;
                          statearr_14582[11] = inst_14527__$1;
                          statearr_14582[14] = inst_14536;
                          return statearr_14582;
                        }();
                        var statearr_14583_14614 = state_14569__$1;
                        statearr_14583_14614[2] = null;
                        statearr_14583_14614[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_14570 === 6) {
                          var inst_14515 = state_14569[13];
                          var inst_14520 = f.call(null, inst_14515);
                          var inst_14525 = cljs.core.seq.call(null, inst_14520);
                          var inst_14526 = inst_14525;
                          var inst_14527 = null;
                          var inst_14528 = 0;
                          var inst_14529 = 0;
                          var state_14569__$1 = function() {
                            var statearr_14584 = state_14569;
                            statearr_14584[8] = inst_14529;
                            statearr_14584[9] = inst_14528;
                            statearr_14584[10] = inst_14526;
                            statearr_14584[11] = inst_14527;
                            return statearr_14584;
                          }();
                          var statearr_14585_14615 = state_14569__$1;
                          statearr_14585_14615[2] = null;
                          statearr_14585_14615[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_14570 === 17) {
                            var inst_14540 = state_14569[7];
                            var inst_14544 = cljs.core.chunk_first.call(null, inst_14540);
                            var inst_14545 = cljs.core.chunk_rest.call(null, inst_14540);
                            var inst_14546 = cljs.core.count.call(null, inst_14544);
                            var inst_14526 = inst_14545;
                            var inst_14527 = inst_14544;
                            var inst_14528 = inst_14546;
                            var inst_14529 = 0;
                            var state_14569__$1 = function() {
                              var statearr_14586 = state_14569;
                              statearr_14586[8] = inst_14529;
                              statearr_14586[9] = inst_14528;
                              statearr_14586[10] = inst_14526;
                              statearr_14586[11] = inst_14527;
                              return statearr_14586;
                            }();
                            var statearr_14587_14616 = state_14569__$1;
                            statearr_14587_14616[2] = null;
                            statearr_14587_14616[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_14570 === 3) {
                              var inst_14567 = state_14569[2];
                              var state_14569__$1 = state_14569;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14569__$1, inst_14567);
                            } else {
                              if (state_val_14570 === 12) {
                                var inst_14560 = state_14569[2];
                                var state_14569__$1 = state_14569;
                                var statearr_14588_14617 = state_14569__$1;
                                statearr_14588_14617[2] = inst_14560;
                                statearr_14588_14617[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_14570 === 2) {
                                  var state_14569__$1 = state_14569;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14569__$1, 4, in$);
                                } else {
                                  if (state_val_14570 === 19) {
                                    var inst_14555 = state_14569[2];
                                    var state_14569__$1 = state_14569;
                                    var statearr_14589_14618 = state_14569__$1;
                                    statearr_14589_14618[2] = inst_14555;
                                    statearr_14589_14618[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_14570 === 11) {
                                      var inst_14540 = state_14569[7];
                                      var inst_14526 = state_14569[10];
                                      var inst_14540__$1 = cljs.core.seq.call(null, inst_14526);
                                      var state_14569__$1 = function() {
                                        var statearr_14590 = state_14569;
                                        statearr_14590[7] = inst_14540__$1;
                                        return statearr_14590;
                                      }();
                                      if (inst_14540__$1) {
                                        var statearr_14591_14619 = state_14569__$1;
                                        statearr_14591_14619[1] = 14;
                                      } else {
                                        var statearr_14592_14620 = state_14569__$1;
                                        statearr_14592_14620[1] = 15;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_14570 === 9) {
                                        var inst_14562 = state_14569[2];
                                        var state_14569__$1 = function() {
                                          var statearr_14593 = state_14569;
                                          statearr_14593[15] = inst_14562;
                                          return statearr_14593;
                                        }();
                                        var statearr_14594_14621 = state_14569__$1;
                                        statearr_14594_14621[2] = null;
                                        statearr_14594_14621[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_14570 === 5) {
                                          var inst_14518 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_14569__$1 = state_14569;
                                          var statearr_14595_14622 = state_14569__$1;
                                          statearr_14595_14622[2] = inst_14518;
                                          statearr_14595_14622[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_14570 === 14) {
                                            var inst_14540 = state_14569[7];
                                            var inst_14542 = cljs.core.chunked_seq_QMARK_.call(null, inst_14540);
                                            var state_14569__$1 = state_14569;
                                            if (inst_14542) {
                                              var statearr_14596_14623 = state_14569__$1;
                                              statearr_14596_14623[1] = 17;
                                            } else {
                                              var statearr_14597_14624 = state_14569__$1;
                                              statearr_14597_14624[1] = 18;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_14570 === 16) {
                                              var inst_14558 = state_14569[2];
                                              var state_14569__$1 = state_14569;
                                              var statearr_14598_14625 = state_14569__$1;
                                              statearr_14598_14625[2] = inst_14558;
                                              statearr_14598_14625[1] = 12;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_14570 === 10) {
                                                var inst_14529 = state_14569[8];
                                                var inst_14527 = state_14569[11];
                                                var inst_14534 = cljs.core._nth.call(null, inst_14527, inst_14529);
                                                var state_14569__$1 = state_14569;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14569__$1, 13, out, inst_14534);
                                              } else {
                                                if (state_val_14570 === 18) {
                                                  var inst_14540 = state_14569[7];
                                                  var inst_14549 = cljs.core.first.call(null, inst_14540);
                                                  var state_14569__$1 = state_14569;
                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14569__$1, 20, out, inst_14549);
                                                } else {
                                                  if (state_val_14570 === 8) {
                                                    var inst_14529 = state_14569[8];
                                                    var inst_14528 = state_14569[9];
                                                    var inst_14531 = inst_14529 < inst_14528;
                                                    var inst_14532 = inst_14531;
                                                    var state_14569__$1 = state_14569;
                                                    if (cljs.core.truth_(inst_14532)) {
                                                      var statearr_14599_14626 = state_14569__$1;
                                                      statearr_14599_14626[1] = 10;
                                                    } else {
                                                      var statearr_14600_14627 = state_14569__$1;
                                                      statearr_14600_14627[1] = 11;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_14604 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14604[0] = state_machine__5677__auto__;
              statearr_14604[1] = 1;
              return statearr_14604;
            };
            var state_machine__5677__auto____1 = function(state_14569) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_14569);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e14605) {
                    if (e14605 instanceof Object) {
                      var ex__5680__auto__ = e14605;
                      var statearr_14606_14628 = state_14569;
                      statearr_14606_14628[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14569);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e14605;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__14629 = state_14569;
                  state_14569 = G__14629;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_14569) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_14569);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_14607 = f__5692__auto__.call(null);
        statearr_14607[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_14607;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5691__auto___14710 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___14710) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___14710) {
            return function(state_14689) {
              var state_val_14690 = state_14689[1];
              if (state_val_14690 === 7) {
                var inst_14685 = state_14689[2];
                var state_14689__$1 = state_14689;
                var statearr_14691_14711 = state_14689__$1;
                statearr_14691_14711[2] = inst_14685;
                statearr_14691_14711[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14690 === 1) {
                  var state_14689__$1 = state_14689;
                  var statearr_14692_14712 = state_14689__$1;
                  statearr_14692_14712[2] = null;
                  statearr_14692_14712[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14690 === 4) {
                    var inst_14672 = state_14689[7];
                    var inst_14672__$1 = state_14689[2];
                    var inst_14673 = inst_14672__$1 == null;
                    var state_14689__$1 = function() {
                      var statearr_14693 = state_14689;
                      statearr_14693[7] = inst_14672__$1;
                      return statearr_14693;
                    }();
                    if (cljs.core.truth_(inst_14673)) {
                      var statearr_14694_14713 = state_14689__$1;
                      statearr_14694_14713[1] = 5;
                    } else {
                      var statearr_14695_14714 = state_14689__$1;
                      statearr_14695_14714[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_14690 === 6) {
                      var inst_14672 = state_14689[7];
                      var state_14689__$1 = state_14689;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14689__$1, 11, to, inst_14672);
                    } else {
                      if (state_val_14690 === 3) {
                        var inst_14687 = state_14689[2];
                        var state_14689__$1 = state_14689;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14689__$1, inst_14687);
                      } else {
                        if (state_val_14690 === 2) {
                          var state_14689__$1 = state_14689;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14689__$1, 4, from);
                        } else {
                          if (state_val_14690 === 11) {
                            var inst_14682 = state_14689[2];
                            var state_14689__$1 = function() {
                              var statearr_14696 = state_14689;
                              statearr_14696[8] = inst_14682;
                              return statearr_14696;
                            }();
                            var statearr_14697_14715 = state_14689__$1;
                            statearr_14697_14715[2] = null;
                            statearr_14697_14715[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_14690 === 9) {
                              var state_14689__$1 = state_14689;
                              var statearr_14698_14716 = state_14689__$1;
                              statearr_14698_14716[2] = null;
                              statearr_14698_14716[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_14690 === 5) {
                                var state_14689__$1 = state_14689;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_14699_14717 = state_14689__$1;
                                  statearr_14699_14717[1] = 8;
                                } else {
                                  var statearr_14700_14718 = state_14689__$1;
                                  statearr_14700_14718[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_14690 === 10) {
                                  var inst_14679 = state_14689[2];
                                  var state_14689__$1 = state_14689;
                                  var statearr_14701_14719 = state_14689__$1;
                                  statearr_14701_14719[2] = inst_14679;
                                  statearr_14701_14719[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_14690 === 8) {
                                    var inst_14676 = cljs.core.async.close_BANG_.call(null, to);
                                    var state_14689__$1 = state_14689;
                                    var statearr_14702_14720 = state_14689__$1;
                                    statearr_14702_14720[2] = inst_14676;
                                    statearr_14702_14720[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___14710);
          return function(switch__5676__auto__, c__5691__auto___14710) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_14706 = [null, null, null, null, null, null, null, null, null];
                statearr_14706[0] = state_machine__5677__auto__;
                statearr_14706[1] = 1;
                return statearr_14706;
              };
              var state_machine__5677__auto____1 = function(state_14689) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_14689);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e14707) {
                      if (e14707 instanceof Object) {
                        var ex__5680__auto__ = e14707;
                        var statearr_14708_14721 = state_14689;
                        statearr_14708_14721[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14689);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e14707;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__14722 = state_14689;
                    state_14689 = G__14722;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_14689) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_14689);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___14710);
        }();
        var state__5693__auto__ = function() {
          var statearr_14709 = f__5692__auto__.call(null);
          statearr_14709[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___14710;
          return statearr_14709;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___14710));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5691__auto___14809 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___14809, tc, fc) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___14809, tc, fc) {
            return function(state_14787) {
              var state_val_14788 = state_14787[1];
              if (state_val_14788 === 7) {
                var inst_14783 = state_14787[2];
                var state_14787__$1 = state_14787;
                var statearr_14789_14810 = state_14787__$1;
                statearr_14789_14810[2] = inst_14783;
                statearr_14789_14810[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14788 === 1) {
                  var state_14787__$1 = state_14787;
                  var statearr_14790_14811 = state_14787__$1;
                  statearr_14790_14811[2] = null;
                  statearr_14790_14811[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14788 === 4) {
                    var inst_14768 = state_14787[7];
                    var inst_14768__$1 = state_14787[2];
                    var inst_14769 = inst_14768__$1 == null;
                    var state_14787__$1 = function() {
                      var statearr_14791 = state_14787;
                      statearr_14791[7] = inst_14768__$1;
                      return statearr_14791;
                    }();
                    if (cljs.core.truth_(inst_14769)) {
                      var statearr_14792_14812 = state_14787__$1;
                      statearr_14792_14812[1] = 5;
                    } else {
                      var statearr_14793_14813 = state_14787__$1;
                      statearr_14793_14813[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_14788 === 6) {
                      var inst_14768 = state_14787[7];
                      var inst_14774 = p.call(null, inst_14768);
                      var state_14787__$1 = state_14787;
                      if (cljs.core.truth_(inst_14774)) {
                        var statearr_14794_14814 = state_14787__$1;
                        statearr_14794_14814[1] = 9;
                      } else {
                        var statearr_14795_14815 = state_14787__$1;
                        statearr_14795_14815[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_14788 === 3) {
                        var inst_14785 = state_14787[2];
                        var state_14787__$1 = state_14787;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14787__$1, inst_14785);
                      } else {
                        if (state_val_14788 === 2) {
                          var state_14787__$1 = state_14787;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14787__$1, 4, ch);
                        } else {
                          if (state_val_14788 === 11) {
                            var inst_14768 = state_14787[7];
                            var inst_14778 = state_14787[2];
                            var state_14787__$1 = state_14787;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14787__$1, 8, inst_14778, inst_14768);
                          } else {
                            if (state_val_14788 === 9) {
                              var state_14787__$1 = state_14787;
                              var statearr_14796_14816 = state_14787__$1;
                              statearr_14796_14816[2] = tc;
                              statearr_14796_14816[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_14788 === 5) {
                                var inst_14771 = cljs.core.async.close_BANG_.call(null, tc);
                                var inst_14772 = cljs.core.async.close_BANG_.call(null, fc);
                                var state_14787__$1 = function() {
                                  var statearr_14797 = state_14787;
                                  statearr_14797[8] = inst_14771;
                                  return statearr_14797;
                                }();
                                var statearr_14798_14817 = state_14787__$1;
                                statearr_14798_14817[2] = inst_14772;
                                statearr_14798_14817[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_14788 === 10) {
                                  var state_14787__$1 = state_14787;
                                  var statearr_14799_14818 = state_14787__$1;
                                  statearr_14799_14818[2] = fc;
                                  statearr_14799_14818[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_14788 === 8) {
                                    var inst_14780 = state_14787[2];
                                    var state_14787__$1 = function() {
                                      var statearr_14800 = state_14787;
                                      statearr_14800[9] = inst_14780;
                                      return statearr_14800;
                                    }();
                                    var statearr_14801_14819 = state_14787__$1;
                                    statearr_14801_14819[2] = null;
                                    statearr_14801_14819[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___14809, tc, fc);
          return function(switch__5676__auto__, c__5691__auto___14809, tc, fc) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_14805 = [null, null, null, null, null, null, null, null, null, null];
                statearr_14805[0] = state_machine__5677__auto__;
                statearr_14805[1] = 1;
                return statearr_14805;
              };
              var state_machine__5677__auto____1 = function(state_14787) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_14787);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e14806) {
                      if (e14806 instanceof Object) {
                        var ex__5680__auto__ = e14806;
                        var statearr_14807_14820 = state_14787;
                        statearr_14807_14820[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14787);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e14806;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__14821 = state_14787;
                    state_14787 = G__14821;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_14787) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_14787);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___14809, tc, fc);
        }();
        var state__5693__auto__ = function() {
          var statearr_14808 = f__5692__auto__.call(null);
          statearr_14808[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___14809;
          return statearr_14808;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___14809, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_14868) {
            var state_val_14869 = state_14868[1];
            if (state_val_14869 === 7) {
              var inst_14864 = state_14868[2];
              var state_14868__$1 = state_14868;
              var statearr_14870_14886 = state_14868__$1;
              statearr_14870_14886[2] = inst_14864;
              statearr_14870_14886[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_14869 === 6) {
                var inst_14857 = state_14868[7];
                var inst_14854 = state_14868[8];
                var inst_14861 = f.call(null, inst_14854, inst_14857);
                var inst_14854__$1 = inst_14861;
                var state_14868__$1 = function() {
                  var statearr_14871 = state_14868;
                  statearr_14871[8] = inst_14854__$1;
                  return statearr_14871;
                }();
                var statearr_14872_14887 = state_14868__$1;
                statearr_14872_14887[2] = null;
                statearr_14872_14887[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14869 === 5) {
                  var inst_14854 = state_14868[8];
                  var state_14868__$1 = state_14868;
                  var statearr_14873_14888 = state_14868__$1;
                  statearr_14873_14888[2] = inst_14854;
                  statearr_14873_14888[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14869 === 4) {
                    var inst_14857 = state_14868[7];
                    var inst_14857__$1 = state_14868[2];
                    var inst_14858 = inst_14857__$1 == null;
                    var state_14868__$1 = function() {
                      var statearr_14874 = state_14868;
                      statearr_14874[7] = inst_14857__$1;
                      return statearr_14874;
                    }();
                    if (cljs.core.truth_(inst_14858)) {
                      var statearr_14875_14889 = state_14868__$1;
                      statearr_14875_14889[1] = 5;
                    } else {
                      var statearr_14876_14890 = state_14868__$1;
                      statearr_14876_14890[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_14869 === 3) {
                      var inst_14866 = state_14868[2];
                      var state_14868__$1 = state_14868;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14868__$1, inst_14866);
                    } else {
                      if (state_val_14869 === 2) {
                        var state_14868__$1 = state_14868;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14868__$1, 4, ch);
                      } else {
                        if (state_val_14869 === 1) {
                          var inst_14854 = init;
                          var state_14868__$1 = function() {
                            var statearr_14877 = state_14868;
                            statearr_14877[8] = inst_14854;
                            return statearr_14877;
                          }();
                          var statearr_14878_14891 = state_14868__$1;
                          statearr_14878_14891[2] = null;
                          statearr_14878_14891[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_14882 = [null, null, null, null, null, null, null, null, null];
              statearr_14882[0] = state_machine__5677__auto__;
              statearr_14882[1] = 1;
              return statearr_14882;
            };
            var state_machine__5677__auto____1 = function(state_14868) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_14868);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e14883) {
                    if (e14883 instanceof Object) {
                      var ex__5680__auto__ = e14883;
                      var statearr_14884_14892 = state_14868;
                      statearr_14884_14892[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14868);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e14883;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__14893 = state_14868;
                  state_14868 = G__14893;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_14868) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_14868);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_14885 = f__5692__auto__.call(null);
        statearr_14885[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_14885;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto__) {
            return function(state_14955) {
              var state_val_14956 = state_14955[1];
              if (state_val_14956 === 7) {
                var inst_14936 = state_14955[7];
                var inst_14941 = state_14955[2];
                var inst_14942 = cljs.core.next.call(null, inst_14936);
                var inst_14936__$1 = inst_14942;
                var state_14955__$1 = function() {
                  var statearr_14957 = state_14955;
                  statearr_14957[7] = inst_14936__$1;
                  statearr_14957[8] = inst_14941;
                  return statearr_14957;
                }();
                var statearr_14958_14976 = state_14955__$1;
                statearr_14958_14976[2] = null;
                statearr_14958_14976[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_14956 === 1) {
                  var inst_14935 = cljs.core.seq.call(null, coll);
                  var inst_14936 = inst_14935;
                  var state_14955__$1 = function() {
                    var statearr_14959 = state_14955;
                    statearr_14959[7] = inst_14936;
                    return statearr_14959;
                  }();
                  var statearr_14960_14977 = state_14955__$1;
                  statearr_14960_14977[2] = null;
                  statearr_14960_14977[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_14956 === 4) {
                    var inst_14936 = state_14955[7];
                    var inst_14939 = cljs.core.first.call(null, inst_14936);
                    var state_14955__$1 = state_14955;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14955__$1, 7, ch, inst_14939);
                  } else {
                    if (state_val_14956 === 6) {
                      var inst_14951 = state_14955[2];
                      var state_14955__$1 = state_14955;
                      var statearr_14961_14978 = state_14955__$1;
                      statearr_14961_14978[2] = inst_14951;
                      statearr_14961_14978[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_14956 === 3) {
                        var inst_14953 = state_14955[2];
                        var state_14955__$1 = state_14955;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14955__$1, inst_14953);
                      } else {
                        if (state_val_14956 === 2) {
                          var inst_14936 = state_14955[7];
                          var state_14955__$1 = state_14955;
                          if (cljs.core.truth_(inst_14936)) {
                            var statearr_14962_14979 = state_14955__$1;
                            statearr_14962_14979[1] = 4;
                          } else {
                            var statearr_14963_14980 = state_14955__$1;
                            statearr_14963_14980[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_14956 === 9) {
                            var state_14955__$1 = state_14955;
                            var statearr_14964_14981 = state_14955__$1;
                            statearr_14964_14981[2] = null;
                            statearr_14964_14981[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_14956 === 5) {
                              var state_14955__$1 = state_14955;
                              if (cljs.core.truth_(close_QMARK_)) {
                                var statearr_14965_14982 = state_14955__$1;
                                statearr_14965_14982[1] = 8;
                              } else {
                                var statearr_14966_14983 = state_14955__$1;
                                statearr_14966_14983[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_14956 === 10) {
                                var inst_14949 = state_14955[2];
                                var state_14955__$1 = state_14955;
                                var statearr_14967_14984 = state_14955__$1;
                                statearr_14967_14984[2] = inst_14949;
                                statearr_14967_14984[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_14956 === 8) {
                                  var inst_14946 = cljs.core.async.close_BANG_.call(null, ch);
                                  var state_14955__$1 = state_14955;
                                  var statearr_14968_14985 = state_14955__$1;
                                  statearr_14968_14985[2] = inst_14946;
                                  statearr_14968_14985[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto__);
          return function(switch__5676__auto__, c__5691__auto__) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_14972 = [null, null, null, null, null, null, null, null, null];
                statearr_14972[0] = state_machine__5677__auto__;
                statearr_14972[1] = 1;
                return statearr_14972;
              };
              var state_machine__5677__auto____1 = function(state_14955) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_14955);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e14973) {
                      if (e14973 instanceof Object) {
                        var ex__5680__auto__ = e14973;
                        var statearr_14974_14986 = state_14955;
                        statearr_14974_14986[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14955);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e14973;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__14987 = state_14955;
                    state_14955 = G__14987;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_14955) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_14955);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto__);
        }();
        var state__5693__auto__ = function() {
          var statearr_14975 = f__5692__auto__.call(null);
          statearr_14975[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
          return statearr_14975;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto__));
    return c__5691__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj14989 = {};
  return obj14989;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3529__auto__ = _;
    if (and__3529__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4168__auto__ = _ == null ? null : _;
    return function() {
      var or__3541__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj14991 = {};
  return obj14991;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t15215 !== "undefined") {
    } else {
      cljs.core.async.t15215 = function(cs, ch, mult, meta15216) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta15216 = meta15216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t15215.cljs$lang$type = true;
      cljs.core.async.t15215.cljs$lang$ctorStr = "cljs.core.async/t15215";
      cljs.core.async.t15215.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t15215");
        };
      }(cs);
      cljs.core.async.t15215.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t15215.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t15215.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t15215.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t15215.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15215.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t15215.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_15217) {
          var self__ = this;
          var _15217__$1 = this;
          return self__.meta15216;
        };
      }(cs);
      cljs.core.async.t15215.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_15217, meta15216__$1) {
          var self__ = this;
          var _15217__$1 = this;
          return new cljs.core.async.t15215(self__.cs, self__.ch, self__.mult, meta15216__$1);
        };
      }(cs);
      cljs.core.async.__GT_t15215 = function(cs) {
        return function __GT_t15215(cs__$1, ch__$1, mult__$1, meta15216) {
          return new cljs.core.async.t15215(cs__$1, ch__$1, mult__$1, meta15216);
        };
      }(cs);
    }
    return new cljs.core.async.t15215(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5691__auto___15438 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___15438, cs, m, dchan, dctr, done) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto___15438, cs, m, dchan, dctr, done) {
          return function(state_15352) {
            var state_val_15353 = state_15352[1];
            if (state_val_15353 === 7) {
              var inst_15348 = state_15352[2];
              var state_15352__$1 = state_15352;
              var statearr_15354_15439 = state_15352__$1;
              statearr_15354_15439[2] = inst_15348;
              statearr_15354_15439[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_15353 === 20) {
                var inst_15249 = state_15352[7];
                var inst_15259 = cljs.core.first.call(null, inst_15249);
                var inst_15260 = cljs.core.nth.call(null, inst_15259, 0, null);
                var inst_15261 = cljs.core.nth.call(null, inst_15259, 1, null);
                var state_15352__$1 = function() {
                  var statearr_15355 = state_15352;
                  statearr_15355[8] = inst_15260;
                  return statearr_15355;
                }();
                if (cljs.core.truth_(inst_15261)) {
                  var statearr_15356_15440 = state_15352__$1;
                  statearr_15356_15440[1] = 22;
                } else {
                  var statearr_15357_15441 = state_15352__$1;
                  statearr_15357_15441[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_15353 === 27) {
                  var inst_15289 = state_15352[9];
                  var inst_15291 = state_15352[10];
                  var inst_15296 = cljs.core._nth.call(null, inst_15289, inst_15291);
                  var state_15352__$1 = function() {
                    var statearr_15358 = state_15352;
                    statearr_15358[11] = inst_15296;
                    return statearr_15358;
                  }();
                  var statearr_15359_15442 = state_15352__$1;
                  statearr_15359_15442[2] = null;
                  statearr_15359_15442[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_15353 === 1) {
                    var state_15352__$1 = state_15352;
                    var statearr_15360_15443 = state_15352__$1;
                    statearr_15360_15443[2] = null;
                    statearr_15360_15443[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_15353 === 24) {
                      var inst_15249 = state_15352[7];
                      var inst_15266 = state_15352[2];
                      var inst_15267 = cljs.core.next.call(null, inst_15249);
                      var inst_15229 = inst_15267;
                      var inst_15230 = null;
                      var inst_15231 = 0;
                      var inst_15232 = 0;
                      var state_15352__$1 = function() {
                        var statearr_15361 = state_15352;
                        statearr_15361[12] = inst_15266;
                        statearr_15361[13] = inst_15231;
                        statearr_15361[14] = inst_15229;
                        statearr_15361[15] = inst_15230;
                        statearr_15361[16] = inst_15232;
                        return statearr_15361;
                      }();
                      var statearr_15362_15444 = state_15352__$1;
                      statearr_15362_15444[2] = null;
                      statearr_15362_15444[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_15353 === 39) {
                        var inst_15309 = state_15352[17];
                        var inst_15327 = state_15352[2];
                        var inst_15328 = cljs.core.next.call(null, inst_15309);
                        var inst_15288 = inst_15328;
                        var inst_15289 = null;
                        var inst_15290 = 0;
                        var inst_15291 = 0;
                        var state_15352__$1 = function() {
                          var statearr_15366 = state_15352;
                          statearr_15366[9] = inst_15289;
                          statearr_15366[10] = inst_15291;
                          statearr_15366[18] = inst_15288;
                          statearr_15366[19] = inst_15290;
                          statearr_15366[20] = inst_15327;
                          return statearr_15366;
                        }();
                        var statearr_15367_15445 = state_15352__$1;
                        statearr_15367_15445[2] = null;
                        statearr_15367_15445[1] = 25;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_15353 === 4) {
                          var inst_15220 = state_15352[21];
                          var inst_15220__$1 = state_15352[2];
                          var inst_15221 = inst_15220__$1 == null;
                          var state_15352__$1 = function() {
                            var statearr_15368 = state_15352;
                            statearr_15368[21] = inst_15220__$1;
                            return statearr_15368;
                          }();
                          if (cljs.core.truth_(inst_15221)) {
                            var statearr_15369_15446 = state_15352__$1;
                            statearr_15369_15446[1] = 5;
                          } else {
                            var statearr_15370_15447 = state_15352__$1;
                            statearr_15370_15447[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_15353 === 15) {
                            var inst_15231 = state_15352[13];
                            var inst_15229 = state_15352[14];
                            var inst_15230 = state_15352[15];
                            var inst_15232 = state_15352[16];
                            var inst_15245 = state_15352[2];
                            var inst_15246 = inst_15232 + 1;
                            var tmp15363 = inst_15231;
                            var tmp15364 = inst_15229;
                            var tmp15365 = inst_15230;
                            var inst_15229__$1 = tmp15364;
                            var inst_15230__$1 = tmp15365;
                            var inst_15231__$1 = tmp15363;
                            var inst_15232__$1 = inst_15246;
                            var state_15352__$1 = function() {
                              var statearr_15371 = state_15352;
                              statearr_15371[13] = inst_15231__$1;
                              statearr_15371[14] = inst_15229__$1;
                              statearr_15371[22] = inst_15245;
                              statearr_15371[15] = inst_15230__$1;
                              statearr_15371[16] = inst_15232__$1;
                              return statearr_15371;
                            }();
                            var statearr_15372_15448 = state_15352__$1;
                            statearr_15372_15448[2] = null;
                            statearr_15372_15448[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_15353 === 21) {
                              var inst_15270 = state_15352[2];
                              var state_15352__$1 = state_15352;
                              var statearr_15373_15449 = state_15352__$1;
                              statearr_15373_15449[2] = inst_15270;
                              statearr_15373_15449[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_15353 === 31) {
                                var inst_15296 = state_15352[11];
                                var inst_15297 = state_15352[2];
                                var inst_15298 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_15299 = cljs.core.async.untap_STAR_.call(null, m, inst_15296);
                                var state_15352__$1 = function() {
                                  var statearr_15374 = state_15352;
                                  statearr_15374[23] = inst_15297;
                                  statearr_15374[24] = inst_15298;
                                  return statearr_15374;
                                }();
                                var statearr_15375_15450 = state_15352__$1;
                                statearr_15375_15450[2] = inst_15299;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15352__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_15353 === 32) {
                                  var inst_15220 = state_15352[21];
                                  var inst_15296 = state_15352[11];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_15352, 31, Object, null, 30);
                                  var inst_15303 = cljs.core.async.put_BANG_.call(null, inst_15296, inst_15220, done);
                                  var state_15352__$1 = state_15352;
                                  var statearr_15376_15451 = state_15352__$1;
                                  statearr_15376_15451[2] = inst_15303;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15352__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_15353 === 40) {
                                    var inst_15318 = state_15352[25];
                                    var inst_15319 = state_15352[2];
                                    var inst_15320 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_15321 = cljs.core.async.untap_STAR_.call(null, m, inst_15318);
                                    var state_15352__$1 = function() {
                                      var statearr_15377 = state_15352;
                                      statearr_15377[26] = inst_15319;
                                      statearr_15377[27] = inst_15320;
                                      return statearr_15377;
                                    }();
                                    var statearr_15378_15452 = state_15352__$1;
                                    statearr_15378_15452[2] = inst_15321;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15352__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_15353 === 33) {
                                      var inst_15309 = state_15352[17];
                                      var inst_15311 = cljs.core.chunked_seq_QMARK_.call(null, inst_15309);
                                      var state_15352__$1 = state_15352;
                                      if (inst_15311) {
                                        var statearr_15379_15453 = state_15352__$1;
                                        statearr_15379_15453[1] = 36;
                                      } else {
                                        var statearr_15380_15454 = state_15352__$1;
                                        statearr_15380_15454[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_15353 === 13) {
                                        var inst_15239 = state_15352[28];
                                        var inst_15242 = cljs.core.async.close_BANG_.call(null, inst_15239);
                                        var state_15352__$1 = state_15352;
                                        var statearr_15381_15455 = state_15352__$1;
                                        statearr_15381_15455[2] = inst_15242;
                                        statearr_15381_15455[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_15353 === 22) {
                                          var inst_15260 = state_15352[8];
                                          var inst_15263 = cljs.core.async.close_BANG_.call(null, inst_15260);
                                          var state_15352__$1 = state_15352;
                                          var statearr_15382_15456 = state_15352__$1;
                                          statearr_15382_15456[2] = inst_15263;
                                          statearr_15382_15456[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_15353 === 36) {
                                            var inst_15309 = state_15352[17];
                                            var inst_15313 = cljs.core.chunk_first.call(null, inst_15309);
                                            var inst_15314 = cljs.core.chunk_rest.call(null, inst_15309);
                                            var inst_15315 = cljs.core.count.call(null, inst_15313);
                                            var inst_15288 = inst_15314;
                                            var inst_15289 = inst_15313;
                                            var inst_15290 = inst_15315;
                                            var inst_15291 = 0;
                                            var state_15352__$1 = function() {
                                              var statearr_15383 = state_15352;
                                              statearr_15383[9] = inst_15289;
                                              statearr_15383[10] = inst_15291;
                                              statearr_15383[18] = inst_15288;
                                              statearr_15383[19] = inst_15290;
                                              return statearr_15383;
                                            }();
                                            var statearr_15384_15457 = state_15352__$1;
                                            statearr_15384_15457[2] = null;
                                            statearr_15384_15457[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_15353 === 41) {
                                              var inst_15318 = state_15352[25];
                                              var inst_15220 = state_15352[21];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_15352, 40, Object, null, 39);
                                              var inst_15325 = cljs.core.async.put_BANG_.call(null, inst_15318, inst_15220, done);
                                              var state_15352__$1 = state_15352;
                                              var statearr_15385_15458 = state_15352__$1;
                                              statearr_15385_15458[2] = inst_15325;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15352__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_15353 === 43) {
                                                var state_15352__$1 = state_15352;
                                                var statearr_15386_15459 = state_15352__$1;
                                                statearr_15386_15459[2] = null;
                                                statearr_15386_15459[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_15353 === 29) {
                                                  var inst_15336 = state_15352[2];
                                                  var state_15352__$1 = state_15352;
                                                  var statearr_15387_15460 = state_15352__$1;
                                                  statearr_15387_15460[2] = inst_15336;
                                                  statearr_15387_15460[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_15353 === 44) {
                                                    var inst_15345 = state_15352[2];
                                                    var state_15352__$1 = function() {
                                                      var statearr_15388 = state_15352;
                                                      statearr_15388[29] = inst_15345;
                                                      return statearr_15388;
                                                    }();
                                                    var statearr_15389_15461 = state_15352__$1;
                                                    statearr_15389_15461[2] = null;
                                                    statearr_15389_15461[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_15353 === 6) {
                                                      var inst_15280 = state_15352[30];
                                                      var inst_15279 = cljs.core.deref.call(null, cs);
                                                      var inst_15280__$1 = cljs.core.keys.call(null, inst_15279);
                                                      var inst_15281 = cljs.core.count.call(null, inst_15280__$1);
                                                      var inst_15282 = cljs.core.reset_BANG_.call(null, dctr, inst_15281);
                                                      var inst_15287 = cljs.core.seq.call(null, inst_15280__$1);
                                                      var inst_15288 = inst_15287;
                                                      var inst_15289 = null;
                                                      var inst_15290 = 0;
                                                      var inst_15291 = 0;
                                                      var state_15352__$1 = function() {
                                                        var statearr_15390 = state_15352;
                                                        statearr_15390[9] = inst_15289;
                                                        statearr_15390[31] = inst_15282;
                                                        statearr_15390[10] = inst_15291;
                                                        statearr_15390[18] = inst_15288;
                                                        statearr_15390[19] = inst_15290;
                                                        statearr_15390[30] = inst_15280__$1;
                                                        return statearr_15390;
                                                      }();
                                                      var statearr_15391_15462 = state_15352__$1;
                                                      statearr_15391_15462[2] = null;
                                                      statearr_15391_15462[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_15353 === 28) {
                                                        var inst_15288 = state_15352[18];
                                                        var inst_15309 = state_15352[17];
                                                        var inst_15309__$1 = cljs.core.seq.call(null, inst_15288);
                                                        var state_15352__$1 = function() {
                                                          var statearr_15392 = state_15352;
                                                          statearr_15392[17] = inst_15309__$1;
                                                          return statearr_15392;
                                                        }();
                                                        if (inst_15309__$1) {
                                                          var statearr_15393_15463 = state_15352__$1;
                                                          statearr_15393_15463[1] = 33;
                                                        } else {
                                                          var statearr_15394_15464 = state_15352__$1;
                                                          statearr_15394_15464[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_15353 === 25) {
                                                          var inst_15291 = state_15352[10];
                                                          var inst_15290 = state_15352[19];
                                                          var inst_15293 = inst_15291 < inst_15290;
                                                          var inst_15294 = inst_15293;
                                                          var state_15352__$1 = state_15352;
                                                          if (cljs.core.truth_(inst_15294)) {
                                                            var statearr_15395_15465 = state_15352__$1;
                                                            statearr_15395_15465[1] = 27;
                                                          } else {
                                                            var statearr_15396_15466 = state_15352__$1;
                                                            statearr_15396_15466[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_15353 === 34) {
                                                            var state_15352__$1 = state_15352;
                                                            var statearr_15397_15467 = state_15352__$1;
                                                            statearr_15397_15467[2] = null;
                                                            statearr_15397_15467[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_15353 === 17) {
                                                              var state_15352__$1 = state_15352;
                                                              var statearr_15398_15468 = state_15352__$1;
                                                              statearr_15398_15468[2] = null;
                                                              statearr_15398_15468[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_15353 === 3) {
                                                                var inst_15350 = state_15352[2];
                                                                var state_15352__$1 = state_15352;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15352__$1, inst_15350);
                                                              } else {
                                                                if (state_val_15353 === 12) {
                                                                  var inst_15275 = state_15352[2];
                                                                  var state_15352__$1 = state_15352;
                                                                  var statearr_15399_15469 = state_15352__$1;
                                                                  statearr_15399_15469[2] = inst_15275;
                                                                  statearr_15399_15469[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_15353 === 2) {
                                                                    var state_15352__$1 = state_15352;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15352__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_15353 === 23) {
                                                                      var state_15352__$1 = state_15352;
                                                                      var statearr_15400_15470 = state_15352__$1;
                                                                      statearr_15400_15470[2] = null;
                                                                      statearr_15400_15470[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_15353 === 35) {
                                                                        var inst_15334 = state_15352[2];
                                                                        var state_15352__$1 = state_15352;
                                                                        var statearr_15401_15471 = state_15352__$1;
                                                                        statearr_15401_15471[2] = inst_15334;
                                                                        statearr_15401_15471[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_15353 === 19) {
                                                                          var inst_15249 = state_15352[7];
                                                                          var inst_15253 = cljs.core.chunk_first.call(null, inst_15249);
                                                                          var inst_15254 = cljs.core.chunk_rest.call(null, inst_15249);
                                                                          var inst_15255 = cljs.core.count.call(null, inst_15253);
                                                                          var inst_15229 = inst_15254;
                                                                          var inst_15230 = inst_15253;
                                                                          var inst_15231 = inst_15255;
                                                                          var inst_15232 = 0;
                                                                          var state_15352__$1 = function() {
                                                                            var statearr_15402 = state_15352;
                                                                            statearr_15402[13] = inst_15231;
                                                                            statearr_15402[14] = inst_15229;
                                                                            statearr_15402[15] = inst_15230;
                                                                            statearr_15402[16] = inst_15232;
                                                                            return statearr_15402;
                                                                          }();
                                                                          var statearr_15403_15472 = state_15352__$1;
                                                                          statearr_15403_15472[2] = null;
                                                                          statearr_15403_15472[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_15353 === 11) {
                                                                            var inst_15249 = state_15352[7];
                                                                            var inst_15229 = state_15352[14];
                                                                            var inst_15249__$1 = cljs.core.seq.call(null, inst_15229);
                                                                            var state_15352__$1 = function() {
                                                                              var statearr_15404 = state_15352;
                                                                              statearr_15404[7] = inst_15249__$1;
                                                                              return statearr_15404;
                                                                            }();
                                                                            if (inst_15249__$1) {
                                                                              var statearr_15405_15473 = state_15352__$1;
                                                                              statearr_15405_15473[1] = 16;
                                                                            } else {
                                                                              var statearr_15406_15474 = state_15352__$1;
                                                                              statearr_15406_15474[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_15353 === 9) {
                                                                              var inst_15277 = state_15352[2];
                                                                              var state_15352__$1 = state_15352;
                                                                              var statearr_15407_15475 = state_15352__$1;
                                                                              statearr_15407_15475[2] = inst_15277;
                                                                              statearr_15407_15475[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_15353 === 5) {
                                                                                var inst_15227 = cljs.core.deref.call(null, cs);
                                                                                var inst_15228 = cljs.core.seq.call(null, inst_15227);
                                                                                var inst_15229 = inst_15228;
                                                                                var inst_15230 = null;
                                                                                var inst_15231 = 0;
                                                                                var inst_15232 = 0;
                                                                                var state_15352__$1 = function() {
                                                                                  var statearr_15408 = state_15352;
                                                                                  statearr_15408[13] = inst_15231;
                                                                                  statearr_15408[14] = inst_15229;
                                                                                  statearr_15408[15] = inst_15230;
                                                                                  statearr_15408[16] = inst_15232;
                                                                                  return statearr_15408;
                                                                                }();
                                                                                var statearr_15409_15476 = state_15352__$1;
                                                                                statearr_15409_15476[2] = null;
                                                                                statearr_15409_15476[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_15353 === 14) {
                                                                                  var state_15352__$1 = state_15352;
                                                                                  var statearr_15410_15477 = state_15352__$1;
                                                                                  statearr_15410_15477[2] = null;
                                                                                  statearr_15410_15477[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_15353 === 45) {
                                                                                    var inst_15342 = state_15352[2];
                                                                                    var state_15352__$1 = state_15352;
                                                                                    var statearr_15411_15478 = state_15352__$1;
                                                                                    statearr_15411_15478[2] = inst_15342;
                                                                                    statearr_15411_15478[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_15353 === 26) {
                                                                                      var inst_15280 = state_15352[30];
                                                                                      var inst_15338 = state_15352[2];
                                                                                      var inst_15339 = cljs.core.seq.call(null, inst_15280);
                                                                                      var state_15352__$1 = function() {
                                                                                        var statearr_15412 = state_15352;
                                                                                        statearr_15412[32] = inst_15338;
                                                                                        return statearr_15412;
                                                                                      }();
                                                                                      if (inst_15339) {
                                                                                        var statearr_15413_15479 = state_15352__$1;
                                                                                        statearr_15413_15479[1] = 42;
                                                                                      } else {
                                                                                        var statearr_15414_15480 = state_15352__$1;
                                                                                        statearr_15414_15480[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_15353 === 16) {
                                                                                        var inst_15249 = state_15352[7];
                                                                                        var inst_15251 = cljs.core.chunked_seq_QMARK_.call(null, inst_15249);
                                                                                        var state_15352__$1 = state_15352;
                                                                                        if (inst_15251) {
                                                                                          var statearr_15418_15481 = state_15352__$1;
                                                                                          statearr_15418_15481[1] = 19;
                                                                                        } else {
                                                                                          var statearr_15419_15482 = state_15352__$1;
                                                                                          statearr_15419_15482[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_15353 === 38) {
                                                                                          var inst_15331 = state_15352[2];
                                                                                          var state_15352__$1 = state_15352;
                                                                                          var statearr_15420_15483 = state_15352__$1;
                                                                                          statearr_15420_15483[2] = inst_15331;
                                                                                          statearr_15420_15483[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_15353 === 30) {
                                                                                            var inst_15289 = state_15352[9];
                                                                                            var inst_15291 = state_15352[10];
                                                                                            var inst_15288 = state_15352[18];
                                                                                            var inst_15290 = state_15352[19];
                                                                                            var inst_15305 = state_15352[2];
                                                                                            var inst_15306 = inst_15291 + 1;
                                                                                            var tmp15415 = inst_15289;
                                                                                            var tmp15416 = inst_15288;
                                                                                            var tmp15417 = inst_15290;
                                                                                            var inst_15288__$1 = tmp15416;
                                                                                            var inst_15289__$1 = tmp15415;
                                                                                            var inst_15290__$1 = tmp15417;
                                                                                            var inst_15291__$1 = inst_15306;
                                                                                            var state_15352__$1 = function() {
                                                                                              var statearr_15421 = state_15352;
                                                                                              statearr_15421[9] = inst_15289__$1;
                                                                                              statearr_15421[10] = inst_15291__$1;
                                                                                              statearr_15421[18] = inst_15288__$1;
                                                                                              statearr_15421[19] = inst_15290__$1;
                                                                                              statearr_15421[33] = inst_15305;
                                                                                              return statearr_15421;
                                                                                            }();
                                                                                            var statearr_15422_15484 = state_15352__$1;
                                                                                            statearr_15422_15484[2] = null;
                                                                                            statearr_15422_15484[1] = 25;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_15353 === 10) {
                                                                                              var inst_15230 = state_15352[15];
                                                                                              var inst_15232 = state_15352[16];
                                                                                              var inst_15238 = cljs.core._nth.call(null, inst_15230, inst_15232);
                                                                                              var inst_15239 = cljs.core.nth.call(null, inst_15238, 0, null);
                                                                                              var inst_15240 = cljs.core.nth.call(null, inst_15238, 1, null);
                                                                                              var state_15352__$1 = function() {
                                                                                                var statearr_15423 = state_15352;
                                                                                                statearr_15423[28] = inst_15239;
                                                                                                return statearr_15423;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_15240)) {
                                                                                                var statearr_15424_15485 = state_15352__$1;
                                                                                                statearr_15424_15485[1] = 13;
                                                                                              } else {
                                                                                                var statearr_15425_15486 = state_15352__$1;
                                                                                                statearr_15425_15486[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_15353 === 18) {
                                                                                                var inst_15273 = state_15352[2];
                                                                                                var state_15352__$1 = state_15352;
                                                                                                var statearr_15426_15487 = state_15352__$1;
                                                                                                statearr_15426_15487[2] = inst_15273;
                                                                                                statearr_15426_15487[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_15353 === 42) {
                                                                                                  var state_15352__$1 = state_15352;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15352__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_15353 === 37) {
                                                                                                    var inst_15309 = state_15352[17];
                                                                                                    var inst_15318 = cljs.core.first.call(null, inst_15309);
                                                                                                    var state_15352__$1 = function() {
                                                                                                      var statearr_15427 = state_15352;
                                                                                                      statearr_15427[25] = inst_15318;
                                                                                                      return statearr_15427;
                                                                                                    }();
                                                                                                    var statearr_15428_15488 = state_15352__$1;
                                                                                                    statearr_15428_15488[2] = null;
                                                                                                    statearr_15428_15488[1] = 41;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                  } else {
                                                                                                    if (state_val_15353 === 8) {
                                                                                                      var inst_15231 = state_15352[13];
                                                                                                      var inst_15232 = state_15352[16];
                                                                                                      var inst_15234 = inst_15232 < inst_15231;
                                                                                                      var inst_15235 = inst_15234;
                                                                                                      var state_15352__$1 = state_15352;
                                                                                                      if (cljs.core.truth_(inst_15235)) {
                                                                                                        var statearr_15429_15489 = state_15352__$1;
                                                                                                        statearr_15429_15489[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_15430_15490 = state_15352__$1;
                                                                                                        statearr_15430_15490[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5691__auto___15438, cs, m, dchan, dctr, done);
        return function(switch__5676__auto__, c__5691__auto___15438, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_15434 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15434[0] = state_machine__5677__auto__;
              statearr_15434[1] = 1;
              return statearr_15434;
            };
            var state_machine__5677__auto____1 = function(state_15352) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_15352);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e15435) {
                    if (e15435 instanceof Object) {
                      var ex__5680__auto__ = e15435;
                      var statearr_15436_15491 = state_15352;
                      statearr_15436_15491[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15352);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e15435;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__15492 = state_15352;
                  state_15352 = G__15492;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_15352) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_15352);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto___15438, cs, m, dchan, dctr, done);
      }();
      var state__5693__auto__ = function() {
        var statearr_15437 = f__5692__auto__.call(null);
        statearr_15437[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___15438;
        return statearr_15437;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto___15438, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj15494 = {};
  return obj15494;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3529__auto__ = m;
    if (and__3529__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4168__auto__ = m == null ? null : m;
    return function() {
      var or__3541__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t15604 !== "undefined") {
    } else {
      cljs.core.async.t15604 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta15605) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta15605 = meta15605;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t15604.cljs$lang$type = true;
      cljs.core.async.t15604.cljs$lang$ctorStr = "cljs.core.async/t15604";
      cljs.core.async.t15604.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t15604");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t15604.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15604.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15606) {
          var self__ = this;
          var _15606__$1 = this;
          return self__.meta15605;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15604.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15606, meta15605__$1) {
          var self__ = this;
          var _15606__$1 = this;
          return new cljs.core.async.t15604(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta15605__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t15604 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t15604(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta15605) {
          return new cljs.core.async.t15604(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta15605);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t15604(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__5691__auto___15713 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___15713, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto___15713, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_15671) {
            var state_val_15672 = state_15671[1];
            if (state_val_15672 === 7) {
              var inst_15620 = state_15671[7];
              var inst_15625 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15620);
              var state_15671__$1 = state_15671;
              var statearr_15673_15714 = state_15671__$1;
              statearr_15673_15714[2] = inst_15625;
              statearr_15673_15714[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_15672 === 20) {
                var inst_15635 = state_15671[8];
                var state_15671__$1 = state_15671;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15671__$1, 23, out, inst_15635);
              } else {
                if (state_val_15672 === 1) {
                  var inst_15610 = state_15671[9];
                  var inst_15610__$1 = calc_state.call(null);
                  var inst_15611 = cljs.core.seq_QMARK_.call(null, inst_15610__$1);
                  var state_15671__$1 = function() {
                    var statearr_15674 = state_15671;
                    statearr_15674[9] = inst_15610__$1;
                    return statearr_15674;
                  }();
                  if (inst_15611) {
                    var statearr_15675_15715 = state_15671__$1;
                    statearr_15675_15715[1] = 2;
                  } else {
                    var statearr_15676_15716 = state_15671__$1;
                    statearr_15676_15716[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_15672 === 4) {
                    var inst_15610 = state_15671[9];
                    var inst_15616 = state_15671[2];
                    var inst_15617 = cljs.core.get.call(null, inst_15616, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                    var inst_15618 = cljs.core.get.call(null, inst_15616, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                    var inst_15619 = cljs.core.get.call(null, inst_15616, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                    var inst_15620 = inst_15610;
                    var state_15671__$1 = function() {
                      var statearr_15677 = state_15671;
                      statearr_15677[10] = inst_15618;
                      statearr_15677[11] = inst_15617;
                      statearr_15677[7] = inst_15620;
                      statearr_15677[12] = inst_15619;
                      return statearr_15677;
                    }();
                    var statearr_15678_15717 = state_15671__$1;
                    statearr_15678_15717[2] = null;
                    statearr_15678_15717[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_15672 === 15) {
                      var state_15671__$1 = state_15671;
                      var statearr_15679_15718 = state_15671__$1;
                      statearr_15679_15718[2] = null;
                      statearr_15679_15718[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_15672 === 21) {
                        var state_15671__$1 = state_15671;
                        var statearr_15680_15719 = state_15671__$1;
                        statearr_15680_15719[2] = null;
                        statearr_15680_15719[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_15672 === 13) {
                          var inst_15667 = state_15671[2];
                          var state_15671__$1 = state_15671;
                          var statearr_15681_15720 = state_15671__$1;
                          statearr_15681_15720[2] = inst_15667;
                          statearr_15681_15720[1] = 6;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_15672 === 22) {
                            var inst_15628 = state_15671[13];
                            var inst_15664 = state_15671[2];
                            var inst_15620 = inst_15628;
                            var state_15671__$1 = function() {
                              var statearr_15682 = state_15671;
                              statearr_15682[7] = inst_15620;
                              statearr_15682[14] = inst_15664;
                              return statearr_15682;
                            }();
                            var statearr_15683_15721 = state_15671__$1;
                            statearr_15683_15721[2] = null;
                            statearr_15683_15721[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_15672 === 6) {
                              var inst_15669 = state_15671[2];
                              var state_15671__$1 = state_15671;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15671__$1, inst_15669);
                            } else {
                              if (state_val_15672 === 17) {
                                var inst_15650 = state_15671[15];
                                var state_15671__$1 = state_15671;
                                var statearr_15684_15722 = state_15671__$1;
                                statearr_15684_15722[2] = inst_15650;
                                statearr_15684_15722[1] = 19;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_15672 === 3) {
                                  var inst_15610 = state_15671[9];
                                  var state_15671__$1 = state_15671;
                                  var statearr_15685_15723 = state_15671__$1;
                                  statearr_15685_15723[2] = inst_15610;
                                  statearr_15685_15723[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_15672 === 12) {
                                    var inst_15631 = state_15671[16];
                                    var inst_15650 = state_15671[15];
                                    var inst_15636 = state_15671[17];
                                    var inst_15650__$1 = inst_15631.call(null, inst_15636);
                                    var state_15671__$1 = function() {
                                      var statearr_15686 = state_15671;
                                      statearr_15686[15] = inst_15650__$1;
                                      return statearr_15686;
                                    }();
                                    if (cljs.core.truth_(inst_15650__$1)) {
                                      var statearr_15687_15724 = state_15671__$1;
                                      statearr_15687_15724[1] = 17;
                                    } else {
                                      var statearr_15688_15725 = state_15671__$1;
                                      statearr_15688_15725[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_15672 === 2) {
                                      var inst_15610 = state_15671[9];
                                      var inst_15613 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15610);
                                      var state_15671__$1 = state_15671;
                                      var statearr_15689_15726 = state_15671__$1;
                                      statearr_15689_15726[2] = inst_15613;
                                      statearr_15689_15726[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_15672 === 23) {
                                        var inst_15661 = state_15671[2];
                                        var state_15671__$1 = state_15671;
                                        var statearr_15690_15727 = state_15671__$1;
                                        statearr_15690_15727[2] = inst_15661;
                                        statearr_15690_15727[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_15672 === 19) {
                                          var inst_15658 = state_15671[2];
                                          var state_15671__$1 = state_15671;
                                          if (cljs.core.truth_(inst_15658)) {
                                            var statearr_15691_15728 = state_15671__$1;
                                            statearr_15691_15728[1] = 20;
                                          } else {
                                            var statearr_15692_15729 = state_15671__$1;
                                            statearr_15692_15729[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_15672 === 11) {
                                            var inst_15635 = state_15671[8];
                                            var inst_15641 = inst_15635 == null;
                                            var state_15671__$1 = state_15671;
                                            if (cljs.core.truth_(inst_15641)) {
                                              var statearr_15693_15730 = state_15671__$1;
                                              statearr_15693_15730[1] = 14;
                                            } else {
                                              var statearr_15694_15731 = state_15671__$1;
                                              statearr_15694_15731[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_15672 === 9) {
                                              var inst_15628 = state_15671[13];
                                              var inst_15628__$1 = state_15671[2];
                                              var inst_15629 = cljs.core.get.call(null, inst_15628__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                                              var inst_15630 = cljs.core.get.call(null, inst_15628__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                                              var inst_15631 = cljs.core.get.call(null, inst_15628__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                                              var state_15671__$1 = function() {
                                                var statearr_15695 = state_15671;
                                                statearr_15695[13] = inst_15628__$1;
                                                statearr_15695[16] = inst_15631;
                                                statearr_15695[18] = inst_15630;
                                                return statearr_15695;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_15671__$1, 10, inst_15629);
                                            } else {
                                              if (state_val_15672 === 5) {
                                                var inst_15620 = state_15671[7];
                                                var inst_15623 = cljs.core.seq_QMARK_.call(null, inst_15620);
                                                var state_15671__$1 = state_15671;
                                                if (inst_15623) {
                                                  var statearr_15696_15732 = state_15671__$1;
                                                  statearr_15696_15732[1] = 7;
                                                } else {
                                                  var statearr_15697_15733 = state_15671__$1;
                                                  statearr_15697_15733[1] = 8;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_15672 === 14) {
                                                  var inst_15636 = state_15671[17];
                                                  var inst_15643 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_15636);
                                                  var state_15671__$1 = state_15671;
                                                  var statearr_15698_15734 = state_15671__$1;
                                                  statearr_15698_15734[2] = inst_15643;
                                                  statearr_15698_15734[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_15672 === 16) {
                                                    var inst_15646 = state_15671[2];
                                                    var inst_15647 = calc_state.call(null);
                                                    var inst_15620 = inst_15647;
                                                    var state_15671__$1 = function() {
                                                      var statearr_15699 = state_15671;
                                                      statearr_15699[19] = inst_15646;
                                                      statearr_15699[7] = inst_15620;
                                                      return statearr_15699;
                                                    }();
                                                    var statearr_15700_15735 = state_15671__$1;
                                                    statearr_15700_15735[2] = null;
                                                    statearr_15700_15735[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_15672 === 10) {
                                                      var inst_15635 = state_15671[8];
                                                      var inst_15636 = state_15671[17];
                                                      var inst_15634 = state_15671[2];
                                                      var inst_15635__$1 = cljs.core.nth.call(null, inst_15634, 0, null);
                                                      var inst_15636__$1 = cljs.core.nth.call(null, inst_15634, 1, null);
                                                      var inst_15637 = inst_15635__$1 == null;
                                                      var inst_15638 = cljs.core._EQ_.call(null, inst_15636__$1, change);
                                                      var inst_15639 = inst_15637 || inst_15638;
                                                      var state_15671__$1 = function() {
                                                        var statearr_15701 = state_15671;
                                                        statearr_15701[8] = inst_15635__$1;
                                                        statearr_15701[17] = inst_15636__$1;
                                                        return statearr_15701;
                                                      }();
                                                      if (cljs.core.truth_(inst_15639)) {
                                                        var statearr_15702_15736 = state_15671__$1;
                                                        statearr_15702_15736[1] = 11;
                                                      } else {
                                                        var statearr_15703_15737 = state_15671__$1;
                                                        statearr_15703_15737[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_15672 === 18) {
                                                        var inst_15631 = state_15671[16];
                                                        var inst_15630 = state_15671[18];
                                                        var inst_15636 = state_15671[17];
                                                        var inst_15653 = cljs.core.empty_QMARK_.call(null, inst_15631);
                                                        var inst_15654 = inst_15630.call(null, inst_15636);
                                                        var inst_15655 = cljs.core.not.call(null, inst_15654);
                                                        var inst_15656 = inst_15653 && inst_15655;
                                                        var state_15671__$1 = state_15671;
                                                        var statearr_15704_15738 = state_15671__$1;
                                                        statearr_15704_15738[2] = inst_15656;
                                                        statearr_15704_15738[1] = 19;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_15672 === 8) {
                                                          var inst_15620 = state_15671[7];
                                                          var state_15671__$1 = state_15671;
                                                          var statearr_15705_15739 = state_15671__$1;
                                                          statearr_15705_15739[2] = inst_15620;
                                                          statearr_15705_15739[1] = 9;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5691__auto___15713, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__5676__auto__, c__5691__auto___15713, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_15709 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15709[0] = state_machine__5677__auto__;
              statearr_15709[1] = 1;
              return statearr_15709;
            };
            var state_machine__5677__auto____1 = function(state_15671) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_15671);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e15710) {
                    if (e15710 instanceof Object) {
                      var ex__5680__auto__ = e15710;
                      var statearr_15711_15740 = state_15671;
                      statearr_15711_15740[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15671);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e15710;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__15741 = state_15671;
                  state_15671 = G__15741;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_15671) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_15671);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto___15713, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__5693__auto__ = function() {
        var statearr_15712 = f__5692__auto__.call(null);
        statearr_15712[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___15713;
        return statearr_15712;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto___15713, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj15743 = {};
  return obj15743;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3529__auto__ = p;
    if (and__3529__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4168__auto__ = p == null ? null : p;
    return function() {
      var or__3541__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3529__auto__ = p;
    if (and__3529__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4168__auto__ = p == null ? null : p;
    return function() {
      var or__3541__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3529__auto__ = p;
      if (and__3529__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4168__auto__ = p == null ? null : p;
      return function() {
        var or__3541__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3529__auto__ = p;
      if (and__3529__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4168__auto__ = p == null ? null : p;
      return function() {
        var or__3541__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3541__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3541__auto__, mults) {
            return function(p1__15744_SHARP_) {
              if (cljs.core.truth_(p1__15744_SHARP_.call(null, topic))) {
                return p1__15744_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__15744_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3541__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t15869 !== "undefined") {
      } else {
        cljs.core.async.t15869 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta15870) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta15870 = meta15870;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t15869.cljs$lang$type = true;
        cljs.core.async.t15869.cljs$lang$ctorStr = "cljs.core.async/t15869";
        cljs.core.async.t15869.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
            return cljs.core._write.call(null, writer__4109__auto__, "cljs.core.async/t15869");
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t15869.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t15869.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_15871) {
            var self__ = this;
            var _15871__$1 = this;
            return self__.meta15870;
          };
        }(mults, ensure_mult);
        cljs.core.async.t15869.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_15871, meta15870__$1) {
            var self__ = this;
            var _15871__$1 = this;
            return new cljs.core.async.t15869(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta15870__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t15869 = function(mults, ensure_mult) {
          return function __GT_t15869(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta15870) {
            return new cljs.core.async.t15869(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta15870);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t15869(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__5691__auto___15993 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___15993, mults, ensure_mult, p) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___15993, mults, ensure_mult, p) {
            return function(state_15945) {
              var state_val_15946 = state_15945[1];
              if (state_val_15946 === 7) {
                var inst_15941 = state_15945[2];
                var state_15945__$1 = state_15945;
                var statearr_15947_15994 = state_15945__$1;
                statearr_15947_15994[2] = inst_15941;
                statearr_15947_15994[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_15946 === 20) {
                  var state_15945__$1 = state_15945;
                  var statearr_15948_15995 = state_15945__$1;
                  statearr_15948_15995[2] = null;
                  statearr_15948_15995[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_15946 === 1) {
                    var state_15945__$1 = state_15945;
                    var statearr_15949_15996 = state_15945__$1;
                    statearr_15949_15996[2] = null;
                    statearr_15949_15996[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_15946 === 24) {
                      var inst_15924 = state_15945[7];
                      var inst_15874 = state_15945[8];
                      var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_15945, 23, Object, null, 22);
                      var inst_15931 = cljs.core.async.muxch_STAR_.call(null, inst_15924);
                      var state_15945__$1 = state_15945;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15945__$1, 25, inst_15931, inst_15874);
                    } else {
                      if (state_val_15946 === 4) {
                        var inst_15874 = state_15945[8];
                        var inst_15874__$1 = state_15945[2];
                        var inst_15875 = inst_15874__$1 == null;
                        var state_15945__$1 = function() {
                          var statearr_15950 = state_15945;
                          statearr_15950[8] = inst_15874__$1;
                          return statearr_15950;
                        }();
                        if (cljs.core.truth_(inst_15875)) {
                          var statearr_15951_15997 = state_15945__$1;
                          statearr_15951_15997[1] = 5;
                        } else {
                          var statearr_15952_15998 = state_15945__$1;
                          statearr_15952_15998[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_15946 === 15) {
                          var inst_15916 = state_15945[2];
                          var state_15945__$1 = state_15945;
                          var statearr_15953_15999 = state_15945__$1;
                          statearr_15953_15999[2] = inst_15916;
                          statearr_15953_15999[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_15946 === 21) {
                            var inst_15938 = state_15945[2];
                            var state_15945__$1 = function() {
                              var statearr_15954 = state_15945;
                              statearr_15954[9] = inst_15938;
                              return statearr_15954;
                            }();
                            var statearr_15955_16000 = state_15945__$1;
                            statearr_15955_16000[2] = null;
                            statearr_15955_16000[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_15946 === 13) {
                              var inst_15898 = state_15945[10];
                              var inst_15900 = cljs.core.chunked_seq_QMARK_.call(null, inst_15898);
                              var state_15945__$1 = state_15945;
                              if (inst_15900) {
                                var statearr_15956_16001 = state_15945__$1;
                                statearr_15956_16001[1] = 16;
                              } else {
                                var statearr_15957_16002 = state_15945__$1;
                                statearr_15957_16002[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_15946 === 22) {
                                var inst_15935 = state_15945[2];
                                var state_15945__$1 = state_15945;
                                var statearr_15958_16003 = state_15945__$1;
                                statearr_15958_16003[2] = inst_15935;
                                statearr_15958_16003[1] = 21;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_15946 === 6) {
                                  var inst_15922 = state_15945[11];
                                  var inst_15924 = state_15945[7];
                                  var inst_15874 = state_15945[8];
                                  var inst_15922__$1 = topic_fn.call(null, inst_15874);
                                  var inst_15923 = cljs.core.deref.call(null, mults);
                                  var inst_15924__$1 = cljs.core.get.call(null, inst_15923, inst_15922__$1);
                                  var state_15945__$1 = function() {
                                    var statearr_15959 = state_15945;
                                    statearr_15959[11] = inst_15922__$1;
                                    statearr_15959[7] = inst_15924__$1;
                                    return statearr_15959;
                                  }();
                                  if (cljs.core.truth_(inst_15924__$1)) {
                                    var statearr_15960_16004 = state_15945__$1;
                                    statearr_15960_16004[1] = 19;
                                  } else {
                                    var statearr_15961_16005 = state_15945__$1;
                                    statearr_15961_16005[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_15946 === 25) {
                                    var inst_15933 = state_15945[2];
                                    var state_15945__$1 = state_15945;
                                    var statearr_15962_16006 = state_15945__$1;
                                    statearr_15962_16006[2] = inst_15933;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15945__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_15946 === 17) {
                                      var inst_15898 = state_15945[10];
                                      var inst_15907 = cljs.core.first.call(null, inst_15898);
                                      var inst_15908 = cljs.core.async.muxch_STAR_.call(null, inst_15907);
                                      var inst_15909 = cljs.core.async.close_BANG_.call(null, inst_15908);
                                      var inst_15910 = cljs.core.next.call(null, inst_15898);
                                      var inst_15884 = inst_15910;
                                      var inst_15885 = null;
                                      var inst_15886 = 0;
                                      var inst_15887 = 0;
                                      var state_15945__$1 = function() {
                                        var statearr_15963 = state_15945;
                                        statearr_15963[12] = inst_15909;
                                        statearr_15963[13] = inst_15887;
                                        statearr_15963[14] = inst_15886;
                                        statearr_15963[15] = inst_15885;
                                        statearr_15963[16] = inst_15884;
                                        return statearr_15963;
                                      }();
                                      var statearr_15964_16007 = state_15945__$1;
                                      statearr_15964_16007[2] = null;
                                      statearr_15964_16007[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_15946 === 3) {
                                        var inst_15943 = state_15945[2];
                                        var state_15945__$1 = state_15945;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15945__$1, inst_15943);
                                      } else {
                                        if (state_val_15946 === 12) {
                                          var inst_15918 = state_15945[2];
                                          var state_15945__$1 = state_15945;
                                          var statearr_15965_16008 = state_15945__$1;
                                          statearr_15965_16008[2] = inst_15918;
                                          statearr_15965_16008[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_15946 === 2) {
                                            var state_15945__$1 = state_15945;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15945__$1, 4, ch);
                                          } else {
                                            if (state_val_15946 === 23) {
                                              var inst_15922 = state_15945[11];
                                              var inst_15926 = state_15945[2];
                                              var inst_15927 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_15922);
                                              var state_15945__$1 = function() {
                                                var statearr_15966 = state_15945;
                                                statearr_15966[17] = inst_15926;
                                                return statearr_15966;
                                              }();
                                              var statearr_15967_16009 = state_15945__$1;
                                              statearr_15967_16009[2] = inst_15927;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15945__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_15946 === 19) {
                                                var state_15945__$1 = state_15945;
                                                var statearr_15968_16010 = state_15945__$1;
                                                statearr_15968_16010[2] = null;
                                                statearr_15968_16010[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_15946 === 11) {
                                                  var inst_15884 = state_15945[16];
                                                  var inst_15898 = state_15945[10];
                                                  var inst_15898__$1 = cljs.core.seq.call(null, inst_15884);
                                                  var state_15945__$1 = function() {
                                                    var statearr_15969 = state_15945;
                                                    statearr_15969[10] = inst_15898__$1;
                                                    return statearr_15969;
                                                  }();
                                                  if (inst_15898__$1) {
                                                    var statearr_15970_16011 = state_15945__$1;
                                                    statearr_15970_16011[1] = 13;
                                                  } else {
                                                    var statearr_15971_16012 = state_15945__$1;
                                                    statearr_15971_16012[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_15946 === 9) {
                                                    var inst_15920 = state_15945[2];
                                                    var state_15945__$1 = state_15945;
                                                    var statearr_15972_16013 = state_15945__$1;
                                                    statearr_15972_16013[2] = inst_15920;
                                                    statearr_15972_16013[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_15946 === 5) {
                                                      var inst_15881 = cljs.core.deref.call(null, mults);
                                                      var inst_15882 = cljs.core.vals.call(null, inst_15881);
                                                      var inst_15883 = cljs.core.seq.call(null, inst_15882);
                                                      var inst_15884 = inst_15883;
                                                      var inst_15885 = null;
                                                      var inst_15886 = 0;
                                                      var inst_15887 = 0;
                                                      var state_15945__$1 = function() {
                                                        var statearr_15973 = state_15945;
                                                        statearr_15973[13] = inst_15887;
                                                        statearr_15973[14] = inst_15886;
                                                        statearr_15973[15] = inst_15885;
                                                        statearr_15973[16] = inst_15884;
                                                        return statearr_15973;
                                                      }();
                                                      var statearr_15974_16014 = state_15945__$1;
                                                      statearr_15974_16014[2] = null;
                                                      statearr_15974_16014[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_15946 === 14) {
                                                        var state_15945__$1 = state_15945;
                                                        var statearr_15978_16015 = state_15945__$1;
                                                        statearr_15978_16015[2] = null;
                                                        statearr_15978_16015[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_15946 === 16) {
                                                          var inst_15898 = state_15945[10];
                                                          var inst_15902 = cljs.core.chunk_first.call(null, inst_15898);
                                                          var inst_15903 = cljs.core.chunk_rest.call(null, inst_15898);
                                                          var inst_15904 = cljs.core.count.call(null, inst_15902);
                                                          var inst_15884 = inst_15903;
                                                          var inst_15885 = inst_15902;
                                                          var inst_15886 = inst_15904;
                                                          var inst_15887 = 0;
                                                          var state_15945__$1 = function() {
                                                            var statearr_15979 = state_15945;
                                                            statearr_15979[13] = inst_15887;
                                                            statearr_15979[14] = inst_15886;
                                                            statearr_15979[15] = inst_15885;
                                                            statearr_15979[16] = inst_15884;
                                                            return statearr_15979;
                                                          }();
                                                          var statearr_15980_16016 = state_15945__$1;
                                                          statearr_15980_16016[2] = null;
                                                          statearr_15980_16016[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_15946 === 10) {
                                                            var inst_15887 = state_15945[13];
                                                            var inst_15886 = state_15945[14];
                                                            var inst_15885 = state_15945[15];
                                                            var inst_15884 = state_15945[16];
                                                            var inst_15892 = cljs.core._nth.call(null, inst_15885, inst_15887);
                                                            var inst_15893 = cljs.core.async.muxch_STAR_.call(null, inst_15892);
                                                            var inst_15894 = cljs.core.async.close_BANG_.call(null, inst_15893);
                                                            var inst_15895 = inst_15887 + 1;
                                                            var tmp15975 = inst_15886;
                                                            var tmp15976 = inst_15885;
                                                            var tmp15977 = inst_15884;
                                                            var inst_15884__$1 = tmp15977;
                                                            var inst_15885__$1 = tmp15976;
                                                            var inst_15886__$1 = tmp15975;
                                                            var inst_15887__$1 = inst_15895;
                                                            var state_15945__$1 = function() {
                                                              var statearr_15981 = state_15945;
                                                              statearr_15981[13] = inst_15887__$1;
                                                              statearr_15981[14] = inst_15886__$1;
                                                              statearr_15981[18] = inst_15894;
                                                              statearr_15981[15] = inst_15885__$1;
                                                              statearr_15981[16] = inst_15884__$1;
                                                              return statearr_15981;
                                                            }();
                                                            var statearr_15982_16017 = state_15945__$1;
                                                            statearr_15982_16017[2] = null;
                                                            statearr_15982_16017[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_15946 === 18) {
                                                              var inst_15913 = state_15945[2];
                                                              var state_15945__$1 = state_15945;
                                                              var statearr_15983_16018 = state_15945__$1;
                                                              statearr_15983_16018[2] = inst_15913;
                                                              statearr_15983_16018[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_15946 === 8) {
                                                                var inst_15887 = state_15945[13];
                                                                var inst_15886 = state_15945[14];
                                                                var inst_15889 = inst_15887 < inst_15886;
                                                                var inst_15890 = inst_15889;
                                                                var state_15945__$1 = state_15945;
                                                                if (cljs.core.truth_(inst_15890)) {
                                                                  var statearr_15984_16019 = state_15945__$1;
                                                                  statearr_15984_16019[1] = 10;
                                                                } else {
                                                                  var statearr_15985_16020 = state_15945__$1;
                                                                  statearr_15985_16020[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___15993, mults, ensure_mult, p);
          return function(switch__5676__auto__, c__5691__auto___15993, mults, ensure_mult, p) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_15989 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15989[0] = state_machine__5677__auto__;
                statearr_15989[1] = 1;
                return statearr_15989;
              };
              var state_machine__5677__auto____1 = function(state_15945) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_15945);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e15990) {
                      if (e15990 instanceof Object) {
                        var ex__5680__auto__ = e15990;
                        var statearr_15991_16021 = state_15945;
                        statearr_15991_16021[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15945);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e15990;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16022 = state_15945;
                    state_15945 = G__16022;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_15945) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_15945);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___15993, mults, ensure_mult, p);
        }();
        var state__5693__auto__ = function() {
          var statearr_15992 = f__5692__auto__.call(null);
          statearr_15992[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___15993;
          return statearr_15992;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___15993, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5691__auto___16159 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___16159, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___16159, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_16129) {
              var state_val_16130 = state_16129[1];
              if (state_val_16130 === 7) {
                var state_16129__$1 = state_16129;
                var statearr_16131_16160 = state_16129__$1;
                statearr_16131_16160[2] = null;
                statearr_16131_16160[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16130 === 1) {
                  var state_16129__$1 = state_16129;
                  var statearr_16132_16161 = state_16129__$1;
                  statearr_16132_16161[2] = null;
                  statearr_16132_16161[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16130 === 4) {
                    var inst_16093 = state_16129[7];
                    var inst_16095 = inst_16093 < cnt;
                    var state_16129__$1 = state_16129;
                    if (cljs.core.truth_(inst_16095)) {
                      var statearr_16133_16162 = state_16129__$1;
                      statearr_16133_16162[1] = 6;
                    } else {
                      var statearr_16134_16163 = state_16129__$1;
                      statearr_16134_16163[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16130 === 15) {
                      var inst_16125 = state_16129[2];
                      var state_16129__$1 = state_16129;
                      var statearr_16135_16164 = state_16129__$1;
                      statearr_16135_16164[2] = inst_16125;
                      statearr_16135_16164[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16130 === 13) {
                        var inst_16118 = cljs.core.async.close_BANG_.call(null, out);
                        var state_16129__$1 = state_16129;
                        var statearr_16136_16165 = state_16129__$1;
                        statearr_16136_16165[2] = inst_16118;
                        statearr_16136_16165[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16130 === 6) {
                          var state_16129__$1 = state_16129;
                          var statearr_16137_16166 = state_16129__$1;
                          statearr_16137_16166[2] = null;
                          statearr_16137_16166[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16130 === 3) {
                            var inst_16127 = state_16129[2];
                            var state_16129__$1 = state_16129;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16129__$1, inst_16127);
                          } else {
                            if (state_val_16130 === 12) {
                              var inst_16115 = state_16129[8];
                              var inst_16115__$1 = state_16129[2];
                              var inst_16116 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_16115__$1);
                              var state_16129__$1 = function() {
                                var statearr_16138 = state_16129;
                                statearr_16138[8] = inst_16115__$1;
                                return statearr_16138;
                              }();
                              if (cljs.core.truth_(inst_16116)) {
                                var statearr_16139_16167 = state_16129__$1;
                                statearr_16139_16167[1] = 13;
                              } else {
                                var statearr_16140_16168 = state_16129__$1;
                                statearr_16140_16168[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_16130 === 2) {
                                var inst_16092 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_16093 = 0;
                                var state_16129__$1 = function() {
                                  var statearr_16141 = state_16129;
                                  statearr_16141[9] = inst_16092;
                                  statearr_16141[7] = inst_16093;
                                  return statearr_16141;
                                }();
                                var statearr_16142_16169 = state_16129__$1;
                                statearr_16142_16169[2] = null;
                                statearr_16142_16169[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_16130 === 11) {
                                  var inst_16093 = state_16129[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_16129, 10, Object, null, 9);
                                  var inst_16102 = chs__$1.call(null, inst_16093);
                                  var inst_16103 = done.call(null, inst_16093);
                                  var inst_16104 = cljs.core.async.take_BANG_.call(null, inst_16102, inst_16103);
                                  var state_16129__$1 = state_16129;
                                  var statearr_16143_16170 = state_16129__$1;
                                  statearr_16143_16170[2] = inst_16104;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16129__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16130 === 9) {
                                    var inst_16093 = state_16129[7];
                                    var inst_16106 = state_16129[2];
                                    var inst_16107 = inst_16093 + 1;
                                    var inst_16093__$1 = inst_16107;
                                    var state_16129__$1 = function() {
                                      var statearr_16144 = state_16129;
                                      statearr_16144[7] = inst_16093__$1;
                                      statearr_16144[10] = inst_16106;
                                      return statearr_16144;
                                    }();
                                    var statearr_16145_16171 = state_16129__$1;
                                    statearr_16145_16171[2] = null;
                                    statearr_16145_16171[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_16130 === 5) {
                                      var inst_16113 = state_16129[2];
                                      var state_16129__$1 = function() {
                                        var statearr_16146 = state_16129;
                                        statearr_16146[11] = inst_16113;
                                        return statearr_16146;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16129__$1, 12, dchan);
                                    } else {
                                      if (state_val_16130 === 14) {
                                        var inst_16115 = state_16129[8];
                                        var inst_16120 = cljs.core.apply.call(null, f, inst_16115);
                                        var state_16129__$1 = state_16129;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16129__$1, 16, out, inst_16120);
                                      } else {
                                        if (state_val_16130 === 16) {
                                          var inst_16122 = state_16129[2];
                                          var state_16129__$1 = function() {
                                            var statearr_16147 = state_16129;
                                            statearr_16147[12] = inst_16122;
                                            return statearr_16147;
                                          }();
                                          var statearr_16148_16172 = state_16129__$1;
                                          statearr_16148_16172[2] = null;
                                          statearr_16148_16172[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_16130 === 10) {
                                            var inst_16097 = state_16129[2];
                                            var inst_16098 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_16129__$1 = function() {
                                              var statearr_16149 = state_16129;
                                              statearr_16149[13] = inst_16097;
                                              return statearr_16149;
                                            }();
                                            var statearr_16150_16173 = state_16129__$1;
                                            statearr_16150_16173[2] = inst_16098;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16129__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_16130 === 8) {
                                              var inst_16111 = state_16129[2];
                                              var state_16129__$1 = state_16129;
                                              var statearr_16151_16174 = state_16129__$1;
                                              statearr_16151_16174[2] = inst_16111;
                                              statearr_16151_16174[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___16159, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__5676__auto__, c__5691__auto___16159, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_16155 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_16155[0] = state_machine__5677__auto__;
                statearr_16155[1] = 1;
                return statearr_16155;
              };
              var state_machine__5677__auto____1 = function(state_16129) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_16129);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e16156) {
                      if (e16156 instanceof Object) {
                        var ex__5680__auto__ = e16156;
                        var statearr_16157_16175 = state_16129;
                        statearr_16157_16175[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16129);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e16156;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16176 = state_16129;
                    state_16129 = G__16176;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_16129) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_16129);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___16159, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__5693__auto__ = function() {
          var statearr_16158 = f__5692__auto__.call(null);
          statearr_16158[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___16159;
          return statearr_16158;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___16159, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5691__auto___16284 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___16284, out) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___16284, out) {
            return function(state_16260) {
              var state_val_16261 = state_16260[1];
              if (state_val_16261 === 7) {
                var inst_16240 = state_16260[7];
                var inst_16239 = state_16260[8];
                var inst_16239__$1 = state_16260[2];
                var inst_16240__$1 = cljs.core.nth.call(null, inst_16239__$1, 0, null);
                var inst_16241 = cljs.core.nth.call(null, inst_16239__$1, 1, null);
                var inst_16242 = inst_16240__$1 == null;
                var state_16260__$1 = function() {
                  var statearr_16262 = state_16260;
                  statearr_16262[7] = inst_16240__$1;
                  statearr_16262[8] = inst_16239__$1;
                  statearr_16262[9] = inst_16241;
                  return statearr_16262;
                }();
                if (cljs.core.truth_(inst_16242)) {
                  var statearr_16263_16285 = state_16260__$1;
                  statearr_16263_16285[1] = 8;
                } else {
                  var statearr_16264_16286 = state_16260__$1;
                  statearr_16264_16286[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16261 === 1) {
                  var inst_16231 = cljs.core.vec.call(null, chs);
                  var inst_16232 = inst_16231;
                  var state_16260__$1 = function() {
                    var statearr_16265 = state_16260;
                    statearr_16265[10] = inst_16232;
                    return statearr_16265;
                  }();
                  var statearr_16266_16287 = state_16260__$1;
                  statearr_16266_16287[2] = null;
                  statearr_16266_16287[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16261 === 4) {
                    var inst_16232 = state_16260[10];
                    var state_16260__$1 = state_16260;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_16260__$1, 7, inst_16232);
                  } else {
                    if (state_val_16261 === 6) {
                      var inst_16256 = state_16260[2];
                      var state_16260__$1 = state_16260;
                      var statearr_16267_16288 = state_16260__$1;
                      statearr_16267_16288[2] = inst_16256;
                      statearr_16267_16288[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16261 === 3) {
                        var inst_16258 = state_16260[2];
                        var state_16260__$1 = state_16260;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16260__$1, inst_16258);
                      } else {
                        if (state_val_16261 === 2) {
                          var inst_16232 = state_16260[10];
                          var inst_16234 = cljs.core.count.call(null, inst_16232);
                          var inst_16235 = inst_16234 > 0;
                          var state_16260__$1 = state_16260;
                          if (cljs.core.truth_(inst_16235)) {
                            var statearr_16269_16289 = state_16260__$1;
                            statearr_16269_16289[1] = 4;
                          } else {
                            var statearr_16270_16290 = state_16260__$1;
                            statearr_16270_16290[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16261 === 11) {
                            var inst_16232 = state_16260[10];
                            var inst_16249 = state_16260[2];
                            var tmp16268 = inst_16232;
                            var inst_16232__$1 = tmp16268;
                            var state_16260__$1 = function() {
                              var statearr_16271 = state_16260;
                              statearr_16271[10] = inst_16232__$1;
                              statearr_16271[11] = inst_16249;
                              return statearr_16271;
                            }();
                            var statearr_16272_16291 = state_16260__$1;
                            statearr_16272_16291[2] = null;
                            statearr_16272_16291[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16261 === 9) {
                              var inst_16240 = state_16260[7];
                              var state_16260__$1 = state_16260;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16260__$1, 11, out, inst_16240);
                            } else {
                              if (state_val_16261 === 5) {
                                var inst_16254 = cljs.core.async.close_BANG_.call(null, out);
                                var state_16260__$1 = state_16260;
                                var statearr_16273_16292 = state_16260__$1;
                                statearr_16273_16292[2] = inst_16254;
                                statearr_16273_16292[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_16261 === 10) {
                                  var inst_16252 = state_16260[2];
                                  var state_16260__$1 = state_16260;
                                  var statearr_16274_16293 = state_16260__$1;
                                  statearr_16274_16293[2] = inst_16252;
                                  statearr_16274_16293[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16261 === 8) {
                                    var inst_16240 = state_16260[7];
                                    var inst_16239 = state_16260[8];
                                    var inst_16232 = state_16260[10];
                                    var inst_16241 = state_16260[9];
                                    var inst_16244 = function() {
                                      var c = inst_16241;
                                      var v = inst_16240;
                                      var vec__16237 = inst_16239;
                                      var cs = inst_16232;
                                      return function(c, v, vec__16237, cs, inst_16240, inst_16239, inst_16232, inst_16241, state_val_16261, c__5691__auto___16284, out) {
                                        return function(p1__16177_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__16177_SHARP_);
                                        };
                                      }(c, v, vec__16237, cs, inst_16240, inst_16239, inst_16232, inst_16241, state_val_16261, c__5691__auto___16284, out);
                                    }();
                                    var inst_16245 = cljs.core.filterv.call(null, inst_16244, inst_16232);
                                    var inst_16232__$1 = inst_16245;
                                    var state_16260__$1 = function() {
                                      var statearr_16275 = state_16260;
                                      statearr_16275[10] = inst_16232__$1;
                                      return statearr_16275;
                                    }();
                                    var statearr_16276_16294 = state_16260__$1;
                                    statearr_16276_16294[2] = null;
                                    statearr_16276_16294[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___16284, out);
          return function(switch__5676__auto__, c__5691__auto___16284, out) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_16280 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_16280[0] = state_machine__5677__auto__;
                statearr_16280[1] = 1;
                return statearr_16280;
              };
              var state_machine__5677__auto____1 = function(state_16260) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_16260);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e16281) {
                      if (e16281 instanceof Object) {
                        var ex__5680__auto__ = e16281;
                        var statearr_16282_16295 = state_16260;
                        statearr_16282_16295[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16260);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e16281;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16296 = state_16260;
                    state_16260 = G__16296;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_16260) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_16260);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___16284, out);
        }();
        var state__5693__auto__ = function() {
          var statearr_16283 = f__5692__auto__.call(null);
          statearr_16283[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___16284;
          return statearr_16283;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___16284, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5691__auto___16389 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___16389, out) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___16389, out) {
            return function(state_16366) {
              var state_val_16367 = state_16366[1];
              if (state_val_16367 === 7) {
                var inst_16348 = state_16366[7];
                var inst_16348__$1 = state_16366[2];
                var inst_16349 = inst_16348__$1 == null;
                var inst_16350 = cljs.core.not.call(null, inst_16349);
                var state_16366__$1 = function() {
                  var statearr_16368 = state_16366;
                  statearr_16368[7] = inst_16348__$1;
                  return statearr_16368;
                }();
                if (inst_16350) {
                  var statearr_16369_16390 = state_16366__$1;
                  statearr_16369_16390[1] = 8;
                } else {
                  var statearr_16370_16391 = state_16366__$1;
                  statearr_16370_16391[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16367 === 1) {
                  var inst_16343 = 0;
                  var state_16366__$1 = function() {
                    var statearr_16371 = state_16366;
                    statearr_16371[8] = inst_16343;
                    return statearr_16371;
                  }();
                  var statearr_16372_16392 = state_16366__$1;
                  statearr_16372_16392[2] = null;
                  statearr_16372_16392[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16367 === 4) {
                    var state_16366__$1 = state_16366;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16366__$1, 7, ch);
                  } else {
                    if (state_val_16367 === 6) {
                      var inst_16361 = state_16366[2];
                      var state_16366__$1 = state_16366;
                      var statearr_16373_16393 = state_16366__$1;
                      statearr_16373_16393[2] = inst_16361;
                      statearr_16373_16393[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16367 === 3) {
                        var inst_16363 = state_16366[2];
                        var inst_16364 = cljs.core.async.close_BANG_.call(null, out);
                        var state_16366__$1 = function() {
                          var statearr_16374 = state_16366;
                          statearr_16374[9] = inst_16363;
                          return statearr_16374;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16366__$1, inst_16364);
                      } else {
                        if (state_val_16367 === 2) {
                          var inst_16343 = state_16366[8];
                          var inst_16345 = inst_16343 < n;
                          var state_16366__$1 = state_16366;
                          if (cljs.core.truth_(inst_16345)) {
                            var statearr_16375_16394 = state_16366__$1;
                            statearr_16375_16394[1] = 4;
                          } else {
                            var statearr_16376_16395 = state_16366__$1;
                            statearr_16376_16395[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16367 === 11) {
                            var inst_16343 = state_16366[8];
                            var inst_16353 = state_16366[2];
                            var inst_16354 = inst_16343 + 1;
                            var inst_16343__$1 = inst_16354;
                            var state_16366__$1 = function() {
                              var statearr_16377 = state_16366;
                              statearr_16377[8] = inst_16343__$1;
                              statearr_16377[10] = inst_16353;
                              return statearr_16377;
                            }();
                            var statearr_16378_16396 = state_16366__$1;
                            statearr_16378_16396[2] = null;
                            statearr_16378_16396[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16367 === 9) {
                              var state_16366__$1 = state_16366;
                              var statearr_16379_16397 = state_16366__$1;
                              statearr_16379_16397[2] = null;
                              statearr_16379_16397[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_16367 === 5) {
                                var state_16366__$1 = state_16366;
                                var statearr_16380_16398 = state_16366__$1;
                                statearr_16380_16398[2] = null;
                                statearr_16380_16398[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_16367 === 10) {
                                  var inst_16358 = state_16366[2];
                                  var state_16366__$1 = state_16366;
                                  var statearr_16381_16399 = state_16366__$1;
                                  statearr_16381_16399[2] = inst_16358;
                                  statearr_16381_16399[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16367 === 8) {
                                    var inst_16348 = state_16366[7];
                                    var state_16366__$1 = state_16366;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16366__$1, 11, out, inst_16348);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___16389, out);
          return function(switch__5676__auto__, c__5691__auto___16389, out) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_16385 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_16385[0] = state_machine__5677__auto__;
                statearr_16385[1] = 1;
                return statearr_16385;
              };
              var state_machine__5677__auto____1 = function(state_16366) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_16366);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e16386) {
                      if (e16386 instanceof Object) {
                        var ex__5680__auto__ = e16386;
                        var statearr_16387_16400 = state_16366;
                        statearr_16387_16400[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16366);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e16386;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16401 = state_16366;
                    state_16366 = G__16401;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_16366) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_16366);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___16389, out);
        }();
        var state__5693__auto__ = function() {
          var statearr_16388 = f__5692__auto__.call(null);
          statearr_16388[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___16389;
          return statearr_16388;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___16389, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5691__auto___16498 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___16498, out) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___16498, out) {
            return function(state_16473) {
              var state_val_16474 = state_16473[1];
              if (state_val_16474 === 7) {
                var inst_16468 = state_16473[2];
                var state_16473__$1 = state_16473;
                var statearr_16475_16499 = state_16473__$1;
                statearr_16475_16499[2] = inst_16468;
                statearr_16475_16499[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16474 === 1) {
                  var inst_16450 = null;
                  var state_16473__$1 = function() {
                    var statearr_16476 = state_16473;
                    statearr_16476[7] = inst_16450;
                    return statearr_16476;
                  }();
                  var statearr_16477_16500 = state_16473__$1;
                  statearr_16477_16500[2] = null;
                  statearr_16477_16500[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16474 === 4) {
                    var inst_16453 = state_16473[8];
                    var inst_16453__$1 = state_16473[2];
                    var inst_16454 = inst_16453__$1 == null;
                    var inst_16455 = cljs.core.not.call(null, inst_16454);
                    var state_16473__$1 = function() {
                      var statearr_16478 = state_16473;
                      statearr_16478[8] = inst_16453__$1;
                      return statearr_16478;
                    }();
                    if (inst_16455) {
                      var statearr_16479_16501 = state_16473__$1;
                      statearr_16479_16501[1] = 5;
                    } else {
                      var statearr_16480_16502 = state_16473__$1;
                      statearr_16480_16502[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16474 === 6) {
                      var state_16473__$1 = state_16473;
                      var statearr_16481_16503 = state_16473__$1;
                      statearr_16481_16503[2] = null;
                      statearr_16481_16503[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16474 === 3) {
                        var inst_16470 = state_16473[2];
                        var inst_16471 = cljs.core.async.close_BANG_.call(null, out);
                        var state_16473__$1 = function() {
                          var statearr_16482 = state_16473;
                          statearr_16482[9] = inst_16470;
                          return statearr_16482;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16473__$1, inst_16471);
                      } else {
                        if (state_val_16474 === 2) {
                          var state_16473__$1 = state_16473;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16473__$1, 4, ch);
                        } else {
                          if (state_val_16474 === 11) {
                            var inst_16453 = state_16473[8];
                            var inst_16462 = state_16473[2];
                            var inst_16450 = inst_16453;
                            var state_16473__$1 = function() {
                              var statearr_16483 = state_16473;
                              statearr_16483[10] = inst_16462;
                              statearr_16483[7] = inst_16450;
                              return statearr_16483;
                            }();
                            var statearr_16484_16504 = state_16473__$1;
                            statearr_16484_16504[2] = null;
                            statearr_16484_16504[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_16474 === 9) {
                              var inst_16453 = state_16473[8];
                              var state_16473__$1 = state_16473;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16473__$1, 11, out, inst_16453);
                            } else {
                              if (state_val_16474 === 5) {
                                var inst_16450 = state_16473[7];
                                var inst_16453 = state_16473[8];
                                var inst_16457 = cljs.core._EQ_.call(null, inst_16453, inst_16450);
                                var state_16473__$1 = state_16473;
                                if (inst_16457) {
                                  var statearr_16486_16505 = state_16473__$1;
                                  statearr_16486_16505[1] = 8;
                                } else {
                                  var statearr_16487_16506 = state_16473__$1;
                                  statearr_16487_16506[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_16474 === 10) {
                                  var inst_16465 = state_16473[2];
                                  var state_16473__$1 = state_16473;
                                  var statearr_16488_16507 = state_16473__$1;
                                  statearr_16488_16507[2] = inst_16465;
                                  statearr_16488_16507[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16474 === 8) {
                                    var inst_16450 = state_16473[7];
                                    var tmp16485 = inst_16450;
                                    var inst_16450__$1 = tmp16485;
                                    var state_16473__$1 = function() {
                                      var statearr_16489 = state_16473;
                                      statearr_16489[7] = inst_16450__$1;
                                      return statearr_16489;
                                    }();
                                    var statearr_16490_16508 = state_16473__$1;
                                    statearr_16490_16508[2] = null;
                                    statearr_16490_16508[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___16498, out);
          return function(switch__5676__auto__, c__5691__auto___16498, out) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_16494 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_16494[0] = state_machine__5677__auto__;
                statearr_16494[1] = 1;
                return statearr_16494;
              };
              var state_machine__5677__auto____1 = function(state_16473) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_16473);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e16495) {
                      if (e16495 instanceof Object) {
                        var ex__5680__auto__ = e16495;
                        var statearr_16496_16509 = state_16473;
                        statearr_16496_16509[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16473);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e16495;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16510 = state_16473;
                    state_16473 = G__16510;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_16473) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_16473);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___16498, out);
        }();
        var state__5693__auto__ = function() {
          var statearr_16497 = f__5692__auto__.call(null);
          statearr_16497[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___16498;
          return statearr_16497;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___16498, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5691__auto___16645 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___16645, out) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___16645, out) {
            return function(state_16615) {
              var state_val_16616 = state_16615[1];
              if (state_val_16616 === 7) {
                var inst_16611 = state_16615[2];
                var state_16615__$1 = state_16615;
                var statearr_16617_16646 = state_16615__$1;
                statearr_16617_16646[2] = inst_16611;
                statearr_16617_16646[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16616 === 1) {
                  var inst_16578 = new Array(n);
                  var inst_16579 = inst_16578;
                  var inst_16580 = 0;
                  var state_16615__$1 = function() {
                    var statearr_16618 = state_16615;
                    statearr_16618[7] = inst_16579;
                    statearr_16618[8] = inst_16580;
                    return statearr_16618;
                  }();
                  var statearr_16619_16647 = state_16615__$1;
                  statearr_16619_16647[2] = null;
                  statearr_16619_16647[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16616 === 4) {
                    var inst_16583 = state_16615[9];
                    var inst_16583__$1 = state_16615[2];
                    var inst_16584 = inst_16583__$1 == null;
                    var inst_16585 = cljs.core.not.call(null, inst_16584);
                    var state_16615__$1 = function() {
                      var statearr_16620 = state_16615;
                      statearr_16620[9] = inst_16583__$1;
                      return statearr_16620;
                    }();
                    if (inst_16585) {
                      var statearr_16621_16648 = state_16615__$1;
                      statearr_16621_16648[1] = 5;
                    } else {
                      var statearr_16622_16649 = state_16615__$1;
                      statearr_16622_16649[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16616 === 15) {
                      var inst_16605 = state_16615[2];
                      var state_16615__$1 = state_16615;
                      var statearr_16623_16650 = state_16615__$1;
                      statearr_16623_16650[2] = inst_16605;
                      statearr_16623_16650[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16616 === 13) {
                        var state_16615__$1 = state_16615;
                        var statearr_16624_16651 = state_16615__$1;
                        statearr_16624_16651[2] = null;
                        statearr_16624_16651[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16616 === 6) {
                          var inst_16580 = state_16615[8];
                          var inst_16601 = inst_16580 > 0;
                          var state_16615__$1 = state_16615;
                          if (cljs.core.truth_(inst_16601)) {
                            var statearr_16625_16652 = state_16615__$1;
                            statearr_16625_16652[1] = 12;
                          } else {
                            var statearr_16626_16653 = state_16615__$1;
                            statearr_16626_16653[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16616 === 3) {
                            var inst_16613 = state_16615[2];
                            var state_16615__$1 = state_16615;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16615__$1, inst_16613);
                          } else {
                            if (state_val_16616 === 12) {
                              var inst_16579 = state_16615[7];
                              var inst_16603 = cljs.core.vec.call(null, inst_16579);
                              var state_16615__$1 = state_16615;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16615__$1, 15, out, inst_16603);
                            } else {
                              if (state_val_16616 === 2) {
                                var state_16615__$1 = state_16615;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16615__$1, 4, ch);
                              } else {
                                if (state_val_16616 === 11) {
                                  var inst_16595 = state_16615[2];
                                  var inst_16596 = new Array(n);
                                  var inst_16579 = inst_16596;
                                  var inst_16580 = 0;
                                  var state_16615__$1 = function() {
                                    var statearr_16627 = state_16615;
                                    statearr_16627[7] = inst_16579;
                                    statearr_16627[10] = inst_16595;
                                    statearr_16627[8] = inst_16580;
                                    return statearr_16627;
                                  }();
                                  var statearr_16628_16654 = state_16615__$1;
                                  statearr_16628_16654[2] = null;
                                  statearr_16628_16654[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16616 === 9) {
                                    var inst_16579 = state_16615[7];
                                    var inst_16593 = cljs.core.vec.call(null, inst_16579);
                                    var state_16615__$1 = state_16615;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16615__$1, 11, out, inst_16593);
                                  } else {
                                    if (state_val_16616 === 5) {
                                      var inst_16579 = state_16615[7];
                                      var inst_16583 = state_16615[9];
                                      var inst_16580 = state_16615[8];
                                      var inst_16588 = state_16615[11];
                                      var inst_16587 = inst_16579[inst_16580] = inst_16583;
                                      var inst_16588__$1 = inst_16580 + 1;
                                      var inst_16589 = inst_16588__$1 < n;
                                      var state_16615__$1 = function() {
                                        var statearr_16629 = state_16615;
                                        statearr_16629[12] = inst_16587;
                                        statearr_16629[11] = inst_16588__$1;
                                        return statearr_16629;
                                      }();
                                      if (cljs.core.truth_(inst_16589)) {
                                        var statearr_16630_16655 = state_16615__$1;
                                        statearr_16630_16655[1] = 8;
                                      } else {
                                        var statearr_16631_16656 = state_16615__$1;
                                        statearr_16631_16656[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_16616 === 14) {
                                        var inst_16608 = state_16615[2];
                                        var inst_16609 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_16615__$1 = function() {
                                          var statearr_16633 = state_16615;
                                          statearr_16633[13] = inst_16608;
                                          return statearr_16633;
                                        }();
                                        var statearr_16634_16657 = state_16615__$1;
                                        statearr_16634_16657[2] = inst_16609;
                                        statearr_16634_16657[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_16616 === 10) {
                                          var inst_16599 = state_16615[2];
                                          var state_16615__$1 = state_16615;
                                          var statearr_16635_16658 = state_16615__$1;
                                          statearr_16635_16658[2] = inst_16599;
                                          statearr_16635_16658[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_16616 === 8) {
                                            var inst_16579 = state_16615[7];
                                            var inst_16588 = state_16615[11];
                                            var tmp16632 = inst_16579;
                                            var inst_16579__$1 = tmp16632;
                                            var inst_16580 = inst_16588;
                                            var state_16615__$1 = function() {
                                              var statearr_16636 = state_16615;
                                              statearr_16636[7] = inst_16579__$1;
                                              statearr_16636[8] = inst_16580;
                                              return statearr_16636;
                                            }();
                                            var statearr_16637_16659 = state_16615__$1;
                                            statearr_16637_16659[2] = null;
                                            statearr_16637_16659[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___16645, out);
          return function(switch__5676__auto__, c__5691__auto___16645, out) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_16641 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_16641[0] = state_machine__5677__auto__;
                statearr_16641[1] = 1;
                return statearr_16641;
              };
              var state_machine__5677__auto____1 = function(state_16615) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_16615);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e16642) {
                      if (e16642 instanceof Object) {
                        var ex__5680__auto__ = e16642;
                        var statearr_16643_16660 = state_16615;
                        statearr_16643_16660[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16615);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e16642;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16661 = state_16615;
                    state_16615 = G__16661;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_16615) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_16615);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___16645, out);
        }();
        var state__5693__auto__ = function() {
          var statearr_16644 = f__5692__auto__.call(null);
          statearr_16644[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___16645;
          return statearr_16644;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___16645, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5691__auto___16804 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___16804, out) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___16804, out) {
            return function(state_16774) {
              var state_val_16775 = state_16774[1];
              if (state_val_16775 === 7) {
                var inst_16770 = state_16774[2];
                var state_16774__$1 = state_16774;
                var statearr_16776_16805 = state_16774__$1;
                statearr_16776_16805[2] = inst_16770;
                statearr_16776_16805[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_16775 === 1) {
                  var inst_16733 = [];
                  var inst_16734 = inst_16733;
                  var inst_16735 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
                  var state_16774__$1 = function() {
                    var statearr_16777 = state_16774;
                    statearr_16777[7] = inst_16735;
                    statearr_16777[8] = inst_16734;
                    return statearr_16777;
                  }();
                  var statearr_16778_16806 = state_16774__$1;
                  statearr_16778_16806[2] = null;
                  statearr_16778_16806[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_16775 === 4) {
                    var inst_16738 = state_16774[9];
                    var inst_16738__$1 = state_16774[2];
                    var inst_16739 = inst_16738__$1 == null;
                    var inst_16740 = cljs.core.not.call(null, inst_16739);
                    var state_16774__$1 = function() {
                      var statearr_16779 = state_16774;
                      statearr_16779[9] = inst_16738__$1;
                      return statearr_16779;
                    }();
                    if (inst_16740) {
                      var statearr_16780_16807 = state_16774__$1;
                      statearr_16780_16807[1] = 5;
                    } else {
                      var statearr_16781_16808 = state_16774__$1;
                      statearr_16781_16808[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_16775 === 15) {
                      var inst_16764 = state_16774[2];
                      var state_16774__$1 = state_16774;
                      var statearr_16782_16809 = state_16774__$1;
                      statearr_16782_16809[2] = inst_16764;
                      statearr_16782_16809[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_16775 === 13) {
                        var state_16774__$1 = state_16774;
                        var statearr_16783_16810 = state_16774__$1;
                        statearr_16783_16810[2] = null;
                        statearr_16783_16810[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_16775 === 6) {
                          var inst_16734 = state_16774[8];
                          var inst_16759 = inst_16734.length;
                          var inst_16760 = inst_16759 > 0;
                          var state_16774__$1 = state_16774;
                          if (cljs.core.truth_(inst_16760)) {
                            var statearr_16784_16811 = state_16774__$1;
                            statearr_16784_16811[1] = 12;
                          } else {
                            var statearr_16785_16812 = state_16774__$1;
                            statearr_16785_16812[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_16775 === 3) {
                            var inst_16772 = state_16774[2];
                            var state_16774__$1 = state_16774;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16774__$1, inst_16772);
                          } else {
                            if (state_val_16775 === 12) {
                              var inst_16734 = state_16774[8];
                              var inst_16762 = cljs.core.vec.call(null, inst_16734);
                              var state_16774__$1 = state_16774;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16774__$1, 15, out, inst_16762);
                            } else {
                              if (state_val_16775 === 2) {
                                var state_16774__$1 = state_16774;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16774__$1, 4, ch);
                              } else {
                                if (state_val_16775 === 11) {
                                  var inst_16738 = state_16774[9];
                                  var inst_16742 = state_16774[10];
                                  var inst_16752 = state_16774[2];
                                  var inst_16753 = [];
                                  var inst_16754 = inst_16753.push(inst_16738);
                                  var inst_16734 = inst_16753;
                                  var inst_16735 = inst_16742;
                                  var state_16774__$1 = function() {
                                    var statearr_16786 = state_16774;
                                    statearr_16786[7] = inst_16735;
                                    statearr_16786[11] = inst_16754;
                                    statearr_16786[8] = inst_16734;
                                    statearr_16786[12] = inst_16752;
                                    return statearr_16786;
                                  }();
                                  var statearr_16787_16813 = state_16774__$1;
                                  statearr_16787_16813[2] = null;
                                  statearr_16787_16813[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_16775 === 9) {
                                    var inst_16734 = state_16774[8];
                                    var inst_16750 = cljs.core.vec.call(null, inst_16734);
                                    var state_16774__$1 = state_16774;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16774__$1, 11, out, inst_16750);
                                  } else {
                                    if (state_val_16775 === 5) {
                                      var inst_16735 = state_16774[7];
                                      var inst_16738 = state_16774[9];
                                      var inst_16742 = state_16774[10];
                                      var inst_16742__$1 = f.call(null, inst_16738);
                                      var inst_16743 = cljs.core._EQ_.call(null, inst_16742__$1, inst_16735);
                                      var inst_16744 = cljs.core.keyword_identical_QMARK_.call(null, inst_16735, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                                      var inst_16745 = inst_16743 || inst_16744;
                                      var state_16774__$1 = function() {
                                        var statearr_16788 = state_16774;
                                        statearr_16788[10] = inst_16742__$1;
                                        return statearr_16788;
                                      }();
                                      if (cljs.core.truth_(inst_16745)) {
                                        var statearr_16789_16814 = state_16774__$1;
                                        statearr_16789_16814[1] = 8;
                                      } else {
                                        var statearr_16790_16815 = state_16774__$1;
                                        statearr_16790_16815[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_16775 === 14) {
                                        var inst_16767 = state_16774[2];
                                        var inst_16768 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_16774__$1 = function() {
                                          var statearr_16792 = state_16774;
                                          statearr_16792[13] = inst_16767;
                                          return statearr_16792;
                                        }();
                                        var statearr_16793_16816 = state_16774__$1;
                                        statearr_16793_16816[2] = inst_16768;
                                        statearr_16793_16816[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_16775 === 10) {
                                          var inst_16757 = state_16774[2];
                                          var state_16774__$1 = state_16774;
                                          var statearr_16794_16817 = state_16774__$1;
                                          statearr_16794_16817[2] = inst_16757;
                                          statearr_16794_16817[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_16775 === 8) {
                                            var inst_16734 = state_16774[8];
                                            var inst_16738 = state_16774[9];
                                            var inst_16742 = state_16774[10];
                                            var inst_16747 = inst_16734.push(inst_16738);
                                            var tmp16791 = inst_16734;
                                            var inst_16734__$1 = tmp16791;
                                            var inst_16735 = inst_16742;
                                            var state_16774__$1 = function() {
                                              var statearr_16795 = state_16774;
                                              statearr_16795[7] = inst_16735;
                                              statearr_16795[8] = inst_16734__$1;
                                              statearr_16795[14] = inst_16747;
                                              return statearr_16795;
                                            }();
                                            var statearr_16796_16818 = state_16774__$1;
                                            statearr_16796_16818[2] = null;
                                            statearr_16796_16818[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___16804, out);
          return function(switch__5676__auto__, c__5691__auto___16804, out) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_16800 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_16800[0] = state_machine__5677__auto__;
                statearr_16800[1] = 1;
                return statearr_16800;
              };
              var state_machine__5677__auto____1 = function(state_16774) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_16774);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e16801) {
                      if (e16801 instanceof Object) {
                        var ex__5680__auto__ = e16801;
                        var statearr_16802_16819 = state_16774;
                        statearr_16802_16819[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16774);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e16801;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__16820 = state_16774;
                    state_16774 = G__16820;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_16774) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_16774);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___16804, out);
        }();
        var state__5693__auto__ = function() {
          var statearr_16803 = f__5692__auto__.call(null);
          statearr_16803[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___16804;
          return statearr_16803;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___16804, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  } else {
    if (goog.isArray(type)) {
      for (var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
      }
      return null;
    } else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if (!(type in map)) {
        map[type] = {count_:0, remaining_:0};
      }
      map = map[type];
      if (!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++;
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if (!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++;
      } else {
        listenerArray = map[srcUid];
        for (var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if (listenerObj.removed) {
              break;
            }
            return listenerArray[i].key;
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if (!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = [];
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if (src.addEventListener) {
        if (src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture);
        }
      } else {
        src.attachEvent(goog.events.getOnString_(type), proxy);
      }
      return key;
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (!goog.events.listeners_[key]) {
    return false;
  }
  var listener = goog.events.listeners_[key];
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if (!noObj) {
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if ((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for (var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if ((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || [];
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if (!goog.events.listeners_[key]) {
    return true;
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray(object, sb);
        break;
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if (opt_scheme) {
    out.push(opt_scheme, ":");
  }
  if (opt_domain) {
    out.push("//");
    if (opt_userInfo) {
      out.push(opt_userInfo, "@");
    }
    out.push(opt_domain);
    if (opt_port) {
      out.push(":", opt_port);
    }
  }
  if (opt_path) {
    out.push(opt_path);
  }
  if (opt_queryData) {
    out.push("?", opt_queryData);
  }
  if (opt_fragment) {
    out.push("#", opt_fragment);
  }
  return out.join("");
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  if (method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__16926 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__16926;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__16930 = cljs.core._EQ_;
    var expr__16931 = limit;
    if (cljs.core.truth_(pred__16930.call(null, 1, expr__16931))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__16930.call(null, 2, expr__16931))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__16933 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__16934 = limit__$1 - 1;
            var G__16935 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__16933;
            limit__$1 = G__16934;
            parts = G__16935;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__16936 = index - 1;
        index = G__16936;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___16937 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___16937)) {
        var replacement_16938 = temp__4124__auto___16937;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_16938));
      } else {
        buffer.append(ch);
      }
      var G__16939 = index + 1;
      index = G__16939;
      continue;
    }
    break;
  }
};
goog.provide("clustermap.api");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIo");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.api.GET = function() {
  var GET__delegate = function(url, p__8501) {
    var map__8503 = p__8501;
    var map__8503__$1 = cljs.core.seq_QMARK_.call(null, map__8503) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8503) : map__8503;
    var raw = cljs.core.get.call(null, map__8503__$1, new cljs.core.Keyword(null, "raw", "raw", 1014016922));
    var comm = cljs.core.async.chan.call(null, 1);
    goog.net.XhrIo.send(url, function(comm, map__8503, map__8503__$1, raw) {
      return function(event) {
        cljs.core.async.put_BANG_.call(null, comm, function(comm, map__8503, map__8503__$1, raw) {
          return function(d) {
            if (cljs.core.truth_(raw)) {
              return d;
            } else {
              return cljs.core.js__GT_clj.call(null, d, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
            }
          };
        }(comm, map__8503, map__8503__$1, raw).call(null, JSON.parse(event.target.getResponseText())["data"]));
        return cljs.core.async.close_BANG_.call(null, comm);
      };
    }(comm, map__8503, map__8503__$1, raw));
    return comm;
  };
  var GET = function(url, var_args) {
    var p__8501 = null;
    if (arguments.length > 1) {
      p__8501 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return GET__delegate.call(this, url, p__8501);
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__8504) {
    var url = cljs.core.first(arglist__8504);
    var p__8501 = cljs.core.rest(arglist__8504);
    return GET__delegate(url, p__8501);
  };
  GET.cljs$core$IFn$_invoke$arity$variadic = GET__delegate;
  return GET;
}();
clustermap.api.ordered_api_results = function ordered_api_results(ocomm, handler) {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_8637) {
            var state_val_8638 = state_8637[1];
            if (state_val_8638 === 7) {
              var inst_8595 = state_8637[7];
              var inst_8594 = state_8637[2];
              var inst_8595__$1 = cljs.core.nth.call(null, inst_8594, 0, null);
              var inst_8596 = cljs.core.nth.call(null, inst_8594, 1, null);
              var inst_8597 = cljs.core.sequential_QMARK_.call(null, inst_8595__$1);
              var state_8637__$1 = function() {
                var statearr_8639 = state_8637;
                statearr_8639[7] = inst_8595__$1;
                statearr_8639[8] = inst_8596;
                return statearr_8639;
              }();
              if (inst_8597) {
                var statearr_8640_8675 = state_8637__$1;
                statearr_8640_8675[1] = 8;
              } else {
                var statearr_8641_8676 = state_8637__$1;
                statearr_8641_8676[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_8638 === 20) {
                var inst_8595 = state_8637[7];
                var state_8637__$1 = state_8637;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8637__$1, 23, inst_8595);
              } else {
                if (state_val_8638 === 1) {
                  var state_8637__$1 = state_8637;
                  var statearr_8642_8677 = state_8637__$1;
                  statearr_8642_8677[2] = null;
                  statearr_8642_8677[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_8638 === 4) {
                    var state_8637__$1 = state_8637;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8637__$1, 7, ocomm);
                  } else {
                    if (state_val_8638 === 15) {
                      var inst_8617 = state_8637[2];
                      var state_8637__$1 = state_8637;
                      var statearr_8643_8678 = state_8637__$1;
                      statearr_8643_8678[2] = inst_8617;
                      statearr_8643_8678[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_8638 === 21) {
                        var state_8637__$1 = state_8637;
                        var statearr_8644_8679 = state_8637__$1;
                        statearr_8644_8679[2] = null;
                        statearr_8644_8679[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_8638 === 13) {
                          var inst_8600 = state_8637[9];
                          var state_8637__$1 = state_8637;
                          var statearr_8645_8680 = state_8637__$1;
                          statearr_8645_8680[2] = inst_8600;
                          statearr_8645_8680[1] = 15;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_8638 === 22) {
                            var inst_8626 = state_8637[2];
                            var state_8637__$1 = state_8637;
                            var statearr_8646_8681 = state_8637__$1;
                            statearr_8646_8681[2] = inst_8626;
                            statearr_8646_8681[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_8638 === 6) {
                              var inst_8633 = state_8637[2];
                              var state_8637__$1 = state_8637;
                              var statearr_8647_8682 = state_8637__$1;
                              statearr_8647_8682[2] = inst_8633;
                              statearr_8647_8682[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_8638 === 17) {
                                var state_8637__$1 = state_8637;
                                var statearr_8648_8683 = state_8637__$1;
                                statearr_8648_8683[2] = null;
                                statearr_8648_8683[1] = 18;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_8638 === 3) {
                                  var inst_8635 = state_8637[2];
                                  var state_8637__$1 = state_8637;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8637__$1, inst_8635);
                                } else {
                                  if (state_val_8638 === 12) {
                                    var inst_8619 = state_8637[2];
                                    var state_8637__$1 = state_8637;
                                    var statearr_8649_8684 = state_8637__$1;
                                    statearr_8649_8684[2] = inst_8619;
                                    statearr_8649_8684[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_8638 === 2) {
                                      var state_8637__$1 = state_8637;
                                      if (true) {
                                        var statearr_8650_8685 = state_8637__$1;
                                        statearr_8650_8685[1] = 4;
                                      } else {
                                        var statearr_8651_8686 = state_8637__$1;
                                        statearr_8651_8686[1] = 5;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_8638 === 23) {
                                        var inst_8623 = state_8637[2];
                                        var state_8637__$1 = state_8637;
                                        var statearr_8652_8687 = state_8637__$1;
                                        statearr_8652_8687[2] = inst_8623;
                                        statearr_8652_8687[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_8638 === 19) {
                                          var inst_8610 = state_8637[2];
                                          var state_8637__$1 = state_8637;
                                          var statearr_8653_8688 = state_8637__$1;
                                          statearr_8653_8688[2] = inst_8610;
                                          statearr_8653_8688[1] = 18;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_8638 === 11) {
                                            var inst_8599 = state_8637[10];
                                            var inst_8602 = cljs.core.empty_QMARK_.call(null, inst_8599);
                                            var state_8637__$1 = state_8637;
                                            if (inst_8602) {
                                              var statearr_8654_8689 = state_8637__$1;
                                              statearr_8654_8689[1] = 13;
                                            } else {
                                              var statearr_8655_8690 = state_8637__$1;
                                              statearr_8655_8690[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_8638 === 9) {
                                              var inst_8595 = state_8637[7];
                                              var state_8637__$1 = state_8637;
                                              if (cljs.core.truth_(inst_8595)) {
                                                var statearr_8656_8691 = state_8637__$1;
                                                statearr_8656_8691[1] = 20;
                                              } else {
                                                var statearr_8657_8692 = state_8637__$1;
                                                statearr_8657_8692[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_8638 === 5) {
                                                var state_8637__$1 = state_8637;
                                                var statearr_8658_8693 = state_8637__$1;
                                                statearr_8658_8693[2] = null;
                                                statearr_8658_8693[1] = 6;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_8638 === 14) {
                                                  var inst_8599 = state_8637[10];
                                                  var inst_8605 = cljs.core.rest.call(null, inst_8599);
                                                  var inst_8606 = cljs.core.first.call(null, inst_8599);
                                                  var state_8637__$1 = function() {
                                                    var statearr_8659 = state_8637;
                                                    statearr_8659[11] = inst_8605;
                                                    return statearr_8659;
                                                  }();
                                                  if (cljs.core.truth_(inst_8606)) {
                                                    var statearr_8660_8694 = state_8637__$1;
                                                    statearr_8660_8694[1] = 16;
                                                  } else {
                                                    var statearr_8661_8695 = state_8637__$1;
                                                    statearr_8661_8695[1] = 17;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_8638 === 16) {
                                                    var inst_8599 = state_8637[10];
                                                    var inst_8608 = cljs.core.first.call(null, inst_8599);
                                                    var state_8637__$1 = state_8637;
                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8637__$1, 19, inst_8608);
                                                  } else {
                                                    if (state_val_8638 === 10) {
                                                      var inst_8596 = state_8637[8];
                                                      var inst_8628 = state_8637[2];
                                                      var inst_8629 = cljs.core.apply.call(null, handler, inst_8628, inst_8596);
                                                      var state_8637__$1 = function() {
                                                        var statearr_8662 = state_8637;
                                                        statearr_8662[12] = inst_8629;
                                                        return statearr_8662;
                                                      }();
                                                      var statearr_8663_8696 = state_8637__$1;
                                                      statearr_8663_8696[2] = null;
                                                      statearr_8663_8696[1] = 2;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_8638 === 18) {
                                                        var inst_8600 = state_8637[9];
                                                        var inst_8605 = state_8637[11];
                                                        var inst_8613 = state_8637[2];
                                                        var inst_8614 = cljs.core.conj.call(null, inst_8600, inst_8613);
                                                        var inst_8599 = inst_8605;
                                                        var inst_8600__$1 = inst_8614;
                                                        var state_8637__$1 = function() {
                                                          var statearr_8664 = state_8637;
                                                          statearr_8664[10] = inst_8599;
                                                          statearr_8664[9] = inst_8600__$1;
                                                          return statearr_8664;
                                                        }();
                                                        var statearr_8665_8697 = state_8637__$1;
                                                        statearr_8665_8697[2] = null;
                                                        statearr_8665_8697[1] = 11;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_8638 === 8) {
                                                          var inst_8595 = state_8637[7];
                                                          var inst_8599 = inst_8595;
                                                          var inst_8600 = cljs.core.PersistentVector.EMPTY;
                                                          var state_8637__$1 = function() {
                                                            var statearr_8666 = state_8637;
                                                            statearr_8666[10] = inst_8599;
                                                            statearr_8666[9] = inst_8600;
                                                            return statearr_8666;
                                                          }();
                                                          var statearr_8667_8698 = state_8637__$1;
                                                          statearr_8667_8698[2] = null;
                                                          statearr_8667_8698[1] = 11;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_8671 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_8671[0] = state_machine__5677__auto__;
              statearr_8671[1] = 1;
              return statearr_8671;
            };
            var state_machine__5677__auto____1 = function(state_8637) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_8637);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e8672) {
                    if (e8672 instanceof Object) {
                      var ex__5680__auto__ = e8672;
                      var statearr_8673_8699 = state_8637;
                      statearr_8673_8699[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8637);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e8672;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__8700 = state_8637;
                  state_8637 = G__8700;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_8637) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_8637);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_8674 = f__5692__auto__.call(null);
        statearr_8674[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_8674;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
clustermap.api.ordered_api = function ordered_api(request_handler, result_handler) {
  var ocomm = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
  var _ = clustermap.api.ordered_api_results.call(null, ocomm, result_handler);
  return function(ocomm, _) {
    return function() {
      var G__8703__delegate = function(req_args) {
        var temp__4124__auto__ = cljs.core.apply.call(null, request_handler, req_args);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var r = temp__4124__auto__;
          var rseq = cljs.core.sequential_QMARK_.call(null, r) ? r : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
          var vec__8702 = rseq;
          var rcomm = cljs.core.nth.call(null, vec__8702, 0, null);
          var result_handler_args = cljs.core.nthnext.call(null, vec__8702, 1);
          return cljs.core.async.put_BANG_.call(null, ocomm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rcomm, result_handler_args], null));
        } else {
          return null;
        }
      };
      var G__8703 = function(var_args) {
        var req_args = null;
        if (arguments.length > 0) {
          req_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__8703__delegate.call(this, req_args);
      };
      G__8703.cljs$lang$maxFixedArity = 0;
      G__8703.cljs$lang$applyTo = function(arglist__8704) {
        var req_args = cljs.core.seq(arglist__8704);
        return G__8703__delegate(req_args);
      };
      G__8703.cljs$core$IFn$_invoke$arity$variadic = G__8703__delegate;
      return G__8703;
    }();
  }(ocomm, _);
};
clustermap.api.log_api = function() {
  var log_api__delegate = function(f, args) {
    var ch = cljs.core.apply.call(null, f, args);
    var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__, ch) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto__, ch) {
            return function(state_8722) {
              var state_val_8723 = state_8722[1];
              if (state_val_8723 === 2) {
                var inst_8719 = state_8722[2];
                var inst_8720 = console.log(inst_8719);
                var state_8722__$1 = state_8722;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8722__$1, inst_8720);
              } else {
                if (state_val_8723 === 1) {
                  var state_8722__$1 = state_8722;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8722__$1, 2, ch);
                } else {
                  return null;
                }
              }
            };
          }(c__5691__auto__, ch);
          return function(switch__5676__auto__, c__5691__auto__, ch) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_8727 = [null, null, null, null, null, null, null];
                statearr_8727[0] = state_machine__5677__auto__;
                statearr_8727[1] = 1;
                return statearr_8727;
              };
              var state_machine__5677__auto____1 = function(state_8722) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_8722);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e8728) {
                      if (e8728 instanceof Object) {
                        var ex__5680__auto__ = e8728;
                        var statearr_8729_8731 = state_8722;
                        statearr_8729_8731[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8722);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e8728;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__8732 = state_8722;
                    state_8722 = G__8732;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_8722) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_8722);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto__, ch);
        }();
        var state__5693__auto__ = function() {
          var statearr_8730 = f__5692__auto__.call(null);
          statearr_8730[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
          return statearr_8730;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto__, ch));
    return c__5691__auto__;
  };
  var log_api = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return log_api__delegate.call(this, f, args);
  };
  log_api.cljs$lang$maxFixedArity = 1;
  log_api.cljs$lang$applyTo = function(arglist__8733) {
    var f = cljs.core.first(arglist__8733);
    var args = cljs.core.rest(arglist__8733);
    return log_api__delegate(f, args);
  };
  log_api.cljs$core$IFn$_invoke$arity$variadic = log_api__delegate;
  return log_api;
}();
clustermap.api.map_json_params = function map_json_params(m) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__8736) {
    var vec__8737 = p__8736;
    var k = cljs.core.nth.call(null, vec__8737, 0, null);
    var v = cljs.core.nth.call(null, vec__8737, 1, null);
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(JSON.stringify(cljs.core.clj__GT_js.call(null, v)));
  }, m));
};
clustermap.api.api_prefix = config.api.prefix;
clustermap.api.boundarylines = function() {
  var boundarylines__delegate = function(id, tolerance, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundarylines/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tolerance), opts);
  };
  var boundarylines = function(id, tolerance, var_args) {
    var opts = null;
    if (arguments.length > 2) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return boundarylines__delegate.call(this, id, tolerance, opts);
  };
  boundarylines.cljs$lang$maxFixedArity = 2;
  boundarylines.cljs$lang$applyTo = function(arglist__8738) {
    var id = cljs.core.first(arglist__8738);
    arglist__8738 = cljs.core.next(arglist__8738);
    var tolerance = cljs.core.first(arglist__8738);
    var opts = cljs.core.rest(arglist__8738);
    return boundarylines__delegate(id, tolerance, opts);
  };
  boundarylines.cljs$core$IFn$_invoke$arity$variadic = boundarylines__delegate;
  return boundarylines;
}();
clustermap.api.boundaryline_collection_index = function() {
  var boundaryline_collection_index__delegate = function(id, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundaryline-collection-index/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id), opts);
  };
  var boundaryline_collection_index = function(id, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return boundaryline_collection_index__delegate.call(this, id, opts);
  };
  boundaryline_collection_index.cljs$lang$maxFixedArity = 1;
  boundaryline_collection_index.cljs$lang$applyTo = function(arglist__8739) {
    var id = cljs.core.first(arglist__8739);
    var opts = cljs.core.rest(arglist__8739);
    return boundaryline_collection_index__delegate(id, opts);
  };
  boundaryline_collection_index.cljs$core$IFn$_invoke$arity$variadic = boundaryline_collection_index__delegate;
  return boundaryline_collection_index;
}();
clustermap.api.search = function search(q) {
  if (cljs.core.count.call(null, clojure.string.trim.call(null, q)) > 0) {
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/search?q\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(q));
  } else {
    return cljs.core.async.to_chan.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [{}], null));
  }
};
clustermap.api.constituency = function constituency(id) {
  return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/constituencies/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id));
};
clustermap.api.portfolio_company = function portfolio_company(id) {
  return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-companies/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id));
};
clustermap.api.portfolio_company_sites = function() {
  var portfolio_company_sites__delegate = function(p__8740) {
    var vec__8742 = p__8740;
    var type_ids = cljs.core.nth.call(null, vec__8742, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 100, new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", 2344676794), "desc"], null)], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-sites?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var portfolio_company_sites = function(var_args) {
    var p__8740 = null;
    if (arguments.length > 0) {
      p__8740 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_sites__delegate.call(this, p__8740);
  };
  portfolio_company_sites.cljs$lang$maxFixedArity = 0;
  portfolio_company_sites.cljs$lang$applyTo = function(arglist__8743) {
    var p__8740 = cljs.core.seq(arglist__8743);
    return portfolio_company_sites__delegate(p__8740);
  };
  portfolio_company_sites.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_sites__delegate;
  return portfolio_company_sites;
}();
clustermap.api.portfolio_company_sites_by_company = function() {
  var portfolio_company_sites_by_company__delegate = function(p__8744) {
    var vec__8746 = p__8744;
    var type_ids = cljs.core.nth.call(null, vec__8746, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 100, new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", 2344676794), "desc"], null)], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-sites-by-company?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var portfolio_company_sites_by_company = function(var_args) {
    var p__8744 = null;
    if (arguments.length > 0) {
      p__8744 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_sites_by_company__delegate.call(this, p__8744);
  };
  portfolio_company_sites_by_company.cljs$lang$maxFixedArity = 0;
  portfolio_company_sites_by_company.cljs$lang$applyTo = function(arglist__8747) {
    var p__8744 = cljs.core.seq(arglist__8747);
    return portfolio_company_sites_by_company__delegate(p__8744);
  };
  portfolio_company_sites_by_company.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_sites_by_company__delegate;
  return portfolio_company_sites_by_company;
}();
clustermap.api.portfolio_company_locations = function() {
  var portfolio_company_locations__delegate = function(p__8748) {
    var vec__8750 = p__8748;
    var type_ids = cljs.core.nth.call(null, vec__8750, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-locations?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var portfolio_company_locations = function(var_args) {
    var p__8748 = null;
    if (arguments.length > 0) {
      p__8748 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_locations__delegate.call(this, p__8748);
  };
  portfolio_company_locations.cljs$lang$maxFixedArity = 0;
  portfolio_company_locations.cljs$lang$applyTo = function(arglist__8751) {
    var p__8748 = cljs.core.seq(arglist__8751);
    return portfolio_company_locations__delegate(p__8748);
  };
  portfolio_company_locations.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_locations__delegate;
  return portfolio_company_locations;
}();
clustermap.api.portfolio_company_site_stats = function() {
  var portfolio_company_site_stats__delegate = function(p__8752) {
    var vec__8754 = p__8752;
    var type_ids = cljs.core.nth.call(null, vec__8754, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-site-stats?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var portfolio_company_site_stats = function(var_args) {
    var p__8752 = null;
    if (arguments.length > 0) {
      p__8752 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_site_stats__delegate.call(this, p__8752);
  };
  portfolio_company_site_stats.cljs$lang$maxFixedArity = 0;
  portfolio_company_site_stats.cljs$lang$applyTo = function(arglist__8755) {
    var p__8752 = cljs.core.seq(arglist__8755);
    return portfolio_company_site_stats__delegate(p__8752);
  };
  portfolio_company_site_stats.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_site_stats__delegate;
  return portfolio_company_site_stats;
}();
clustermap.api.portfolio_company_site_account_timelines = function() {
  var portfolio_company_site_account_timelines__delegate = function(p__8756) {
    var vec__8758 = p__8756;
    var type_ids = cljs.core.nth.call(null, vec__8758, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-site-account-timelines?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var portfolio_company_site_account_timelines = function(var_args) {
    var p__8756 = null;
    if (arguments.length > 0) {
      p__8756 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_site_account_timelines__delegate.call(this, p__8756);
  };
  portfolio_company_site_account_timelines.cljs$lang$maxFixedArity = 0;
  portfolio_company_site_account_timelines.cljs$lang$applyTo = function(arglist__8759) {
    var p__8756 = cljs.core.seq(arglist__8759);
    return portfolio_company_site_account_timelines__delegate(p__8756);
  };
  portfolio_company_site_account_timelines.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_site_account_timelines__delegate;
  return portfolio_company_site_account_timelines;
}();
clustermap.api.investor_company = function investor_company(id) {
  return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investor-companies/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id));
};
clustermap.api.investment_account_timelines = function() {
  var investment_account_timelines__delegate = function(p__8760) {
    var vec__8762 = p__8760;
    var type_ids = cljs.core.nth.call(null, vec__8762, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investment-account-timelines?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var investment_account_timelines = function(var_args) {
    var p__8760 = null;
    if (arguments.length > 0) {
      p__8760 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investment_account_timelines__delegate.call(this, p__8760);
  };
  investment_account_timelines.cljs$lang$maxFixedArity = 0;
  investment_account_timelines.cljs$lang$applyTo = function(arglist__8763) {
    var p__8760 = cljs.core.seq(arglist__8763);
    return investment_account_timelines__delegate(p__8760);
  };
  investment_account_timelines.cljs$core$IFn$_invoke$arity$variadic = investment_account_timelines__delegate;
  return investment_account_timelines;
}();
clustermap.api.investment_stats = function() {
  var investment_stats__delegate = function(p__8764) {
    var vec__8766 = p__8764;
    var type_ids = cljs.core.nth.call(null, vec__8766, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investment-stats?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var investment_stats = function(var_args) {
    var p__8764 = null;
    if (arguments.length > 0) {
      p__8764 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investment_stats__delegate.call(this, p__8764);
  };
  investment_stats.cljs$lang$maxFixedArity = 0;
  investment_stats.cljs$lang$applyTo = function(arglist__8767) {
    var p__8764 = cljs.core.seq(arglist__8767);
    return investment_stats__delegate(p__8764);
  };
  investment_stats.cljs$core$IFn$_invoke$arity$variadic = investment_stats__delegate;
  return investment_stats;
}();
clustermap.api.investment_aggs = function() {
  var investment_aggs__delegate = function(p__8768) {
    var vec__8770 = p__8768;
    var type_ids = cljs.core.nth.call(null, vec__8770, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 50, new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451), "desc"], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investment-aggs?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var investment_aggs = function(var_args) {
    var p__8768 = null;
    if (arguments.length > 0) {
      p__8768 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investment_aggs__delegate.call(this, p__8768);
  };
  investment_aggs.cljs$lang$maxFixedArity = 0;
  investment_aggs.cljs$lang$applyTo = function(arglist__8771) {
    var p__8768 = cljs.core.seq(arglist__8771);
    return investment_aggs__delegate(p__8768);
  };
  investment_aggs.cljs$core$IFn$_invoke$arity$variadic = investment_aggs__delegate;
  return investment_aggs;
}();
clustermap.api.investments = function() {
  var investments__delegate = function(p__8772) {
    var vec__8774 = p__8772;
    var type_ids = cljs.core.nth.call(null, vec__8774, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 50, new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 828306139), "asc"], null), new cljs.core.PersistentArrayMap(null, 1, 
    [new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 4755885871), "asc"], null)], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investments?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var investments = function(var_args) {
    var p__8772 = null;
    if (arguments.length > 0) {
      p__8772 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investments__delegate.call(this, p__8772);
  };
  investments.cljs$lang$maxFixedArity = 0;
  investments.cljs$lang$applyTo = function(arglist__8775) {
    var p__8772 = cljs.core.seq(arglist__8775);
    return investments__delegate(p__8772);
  };
  investments.cljs$core$IFn$_invoke$arity$variadic = investments__delegate;
  return investments;
}();
goog.provide("clustermap.boundarylines");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.api");
goog.require("clustermap.api");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.boundarylines.zoom_tolerances = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [7, 0.01], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [9, 0.002], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 3E-4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, 0], null)], null);
clustermap.boundarylines.ideal_tolerance = function ideal_tolerance(zoom) {
  var or__3541__auto__ = cljs.core.some.call(null, function(p__12215) {
    var vec__12216 = p__12215;
    var z = cljs.core.nth.call(null, vec__12216, 0, null);
    var t = cljs.core.nth.call(null, vec__12216, 1, null);
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = z;
      if (cljs.core.truth_(and__3529__auto__)) {
        return zoom <= z;
      } else {
        return and__3529__auto__;
      }
    }())) {
      return t;
    } else {
      return null;
    }
  }, clustermap.boundarylines.zoom_tolerances);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return 0;
  }
};
clustermap.boundarylines.best_available_tolerance = function best_available_tolerance(zoom, available_tolerances) {
  var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
  var coarser = cljs.core.reverse.call(null, cljs.core.filter.call(null, function(i_tol) {
    return function(t) {
      return t > i_tol;
    };
  }(i_tol), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances)));
  var finer = cljs.core.filter.call(null, function(i_tol, coarser) {
    return function(t) {
      return t < i_tol;
    };
  }(i_tol, coarser), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances));
  var avail_set = cljs.core.set.call(null, available_tolerances);
  var or__3541__auto__ = cljs.core.get.call(null, avail_set, i_tol);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    var or__3541__auto____$1 = cljs.core.some.call(null, avail_set, finer);
    if (cljs.core.truth_(or__3541__auto____$1)) {
      return or__3541__auto____$1;
    } else {
      return cljs.core.some.call(null, avail_set, coarser);
    }
  }
};
clustermap.boundarylines.fetch_boundaryline = function fetch_boundaryline(app_state, korks, boundaryline_id, tolerance) {
  var comm = clustermap.api.boundarylines.call(null, boundaryline_id, tolerance, new cljs.core.Keyword(null, "raw", "raw", 1014016922), true);
  var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var path = cljs.core.concat.call(null, use_korks, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id, tolerance], null));
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__, comm, use_korks, path) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__, comm, use_korks, path) {
          return function(state_12236) {
            var state_val_12237 = state_12236[1];
            if (state_val_12237 === 2) {
              var inst_12232 = state_12236[2];
              var inst_12233 = function() {
                var bl = inst_12232;
                return function(bl, inst_12232, state_val_12237, c__5691__auto__, comm, use_korks, path) {
                  return function(old) {
                    return bl;
                  };
                }(bl, inst_12232, state_val_12237, c__5691__auto__, comm, use_korks, path);
              }();
              var inst_12234 = cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, path, inst_12233);
              var state_12236__$1 = state_12236;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12236__$1, inst_12234);
            } else {
              if (state_val_12237 === 1) {
                var state_12236__$1 = state_12236;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12236__$1, 2, comm);
              } else {
                return null;
              }
            }
          };
        }(c__5691__auto__, comm, use_korks, path);
        return function(switch__5676__auto__, c__5691__auto__, comm, use_korks, path) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_12241 = [null, null, null, null, null, null, null];
              statearr_12241[0] = state_machine__5677__auto__;
              statearr_12241[1] = 1;
              return statearr_12241;
            };
            var state_machine__5677__auto____1 = function(state_12236) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_12236);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e12242) {
                    if (e12242 instanceof Object) {
                      var ex__5680__auto__ = e12242;
                      var statearr_12243_12245 = state_12236;
                      statearr_12243_12245[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12236);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12242;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12246 = state_12236;
                  state_12236 = G__12246;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_12236) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_12236);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__, comm, use_korks, path);
      }();
      var state__5693__auto__ = function() {
        var statearr_12244 = f__5692__auto__.call(null);
        statearr_12244[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_12244;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__, comm, use_korks, path));
  return c__5691__auto__;
};
clustermap.boundarylines.get_or_fetch_best_boundaryline = function() {
  var get_or_fetch_best_boundaryline__delegate = function(app_state, korks, boundaryline_id, zoom, p__12247) {
    var map__12249 = p__12247;
    var map__12249__$1 = cljs.core.seq_QMARK_.call(null, map__12249) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12249) : map__12249;
    var min_zoom = cljs.core.get.call(null, map__12249__$1, new cljs.core.Keyword(null, "min-zoom", "min-zoom", 3894785504));
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = min_zoom;
      if (cljs.core.truth_(and__3529__auto__)) {
        return zoom <= min_zoom;
      } else {
        return and__3529__auto__;
      }
    }())) {
      return null;
    } else {
      var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
      var boundarylines = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), use_korks);
      var bl_versions = cljs.core.get.call(null, boundarylines, boundaryline_id);
      var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
      var use_tol = clustermap.boundarylines.best_available_tolerance.call(null, zoom, cljs.core.keys.call(null, bl_versions));
      var use_bl = cljs.core.get_in.call(null, boundarylines, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id, use_tol], null));
      if (cljs.core.not_EQ_.call(null, i_tol, use_tol)) {
        clustermap.boundarylines.fetch_boundaryline.call(null, app_state, korks, boundaryline_id, i_tol);
      } else {
      }
      if (cljs.core.truth_(use_bl)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [use_tol, use_bl], null);
      } else {
        return null;
      }
    }
  };
  var get_or_fetch_best_boundaryline = function(app_state, korks, boundaryline_id, zoom, var_args) {
    var p__12247 = null;
    if (arguments.length > 4) {
      p__12247 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
    }
    return get_or_fetch_best_boundaryline__delegate.call(this, app_state, korks, boundaryline_id, zoom, p__12247);
  };
  get_or_fetch_best_boundaryline.cljs$lang$maxFixedArity = 4;
  get_or_fetch_best_boundaryline.cljs$lang$applyTo = function(arglist__12250) {
    var app_state = cljs.core.first(arglist__12250);
    arglist__12250 = cljs.core.next(arglist__12250);
    var korks = cljs.core.first(arglist__12250);
    arglist__12250 = cljs.core.next(arglist__12250);
    var boundaryline_id = cljs.core.first(arglist__12250);
    arglist__12250 = cljs.core.next(arglist__12250);
    var zoom = cljs.core.first(arglist__12250);
    var p__12247 = cljs.core.rest(arglist__12250);
    return get_or_fetch_best_boundaryline__delegate(app_state, korks, boundaryline_id, zoom, p__12247);
  };
  get_or_fetch_best_boundaryline.cljs$core$IFn$_invoke$arity$variadic = get_or_fetch_best_boundaryline__delegate;
  return get_or_fetch_best_boundaryline;
}();
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return;
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.safeDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (opt_key) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CancelledError");
goog.provide("goog.async.Deferred.UnhandledError");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_canceller, opt_defaultScope) {
  this.chain_ = [];
  this.canceller_ = opt_canceller;
  this.defaultScope_ = opt_defaultScope || null;
};
goog.async.Deferred.prototype.fired_ = false;
goog.async.Deferred.prototype.hadError_ = false;
goog.async.Deferred.prototype.result_;
goog.async.Deferred.prototype.paused_ = 0;
goog.async.Deferred.prototype.silentlyCancelled_ = false;
goog.async.Deferred.prototype.chained_ = false;
goog.async.Deferred.prototype.unhandledExceptionTimeoutId_;
goog.async.Deferred.prototype.parent_;
goog.async.Deferred.prototype.branches_ = 0;
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.canceller_) {
      this.canceller_.call(this.defaultScope_, this);
    } else {
      this.silentlyCancelled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CancelledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.pause_ = function() {
  this.paused_++;
};
goog.async.Deferred.prototype.unpause_ = function() {
  this.paused_--;
  if (this.paused_ == 0 && this.hasFired()) {
    this.fire_();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.resback_(isSuccess, res);
  this.unpause_();
};
goog.async.Deferred.prototype.resback_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCancelled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCancelled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(result) {
  this.check_();
  this.assertNotDeferred_(result);
  this.resback_(true, result);
};
goog.async.Deferred.prototype.errback = function(result) {
  this.check_();
  this.assertNotDeferred_(result);
  this.resback_(false, result);
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "Deferred instances can only be chained if they are the result of a " + "callback");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.chained_, "Chained Deferreds can not be re-used");
  this.chain_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.chain_, function(chainRow) {
    return goog.isFunction(chainRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledExceptionTimeoutId_ && (this.hasFired() && this.hasErrback_())) {
    goog.global.clearTimeout(this.unhandledExceptionTimeoutId_);
    delete this.unhandledExceptionTimeoutId_;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isChained = false;
  while (this.chain_.length && this.paused_ == 0) {
    var chainEntry = this.chain_.shift();
    var callback = chainEntry[0];
    var errback = chainEntry[1];
    var scope = chainEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (res instanceof goog.async.Deferred) {
          isChained = true;
          this.pause_();
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isChained && this.paused_) {
    res.addCallbacks(goog.bind(this.continue_, this, true), goog.bind(this.continue_, this, false));
    res.chained_ = true;
  }
  if (unhandledException) {
    this.unhandledExceptionTimeoutId_ = goog.global.setTimeout(function() {
      throw new goog.async.Deferred.UnhandledError((res));
    }, 0);
  }
};
goog.async.Deferred.succeed = function(res) {
  var d = new goog.async.Deferred;
  d.callback(res);
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.cancelled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Already called";
goog.async.Deferred.CancelledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CancelledError, goog.debug.Error);
goog.async.Deferred.CancelledError.prototype.message = "Deferred was cancelled";
goog.async.Deferred.UnhandledError = function(cause) {
  goog.debug.Error.call(this);
  this.cause = cause;
  this.message = "Unhandled Error in Deferred: " + (cause.message || "[No message]");
};
goog.inherits(goog.async.Deferred.UnhandledError, goog.debug.Error);
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && (!this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_)) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '\x3ciframe onload\x3d"this.xpcOnload()"\x3e\x3c/iframe\x3e';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.net.xpc.logger.info("NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if (channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && (!staleChannel.isConnected() && (service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)))) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true;
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.net.xpc.logger.info("Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && (this.couldPeerVersionBe_(2) && protocolVersion == 2)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || (this.channel_.isConnected() || this.isDisposed())) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if (!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.net.xpc.logger.warning("Peer window had no postMessage " + "function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.net.xpc.logger.fine("send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.net.xpc.logger.warning("Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || (goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage)) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  if (!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[goog.net.xpc.CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
  }
  if (this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.net.xpc.logger.info("createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnce(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.net.xpc.logger.info("continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (opt_delay) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.safeDeliver = function(serviceName, payload, opt_origin) {
  this.deliver_(serviceName, payload, opt_origin);
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || (goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]);
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels_) {
    goog.dispose(goog.net.xpc.channels_[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
goog.require("goog.events");
clojure.browser.event.EventType = function() {
  var obj17851 = {};
  return obj17851;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.clojure$browser$event$EventType$event_types$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__17852) {
      var vec__17853 = p__17852;
      var k = cljs.core.nth.call(null, vec__17853, 0, null);
      var v = cljs.core.nth.call(null, vec__17853, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__17854) {
      var vec__17855 = p__17854;
      var k = cljs.core.nth.call(null, vec__17855, 0, null);
      var v = cljs.core.nth.call(null, vec__17855, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.XhrIo");
goog.require("goog.net.EventType");
goog.require("goog.json");
goog.require("goog.json");
goog.require("goog.net.EventType");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
goog.require("goog.net.xpc.CfgFields");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__17856) {
  var vec__17857 = p__17856;
  var k = cljs.core.nth.call(null, vec__17857, 0, null);
  var v = cljs.core.nth.call(null, vec__17857, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj17859 = {};
  return obj17859;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.connect[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.connect[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.connect[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.connect[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = clojure.browser.net.close[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = clojure.browser.net.close["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__17860) {
      var vec__17861 = p__17860;
      var k = cljs.core.nth.call(null, vec__17861, 0, null);
      var v = cljs.core.nth.call(null, vec__17861, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__17862) {
  var vec__17863 = p__17862;
  var k = cljs.core.nth.call(null, vec__17863, 0, null);
  var v = cljs.core.nth.call(null, vec__17863, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj17865 = {};
  return obj17865;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__17871) {
      var vec__17872 = p__17871;
      var k = cljs.core.nth.call(null, vec__17872, 0, null);
      var v = cljs.core.nth.call(null, vec__17872, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__17873 = sum;
        G__17873[field] = v;
        return G__17873;
      } else {
        return sum;
      }
    }, function() {
      var obj17875 = {};
      return obj17875;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__4124__auto__ = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1120839199), cljs.core.pr_str.call(null, data));
  } else {
    return null;
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "success", "success", 3441701749), new cljs.core.Keyword(null, "value", "value", 1125876963), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(block))], null);
    } catch (e17849) {
      var e = e17849;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "exception", "exception", 2495529921), new cljs.core.Keyword(null, "value", "value", 1125876963), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", 3069736751), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0);
  };
  var send_print__3 = function(url, data, n) {
    var conn = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", 1110689146), function(conn) {
      return function(_) {
        if (n < 10) {
          return send_print.call(null, url, data, n + 1);
        } else {
          return console.log("Could not send " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(data) + " after " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " attempts.");
        }
      };
    }(conn));
    return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  send_print.cljs$core$IFn$_invoke$arity$2 = send_print__2;
  send_print.cljs$core$IFn$_invoke$arity$3 = send_print__3;
  return send_print;
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), t, new cljs.core.Keyword(null, "content", "content", 1965434859), data, new cljs.core.Keyword(null, "order", "order", 1119910592), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__4124__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var repl_connection = temp__4124__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 3441701749), function(connection, repl_connection, temp__4124__auto__) {
      return function(e) {
        return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", 2953437843), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 3729280372), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "result", "result", 4374444943), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1120839199), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "print", "print", 1120839199), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null));
    return setTimeout(function(connection, repl_connection, temp__4124__auto__) {
      return function() {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "ready", "ready", 1122290965), "ready"));
      };
    }(connection, repl_connection, temp__4124__auto__), 50);
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 1083496577), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", 2953437843), function(repl_connection) {
    return function(js) {
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 3729280372), clojure.browser.repl.evaluate_javascript.call(null, repl_connection, js));
    };
  }(repl_connection));
  return clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(repl_connection) {
    return function(iframe) {
      return iframe.style.display = "none";
    };
  }(repl_connection));
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var a = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__16940) {
    var opts__9394__auto__ = cljs.core.first(arglist__16940);
    var children__9395__auto__ = cljs.core.rest(arglist__16940);
    return a__delegate(opts__9394__auto__, children__9395__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var abbr = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__16941) {
    var opts__9394__auto__ = cljs.core.first(arglist__16941);
    var children__9395__auto__ = cljs.core.rest(arglist__16941);
    return abbr__delegate(opts__9394__auto__, children__9395__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var address = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__16942) {
    var opts__9394__auto__ = cljs.core.first(arglist__16942);
    var children__9395__auto__ = cljs.core.rest(arglist__16942);
    return address__delegate(opts__9394__auto__, children__9395__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var area = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__16943) {
    var opts__9394__auto__ = cljs.core.first(arglist__16943);
    var children__9395__auto__ = cljs.core.rest(arglist__16943);
    return area__delegate(opts__9394__auto__, children__9395__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var article = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__16944) {
    var opts__9394__auto__ = cljs.core.first(arglist__16944);
    var children__9395__auto__ = cljs.core.rest(arglist__16944);
    return article__delegate(opts__9394__auto__, children__9395__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var aside = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__16945) {
    var opts__9394__auto__ = cljs.core.first(arglist__16945);
    var children__9395__auto__ = cljs.core.rest(arglist__16945);
    return aside__delegate(opts__9394__auto__, children__9395__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var audio = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__16946) {
    var opts__9394__auto__ = cljs.core.first(arglist__16946);
    var children__9395__auto__ = cljs.core.rest(arglist__16946);
    return audio__delegate(opts__9394__auto__, children__9395__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var b = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__16947) {
    var opts__9394__auto__ = cljs.core.first(arglist__16947);
    var children__9395__auto__ = cljs.core.rest(arglist__16947);
    return b__delegate(opts__9394__auto__, children__9395__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var base = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__16948) {
    var opts__9394__auto__ = cljs.core.first(arglist__16948);
    var children__9395__auto__ = cljs.core.rest(arglist__16948);
    return base__delegate(opts__9394__auto__, children__9395__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var bdi = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__16949) {
    var opts__9394__auto__ = cljs.core.first(arglist__16949);
    var children__9395__auto__ = cljs.core.rest(arglist__16949);
    return bdi__delegate(opts__9394__auto__, children__9395__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var bdo = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__16950) {
    var opts__9394__auto__ = cljs.core.first(arglist__16950);
    var children__9395__auto__ = cljs.core.rest(arglist__16950);
    return bdo__delegate(opts__9394__auto__, children__9395__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var big = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__16951) {
    var opts__9394__auto__ = cljs.core.first(arglist__16951);
    var children__9395__auto__ = cljs.core.rest(arglist__16951);
    return big__delegate(opts__9394__auto__, children__9395__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var blockquote = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__16952) {
    var opts__9394__auto__ = cljs.core.first(arglist__16952);
    var children__9395__auto__ = cljs.core.rest(arglist__16952);
    return blockquote__delegate(opts__9394__auto__, children__9395__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var body = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__16953) {
    var opts__9394__auto__ = cljs.core.first(arglist__16953);
    var children__9395__auto__ = cljs.core.rest(arglist__16953);
    return body__delegate(opts__9394__auto__, children__9395__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var br = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__16954) {
    var opts__9394__auto__ = cljs.core.first(arglist__16954);
    var children__9395__auto__ = cljs.core.rest(arglist__16954);
    return br__delegate(opts__9394__auto__, children__9395__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var button = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__16955) {
    var opts__9394__auto__ = cljs.core.first(arglist__16955);
    var children__9395__auto__ = cljs.core.rest(arglist__16955);
    return button__delegate(opts__9394__auto__, children__9395__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var canvas = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__16956) {
    var opts__9394__auto__ = cljs.core.first(arglist__16956);
    var children__9395__auto__ = cljs.core.rest(arglist__16956);
    return canvas__delegate(opts__9394__auto__, children__9395__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var caption = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__16957) {
    var opts__9394__auto__ = cljs.core.first(arglist__16957);
    var children__9395__auto__ = cljs.core.rest(arglist__16957);
    return caption__delegate(opts__9394__auto__, children__9395__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var cite = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__16958) {
    var opts__9394__auto__ = cljs.core.first(arglist__16958);
    var children__9395__auto__ = cljs.core.rest(arglist__16958);
    return cite__delegate(opts__9394__auto__, children__9395__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var code = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__16959) {
    var opts__9394__auto__ = cljs.core.first(arglist__16959);
    var children__9395__auto__ = cljs.core.rest(arglist__16959);
    return code__delegate(opts__9394__auto__, children__9395__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var col = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__16960) {
    var opts__9394__auto__ = cljs.core.first(arglist__16960);
    var children__9395__auto__ = cljs.core.rest(arglist__16960);
    return col__delegate(opts__9394__auto__, children__9395__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var colgroup = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__16961) {
    var opts__9394__auto__ = cljs.core.first(arglist__16961);
    var children__9395__auto__ = cljs.core.rest(arglist__16961);
    return colgroup__delegate(opts__9394__auto__, children__9395__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var data = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__16962) {
    var opts__9394__auto__ = cljs.core.first(arglist__16962);
    var children__9395__auto__ = cljs.core.rest(arglist__16962);
    return data__delegate(opts__9394__auto__, children__9395__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var datalist = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__16963) {
    var opts__9394__auto__ = cljs.core.first(arglist__16963);
    var children__9395__auto__ = cljs.core.rest(arglist__16963);
    return datalist__delegate(opts__9394__auto__, children__9395__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var dd = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__16964) {
    var opts__9394__auto__ = cljs.core.first(arglist__16964);
    var children__9395__auto__ = cljs.core.rest(arglist__16964);
    return dd__delegate(opts__9394__auto__, children__9395__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var del = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__16965) {
    var opts__9394__auto__ = cljs.core.first(arglist__16965);
    var children__9395__auto__ = cljs.core.rest(arglist__16965);
    return del__delegate(opts__9394__auto__, children__9395__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var dfn = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__16966) {
    var opts__9394__auto__ = cljs.core.first(arglist__16966);
    var children__9395__auto__ = cljs.core.rest(arglist__16966);
    return dfn__delegate(opts__9394__auto__, children__9395__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var div = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__16967) {
    var opts__9394__auto__ = cljs.core.first(arglist__16967);
    var children__9395__auto__ = cljs.core.rest(arglist__16967);
    return div__delegate(opts__9394__auto__, children__9395__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var dl = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__16968) {
    var opts__9394__auto__ = cljs.core.first(arglist__16968);
    var children__9395__auto__ = cljs.core.rest(arglist__16968);
    return dl__delegate(opts__9394__auto__, children__9395__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var dt = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__16969) {
    var opts__9394__auto__ = cljs.core.first(arglist__16969);
    var children__9395__auto__ = cljs.core.rest(arglist__16969);
    return dt__delegate(opts__9394__auto__, children__9395__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var em = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__16970) {
    var opts__9394__auto__ = cljs.core.first(arglist__16970);
    var children__9395__auto__ = cljs.core.rest(arglist__16970);
    return em__delegate(opts__9394__auto__, children__9395__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var embed = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__16971) {
    var opts__9394__auto__ = cljs.core.first(arglist__16971);
    var children__9395__auto__ = cljs.core.rest(arglist__16971);
    return embed__delegate(opts__9394__auto__, children__9395__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var fieldset = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__16972) {
    var opts__9394__auto__ = cljs.core.first(arglist__16972);
    var children__9395__auto__ = cljs.core.rest(arglist__16972);
    return fieldset__delegate(opts__9394__auto__, children__9395__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var figcaption = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__16973) {
    var opts__9394__auto__ = cljs.core.first(arglist__16973);
    var children__9395__auto__ = cljs.core.rest(arglist__16973);
    return figcaption__delegate(opts__9394__auto__, children__9395__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var figure = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__16974) {
    var opts__9394__auto__ = cljs.core.first(arglist__16974);
    var children__9395__auto__ = cljs.core.rest(arglist__16974);
    return figure__delegate(opts__9394__auto__, children__9395__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var footer = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__16975) {
    var opts__9394__auto__ = cljs.core.first(arglist__16975);
    var children__9395__auto__ = cljs.core.rest(arglist__16975);
    return footer__delegate(opts__9394__auto__, children__9395__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var form = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__16976) {
    var opts__9394__auto__ = cljs.core.first(arglist__16976);
    var children__9395__auto__ = cljs.core.rest(arglist__16976);
    return form__delegate(opts__9394__auto__, children__9395__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var h1 = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__16977) {
    var opts__9394__auto__ = cljs.core.first(arglist__16977);
    var children__9395__auto__ = cljs.core.rest(arglist__16977);
    return h1__delegate(opts__9394__auto__, children__9395__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var h2 = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__16978) {
    var opts__9394__auto__ = cljs.core.first(arglist__16978);
    var children__9395__auto__ = cljs.core.rest(arglist__16978);
    return h2__delegate(opts__9394__auto__, children__9395__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var h3 = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__16979) {
    var opts__9394__auto__ = cljs.core.first(arglist__16979);
    var children__9395__auto__ = cljs.core.rest(arglist__16979);
    return h3__delegate(opts__9394__auto__, children__9395__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var h4 = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__16980) {
    var opts__9394__auto__ = cljs.core.first(arglist__16980);
    var children__9395__auto__ = cljs.core.rest(arglist__16980);
    return h4__delegate(opts__9394__auto__, children__9395__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var h5 = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__16981) {
    var opts__9394__auto__ = cljs.core.first(arglist__16981);
    var children__9395__auto__ = cljs.core.rest(arglist__16981);
    return h5__delegate(opts__9394__auto__, children__9395__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var h6 = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__16982) {
    var opts__9394__auto__ = cljs.core.first(arglist__16982);
    var children__9395__auto__ = cljs.core.rest(arglist__16982);
    return h6__delegate(opts__9394__auto__, children__9395__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var head = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__16983) {
    var opts__9394__auto__ = cljs.core.first(arglist__16983);
    var children__9395__auto__ = cljs.core.rest(arglist__16983);
    return head__delegate(opts__9394__auto__, children__9395__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var header = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__16984) {
    var opts__9394__auto__ = cljs.core.first(arglist__16984);
    var children__9395__auto__ = cljs.core.rest(arglist__16984);
    return header__delegate(opts__9394__auto__, children__9395__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var hr = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__16985) {
    var opts__9394__auto__ = cljs.core.first(arglist__16985);
    var children__9395__auto__ = cljs.core.rest(arglist__16985);
    return hr__delegate(opts__9394__auto__, children__9395__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var html = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__16986) {
    var opts__9394__auto__ = cljs.core.first(arglist__16986);
    var children__9395__auto__ = cljs.core.rest(arglist__16986);
    return html__delegate(opts__9394__auto__, children__9395__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var i = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__16987) {
    var opts__9394__auto__ = cljs.core.first(arglist__16987);
    var children__9395__auto__ = cljs.core.rest(arglist__16987);
    return i__delegate(opts__9394__auto__, children__9395__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var iframe = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__16988) {
    var opts__9394__auto__ = cljs.core.first(arglist__16988);
    var children__9395__auto__ = cljs.core.rest(arglist__16988);
    return iframe__delegate(opts__9394__auto__, children__9395__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var img = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__16989) {
    var opts__9394__auto__ = cljs.core.first(arglist__16989);
    var children__9395__auto__ = cljs.core.rest(arglist__16989);
    return img__delegate(opts__9394__auto__, children__9395__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var ins = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__16990) {
    var opts__9394__auto__ = cljs.core.first(arglist__16990);
    var children__9395__auto__ = cljs.core.rest(arglist__16990);
    return ins__delegate(opts__9394__auto__, children__9395__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var kbd = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__16991) {
    var opts__9394__auto__ = cljs.core.first(arglist__16991);
    var children__9395__auto__ = cljs.core.rest(arglist__16991);
    return kbd__delegate(opts__9394__auto__, children__9395__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var keygen = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__16992) {
    var opts__9394__auto__ = cljs.core.first(arglist__16992);
    var children__9395__auto__ = cljs.core.rest(arglist__16992);
    return keygen__delegate(opts__9394__auto__, children__9395__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var label = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__16993) {
    var opts__9394__auto__ = cljs.core.first(arglist__16993);
    var children__9395__auto__ = cljs.core.rest(arglist__16993);
    return label__delegate(opts__9394__auto__, children__9395__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var legend = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__16994) {
    var opts__9394__auto__ = cljs.core.first(arglist__16994);
    var children__9395__auto__ = cljs.core.rest(arglist__16994);
    return legend__delegate(opts__9394__auto__, children__9395__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var li = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__16995) {
    var opts__9394__auto__ = cljs.core.first(arglist__16995);
    var children__9395__auto__ = cljs.core.rest(arglist__16995);
    return li__delegate(opts__9394__auto__, children__9395__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var link = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__16996) {
    var opts__9394__auto__ = cljs.core.first(arglist__16996);
    var children__9395__auto__ = cljs.core.rest(arglist__16996);
    return link__delegate(opts__9394__auto__, children__9395__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var main = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__16997) {
    var opts__9394__auto__ = cljs.core.first(arglist__16997);
    var children__9395__auto__ = cljs.core.rest(arglist__16997);
    return main__delegate(opts__9394__auto__, children__9395__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var map = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__16998) {
    var opts__9394__auto__ = cljs.core.first(arglist__16998);
    var children__9395__auto__ = cljs.core.rest(arglist__16998);
    return map__delegate(opts__9394__auto__, children__9395__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var mark = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__16999) {
    var opts__9394__auto__ = cljs.core.first(arglist__16999);
    var children__9395__auto__ = cljs.core.rest(arglist__16999);
    return mark__delegate(opts__9394__auto__, children__9395__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var menu = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__17000) {
    var opts__9394__auto__ = cljs.core.first(arglist__17000);
    var children__9395__auto__ = cljs.core.rest(arglist__17000);
    return menu__delegate(opts__9394__auto__, children__9395__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var menuitem = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__17001) {
    var opts__9394__auto__ = cljs.core.first(arglist__17001);
    var children__9395__auto__ = cljs.core.rest(arglist__17001);
    return menuitem__delegate(opts__9394__auto__, children__9395__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var meta = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__17002) {
    var opts__9394__auto__ = cljs.core.first(arglist__17002);
    var children__9395__auto__ = cljs.core.rest(arglist__17002);
    return meta__delegate(opts__9394__auto__, children__9395__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var meter = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__17003) {
    var opts__9394__auto__ = cljs.core.first(arglist__17003);
    var children__9395__auto__ = cljs.core.rest(arglist__17003);
    return meter__delegate(opts__9394__auto__, children__9395__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var nav = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__17004) {
    var opts__9394__auto__ = cljs.core.first(arglist__17004);
    var children__9395__auto__ = cljs.core.rest(arglist__17004);
    return nav__delegate(opts__9394__auto__, children__9395__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var noscript = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__17005) {
    var opts__9394__auto__ = cljs.core.first(arglist__17005);
    var children__9395__auto__ = cljs.core.rest(arglist__17005);
    return noscript__delegate(opts__9394__auto__, children__9395__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var object = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__17006) {
    var opts__9394__auto__ = cljs.core.first(arglist__17006);
    var children__9395__auto__ = cljs.core.rest(arglist__17006);
    return object__delegate(opts__9394__auto__, children__9395__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var ol = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__17007) {
    var opts__9394__auto__ = cljs.core.first(arglist__17007);
    var children__9395__auto__ = cljs.core.rest(arglist__17007);
    return ol__delegate(opts__9394__auto__, children__9395__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var optgroup = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__17008) {
    var opts__9394__auto__ = cljs.core.first(arglist__17008);
    var children__9395__auto__ = cljs.core.rest(arglist__17008);
    return optgroup__delegate(opts__9394__auto__, children__9395__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var output = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__17009) {
    var opts__9394__auto__ = cljs.core.first(arglist__17009);
    var children__9395__auto__ = cljs.core.rest(arglist__17009);
    return output__delegate(opts__9394__auto__, children__9395__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var p = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__17010) {
    var opts__9394__auto__ = cljs.core.first(arglist__17010);
    var children__9395__auto__ = cljs.core.rest(arglist__17010);
    return p__delegate(opts__9394__auto__, children__9395__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var param = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__17011) {
    var opts__9394__auto__ = cljs.core.first(arglist__17011);
    var children__9395__auto__ = cljs.core.rest(arglist__17011);
    return param__delegate(opts__9394__auto__, children__9395__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var pre = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__17012) {
    var opts__9394__auto__ = cljs.core.first(arglist__17012);
    var children__9395__auto__ = cljs.core.rest(arglist__17012);
    return pre__delegate(opts__9394__auto__, children__9395__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var progress = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__17013) {
    var opts__9394__auto__ = cljs.core.first(arglist__17013);
    var children__9395__auto__ = cljs.core.rest(arglist__17013);
    return progress__delegate(opts__9394__auto__, children__9395__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var q = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__17014) {
    var opts__9394__auto__ = cljs.core.first(arglist__17014);
    var children__9395__auto__ = cljs.core.rest(arglist__17014);
    return q__delegate(opts__9394__auto__, children__9395__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var rp = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__17015) {
    var opts__9394__auto__ = cljs.core.first(arglist__17015);
    var children__9395__auto__ = cljs.core.rest(arglist__17015);
    return rp__delegate(opts__9394__auto__, children__9395__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var rt = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__17016) {
    var opts__9394__auto__ = cljs.core.first(arglist__17016);
    var children__9395__auto__ = cljs.core.rest(arglist__17016);
    return rt__delegate(opts__9394__auto__, children__9395__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var ruby = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__17017) {
    var opts__9394__auto__ = cljs.core.first(arglist__17017);
    var children__9395__auto__ = cljs.core.rest(arglist__17017);
    return ruby__delegate(opts__9394__auto__, children__9395__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var s = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__17018) {
    var opts__9394__auto__ = cljs.core.first(arglist__17018);
    var children__9395__auto__ = cljs.core.rest(arglist__17018);
    return s__delegate(opts__9394__auto__, children__9395__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var samp = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__17019) {
    var opts__9394__auto__ = cljs.core.first(arglist__17019);
    var children__9395__auto__ = cljs.core.rest(arglist__17019);
    return samp__delegate(opts__9394__auto__, children__9395__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var script = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__17020) {
    var opts__9394__auto__ = cljs.core.first(arglist__17020);
    var children__9395__auto__ = cljs.core.rest(arglist__17020);
    return script__delegate(opts__9394__auto__, children__9395__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var section = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__17021) {
    var opts__9394__auto__ = cljs.core.first(arglist__17021);
    var children__9395__auto__ = cljs.core.rest(arglist__17021);
    return section__delegate(opts__9394__auto__, children__9395__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var select = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__17022) {
    var opts__9394__auto__ = cljs.core.first(arglist__17022);
    var children__9395__auto__ = cljs.core.rest(arglist__17022);
    return select__delegate(opts__9394__auto__, children__9395__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var small = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__17023) {
    var opts__9394__auto__ = cljs.core.first(arglist__17023);
    var children__9395__auto__ = cljs.core.rest(arglist__17023);
    return small__delegate(opts__9394__auto__, children__9395__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var source = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__17024) {
    var opts__9394__auto__ = cljs.core.first(arglist__17024);
    var children__9395__auto__ = cljs.core.rest(arglist__17024);
    return source__delegate(opts__9394__auto__, children__9395__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var span = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__17025) {
    var opts__9394__auto__ = cljs.core.first(arglist__17025);
    var children__9395__auto__ = cljs.core.rest(arglist__17025);
    return span__delegate(opts__9394__auto__, children__9395__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var strong = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__17026) {
    var opts__9394__auto__ = cljs.core.first(arglist__17026);
    var children__9395__auto__ = cljs.core.rest(arglist__17026);
    return strong__delegate(opts__9394__auto__, children__9395__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var style = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__17027) {
    var opts__9394__auto__ = cljs.core.first(arglist__17027);
    var children__9395__auto__ = cljs.core.rest(arglist__17027);
    return style__delegate(opts__9394__auto__, children__9395__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var sub = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__17028) {
    var opts__9394__auto__ = cljs.core.first(arglist__17028);
    var children__9395__auto__ = cljs.core.rest(arglist__17028);
    return sub__delegate(opts__9394__auto__, children__9395__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var summary = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__17029) {
    var opts__9394__auto__ = cljs.core.first(arglist__17029);
    var children__9395__auto__ = cljs.core.rest(arglist__17029);
    return summary__delegate(opts__9394__auto__, children__9395__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var sup = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__17030) {
    var opts__9394__auto__ = cljs.core.first(arglist__17030);
    var children__9395__auto__ = cljs.core.rest(arglist__17030);
    return sup__delegate(opts__9394__auto__, children__9395__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var table = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__17031) {
    var opts__9394__auto__ = cljs.core.first(arglist__17031);
    var children__9395__auto__ = cljs.core.rest(arglist__17031);
    return table__delegate(opts__9394__auto__, children__9395__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var tbody = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__17032) {
    var opts__9394__auto__ = cljs.core.first(arglist__17032);
    var children__9395__auto__ = cljs.core.rest(arglist__17032);
    return tbody__delegate(opts__9394__auto__, children__9395__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var td = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__17033) {
    var opts__9394__auto__ = cljs.core.first(arglist__17033);
    var children__9395__auto__ = cljs.core.rest(arglist__17033);
    return td__delegate(opts__9394__auto__, children__9395__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var tfoot = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__17034) {
    var opts__9394__auto__ = cljs.core.first(arglist__17034);
    var children__9395__auto__ = cljs.core.rest(arglist__17034);
    return tfoot__delegate(opts__9394__auto__, children__9395__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var th = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__17035) {
    var opts__9394__auto__ = cljs.core.first(arglist__17035);
    var children__9395__auto__ = cljs.core.rest(arglist__17035);
    return th__delegate(opts__9394__auto__, children__9395__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var thead = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__17036) {
    var opts__9394__auto__ = cljs.core.first(arglist__17036);
    var children__9395__auto__ = cljs.core.rest(arglist__17036);
    return thead__delegate(opts__9394__auto__, children__9395__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var time = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__17037) {
    var opts__9394__auto__ = cljs.core.first(arglist__17037);
    var children__9395__auto__ = cljs.core.rest(arglist__17037);
    return time__delegate(opts__9394__auto__, children__9395__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var title = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__17038) {
    var opts__9394__auto__ = cljs.core.first(arglist__17038);
    var children__9395__auto__ = cljs.core.rest(arglist__17038);
    return title__delegate(opts__9394__auto__, children__9395__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var tr = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__17039) {
    var opts__9394__auto__ = cljs.core.first(arglist__17039);
    var children__9395__auto__ = cljs.core.rest(arglist__17039);
    return tr__delegate(opts__9394__auto__, children__9395__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var track = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__17040) {
    var opts__9394__auto__ = cljs.core.first(arglist__17040);
    var children__9395__auto__ = cljs.core.rest(arglist__17040);
    return track__delegate(opts__9394__auto__, children__9395__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var u = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__17041) {
    var opts__9394__auto__ = cljs.core.first(arglist__17041);
    var children__9395__auto__ = cljs.core.rest(arglist__17041);
    return u__delegate(opts__9394__auto__, children__9395__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var ul = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__17042) {
    var opts__9394__auto__ = cljs.core.first(arglist__17042);
    var children__9395__auto__ = cljs.core.rest(arglist__17042);
    return ul__delegate(opts__9394__auto__, children__9395__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var var$ = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__17043) {
    var opts__9394__auto__ = cljs.core.first(arglist__17043);
    var children__9395__auto__ = cljs.core.rest(arglist__17043);
    return var$__delegate(opts__9394__auto__, children__9395__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var video = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__17044) {
    var opts__9394__auto__ = cljs.core.first(arglist__17044);
    var children__9395__auto__ = cljs.core.rest(arglist__17044);
    return video__delegate(opts__9394__auto__, children__9395__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var wbr = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__17045) {
    var opts__9394__auto__ = cljs.core.first(arglist__17045);
    var children__9395__auto__ = cljs.core.rest(arglist__17045);
    return wbr__delegate(opts__9394__auto__, children__9395__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var circle = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__17046) {
    var opts__9394__auto__ = cljs.core.first(arglist__17046);
    var children__9395__auto__ = cljs.core.rest(arglist__17046);
    return circle__delegate(opts__9394__auto__, children__9395__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var ellipse = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__17047) {
    var opts__9394__auto__ = cljs.core.first(arglist__17047);
    var children__9395__auto__ = cljs.core.rest(arglist__17047);
    return ellipse__delegate(opts__9394__auto__, children__9395__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var g = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__17048) {
    var opts__9394__auto__ = cljs.core.first(arglist__17048);
    var children__9395__auto__ = cljs.core.rest(arglist__17048);
    return g__delegate(opts__9394__auto__, children__9395__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var line = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__17049) {
    var opts__9394__auto__ = cljs.core.first(arglist__17049);
    var children__9395__auto__ = cljs.core.rest(arglist__17049);
    return line__delegate(opts__9394__auto__, children__9395__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var path = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__17050) {
    var opts__9394__auto__ = cljs.core.first(arglist__17050);
    var children__9395__auto__ = cljs.core.rest(arglist__17050);
    return path__delegate(opts__9394__auto__, children__9395__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var polyline = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__17051) {
    var opts__9394__auto__ = cljs.core.first(arglist__17051);
    var children__9395__auto__ = cljs.core.rest(arglist__17051);
    return polyline__delegate(opts__9394__auto__, children__9395__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var rect = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__17052) {
    var opts__9394__auto__ = cljs.core.first(arglist__17052);
    var children__9395__auto__ = cljs.core.rest(arglist__17052);
    return rect__delegate(opts__9394__auto__, children__9395__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var svg = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__17053) {
    var opts__9394__auto__ = cljs.core.first(arglist__17053);
    var children__9395__auto__ = cljs.core.rest(arglist__17053);
    return svg__delegate(opts__9394__auto__, children__9395__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var text = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__17054) {
    var opts__9394__auto__ = cljs.core.first(arglist__17054);
    var children__9395__auto__ = cljs.core.rest(arglist__17054);
    return text__delegate(opts__9394__auto__, children__9395__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var defs = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__17055) {
    var opts__9394__auto__ = cljs.core.first(arglist__17055);
    var children__9395__auto__ = cljs.core.rest(arglist__17055);
    return defs__delegate(opts__9394__auto__, children__9395__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var linearGradient = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__17056) {
    var opts__9394__auto__ = cljs.core.first(arglist__17056);
    var children__9395__auto__ = cljs.core.rest(arglist__17056);
    return linearGradient__delegate(opts__9394__auto__, children__9395__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var polygon = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__17057) {
    var opts__9394__auto__ = cljs.core.first(arglist__17057);
    var children__9395__auto__ = cljs.core.rest(arglist__17057);
    return polygon__delegate(opts__9394__auto__, children__9395__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var radialGradient = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__17058) {
    var opts__9394__auto__ = cljs.core.first(arglist__17058);
    var children__9395__auto__ = cljs.core.rest(arglist__17058);
    return radialGradient__delegate(opts__9394__auto__, children__9395__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__9394__auto__, children__9395__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9394__auto__, children__9395__auto__)));
  };
  var stop = function(opts__9394__auto__, var_args) {
    var children__9395__auto__ = null;
    if (arguments.length > 1) {
      children__9395__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__9394__auto__, children__9395__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__17059) {
    var opts__9394__auto__ = cljs.core.first(arglist__17059);
    var children__9395__auto__ = cljs.core.rest(arglist__17059);
    return stop__delegate(opts__9394__auto__, children__9395__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = input;
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.baseUrl_ = this.window_.location.href.split("#")[0];
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = iframe;
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.HAS_ONHASHCHANGE = goog.userAgent.IE && goog.userAgent.isDocumentMode(8) || (goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.2") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("532.1"));
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentMode(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.HAS_ONHASHCHANGE && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!goog.userAgent.IE || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.HAS_ONHASHCHANGE) {
        if (goog.userAgent.IE) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = this.baseUrl_;
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || (hasHash || token)) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || (width == "" || replacement.length >= width)) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clustermap.formats.number");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.formats.number.round_decimal = function round_decimal(n, dec_places) {
  if (cljs.core.truth_(dec_places)) {
    return Math.round(n * Math.pow(10, dec_places)) / Math.pow(10, dec_places);
  } else {
    return n;
  }
};
clustermap.formats.number.prefix_sign = function prefix_sign(n_str, n, plus_QMARK_) {
  if (n < 0) {
    return "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
  } else {
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = plus_QMARK_;
      if (cljs.core.truth_(and__3529__auto__)) {
        return n > 0;
      } else {
        return and__3529__auto__;
      }
    }())) {
      return "+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
    } else {
      if (true) {
        return n_str;
      } else {
        return null;
      }
    }
  }
};
clustermap.formats.number.split_thousands = function split_thousands(n_str) {
  return clojure.string.join.call(null, ",", cljs.core.map.call(null, function(p1__13083_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.str, p1__13083_SHARP_);
  }, cljs.core.reverse.call(null, cljs.core.map.call(null, cljs.core.reverse, cljs.core.partition.call(null, 3, 3, cljs.core.PersistentVector.EMPTY, cljs.core.reverse.call(null, n_str))))));
};
clustermap.formats.number.eng_notation = function() {
  var eng_notation__delegate = function(n, p__13084) {
    var map__13089 = p__13084;
    var map__13089__$1 = cljs.core.seq_QMARK_.call(null, map__13089) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13089) : map__13089;
    var sf = cljs.core.get.call(null, map__13089__$1, new cljs.core.Keyword(null, "sf", "sf", 1013907909));
    if (cljs.core.truth_(n)) {
      var sign = n > 0 ? 1 : cljs.core._EQ_.call(null, n, 0) ? 0 : n < 0 ? -1 : null;
      var abs_n = Math.abs(n);
      var vec__13090 = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(abs_n)).split(".");
      var i = cljs.core.nth.call(null, vec__13090, 0, null);
      var d = cljs.core.nth.call(null, vec__13090, 1, null);
      var exp = abs_n >= 1 ? 3 * ((cljs.core.count.call(null, i) - 1) / 3 | 0) : abs_n > 0 ? -3 * ((3 + cljs.core.count.call(null, cljs.core.take_while.call(null, function(sign, abs_n, vec__13090, i, d, map__13089, map__13089__$1, sf) {
        return function(c) {
          return cljs.core._EQ_.call(null, c, "0");
        };
      }(sign, abs_n, vec__13090, i, d, map__13089, map__13089__$1, sf), d))) / 3 | 0) : true ? 0 : null;
      var usig = abs_n * Math.pow(10, -1 * exp);
      var vec__13091 = cljs.core.truth_(sf) ? ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(usig)).split(".") : null;
      var usig_i = cljs.core.nth.call(null, vec__13091, 0, null);
      var usig_d = cljs.core.nth.call(null, vec__13091, 1, null);
      var sigmult = cljs.core.truth_(function() {
        var and__3529__auto__ = sf;
        if (cljs.core.truth_(and__3529__auto__)) {
          return usig > 0;
        } else {
          return and__3529__auto__;
        }
      }()) ? Math.pow(10, cljs.core.count.call(null, usig_i) - sf) : null;
      var round_usig_str = cljs.core.truth_(sigmult) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sigmult * Math.round(usig / sigmult)) : null;
      var vec__13092 = cljs.core.truth_(round_usig_str) ? round_usig_str.split(".") : null;
      var round_usig_i = cljs.core.nth.call(null, vec__13092, 0, null);
      var round_usig_d = cljs.core.nth.call(null, vec__13092, 1, null);
      var trunc_usig_str = cljs.core.truth_(round_usig_str) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.filter.call(null, cljs.core.identity, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, sf, round_usig_i), cljs.core.repeat.call(null, cljs.core.count.call(null, round_usig_i) - sf, "0"), cljs.core.count.call(null, round_usig_d) > 0 ? new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".", cljs.core.take.call(null, sf - cljs.core.count.call(null, round_usig_i), round_usig_d)], null) : null], null))))) : null;
      var trunc_usig = cljs.core.truth_(trunc_usig_str) ? parseFloat(trunc_usig_str) : null;
      var sig = sign * function() {
        var or__3541__auto__ = trunc_usig;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return usig;
        }
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sig, exp], null);
    } else {
      return null;
    }
  };
  var eng_notation = function(n, var_args) {
    var p__13084 = null;
    if (arguments.length > 1) {
      p__13084 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return eng_notation__delegate.call(this, n, p__13084);
  };
  eng_notation.cljs$lang$maxFixedArity = 1;
  eng_notation.cljs$lang$applyTo = function(arglist__13093) {
    var n = cljs.core.first(arglist__13093);
    var p__13084 = cljs.core.rest(arglist__13093);
    return eng_notation__delegate(n, p__13084);
  };
  eng_notation.cljs$core$IFn$_invoke$arity$variadic = eng_notation__delegate;
  return eng_notation;
}();
clustermap.formats.number.readable = function() {
  var readable__delegate = function(n, p__13094) {
    var map__13097 = p__13094;
    var map__13097__$1 = cljs.core.seq_QMARK_.call(null, map__13097) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13097) : map__13097;
    var default$ = cljs.core.get.call(null, map__13097__$1, new cljs.core.Keyword(null, "default", "default", 2558708147));
    var plus_QMARK_ = cljs.core.get.call(null, map__13097__$1, new cljs.core.Keyword(null, "plus?", "plus?", 1120672087));
    var dec = cljs.core.get.call(null, map__13097__$1, new cljs.core.Keyword(null, "dec", "dec", 1014003572));
    if (cljs.core.truth_(n)) {
      var abs_n = Math.abs(n);
      var round_n = clustermap.formats.number.round_decimal.call(null, abs_n, dec);
      var round_n_str = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(round_n);
      var vec__13098 = clojure.string.split.call(null, round_n_str, /\./);
      var i_str = cljs.core.nth.call(null, vec__13098, 0, null);
      var d_str = cljs.core.nth.call(null, vec__13098, 1, null);
      var t_str = clustermap.formats.number.split_thousands.call(null, i_str);
      var t_dec_str = clojure.string.join.call(null, ".", cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t_str, d_str], null)));
      return clustermap.formats.number.prefix_sign.call(null, t_dec_str, n, plus_QMARK_);
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__13094 = null;
    if (arguments.length > 1) {
      p__13094 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__13094);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__13099) {
    var n = cljs.core.first(arglist__13099);
    var p__13094 = cljs.core.rest(arglist__13099);
    return readable__delegate(n, p__13094);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.number.fnum = clustermap.formats.number.readable;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__17663_SHARP_) {
      return max === p1__17663_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__17664__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__17664 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17664__delegate.call(this, s1, s2, sets);
    };
    G__17664.cljs$lang$maxFixedArity = 2;
    G__17664.cljs$lang$applyTo = function(arglist__17665) {
      var s1 = cljs.core.first(arglist__17665);
      arglist__17665 = cljs.core.next(arglist__17665);
      var s2 = cljs.core.first(arglist__17665);
      var sets = cljs.core.rest(arglist__17665);
      return G__17664__delegate(s1, s2, sets);
    };
    G__17664.cljs$core$IFn$_invoke$arity$variadic = G__17664__delegate;
    return G__17664;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__17667 = s2;
        var G__17668 = s1;
        s1 = G__17667;
        s2 = G__17668;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__17669__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__17666_SHARP_) {
        return-cljs.core.count.call(null, p1__17666_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__17669 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17669__delegate.call(this, s1, s2, sets);
    };
    G__17669.cljs$lang$maxFixedArity = 2;
    G__17669.cljs$lang$applyTo = function(arglist__17670) {
      var s1 = cljs.core.first(arglist__17670);
      arglist__17670 = cljs.core.next(arglist__17670);
      var s2 = cljs.core.first(arglist__17670);
      var sets = cljs.core.rest(arglist__17670);
      return G__17669__delegate(s1, s2, sets);
    };
    G__17669.cljs$core$IFn$_invoke$arity$variadic = G__17669__delegate;
    return G__17669;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__17671__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__17671 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__17671__delegate.call(this, s1, s2, sets);
    };
    G__17671.cljs$lang$maxFixedArity = 2;
    G__17671.cljs$lang$applyTo = function(arglist__17672) {
      var s1 = cljs.core.first(arglist__17672);
      arglist__17672 = cljs.core.next(arglist__17672);
      var s2 = cljs.core.first(arglist__17672);
      var sets = cljs.core.rest(arglist__17672);
      return G__17671__delegate(s1, s2, sets);
    };
    G__17671.cljs$core$IFn$_invoke$arity$variadic = G__17671__delegate;
    return G__17671;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17673_SHARP_) {
    return cljs.core.select_keys.call(null, p1__17673_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__17676) {
    var vec__17677 = p__17676;
    var old = cljs.core.nth.call(null, vec__17677, 0, null);
    var new$ = cljs.core.nth.call(null, vec__17677, 1, null);
    if (cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old);
    } else {
      return m;
    }
  }, map, kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17678_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__17678_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__17681) {
    var vec__17682 = p__17681;
    var k = cljs.core.nth.call(null, vec__17682, 0, null);
    var v = cljs.core.nth.call(null, vec__17682, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__17689 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__17689, 0, null);
      var s = cljs.core.nth.call(null, vec__17689, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__17689, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__17689, r, s, idx) {
              return function(p1__17683_SHARP_, p2__17684_SHARP_) {
                return cljs.core.conj.call(null, p1__17683_SHARP_, cljs.core.merge.call(null, p2__17684_SHARP_, x));
              };
            }(found, ks, vec__17689, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__17689, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__17690 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__17690, 0, null);
    var s = cljs.core.nth.call(null, vec__17690, 1, null);
    var k = cljs.core.nth.call(null, vec__17690, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__17690, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__17690, r, s, k, idx) {
            return function(p1__17685_SHARP_, p2__17686_SHARP_) {
              return cljs.core.conj.call(null, p1__17685_SHARP_, cljs.core.merge.call(null, p2__17686_SHARP_, x));
            };
          }(found, vec__17690, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__17690, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__17691_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__17691_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__17692_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__17692_SHARP_);
  }, set2);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj17470 = {};
  return obj17470;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = sablono.util.to_str[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = sablono.util.to_str["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj17472 = {};
  return obj17472;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = sablono.util.to_uri[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = sablono.util.to_uri["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__17473) {
    var xs = cljs.core.seq(arglist__17473);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__17475 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__17475, 0, null);
    var words = cljs.core.nthnext.call(null, vec__17475, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || (cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word))) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  var dom_attrs = cljs.core.merge.call(null, cljs.core.zipmap.call(null, cljs.core.keys.call(null, attrs), cljs.core.map.call(null, sablono.util.camel_case, cljs.core.keys.call(null, attrs))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.Keyword(null, "className", "className", 1004015509), new cljs.core.Keyword(null, "for", "for", 1014005819), new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112)], null));
  return clojure.set.rename_keys.call(null, attrs, dom_attrs);
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__17476_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__17476_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17476_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__17476_SHARP_)) {
          return p1__17476_SHARP_;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__17476_SHARP_], null);
          } else {
            return null;
          }
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", 1108647146), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__17477) {
    var maps = cljs.core.seq(arglist__17477);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__17481 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.Keyword(null, "default", "default", 2558708147) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, 
  matches)], null) : null;
  var tag_name = cljs.core.nth.call(null, vec__17481, 0, null);
  var names = cljs.core.nth.call(null, vec__17481, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__17481, tag_name, names) {
    return function(p1__17478_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__17478_SHARP_));
    };
  }(matches, vec__17481, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__17481, tag_name, names) {
    return function(p1__17479_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__17479_SHARP_));
    };
  }(matches, vec__17481, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__17482) {
  var vec__17485 = p__17482;
  var tag = cljs.core.nth.call(null, vec__17485, 0, null);
  var content = cljs.core.nthnext.call(null, vec__17485, 1);
  if (!(tag instanceof cljs.core.Keyword || (tag instanceof cljs.core.Symbol || typeof tag === "string"))) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag, new cljs.core.Keyword(null, "content", "content", 1965434859), content], null));
  } else {
  }
  var vec__17486 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__17486, 0, null);
  var id = cljs.core.nth.call(null, vec__17486, 1, null);
  var class$ = cljs.core.nth.call(null, vec__17486, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "class", "class", 1108647146), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  var dom_fn = sablono.util.react_symbol.call(null, tag);
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), null, new cljs.core.Keyword(null, "input", "input", 1114262332), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return dom_fn;
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3541__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj17466 = {};
  return obj17466;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "displayName":display_name});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "Input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "Option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "Textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "input", "input", 1114262332), sablono.interpreter.input, new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__17468 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__17468, 0, null);
  var attrs = cljs.core.nth.call(null, vec__17468, 1, null);
  var content = cljs.core.nth.call(null, vec__17468, 2, null);
  return sablono.interpreter.dom_fn.call(null, tag).call(null, sablono.interpreter.attributes.call(null, attrs), cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content)) ? sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)) : cljs.core.truth_(content) ? sablono.interpreter.interpret.call(null, content) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? null : null);
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return outer.call(null, form);
      } else {
        return null;
      }
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__17357) {
    var vec__17358 = p__17357;
    var k = cljs.core.nth.call(null, vec__17358, 0, null);
    var v = cljs.core.nth.call(null, vec__17358, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__17361) {
    var vec__17362 = p__17361;
    var k = cljs.core.nth.call(null, vec__17362, 0, null);
    var v = cljs.core.nth.call(null, vec__17362, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__17365__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__17364 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__17364, 0, null);
        var body = cljs.core.nthnext.call(null, vec__17364, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__17365 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__17365__delegate.call(this, args);
    };
    G__17365.cljs$lang$maxFixedArity = 0;
    G__17365.cljs$lang$applyTo = function(arglist__17366) {
      var args = cljs.core.seq(arglist__17366);
      return G__17365__delegate(args);
    };
    G__17365.cljs$core$IFn$_invoke$arity$variadic = G__17365__delegate;
    return G__17365;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4266__auto__ = function iter__17371(s__17372) {
    return new cljs.core.LazySeq(null, function() {
      var s__17372__$1 = s__17372;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__17372__$1);
        if (temp__4126__auto__) {
          var s__17372__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__17372__$2)) {
            var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17372__$2);
            var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
            var b__17374 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
            if (function() {
              var i__17373 = 0;
              while (true) {
                if (i__17373 < size__4265__auto__) {
                  var args = cljs.core._nth.call(null, c__4264__auto__, i__17373);
                  cljs.core.chunk_append.call(null, b__17374, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", -1682549128, null), args)));
                  var G__17375 = i__17373 + 1;
                  i__17373 = G__17375;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17374), iter__17371.call(null, cljs.core.chunk_rest.call(null, s__17372__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17374), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__17372__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", -1682549128, null), args)), iter__17371.call(null, cljs.core.rest.call(null, s__17372__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4266__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4266__auto__ = function iter__17380(s__17381) {
      return new cljs.core.LazySeq(null, function() {
        var s__17381__$1 = s__17381;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__17381__$1);
          if (temp__4126__auto__) {
            var s__17381__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17381__$2)) {
              var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17381__$2);
              var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
              var b__17383 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
              if (function() {
                var i__17382 = 0;
                while (true) {
                  if (i__17382 < size__4265__auto__) {
                    var style = cljs.core._nth.call(null, c__4264__auto__, i__17382);
                    cljs.core.chunk_append.call(null, b__17383, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "text/css", new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1014017035), "stylesheet"], null)], null));
                    var G__17384 = i__17382 + 1;
                    i__17382 = G__17384;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17383), iter__17380.call(null, cljs.core.chunk_rest.call(null, s__17381__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17383), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__17381__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "text/css", new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1014017035), "stylesheet"], null)], null), iter__17380.call(null, 
              cljs.core.rest.call(null, s__17381__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4266__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__17385) {
    var styles = cljs.core.seq(arglist__17385);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to17386 = function() {
  var link_to17386__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to17386 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to17386__delegate.call(this, url, content);
  };
  link_to17386.cljs$lang$maxFixedArity = 1;
  link_to17386.cljs$lang$applyTo = function(arglist__17387) {
    var url = cljs.core.first(arglist__17387);
    var content = cljs.core.rest(arglist__17387);
    return link_to17386__delegate(url, content);
  };
  link_to17386.cljs$core$IFn$_invoke$arity$variadic = link_to17386__delegate;
  return link_to17386;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to17386);
sablono.core.mail_to17388 = function() {
  var mail_to17388__delegate = function(e_mail, p__17389) {
    var vec__17391 = p__17389;
    var content = cljs.core.nth.call(null, vec__17391, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 1017115293), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3541__auto__ = content;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to17388 = function(e_mail, var_args) {
    var p__17389 = null;
    if (arguments.length > 1) {
      p__17389 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to17388__delegate.call(this, e_mail, p__17389);
  };
  mail_to17388.cljs$lang$maxFixedArity = 1;
  mail_to17388.cljs$lang$applyTo = function(arglist__17392) {
    var e_mail = cljs.core.first(arglist__17392);
    var p__17389 = cljs.core.rest(arglist__17392);
    return mail_to17388__delegate(e_mail, p__17389);
  };
  mail_to17388.cljs$core$IFn$_invoke$arity$variadic = mail_to17388__delegate;
  return mail_to17388;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to17388);
sablono.core.unordered_list17393 = function unordered_list17393(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", 1013907977), function() {
    var iter__4266__auto__ = function iter__17398(s__17399) {
      return new cljs.core.LazySeq(null, function() {
        var s__17399__$1 = s__17399;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__17399__$1);
          if (temp__4126__auto__) {
            var s__17399__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17399__$2)) {
              var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17399__$2);
              var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
              var b__17401 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
              if (function() {
                var i__17400 = 0;
                while (true) {
                  if (i__17400 < size__4265__auto__) {
                    var x = cljs.core._nth.call(null, c__4264__auto__, i__17400);
                    cljs.core.chunk_append.call(null, b__17401, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null));
                    var G__17402 = i__17400 + 1;
                    i__17400 = G__17402;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17401), iter__17398.call(null, cljs.core.chunk_rest.call(null, s__17399__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17401), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__17399__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null), iter__17398.call(null, cljs.core.rest.call(null, s__17399__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4266__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list17393);
sablono.core.ordered_list17403 = function ordered_list17403(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 1013907791), function() {
    var iter__4266__auto__ = function iter__17408(s__17409) {
      return new cljs.core.LazySeq(null, function() {
        var s__17409__$1 = s__17409;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__17409__$1);
          if (temp__4126__auto__) {
            var s__17409__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17409__$2)) {
              var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17409__$2);
              var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
              var b__17411 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
              if (function() {
                var i__17410 = 0;
                while (true) {
                  if (i__17410 < size__4265__auto__) {
                    var x = cljs.core._nth.call(null, c__4264__auto__, i__17410);
                    cljs.core.chunk_append.call(null, b__17411, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null));
                    var G__17412 = i__17410 + 1;
                    i__17410 = G__17412;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17411), iter__17408.call(null, cljs.core.chunk_rest.call(null, s__17409__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17411), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__17409__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null), iter__17408.call(null, cljs.core.rest.call(null, s__17409__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4266__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list17403);
sablono.core.image17413 = function() {
  var image17413 = null;
  var image17413__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", 1014018390), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image17413__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 1014018390), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", 1014000923), alt], null)], null);
  };
  image17413 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image17413__1.call(this, src);
      case 2:
        return image17413__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image17413.cljs$core$IFn$_invoke$arity$1 = image17413__1;
  image17413.cljs$core$IFn$_invoke$arity$2 = image17413__2;
  return image17413;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image17413);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__17414_SHARP_, p2__17415_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__17414_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__17415_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__17416_SHARP_, p2__17417_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__17416_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__17417_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), type, new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 1125876963), 
  value], null)], null);
};
sablono.core.color_field17418 = function() {
  var color_field17418 = null;
  var color_field17418__1 = function(name__10091__auto__) {
    return color_field17418.call(null, name__10091__auto__, null);
  };
  var color_field17418__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1545688804, null)), name__10091__auto__, value__10092__auto__);
  };
  color_field17418 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field17418__1.call(this, name__10091__auto__);
      case 2:
        return color_field17418__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field17418.cljs$core$IFn$_invoke$arity$1 = color_field17418__1;
  color_field17418.cljs$core$IFn$_invoke$arity$2 = color_field17418__2;
  return color_field17418;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field17418);
sablono.core.date_field17419 = function() {
  var date_field17419 = null;
  var date_field17419__1 = function(name__10091__auto__) {
    return date_field17419.call(null, name__10091__auto__, null);
  };
  var date_field17419__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", -1637455513, null)), name__10091__auto__, value__10092__auto__);
  };
  date_field17419 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field17419__1.call(this, name__10091__auto__);
      case 2:
        return date_field17419__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field17419.cljs$core$IFn$_invoke$arity$1 = date_field17419__1;
  date_field17419.cljs$core$IFn$_invoke$arity$2 = date_field17419__2;
  return date_field17419;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field17419);
sablono.core.datetime_field17420 = function() {
  var datetime_field17420 = null;
  var datetime_field17420__1 = function(name__10091__auto__) {
    return datetime_field17420.call(null, name__10091__auto__, null);
  };
  var datetime_field17420__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 153171252, null)), name__10091__auto__, value__10092__auto__);
  };
  datetime_field17420 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field17420__1.call(this, name__10091__auto__);
      case 2:
        return datetime_field17420__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field17420.cljs$core$IFn$_invoke$arity$1 = datetime_field17420__1;
  datetime_field17420.cljs$core$IFn$_invoke$arity$2 = datetime_field17420__2;
  return datetime_field17420;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field17420);
sablono.core.datetime_local_field17421 = function() {
  var datetime_local_field17421 = null;
  var datetime_local_field17421__1 = function(name__10091__auto__) {
    return datetime_local_field17421.call(null, name__10091__auto__, null);
  };
  var datetime_local_field17421__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", 1631019090, null)), name__10091__auto__, value__10092__auto__);
  };
  datetime_local_field17421 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field17421__1.call(this, name__10091__auto__);
      case 2:
        return datetime_local_field17421__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field17421.cljs$core$IFn$_invoke$arity$1 = datetime_local_field17421__1;
  datetime_local_field17421.cljs$core$IFn$_invoke$arity$2 = datetime_local_field17421__2;
  return datetime_local_field17421;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field17421);
sablono.core.email_field17422 = function() {
  var email_field17422 = null;
  var email_field17422__1 = function(name__10091__auto__) {
    return email_field17422.call(null, name__10091__auto__, null);
  };
  var email_field17422__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1543912107, null)), name__10091__auto__, value__10092__auto__);
  };
  email_field17422 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field17422__1.call(this, name__10091__auto__);
      case 2:
        return email_field17422__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field17422.cljs$core$IFn$_invoke$arity$1 = email_field17422__1;
  email_field17422.cljs$core$IFn$_invoke$arity$2 = email_field17422__2;
  return email_field17422;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field17422);
sablono.core.file_field17423 = function() {
  var file_field17423 = null;
  var file_field17423__1 = function(name__10091__auto__) {
    return file_field17423.call(null, name__10091__auto__, null);
  };
  var file_field17423__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", -1637388491, null)), name__10091__auto__, value__10092__auto__);
  };
  file_field17423 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field17423__1.call(this, name__10091__auto__);
      case 2:
        return file_field17423__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field17423.cljs$core$IFn$_invoke$arity$1 = file_field17423__1;
  file_field17423.cljs$core$IFn$_invoke$arity$2 = file_field17423__2;
  return file_field17423;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field17423);
sablono.core.hidden_field17424 = function() {
  var hidden_field17424 = null;
  var hidden_field17424__1 = function(name__10091__auto__) {
    return hidden_field17424.call(null, name__10091__auto__, null);
  };
  var hidden_field17424__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1436948323, null)), name__10091__auto__, value__10092__auto__);
  };
  hidden_field17424 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field17424__1.call(this, name__10091__auto__);
      case 2:
        return hidden_field17424__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field17424.cljs$core$IFn$_invoke$arity$1 = hidden_field17424__1;
  hidden_field17424.cljs$core$IFn$_invoke$arity$2 = hidden_field17424__2;
  return hidden_field17424;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field17424);
sablono.core.month_field17425 = function() {
  var month_field17425 = null;
  var month_field17425__1 = function(name__10091__auto__) {
    return month_field17425.call(null, name__10091__auto__, null);
  };
  var month_field17425__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -1536451527, null)), name__10091__auto__, value__10092__auto__);
  };
  month_field17425 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field17425__1.call(this, name__10091__auto__);
      case 2:
        return month_field17425__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field17425.cljs$core$IFn$_invoke$arity$1 = month_field17425__1;
  month_field17425.cljs$core$IFn$_invoke$arity$2 = month_field17425__2;
  return month_field17425;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field17425);
sablono.core.number_field17426 = function() {
  var number_field17426 = null;
  var number_field17426__1 = function(name__10091__auto__) {
    return number_field17426.call(null, name__10091__auto__, null);
  };
  var number_field17426__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", 1620071682, null)), name__10091__auto__, value__10092__auto__);
  };
  number_field17426 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field17426__1.call(this, name__10091__auto__);
      case 2:
        return number_field17426__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field17426.cljs$core$IFn$_invoke$arity$1 = number_field17426__1;
  number_field17426.cljs$core$IFn$_invoke$arity$2 = number_field17426__2;
  return number_field17426;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field17426);
sablono.core.password_field17427 = function() {
  var password_field17427 = null;
  var password_field17427__1 = function(name__10091__auto__) {
    return password_field17427.call(null, name__10091__auto__, null);
  };
  var password_field17427__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", -423545772, null)), name__10091__auto__, value__10092__auto__);
  };
  password_field17427 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field17427__1.call(this, name__10091__auto__);
      case 2:
        return password_field17427__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field17427.cljs$core$IFn$_invoke$arity$1 = password_field17427__1;
  password_field17427.cljs$core$IFn$_invoke$arity$2 = password_field17427__2;
  return password_field17427;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field17427);
sablono.core.range_field17428 = function() {
  var range_field17428 = null;
  var range_field17428__1 = function(name__10091__auto__) {
    return range_field17428.call(null, name__10091__auto__, null);
  };
  var range_field17428__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1532251402, null)), name__10091__auto__, value__10092__auto__);
  };
  range_field17428 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field17428__1.call(this, name__10091__auto__);
      case 2:
        return range_field17428__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field17428.cljs$core$IFn$_invoke$arity$1 = range_field17428__1;
  range_field17428.cljs$core$IFn$_invoke$arity$2 = range_field17428__2;
  return range_field17428;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field17428);
sablono.core.search_field17429 = function() {
  var search_field17429 = null;
  var search_field17429__1 = function(name__10091__auto__) {
    return search_field17429.call(null, name__10091__auto__, null);
  };
  var search_field17429__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", 1748098913, null)), name__10091__auto__, value__10092__auto__);
  };
  search_field17429 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field17429__1.call(this, name__10091__auto__);
      case 2:
        return search_field17429__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field17429.cljs$core$IFn$_invoke$arity$1 = search_field17429__1;
  search_field17429.cljs$core$IFn$_invoke$arity$2 = search_field17429__2;
  return search_field17429;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field17429);
sablono.core.tel_field17430 = function() {
  var tel_field17430 = null;
  var tel_field17430__1 = function(name__10091__auto__) {
    return tel_field17430.call(null, name__10091__auto__, null);
  };
  var tel_field17430__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", -1640416812, null)), name__10091__auto__, value__10092__auto__);
  };
  tel_field17430 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field17430__1.call(this, name__10091__auto__);
      case 2:
        return tel_field17430__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field17430.cljs$core$IFn$_invoke$arity$1 = tel_field17430__1;
  tel_field17430.cljs$core$IFn$_invoke$arity$2 = tel_field17430__2;
  return tel_field17430;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field17430);
sablono.core.text_field17431 = function() {
  var text_field17431 = null;
  var text_field17431__1 = function(name__10091__auto__) {
    return text_field17431.call(null, name__10091__auto__, null);
  };
  var text_field17431__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -1636974874, null)), name__10091__auto__, value__10092__auto__);
  };
  text_field17431 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field17431__1.call(this, name__10091__auto__);
      case 2:
        return text_field17431__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field17431.cljs$core$IFn$_invoke$arity$1 = text_field17431__1;
  text_field17431.cljs$core$IFn$_invoke$arity$2 = text_field17431__2;
  return text_field17431;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field17431);
sablono.core.time_field17432 = function() {
  var time_field17432 = null;
  var time_field17432__1 = function(name__10091__auto__) {
    return time_field17432.call(null, name__10091__auto__, null);
  };
  var time_field17432__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1636971386, null)), name__10091__auto__, value__10092__auto__);
  };
  time_field17432 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field17432__1.call(this, name__10091__auto__);
      case 2:
        return time_field17432__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field17432.cljs$core$IFn$_invoke$arity$1 = time_field17432__1;
  time_field17432.cljs$core$IFn$_invoke$arity$2 = time_field17432__2;
  return time_field17432;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field17432);
sablono.core.url_field17433 = function() {
  var url_field17433 = null;
  var url_field17433__1 = function(name__10091__auto__) {
    return url_field17433.call(null, name__10091__auto__, null);
  };
  var url_field17433__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", -1640415448, null)), name__10091__auto__, value__10092__auto__);
  };
  url_field17433 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field17433__1.call(this, name__10091__auto__);
      case 2:
        return url_field17433__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field17433.cljs$core$IFn$_invoke$arity$1 = url_field17433__1;
  url_field17433.cljs$core$IFn$_invoke$arity$2 = url_field17433__2;
  return url_field17433;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field17433);
sablono.core.week_field17434 = function() {
  var week_field17434 = null;
  var week_field17434__1 = function(name__10091__auto__) {
    return week_field17434.call(null, name__10091__auto__, null);
  };
  var week_field17434__2 = function(name__10091__auto__, value__10092__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", -1636886099, null)), name__10091__auto__, value__10092__auto__);
  };
  week_field17434 = function(name__10091__auto__, value__10092__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field17434__1.call(this, name__10091__auto__);
      case 2:
        return week_field17434__2.call(this, name__10091__auto__, value__10092__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field17434.cljs$core$IFn$_invoke$arity$1 = week_field17434__1;
  week_field17434.cljs$core$IFn$_invoke$arity$2 = week_field17434__2;
  return week_field17434;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field17434);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box17435 = function() {
  var check_box17435 = null;
  var check_box17435__1 = function(name) {
    return check_box17435.call(null, name, null);
  };
  var check_box17435__2 = function(name, checked_QMARK_) {
    return check_box17435.call(null, name, checked_QMARK_, "true");
  };
  var check_box17435__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), "checkbox", new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    1125876963), value, new cljs.core.Keyword(null, "checked", "checked", 1756218137), checked_QMARK_], null)], null);
  };
  check_box17435 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box17435__1.call(this, name);
      case 2:
        return check_box17435__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box17435__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box17435.cljs$core$IFn$_invoke$arity$1 = check_box17435__1;
  check_box17435.cljs$core$IFn$_invoke$arity$2 = check_box17435__2;
  check_box17435.cljs$core$IFn$_invoke$arity$3 = check_box17435__3;
  return check_box17435;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box17435);
sablono.core.radio_button17436 = function() {
  var radio_button17436 = null;
  var radio_button17436__1 = function(group) {
    return radio_button17436.call(null, group, null);
  };
  var radio_button17436__2 = function(group, checked_QMARK_) {
    return radio_button17436.call(null, group, checked_QMARK_, "true");
  };
  var radio_button17436__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), "radio", new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 1125876963), value, new cljs.core.Keyword(null, "checked", "checked", 1756218137), checked_QMARK_], null)], null);
  };
  radio_button17436 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button17436__1.call(this, group);
      case 2:
        return radio_button17436__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button17436__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button17436.cljs$core$IFn$_invoke$arity$1 = radio_button17436__1;
  radio_button17436.cljs$core$IFn$_invoke$arity$2 = radio_button17436__2;
  radio_button17436.cljs$core$IFn$_invoke$arity$3 = radio_button17436__3;
  return radio_button17436;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button17436);
sablono.core.select_options17437 = function() {
  var select_options17437 = null;
  var select_options17437__1 = function(coll) {
    return select_options17437.call(null, coll, null);
  };
  var select_options17437__2 = function(coll, selected) {
    var iter__4266__auto__ = function iter__17446(s__17447) {
      return new cljs.core.LazySeq(null, function() {
        var s__17447__$1 = s__17447;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__17447__$1);
          if (temp__4126__auto__) {
            var s__17447__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__17447__$2)) {
              var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17447__$2);
              var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
              var b__17449 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
              if (function() {
                var i__17448 = 0;
                while (true) {
                  if (i__17448 < size__4265__auto__) {
                    var x = cljs.core._nth.call(null, c__4264__auto__, i__17448);
                    cljs.core.chunk_append.call(null, b__17449, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__17452 = x;
                      var text = cljs.core.nth.call(null, vec__17452, 0, null);
                      var val = cljs.core.nth.call(null, vec__17452, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__17452, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1116631654), text], null), select_options17437.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), val, new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", 1284845038), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__17454 = i__17448 + 1;
                    i__17448 = G__17454;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17449), iter__17446.call(null, cljs.core.chunk_rest.call(null, s__17447__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17449), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__17447__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__17453 = x;
                var text = cljs.core.nth.call(null, vec__17453, 0, null);
                var val = cljs.core.nth.call(null, vec__17453, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__17453, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1116631654), text], null), select_options17437.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), val, new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", 1284845038), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__17446.call(null, cljs.core.rest.call(null, s__17447__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4266__auto__.call(null, coll);
  };
  select_options17437 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options17437__1.call(this, coll);
      case 2:
        return select_options17437__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options17437.cljs$core$IFn$_invoke$arity$1 = select_options17437__1;
  select_options17437.cljs$core$IFn$_invoke$arity$2 = select_options17437__2;
  return select_options17437;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options17437);
sablono.core.drop_down17455 = function() {
  var drop_down17455 = null;
  var drop_down17455__2 = function(name, options) {
    return drop_down17455.call(null, name, options, null);
  };
  var drop_down17455__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down17455 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down17455__2.call(this, name, options);
      case 3:
        return drop_down17455__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down17455.cljs$core$IFn$_invoke$arity$2 = drop_down17455__2;
  drop_down17455.cljs$core$IFn$_invoke$arity$3 = drop_down17455__3;
  return drop_down17455;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down17455);
sablono.core.text_area17456 = function() {
  var text_area17456 = null;
  var text_area17456__1 = function(name) {
    return text_area17456.call(null, name, null);
  };
  var text_area17456__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 1125876963), value], null)], null);
  };
  text_area17456 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area17456__1.call(this, name);
      case 2:
        return text_area17456__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area17456.cljs$core$IFn$_invoke$arity$1 = text_area17456__1;
  text_area17456.cljs$core$IFn$_invoke$arity$2 = text_area17456__2;
  return text_area17456;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area17456);
sablono.core.label17457 = function label17457(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1116631654), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label17457);
sablono.core.submit_button17458 = function submit_button17458(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "submit", new cljs.core.Keyword(null, "value", "value", 1125876963), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button17458);
sablono.core.reset_button17459 = function reset_button17459(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "reset", new cljs.core.Keyword(null, "value", "value", 1125876963), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button17459);
sablono.core.form_to17460 = function() {
  var form_to17460__delegate = function(p__17461, body) {
    var vec__17463 = p__17461;
    var method = cljs.core.nth.call(null, vec__17463, 0, null);
    var action = cljs.core.nth.call(null, vec__17463, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1014006472), null, new cljs.core.Keyword(null, "post", "post", 1017351186), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 4231316563), method_str, new cljs.core.Keyword(null, "action", "action", 3885920680), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), "POST", new cljs.core.Keyword(null, "action", "action", 3885920680), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to17460 = function(p__17461, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to17460__delegate.call(this, p__17461, body);
  };
  form_to17460.cljs$lang$maxFixedArity = 1;
  form_to17460.cljs$lang$applyTo = function(arglist__17464) {
    var p__17461 = cljs.core.first(arglist__17464);
    var body = cljs.core.rest(arglist__17464);
    return form_to17460__delegate(p__17461, body);
  };
  form_to17460.cljs$core$IFn$_invoke$arity$variadic = form_to17460__delegate;
  return form_to17460;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to17460);
goog.provide("clustermap.components.table");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("cljs.core.async");
clustermap.components.table.order_col = function order_col(comm, collection, view_update_key, title, col) {
  var current_order = (new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(collection);
  var current_order__$1 = cljs.core.sequential_QMARK_.call(null, current_order) ? cljs.core.first.call(null, current_order) : current_order;
  var current_order_key = cljs.core.first.call(null, cljs.core.keys.call(null, current_order__$1));
  var current_order_dir = cljs.core.first.call(null, cljs.core.vals.call(null, current_order__$1));
  return React.DOM.a({"href":"#", "onClick":function(current_order, current_order__$1, current_order_key, current_order_dir) {
    return function(e) {
      e.preventDefault();
      var pred__13000 = cljs.core._EQ_;
      var expr__13001 = current_order_dir;
      if (cljs.core.truth_(pred__13000.call(null, "asc", expr__13001))) {
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "desc", "desc", 1016984067)], true, false)], null)], null));
      } else {
        if (cljs.core.truth_(pred__13000.call(null, "desc", expr__13001))) {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "asc", "asc", 1014001123)], true, false)], null)], null));
        } else {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "desc", "desc", 1016984067)], true, false)], null)], null));
        }
      }
    };
  }(current_order, current_order__$1, current_order_key, current_order_dir)}, sablono.interpreter.interpret.call(null, title), cljs.core._EQ_.call(null, current_order_key, col) ? sablono.interpreter.interpret.call(null, function() {
    var pred__13003 = cljs.core._EQ_;
    var expr__13004 = current_order_dir;
    if (cljs.core.truth_(pred__13003.call(null, "asc", expr__13004))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-asc", "i.icon-asc", 3872166516)], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-desc", "i.icon-desc", 3720765330)], null);
    }
  }()) : null);
};
clustermap.components.table.paginate = function paginate(comm, p__13006, view_update_key) {
  var map__13019 = p__13006;
  var map__13019__$1 = cljs.core.seq_QMARK_.call(null, map__13019) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13019) : map__13019;
  var collection = map__13019__$1;
  var size = cljs.core.get.call(null, map__13019__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var from = cljs.core.get.call(null, map__13019__$1, new cljs.core.Keyword(null, "from", "from", 1017056028));
  var count = cljs.core.get.call(null, map__13019__$1, new cljs.core.Keyword(null, "count", "count", 1108755585));
  var attrs13020 = from > 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 4619949513), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "onClick", "onClick", 3956969051), function(map__13019, 
  map__13019__$1, collection, size, from, count) {
    return function(e) {
      e.preventDefault();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "from", "from", 1017056028), function() {
        var x__3848__auto__ = from - size;
        var y__3849__auto__ = 0;
        return x__3848__auto__ > y__3849__auto__ ? x__3848__auto__ : y__3849__auto__;
      }()], null)], null));
    };
  }(map__13019, map__13019__$1, collection, size, from, count)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-arrow-left", "i.icon-arrow-left", 2307990796)], null)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 4619949513), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "i.icon-arrow-left", "i.icon-arrow-left", 2307990796)], null)], null);
  return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs13020) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["paginate"], null)], null), attrs13020)) : {"className":"paginate"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
  attrs13020) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var attrs13021 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var x__3855__auto__ = from + size;
      var y__3856__auto__ = count;
      return x__3855__auto__ < y__3856__auto__ ? x__3855__auto__ : y__3856__auto__;
    }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(count);
    return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13021) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs13021)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
    attrs13021) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13021)], null)));
  }(), from + size < count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs13020, map__13019, map__13019__$1, collection, size, from, count) {
    return function(e) {
      e.preventDefault();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "from", "from", 1017056028), from + size], null)], null));
    };
  }(attrs13020, map__13019, map__13019__$1, collection, size, from, count)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13020), function() {
    var attrs13022 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var x__3855__auto__ = from + size;
      var y__3856__auto__ = count;
      return x__3855__auto__ < y__3856__auto__ ? x__3855__auto__ : y__3856__auto__;
    }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(count);
    return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs13022) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs13022)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
    attrs13022) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs13022)], null)));
  }(), from + size < count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs13020, map__13019, map__13019__$1, collection, size, from, count) {
    return function(e) {
      e.preventDefault();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "from", "from", 1017056028), from + size], null)], null));
    };
  }(attrs13020, map__13019, map__13019__$1, collection, size, from, count)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null)));
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj17061 = {};
  return obj17061;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.display_name[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.display_name["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj17063 = {};
  return obj17063;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.init_state[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.init_state["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj17065 = {};
  return obj17065;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.should_update[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.should_update["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj17067 = {};
  return obj17067;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_mount[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_mount["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj17069 = {};
  return obj17069;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.did_mount[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.did_mount["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj17071 = {};
  return obj17071;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_unmount[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_unmount["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj17073 = {};
  return obj17073;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_update[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_update["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj17075 = {};
  return obj17075;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.did_update[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.did_update["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj17077 = {};
  return obj17077;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.will_receive_props[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.will_receive_props["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj17079 = {};
  return obj17079;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.render[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.render["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj17081 = {};
  return obj17081;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core.render_state[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core.render_state["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj17083 = {};
  return obj17083;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj17085 = {};
  return obj17085;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj17087 = {};
  return obj17087;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_render_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_render_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._get_render_state[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._get_render_state["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj17089 = {};
  return obj17089;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___2 = function(this$, val) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$2(this$, val);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val);
    }
  };
  var _set_state_BANG___3 = function(this$, ks, val) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, ks, val);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val);
    }
  };
  _set_state_BANG_ = function(this$, ks, val) {
    switch(arguments.length) {
      case 2:
        return _set_state_BANG___2.call(this, this$, ks);
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = _set_state_BANG___2;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj17091 = {};
  return obj17091;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._get_queue[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._get_queue["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj17093 = {};
  return obj17093;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._value[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._value["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj17095 = {};
  return obj17095;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._path[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._path["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._state[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._state["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj17097 = {};
  return obj17097;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3529__auto__ = value;
      if (and__3529__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4168__auto__ = value == null ? null : value;
      return function() {
        var or__3541__auto__ = om.core._to_cursor[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._to_cursor["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3529__auto__ = value;
      if (and__3529__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4168__auto__ = value == null ? null : value;
      return function() {
        var or__3541__auto__ = om.core._to_cursor[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = om.core._to_cursor["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj17099 = {};
  return obj17099;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._derive[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._derive["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj17101 = {};
  return obj17101;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3529__auto__ = cursor;
    if (and__3529__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4168__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3541__auto__ = om.core._transact_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj17103 = {};
  return obj17103;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._listen_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3529__auto__ = x;
    if (and__3529__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4168__auto__ = x == null ? null : x;
    return function() {
      var or__3541__auto__ = om.core._notify_BANG_[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__17105 = state;
    if (G__17105) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17105.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__17105.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__17105);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__17105);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__17107 = x;
  if (G__17107) {
    var bit__4191__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3541__auto__ = bit__4191__auto__;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return G__17107.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__17107.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__17107);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__17107);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_17109 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17109;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__17111 = state;
    G__17111["__om_prev_state"] = state["__om_state"];
    G__17111["__om_state"] = pending_state;
    G__17111["__om_pending_state"] = null;
    return G__17111;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3541__auto__ = props;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3541__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", 4103164189), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 4147620643), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 2122862542), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 3193956709), new cljs.core.Keyword(null, "render", "render", 4374279432), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 2086388618), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 3877103209), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 2087784617), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", 3257856604)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__17112 = c;
    if (G__17112) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17112.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__17112.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__17112);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__17112);
    }
  }()) {
    var state_17139 = this$.state;
    var _STAR_read_enabled_STAR_17113_17140 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3541__auto__ = state_17139["__om_prev_state"];
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return state_17139["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17113_17140;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__17114 = c;
    if (G__17114) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17114.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__17114.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__17114);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__17114);
    }
  }()) {
    var _STAR_read_enabled_STAR_17115 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17115;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__17116 = c;
    if (G__17116) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17116.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__17116.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__17116);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__17116);
    }
  }()) {
    var _STAR_read_enabled_STAR_17117 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17117;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_17118 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__17119 = c;
      if (G__17119) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__17119.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__17119.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__17119);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__17119);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17118;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_17120 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__17121 = c;
      if (G__17121) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__17121.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__17121.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__17121);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__17121);
      }
    }()) {
      var _STAR_parent_STAR_17122 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_17123 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_17124 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_17124;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_17123;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_17122;
      }
    } else {
      if (function() {
        var G__17125 = c;
        if (G__17125) {
          var bit__4191__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3541__auto__ = bit__4191__auto__;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return G__17125.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__17125.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__17125);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__17125);
        }
      }()) {
        var _STAR_parent_STAR_17126 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_17127 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_17128 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_17128;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_17127;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_17126;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17120;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_17141 = om.core.children.call(null, this$);
  if (function() {
    var G__17129 = c_17141;
    if (G__17129) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17129.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__17129.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__17129);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__17129);
    }
  }()) {
    var state_17142 = this$.state;
    var _STAR_read_enabled_STAR_17130_17143 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_17141, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17130_17143;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3541__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)), function() {
    var G__17131 = c;
    if (G__17131) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17131.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__17131.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__17131);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__17131);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_17132 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17132;
    }
  }() : null), "__om_id":function() {
    var or__3541__auto__ = id;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__17133 = c;
    if (G__17133) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17133.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__17133.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__17133);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__17133);
    }
  }()) {
    var _STAR_read_enabled_STAR_17134 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17134;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__17135 = c;
    if (G__17135) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17135.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__17135.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__17135);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__17135);
    }
  }()) {
    var _STAR_read_enabled_STAR_17136 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17136;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_17144 = om.core.children.call(null, this$);
  if (function() {
    var G__17137 = c_17144;
    if (G__17137) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17137.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__17137.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__17137);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__17137);
    }
  }()) {
    var _STAR_read_enabled_STAR_17138_17145 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_17144);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17138_17145;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x17149 = obj;
  x17149.om$core$IGetState$ = true;
  x17149.om$core$IGetState$_get_state$arity$1 = function(x17149) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3541__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x17149);
  x17149.om$core$IGetState$_get_state$arity$2 = function(x17149) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x17149);
  x17149.om$core$IGetRenderState$ = true;
  x17149.om$core$IGetRenderState$_get_render_state$arity$1 = function(x17149) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x17149);
  x17149.om$core$IGetRenderState$_get_render_state$arity$2 = function(x17149) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x17149);
  x17149.om$core$ISetState$ = true;
  x17149.om$core$ISetState$_set_state_BANG_$arity$2 = function(x17149) {
    return function(this$, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_17150 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (app_state == null) {
          return null;
        } else {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17150;
      }
    };
  }(x17149);
  x17149.om$core$ISetState$_set_state_BANG_$arity$3 = function(x17149) {
    return function(this$, ks, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_17151 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (app_state == null) {
          return null;
        } else {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17151;
      }
    };
  }(x17149);
  return x17149;
};
om.core.Pure = React.createClass(om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods)));
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__17153) {
          var vec__17154 = p__17153;
          var k = cljs.core.nth.call(null, vec__17154, 0, null);
          var v = cljs.core.nth.call(null, vec__17154, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__17155 = null;
  var G__17155__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17155__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17155 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17155__2.call(this, self__, k);
      case 3:
        return G__17155__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17155;
}();
om.core.MapCursor.prototype.apply = function(self__, args17152) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17152)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__17157 = null;
  var G__17157__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17157__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17157 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17157__2.call(this, self__, k);
      case 3:
        return G__17157__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17157;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args17156) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17156)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x17159 = cljs.core.clone.call(null, val);
  x17159.cljs$core$IEquiv$ = true;
  x17159.cljs$core$IEquiv$_equiv$arity$2 = function(x17159) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x17159);
  x17159.om$core$ITransact$ = true;
  x17159.om$core$ITransact$_transact_BANG_$arity$4 = function(x17159) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x17159);
  x17159.om$core$ICursor$ = true;
  x17159.om$core$ICursor$_path$arity$1 = function(x17159) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x17159);
  x17159.om$core$ICursor$_state$arity$1 = function(x17159) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x17159);
  x17159.cljs$core$IDeref$ = true;
  x17159.cljs$core$IDeref$_deref$arity$1 = function(x17159) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x17159);
  return x17159;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__17162 = val;
        if (G__17162) {
          var bit__4191__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3541__auto__ = bit__4191__auto__;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return G__17162.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__17162.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__17162);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__17162);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__17163 = val;
              if (G__17163) {
                var bit__4191__auto__ = G__17163.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4191__auto__ || G__17163.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__17163.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__17163);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__17163);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__17168 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__17169 = null;
  var count__17170 = 0;
  var i__17171 = 0;
  while (true) {
    if (i__17171 < count__17170) {
      var f = cljs.core._nth.call(null, chunk__17169, i__17171);
      f.call(null);
      var G__17172 = seq__17168;
      var G__17173 = chunk__17169;
      var G__17174 = count__17170;
      var G__17175 = i__17171 + 1;
      seq__17168 = G__17172;
      chunk__17169 = G__17173;
      count__17170 = G__17174;
      i__17171 = G__17175;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__17168);
      if (temp__4126__auto__) {
        var seq__17168__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17168__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17168__$1);
          var G__17176 = cljs.core.chunk_rest.call(null, seq__17168__$1);
          var G__17177 = c__4297__auto__;
          var G__17178 = cljs.core.count.call(null, c__4297__auto__);
          var G__17179 = 0;
          seq__17168 = G__17176;
          chunk__17169 = G__17177;
          count__17170 = G__17178;
          i__17171 = G__17179;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__17168__$1);
          f.call(null);
          var G__17180 = cljs.core.next.call(null, seq__17168__$1);
          var G__17181 = null;
          var G__17182 = 0;
          var G__17183 = 0;
          seq__17168 = G__17180;
          chunk__17169 = G__17181;
          count__17170 = G__17182;
          i__17171 = G__17183;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword(null, "key", "key", 1014010321), null, new cljs.core.Keyword(null, "init-state", "init-state", 
  4479067398), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, 
      "m", "m", -1640531418, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3541__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3541__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__9428__auto__ = ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_17188 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17188;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__9428__auto__.constructor = goog.getUid(f);
      return pure__9428__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__17189 = m;
        var map__17189__$1 = cljs.core.seq_QMARK_.call(null, map__17189) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17189) : map__17189;
        var opts = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__17189__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
          var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var i = temp__4124__auto__;
            return dataf.call(null, cursor, i);
          } else {
            return dataf.call(null, cursor);
          }
        }() : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3541__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3541__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__9428__auto__ = ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__17189, map__17189__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_17190 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17190;
            }
          };
        }(map__17189, map__17189__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__17189, map__17189__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_17191 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17191;
            }
          };
        }(map__17189, map__17189__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
        pure__9428__auto__.constructor = goog.getUid(f);
        return pure__9428__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_17193 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_17193;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__17202 = state;
    if (G__17202) {
      var bit__4191__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3541__auto__ = bit__4191__auto__;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return G__17202.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__17202.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__17202);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__17202);
    }
  }()) {
  } else {
    var listeners_17210 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_17211 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x17203_17212 = state;
    x17203_17212.om$core$IRenderQueue$ = true;
    x17203_17212.om$core$IRenderQueue$_get_queue$arity$1 = function(x17203_17212, listeners_17210, render_queue_17211) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_17211);
      };
    }(x17203_17212, listeners_17210, render_queue_17211);
    x17203_17212.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x17203_17212, listeners_17210, render_queue_17211) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_17211), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_17211, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x17203_17212, listeners_17210, render_queue_17211);
    x17203_17212.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x17203_17212, listeners_17210, render_queue_17211) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_17211, cljs.core.empty);
      };
    }(x17203_17212, listeners_17210, render_queue_17211);
    x17203_17212.om$core$INotify$ = true;
    x17203_17212.om$core$INotify$_listen_BANG_$arity$3 = function(x17203_17212, listeners_17210, render_queue_17211) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_17210, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x17203_17212, listeners_17210, render_queue_17211);
    x17203_17212.om$core$INotify$_unlisten_BANG_$arity$2 = function(x17203_17212, listeners_17210, render_queue_17211) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_17210, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x17203_17212, listeners_17210, render_queue_17211);
    x17203_17212.om$core$INotify$_notify_BANG_$arity$3 = function(x17203_17212, listeners_17210, render_queue_17211) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        if (tx_listen == null) {
        } else {
          var seq__17204_17213 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_17210));
          var chunk__17205_17214 = null;
          var count__17206_17215 = 0;
          var i__17207_17216 = 0;
          while (true) {
            if (i__17207_17216 < count__17206_17215) {
              var vec__17208_17217 = cljs.core._nth.call(null, chunk__17205_17214, i__17207_17216);
              var __17218 = cljs.core.nth.call(null, vec__17208_17217, 0, null);
              var f_17219 = cljs.core.nth.call(null, vec__17208_17217, 1, null);
              f_17219.call(null, tx_data, root_cursor);
              var G__17220 = seq__17204_17213;
              var G__17221 = chunk__17205_17214;
              var G__17222 = count__17206_17215;
              var G__17223 = i__17207_17216 + 1;
              seq__17204_17213 = G__17220;
              chunk__17205_17214 = G__17221;
              count__17206_17215 = G__17222;
              i__17207_17216 = G__17223;
              continue;
            } else {
              var temp__4126__auto___17224 = cljs.core.seq.call(null, seq__17204_17213);
              if (temp__4126__auto___17224) {
                var seq__17204_17225__$1 = temp__4126__auto___17224;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__17204_17225__$1)) {
                  var c__4297__auto___17226 = cljs.core.chunk_first.call(null, seq__17204_17225__$1);
                  var G__17227 = cljs.core.chunk_rest.call(null, seq__17204_17225__$1);
                  var G__17228 = c__4297__auto___17226;
                  var G__17229 = cljs.core.count.call(null, c__4297__auto___17226);
                  var G__17230 = 0;
                  seq__17204_17213 = G__17227;
                  chunk__17205_17214 = G__17228;
                  count__17206_17215 = G__17229;
                  i__17207_17216 = G__17230;
                  continue;
                } else {
                  var vec__17209_17231 = cljs.core.first.call(null, seq__17204_17225__$1);
                  var __17232 = cljs.core.nth.call(null, vec__17209_17231, 0, null);
                  var f_17233 = cljs.core.nth.call(null, vec__17209_17231, 1, null);
                  f_17233.call(null, tx_data, root_cursor);
                  var G__17234 = cljs.core.next.call(null, seq__17204_17225__$1);
                  var G__17235 = null;
                  var G__17236 = 0;
                  var G__17237 = 0;
                  seq__17204_17213 = G__17234;
                  chunk__17205_17214 = G__17235;
                  count__17206_17215 = G__17236;
                  i__17207_17216 = G__17237;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        }
        return this$__$1;
      };
    }(x17203_17212, listeners_17210, render_queue_17211);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__17238) {
  var map__17253 = p__17238;
  var map__17253__$1 = cljs.core.seq_QMARK_.call(null, map__17253) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17253) : map__17253;
  var options = map__17253__$1;
  var instrument = cljs.core.get.call(null, map__17253__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__17253__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__17253__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var target = cljs.core.get.call(null, map__17253__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null))))));
  }
  var roots_SINGLEQUOTE__17267 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__17267, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__17267, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__17254 = value;
    if (G__17254) {
      var bit__4191__auto__ = G__17254.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4191__auto__ || G__17254.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__17254.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__17254);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__17254);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(watch_key, state, state__$1, m, map__17253, map__17253__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_17261 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_17262 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_17262;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_17261;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__17263_17268 = cljs.core.seq.call(null, queue);
        var chunk__17264_17269 = null;
        var count__17265_17270 = 0;
        var i__17266_17271 = 0;
        while (true) {
          if (i__17266_17271 < count__17265_17270) {
            var c_17272 = cljs.core._nth.call(null, chunk__17264_17269, i__17266_17271);
            if (cljs.core.truth_(c_17272.isMounted())) {
              c_17272.forceUpdate();
            } else {
            }
            var G__17273 = seq__17263_17268;
            var G__17274 = chunk__17264_17269;
            var G__17275 = count__17265_17270;
            var G__17276 = i__17266_17271 + 1;
            seq__17263_17268 = G__17273;
            chunk__17264_17269 = G__17274;
            count__17265_17270 = G__17275;
            i__17266_17271 = G__17276;
            continue;
          } else {
            var temp__4126__auto___17277 = cljs.core.seq.call(null, seq__17263_17268);
            if (temp__4126__auto___17277) {
              var seq__17263_17278__$1 = temp__4126__auto___17277;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__17263_17278__$1)) {
                var c__4297__auto___17279 = cljs.core.chunk_first.call(null, seq__17263_17278__$1);
                var G__17280 = cljs.core.chunk_rest.call(null, seq__17263_17278__$1);
                var G__17281 = c__4297__auto___17279;
                var G__17282 = cljs.core.count.call(null, c__4297__auto___17279);
                var G__17283 = 0;
                seq__17263_17268 = G__17280;
                chunk__17264_17269 = G__17281;
                count__17265_17270 = G__17282;
                i__17266_17271 = G__17283;
                continue;
              } else {
                var c_17284 = cljs.core.first.call(null, seq__17263_17278__$1);
                if (cljs.core.truth_(c_17284.isMounted())) {
                  c_17284.forceUpdate();
                } else {
                }
                var G__17285 = cljs.core.next.call(null, seq__17263_17278__$1);
                var G__17286 = null;
                var G__17287 = 0;
                var G__17288 = 0;
                seq__17263_17268 = G__17285;
                chunk__17264_17269 = G__17286;
                count__17265_17270 = G__17287;
                i__17266_17271 = G__17288;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__17253, map__17253__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__17253, map__17253__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__17253, map__17253__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__17253, map__17253__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__17253, map__17253__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("clustermap.formats.time");
goog.require("cljs.core");
clustermap.formats.time.get_year = function get_year(t) {
  var G__13105 = t;
  var G__13105__$1 = G__13105 == null ? null : new Date(G__13105);
  var G__13105__$2 = G__13105__$1 == null ? null : G__13105__$1.getYear();
  var G__13105__$3 = G__13105__$2 == null ? null : G__13105__$2 + 1900;
  return G__13105__$3;
};
goog.provide("clustermap.formats.money");
goog.require("cljs.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
clustermap.formats.money.money_suffixes = new cljs.core.PersistentArrayMap(null, 5, [0, "", 3, "k", 6, "m", 9, "bn", 12, "tn"], null);
clustermap.formats.money.money_suffix = function money_suffix(exp) {
  var or__3541__auto__ = clustermap.formats.money.money_suffixes.call(null, exp);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return "x10^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(exp);
  }
};
clustermap.formats.money.readable = function() {
  var readable__delegate = function(n, p__13077) {
    var map__13080 = p__13077;
    var map__13080__$1 = cljs.core.seq_QMARK_.call(null, map__13080) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13080) : map__13080;
    var default$ = cljs.core.get.call(null, map__13080__$1, new cljs.core.Keyword(null, "default", "default", 2558708147));
    var plus_QMARK_ = cljs.core.get.call(null, map__13080__$1, new cljs.core.Keyword(null, "plus?", "plus?", 1120672087));
    var curr = cljs.core.get.call(null, map__13080__$1, new cljs.core.Keyword(null, "curr", "curr", 1016969636), "\u00a3");
    var sf = cljs.core.get.call(null, map__13080__$1, new cljs.core.Keyword(null, "sf", "sf", 1013907909));
    if (cljs.core.truth_(n)) {
      var vec__13081 = clustermap.formats.number.eng_notation.call(null, n, new cljs.core.Keyword(null, "sf", "sf", 1013907909), sf);
      var sig = cljs.core.nth.call(null, vec__13081, 0, null);
      var exp = cljs.core.nth.call(null, vec__13081, 1, null);
      var abs_sig = Math.abs(sig);
      var suffix = clustermap.formats.money.money_suffix.call(null, exp);
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
        var and__3529__auto__ = plus_QMARK_;
        if (cljs.core.truth_(and__3529__auto__)) {
          return sig > 0;
        } else {
          return and__3529__auto__;
        }
      }()) ? "+" : sig < 0 ? "-" : null, curr, abs_sig, suffix], null)));
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__13077 = null;
    if (arguments.length > 1) {
      p__13077 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__13077);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__13082) {
    var n = cljs.core.first(arglist__13082);
    var p__13077 = cljs.core.rest(arglist__13082);
    return readable__delegate(n, p__13077);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.money.fmoney = clustermap.formats.money.readable;
goog.provide("clustermap.components.full_report.company_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_list.render_many_links = function render_many_links(link_fn, owner_path, type, objs) {
  var first_obj = cljs.core.first.call(null, objs);
  var next_objs = cljs.core.next.call(null, objs);
  if (next_objs) {
    var attrs12260 = link_fn.call(null, type, first_obj);
    return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs12260) ? sablono.interpreter.attributes.call(null, attrs12260) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12260) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs12260), React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null)));
  } else {
    return link_fn.call(null, type, first_obj);
  }
};
clustermap.components.full_report.company_list.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        if (true) {
          return null;
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.full_report.company_list.portfolio_company = function portfolio_company(company, owner, p__12269) {
  var map__12282 = p__12269;
  var map__12282__$1 = cljs.core.seq_QMARK_.call(null, map__12282) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12282) : map__12282;
  var opts = map__12282__$1;
  var path_fn = cljs.core.get.call(null, map__12282__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var link_fn = cljs.core.get.call(null, map__12282__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), company);
  if (typeof clustermap.components.full_report.company_list.t12283 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t12283 = function(company_path, link_fn, path_fn, opts, map__12282, p__12269, owner, company, portfolio_company, meta12284) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__12282 = map__12282;
      this.p__12269 = p__12269;
      this.owner = owner;
      this.company = company;
      this.portfolio_company = portfolio_company;
      this.meta12284 = meta12284;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t12283.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t12283.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t12283";
    clustermap.components.full_report.company_list.t12283.cljs$lang$ctorPrWriter = function(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report.company-list/t12283");
      };
    }(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t12283.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t12283.prototype.om$core$IRender$render$arity$1 = function(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs12286 = self__.link_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), self__.company);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12286) ? sablono.interpreter.attributes.call(null, attrs12286) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12286) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12286)], null)));
        }(), function() {
          var attrs12287 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), (new cljs.core.Keyword(null, "investor_companies", "investor_companies", 1928918630)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12287) ? sablono.interpreter.attributes.call(null, attrs12287) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12287) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12287)], null)));
        }(), function() {
          var attrs12288 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), function() {
            var G__12293 = self__.company;
            var G__12293__$1 = G__12293 == null ? null : (new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847)).cljs$core$IFn$_invoke$arity$1(G__12293);
            var G__12293__$2 = G__12293__$1 == null ? null : cljs.core.filter.call(null, function(G__12293, G__12293__$1, this__9412__auto____$1, company_path, map__12282, map__12282__$1, opts, path_fn, link_fn) {
              return function(bl) {
                return cljs.core._EQ_.call(null, "uk_constituencies", (new cljs.core.Keyword(null, "collection_id", "collection_id", 4487629262)).cljs$core$IFn$_invoke$arity$1(bl));
              };
            }(G__12293, G__12293__$1, this__9412__auto____$1, company_path, map__12282, map__12282__$1, opts, path_fn, link_fn), G__12293__$1);
            return G__12293__$2;
          }());
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12288) ? sablono.interpreter.attributes.call(null, attrs12288) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12288) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12288)], null)));
        }(), function() {
          var attrs12289 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12289) ? sablono.interpreter.attributes.call(null, attrs12289) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12289) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3541__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12289), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3541__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }(), function() {
          var attrs12290 = clustermap.components.full_report.company_list.pos_neg.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12290) ? sablono.interpreter.attributes.call(null, attrs12290) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12290) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12290)], null)));
        }(), function() {
          var attrs12291 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12291) ? sablono.interpreter.attributes.call(null, attrs12291) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12291) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12291)], null)));
        }(), function() {
          var attrs12292 = clustermap.formats.number.fnum.call(null, (new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 905794408)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12292) ? sablono.interpreter.attributes.call(null, attrs12292) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12292) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3541__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12292), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3541__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }());
      };
    }(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t12283.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn) {
      return function(_12285) {
        var self__ = this;
        var _12285__$1 = this;
        return self__.meta12284;
      };
    }(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t12283.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn) {
      return function(_12285, meta12284__$1) {
        var self__ = this;
        var _12285__$1 = this;
        return new clustermap.components.full_report.company_list.t12283(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__12282, self__.p__12269, self__.owner, self__.company, self__.portfolio_company, meta12284__$1);
      };
    }(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.__GT_t12283 = function(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn) {
      return function __GT_t12283(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__12282__$2, p__12269__$1, owner__$1, company__$1, portfolio_company__$1, meta12284) {
        return new clustermap.components.full_report.company_list.t12283(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__12282__$2, p__12269__$1, owner__$1, company__$1, portfolio_company__$1, meta12284);
      };
    }(company_path, map__12282, map__12282__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_list.t12283(company_path, link_fn, path_fn, opts, map__12282__$1, p__12269, owner, company, portfolio_company, null);
};
clustermap.components.full_report.company_list.company_list = function company_list(companies, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  if (typeof clustermap.components.full_report.company_list.t12314 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t12314 = function(comm, opts, owner, companies, company_list, meta12315) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.companies = companies;
      this.company_list = company_list;
      this.meta12315 = meta12315;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t12314.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t12314.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t12314";
    clustermap.components.full_report.company_list.t12314.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report.company-list/t12314");
      };
    }(comm);
    clustermap.components.full_report.company_list.t12314.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t12314.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        var attrs12317 = clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs12317) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs12317)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs12317) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs12318 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1017277949));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12318) ? sablono.interpreter.attributes.call(null, attrs12318) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12318) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12318)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs12323 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12323) ? sablono.interpreter.attributes.call(null, attrs12323) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12323) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12323)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)))), function() {
          var attrs12324 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 905794408));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12324) ? sablono.interpreter.attributes.call(null, attrs12324) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12324) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12324)], null)));
        }())), function() {
          var attrs12325 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "company_no", "company_no", 4461198389), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs12325) ? sablono.interpreter.attributes.call(null, attrs12325) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12325) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12325)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12317), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, 
        React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs12326 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1017277949));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12326) ? sablono.interpreter.attributes.call(null, attrs12326) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12326) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12326)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs12331 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12331) ? sablono.interpreter.attributes.call(null, attrs12331) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12331) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12331)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)))), function() {
          var attrs12332 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 905794408));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12332) ? sablono.interpreter.attributes.call(null, attrs12332) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12332) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12332)], null)));
        }())), function() {
          var attrs12333 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "company_no", "company_no", 4461198389), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs12333) ? sablono.interpreter.attributes.call(null, attrs12333) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12333) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12333)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_list.t12314.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_12316) {
        var self__ = this;
        var _12316__$1 = this;
        return self__.meta12315;
      };
    }(comm);
    clustermap.components.full_report.company_list.t12314.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_12316, meta12315__$1) {
        var self__ = this;
        var _12316__$1 = this;
        return new clustermap.components.full_report.company_list.t12314(self__.comm, self__.opts, self__.owner, self__.companies, self__.company_list, meta12315__$1);
      };
    }(comm);
    clustermap.components.full_report.company_list.__GT_t12314 = function(comm) {
      return function __GT_t12314(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta12315) {
        return new clustermap.components.full_report.company_list.t12314(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta12315);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_list.t12314(comm, opts, owner, companies, company_list, null);
};
goog.provide("clustermap.components.full_report.company_site_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_site_list.investment = function investment(investment__$1, owner, p__12334) {
  var map__12343 = p__12334;
  var map__12343__$1 = cljs.core.seq_QMARK_.call(null, map__12343) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12343) : map__12343;
  var opts = map__12343__$1;
  var path_fn = cljs.core.get.call(null, map__12343__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var link_fn = cljs.core.get.call(null, map__12343__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), investment__$1);
  if (typeof clustermap.components.full_report.company_site_list.t12344 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t12344 = function(company_path, link_fn, path_fn, opts, map__12343, p__12334, owner, investment, meta12345) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__12343 = map__12343;
      this.p__12334 = p__12334;
      this.owner = owner;
      this.investment = investment;
      this.meta12345 = meta12345;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t12344.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t12344.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t12344";
    clustermap.components.full_report.company_site_list.t12344.cljs$lang$ctorPrWriter = function(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report.company-site-list/t12344");
      };
    }(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t12344.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t12344.prototype.om$core$IRender$render$arity$1 = function(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs12347 = (new cljs.core.Keyword(null, "portfolio_company_name", "portfolio_company_name", 4225526294)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12347) ? sablono.interpreter.attributes.call(null, attrs12347) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12347) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12347)], null)));
        }(), function() {
          var attrs12348 = (new cljs.core.Keyword(null, "portfolio_company_site_postcode", "portfolio_company_site_postcode", 4491774974)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12348) ? sablono.interpreter.attributes.call(null, attrs12348) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12348) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12348)], null)));
        }(), function() {
          var attrs12349 = self__.link_fn.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593), (new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "name", "name", 1017277949), (new cljs.core.Keyword(null, "investor_company_name", 
          "investor_company_name", 4797549766)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12349) ? sablono.interpreter.attributes.call(null, attrs12349) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12349) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12349)], null)));
        }(), function() {
          var attrs12350 = self__.link_fn.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), (new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "compact_name", "compact_name", 1128032665), (new cljs.core.Keyword(null, "boundaryline_compact_name", 
          "boundaryline_compact_name", 3478315290)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs12350) ? sablono.interpreter.attributes.call(null, attrs12350) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12350) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12350)], null)));
        }());
      };
    }(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t12344.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn) {
      return function(_12346) {
        var self__ = this;
        var _12346__$1 = this;
        return self__.meta12345;
      };
    }(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t12344.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn) {
      return function(_12346, meta12345__$1) {
        var self__ = this;
        var _12346__$1 = this;
        return new clustermap.components.full_report.company_site_list.t12344(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__12343, self__.p__12334, self__.owner, self__.investment, meta12345__$1);
      };
    }(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.__GT_t12344 = function(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn) {
      return function __GT_t12344(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__12343__$2, p__12334__$1, owner__$1, investment__$2, meta12345) {
        return new clustermap.components.full_report.company_site_list.t12344(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__12343__$2, p__12334__$1, owner__$1, investment__$2, meta12345);
      };
    }(company_path, map__12343, map__12343__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_site_list.t12344(company_path, link_fn, path_fn, opts, map__12343__$1, p__12334, owner, investment__$1, null);
};
clustermap.components.full_report.company_site_list.company_site_list = function company_site_list(investments, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  if (typeof clustermap.components.full_report.company_site_list.t12365 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t12365 = function(comm, opts, owner, investments, company_site_list, meta12366) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.investments = investments;
      this.company_site_list = company_site_list;
      this.meta12366 = meta12366;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t12365.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t12365.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t12365";
    clustermap.components.full_report.company_site_list.t12365.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report.company-site-list/t12365");
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t12365.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t12365.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        var attrs12368 = clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs12368) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs12368)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs12368) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs12369 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 4778718111));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12369) ? sablono.interpreter.attributes.call(null, attrs12369) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12369) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12369)], null)));
        }(), function() {
          var attrs12370 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 2409284575));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12370) ? sablono.interpreter.attributes.call(null, attrs12370) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12370) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12370)], null)));
        }(), function() {
          var attrs12371 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 4755885871));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12371) ? sablono.interpreter.attributes.call(null, attrs12371) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12371) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12371)], null)));
        }(), function() {
          var attrs12372 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 828306139));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12372) ? sablono.interpreter.attributes.call(null, attrs12372) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12372) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12372)], null)));
        }())), function() {
          var attrs12373 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "investment_uid", "investment_uid", 1858762838), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs12373) ? sablono.interpreter.attributes.call(null, attrs12373) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12373) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12373)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12368), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, 
        React.DOM.tr(null, function() {
          var attrs12374 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 4778718111));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12374) ? sablono.interpreter.attributes.call(null, attrs12374) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12374) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12374)], null)));
        }(), function() {
          var attrs12375 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 2409284575));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12375) ? sablono.interpreter.attributes.call(null, attrs12375) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12375) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12375)], null)));
        }(), function() {
          var attrs12376 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 4755885871));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12376) ? sablono.interpreter.attributes.call(null, attrs12376) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12376) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12376)], null)));
        }(), function() {
          var attrs12377 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 828306139));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs12377) ? sablono.interpreter.attributes.call(null, attrs12377) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12377) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12377)], null)));
        }())), function() {
          var attrs12378 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "investment_uid", "investment_uid", 1858762838), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs12378) ? sablono.interpreter.attributes.call(null, attrs12378) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12378) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12378)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t12365.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_12367) {
        var self__ = this;
        var _12367__$1 = this;
        return self__.meta12366;
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t12365.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_12367, meta12366__$1) {
        var self__ = this;
        var _12367__$1 = this;
        return new clustermap.components.full_report.company_site_list.t12365(self__.comm, self__.opts, self__.owner, self__.investments, self__.company_site_list, meta12366__$1);
      };
    }(comm);
    clustermap.components.full_report.company_site_list.__GT_t12365 = function(comm) {
      return function __GT_t12365(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta12366) {
        return new clustermap.components.full_report.company_site_list.t12365(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta12366);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_site_list.t12365(comm, opts, owner, investments, company_site_list, null);
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", 1014023049);
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", 1014023049));
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_17652 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_17652;
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name)) + '\x3d"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.escape_html.call(null, value)) + '"';
};
hiccups.runtime.render_attribute = function render_attribute(p__17653) {
  var vec__17655 = p__17653;
  var name = cljs.core.nth.call(null, vec__17655, 0, null);
  var value = cljs.core.nth.call(null, vec__17655, 1, null);
  if (value === true) {
    if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name));
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return hiccups.runtime.xml_attribute.call(null, name, value);
      } else {
        return null;
      }
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function normalize_element(p__17656) {
  var vec__17659 = p__17656;
  var tag = cljs.core.nth.call(null, vec__17659, 0, null);
  var content = cljs.core.nthnext.call(null, vec__17659, 1);
  if (!(tag instanceof cljs.core.Keyword || (tag instanceof cljs.core.Symbol || typeof tag === "string"))) {
    throw "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid tag name";
  } else {
  }
  var vec__17660 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__17660, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__17660, 1, null);
  var id = cljs.core.nth.call(null, vec__17660, 2, null);
  var class$ = cljs.core.nth.call(null, vec__17660, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__17662 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__17662, 0, null);
  var attrs = cljs.core.nth.call(null, vec__17662, 1, null);
  var content = cljs.core.nth.call(null, vec__17662, 2, null);
  if (cljs.core.truth_(function() {
    var or__3541__auto__ = content;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, content)) + "\x3c/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "\x3e";
  } else {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.end_tag.call(null));
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return hiccups.runtime.as_str.call(null, x);
      } else {
        return null;
      }
    }
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj17549 = {};
  return obj17549;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3529__auto__ = reader;
    if (and__3529__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4168__auto__ = reader == null ? null : reader;
    return function() {
      var or__3541__auto__ = cljs.reader.read_char[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.reader.read_char["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3529__auto__ = reader;
    if (and__3529__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4168__auto__ = reader == null ? null : reader;
    return function() {
      var or__3541__auto__ = cljs.reader.unread[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.reader.unread["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
  return cljs.core._write.call(null, writer__4109__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3541__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__17550) {
    var rdr = cljs.core.first(arglist__17550);
    var msg = cljs.core.rest(arglist__17550);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3529__auto__ = !(ch === "#");
  if (and__3529__auto__) {
    var and__3529__auto____$1 = !(ch === "'");
    if (and__3529__auto____$1) {
      var and__3529__auto____$2 = !(ch === ":");
      if (and__3529__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3529__auto____$2;
      }
    } else {
      return and__3529__auto____$1;
    }
  } else {
    return and__3529__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__17551 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__17552 = cljs.reader.read_char.call(null, rdr);
      sb = G__17551;
      ch = G__17552;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var zero = groups[2];
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__17553 = cljs.reader.read_char.call(null, rdr);
      ch = G__17553;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__17554 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__17554;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__17555 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__17555;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3541__auto__ = ch == null;
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3541__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__17556 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__17557 = cljs.reader.read_char.call(null, reader);
      buffer = G__17556;
      ch = G__17557;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__17558 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__17559 = cljs.reader.read_char.call(null, reader);
        buffer = G__17558;
        ch = G__17559;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__17560 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__17561 = cljs.reader.read_char.call(null, reader);
            buffer = G__17560;
            ch = G__17561;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__17563 = o;
    if (G__17563) {
      var bit__4191__auto__ = G__17563.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4191__auto__ || G__17563.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__17563.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__17563);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__17563);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__17564 = reader;
        var G__17565 = eof_is_error;
        var G__17566 = sentinel;
        var G__17567 = is_recursive;
        reader = G__17564;
        eof_is_error = G__17565;
        sentinel = G__17566;
        is_recursive = G__17567;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__17568 = cljs.reader.read_comment.call(null, reader, ch);
          var G__17569 = eof_is_error;
          var G__17570 = sentinel;
          var G__17571 = is_recursive;
          reader = G__17568;
          eof_is_error = G__17569;
          sentinel = G__17570;
          is_recursive = G__17571;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__17572 = reader;
              var G__17573 = eof_is_error;
              var G__17574 = sentinel;
              var G__17575 = is_recursive;
              reader = G__17572;
              eof_is_error = G__17573;
              sentinel = G__17574;
              is_recursive = G__17575;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__17576 = b.append("0");
            b = G__17576;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg) + " Failed:  " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(low) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(high));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__17578 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__17578, 0, null);
  var years = cljs.core.nth.call(null, vec__17578, 1, null);
  var months = cljs.core.nth.call(null, vec__17578, 2, null);
  var days = cljs.core.nth.call(null, vec__17578, 3, null);
  var hours = cljs.core.nth.call(null, vec__17578, 4, null);
  var minutes = cljs.core.nth.call(null, vec__17578, 5, null);
  var seconds = cljs.core.nth.call(null, vec__17578, 6, null);
  var fraction = cljs.core.nth.call(null, vec__17578, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__17578, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__17578, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__17578, 10, null);
  var v = vec__17578;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3541__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__17580 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__17580, 0, null);
    var months = cljs.core.nth.call(null, vec__17580, 1, null);
    var days = cljs.core.nth.call(null, vec__17580, 2, null);
    var hours = cljs.core.nth.call(null, vec__17580, 3, null);
    var minutes = cljs.core.nth.call(null, vec__17580, 4, null);
    var seconds = cljs.core.nth.call(null, vec__17580, 5, null);
    var ms = cljs.core.nth.call(null, vec__17580, 6, null);
    var offset = cljs.core.nth.call(null, vec__17580, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__17593_17605 = cljs.core.seq.call(null, form);
    var chunk__17594_17606 = null;
    var count__17595_17607 = 0;
    var i__17596_17608 = 0;
    while (true) {
      if (i__17596_17608 < count__17595_17607) {
        var x_17609 = cljs.core._nth.call(null, chunk__17594_17606, i__17596_17608);
        arr.push(x_17609);
        var G__17610 = seq__17593_17605;
        var G__17611 = chunk__17594_17606;
        var G__17612 = count__17595_17607;
        var G__17613 = i__17596_17608 + 1;
        seq__17593_17605 = G__17610;
        chunk__17594_17606 = G__17611;
        count__17595_17607 = G__17612;
        i__17596_17608 = G__17613;
        continue;
      } else {
        var temp__4126__auto___17614 = cljs.core.seq.call(null, seq__17593_17605);
        if (temp__4126__auto___17614) {
          var seq__17593_17615__$1 = temp__4126__auto___17614;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17593_17615__$1)) {
            var c__4297__auto___17616 = cljs.core.chunk_first.call(null, seq__17593_17615__$1);
            var G__17617 = cljs.core.chunk_rest.call(null, seq__17593_17615__$1);
            var G__17618 = c__4297__auto___17616;
            var G__17619 = cljs.core.count.call(null, c__4297__auto___17616);
            var G__17620 = 0;
            seq__17593_17605 = G__17617;
            chunk__17594_17606 = G__17618;
            count__17595_17607 = G__17619;
            i__17596_17608 = G__17620;
            continue;
          } else {
            var x_17621 = cljs.core.first.call(null, seq__17593_17615__$1);
            arr.push(x_17621);
            var G__17622 = cljs.core.next.call(null, seq__17593_17615__$1);
            var G__17623 = null;
            var G__17624 = 0;
            var G__17625 = 0;
            seq__17593_17605 = G__17622;
            chunk__17594_17606 = G__17623;
            count__17595_17607 = G__17624;
            i__17596_17608 = G__17625;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj17598 = {};
        return obj17598;
      }();
      var seq__17599_17626 = cljs.core.seq.call(null, form);
      var chunk__17600_17627 = null;
      var count__17601_17628 = 0;
      var i__17602_17629 = 0;
      while (true) {
        if (i__17602_17629 < count__17601_17628) {
          var vec__17603_17630 = cljs.core._nth.call(null, chunk__17600_17627, i__17602_17629);
          var k_17631 = cljs.core.nth.call(null, vec__17603_17630, 0, null);
          var v_17632 = cljs.core.nth.call(null, vec__17603_17630, 1, null);
          obj[cljs.core.name.call(null, k_17631)] = v_17632;
          var G__17633 = seq__17599_17626;
          var G__17634 = chunk__17600_17627;
          var G__17635 = count__17601_17628;
          var G__17636 = i__17602_17629 + 1;
          seq__17599_17626 = G__17633;
          chunk__17600_17627 = G__17634;
          count__17601_17628 = G__17635;
          i__17602_17629 = G__17636;
          continue;
        } else {
          var temp__4126__auto___17637 = cljs.core.seq.call(null, seq__17599_17626);
          if (temp__4126__auto___17637) {
            var seq__17599_17638__$1 = temp__4126__auto___17637;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__17599_17638__$1)) {
              var c__4297__auto___17639 = cljs.core.chunk_first.call(null, seq__17599_17638__$1);
              var G__17640 = cljs.core.chunk_rest.call(null, seq__17599_17638__$1);
              var G__17641 = c__4297__auto___17639;
              var G__17642 = cljs.core.count.call(null, c__4297__auto___17639);
              var G__17643 = 0;
              seq__17599_17626 = G__17640;
              chunk__17600_17627 = G__17641;
              count__17601_17628 = G__17642;
              i__17602_17629 = G__17643;
              continue;
            } else {
              var vec__17604_17644 = cljs.core.first.call(null, seq__17599_17638__$1);
              var k_17645 = cljs.core.nth.call(null, vec__17604_17644, 0, null);
              var v_17646 = cljs.core.nth.call(null, vec__17604_17644, 1, null);
              obj[cljs.core.name.call(null, k_17645)] = v_17646;
              var G__17647 = cljs.core.next.call(null, seq__17599_17638__$1);
              var G__17648 = null;
              var G__17649 = 0;
              var G__17650 = 0;
              seq__17599_17626 = G__17647;
              chunk__17600_17627 = G__17648;
              count__17601_17628 = G__17649;
              i__17602_17629 = G__17650;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, "JS literal expects a vector or map containing only string or unqualified keyword keys");
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup;
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    if (cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__4124__auto__ = jayq.core.crate_meta.call(null, sel);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var cm = temp__4124__auto__;
        return "[crateGroup\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cm) + "]";
      } else {
        return sel;
      }
    } else {
      if (sel instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, sel);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return sel;
        } else {
          return null;
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $ = null;
  var $__1 = function(sel) {
    return jQuery(jayq.core.__GT_selector.call(null, sel));
  };
  var $__2 = function(sel, context) {
    return jQuery(jayq.core.__GT_selector.call(null, sel), context);
  };
  $ = function(sel, context) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, sel);
      case 2:
        return $__2.call(this, sel, context);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $;
}();
jQuery.prototype.cljs$core$IFn$ = true;
jQuery.prototype.call = function() {
  var G__17488 = null;
  var G__17488__2 = function(self__, k) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__17488__3 = function(self__, k, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__17488 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17488__2.call(this, self__, k);
      case 3:
        return G__17488__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__17488;
}();
jQuery.prototype.apply = function(self__, args17487) {
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args17487)));
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f);
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f, start);
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var this$__$1 = this;
  var or__3541__auto__ = this$__$1.slice(k, k + 1);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, not_found);
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    if (void 0 === not_found) {
      return null;
    } else {
      return not_found;
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.length;
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.get(0);
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.count.call(null, this$__$1) > 1) {
    return this$__$1.slice(1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.truth_(this$__$1.get(0))) {
    return this$__$1;
  } else {
    return null;
  }
};
jayq.core.anim = function anim($elem, props, dur) {
  return $elem.animate(cljs.core.clj__GT_js.call(null, props), dur);
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text();
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt);
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text;
}();
jayq.core.css = function() {
  var css = null;
  var css__2 = function($elem, opts) {
    return $elem.css(cljs.core.clj__GT_js.call(null, opts));
  };
  var css__3 = function($elem, p, v) {
    return $elem.css(cljs.core.name.call(null, p), v);
  };
  css = function($elem, p, v) {
    switch(arguments.length) {
      case 2:
        return css__2.call(this, $elem, p);
      case 3:
        return css__3.call(this, $elem, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css.cljs$core$IFn$_invoke$arity$2 = css__2;
  css.cljs$core$IFn$_invoke$arity$3 = css__3;
  return css;
}();
jayq.core.attr = function() {
  var attr = null;
  var attr__2 = function($elem, x) {
    return $elem.attr(cljs.core.clj__GT_js.call(null, x));
  };
  var attr__3 = function($elem, n, v) {
    return $elem.attr(cljs.core.name.call(null, n), v);
  };
  attr = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return attr__2.call(this, $elem, n);
      case 3:
        return attr__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr;
}();
jayq.core.prop = function() {
  var prop = null;
  var prop__2 = function($elem, x) {
    return $elem.prop(cljs.core.clj__GT_js.call(null, x));
  };
  var prop__3 = function($elem, n, v) {
    return $elem.prop(cljs.core.name.call(null, n), v);
  };
  prop = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return prop__2.call(this, $elem, n);
      case 3:
        return prop__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prop.cljs$core$IFn$_invoke$arity$2 = prop__2;
  prop.cljs$core$IFn$_invoke$arity$3 = prop__3;
  return prop;
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a));
};
jayq.core.remove_prop = function remove_prop($elem, a) {
  return $elem.removeProp(cljs.core.name.call(null, a));
};
jayq.core.data = function() {
  var data = null;
  var data__1 = function($elem) {
    return $elem.data();
  };
  var data__2 = function($elem, k) {
    return $elem.data(cljs.core.clj__GT_js.call(null, k));
  };
  var data__3 = function($elem, k, v) {
    return $elem.data(cljs.core.name.call(null, k), cljs.core.clj__GT_js.call(null, v));
  };
  data = function($elem, k, v) {
    switch(arguments.length) {
      case 1:
        return data__1.call(this, $elem);
      case 2:
        return data__2.call(this, $elem, k);
      case 3:
        return data__3.call(this, $elem, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$1 = data__1;
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data;
}();
jayq.core.add_class = function add_class($elem, cl) {
  return $elem.addClass(cljs.core.name.call(null, cl));
};
jayq.core.remove_class = function remove_class($elem, cl) {
  return $elem.removeClass(cljs.core.name.call(null, cl));
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  return $elem.toggleClass(cljs.core.name.call(null, cl));
};
jayq.core.has_class = function has_class($elem, cl) {
  return $elem.hasClass(cljs.core.name.call(null, cl));
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector));
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content);
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content);
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content);
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content);
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target));
};
jayq.core.replace_with = function replace_with($elem, content) {
  return $elem.replaceWith(content);
};
jayq.core.remove = function remove($elem) {
  return $elem.remove();
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__17489) {
    var vec__17491 = p__17489;
    var speed = cljs.core.nth.call(null, vec__17491, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17491, 1, null);
    return $elem.hide(speed, on_finish);
  };
  var hide = function($elem, var_args) {
    var p__17489 = null;
    if (arguments.length > 1) {
      p__17489 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hide__delegate.call(this, $elem, p__17489);
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__17492) {
    var $elem = cljs.core.first(arglist__17492);
    var p__17489 = cljs.core.rest(arglist__17492);
    return hide__delegate($elem, p__17489);
  };
  hide.cljs$core$IFn$_invoke$arity$variadic = hide__delegate;
  return hide;
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__17493) {
    var vec__17495 = p__17493;
    var speed = cljs.core.nth.call(null, vec__17495, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17495, 1, null);
    return $elem.show(speed, on_finish);
  };
  var show = function($elem, var_args) {
    var p__17493 = null;
    if (arguments.length > 1) {
      p__17493 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return show__delegate.call(this, $elem, p__17493);
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__17496) {
    var $elem = cljs.core.first(arglist__17496);
    var p__17493 = cljs.core.rest(arglist__17496);
    return show__delegate($elem, p__17493);
  };
  show.cljs$core$IFn$_invoke$arity$variadic = show__delegate;
  return show;
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__17497) {
    var vec__17499 = p__17497;
    var speed = cljs.core.nth.call(null, vec__17499, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17499, 1, null);
    return $elem.toggle(speed, on_finish);
  };
  var toggle = function($elem, var_args) {
    var p__17497 = null;
    if (arguments.length > 1) {
      p__17497 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return toggle__delegate.call(this, $elem, p__17497);
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__17500) {
    var $elem = cljs.core.first(arglist__17500);
    var p__17497 = cljs.core.rest(arglist__17500);
    return toggle__delegate($elem, p__17497);
  };
  toggle.cljs$core$IFn$_invoke$arity$variadic = toggle__delegate;
  return toggle;
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__17501) {
    var vec__17503 = p__17501;
    var speed = cljs.core.nth.call(null, vec__17503, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17503, 1, null);
    return $elem.fadeOut(speed, on_finish);
  };
  var fade_out = function($elem, var_args) {
    var p__17501 = null;
    if (arguments.length > 1) {
      p__17501 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_out__delegate.call(this, $elem, p__17501);
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__17504) {
    var $elem = cljs.core.first(arglist__17504);
    var p__17501 = cljs.core.rest(arglist__17504);
    return fade_out__delegate($elem, p__17501);
  };
  fade_out.cljs$core$IFn$_invoke$arity$variadic = fade_out__delegate;
  return fade_out;
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__17505) {
    var vec__17507 = p__17505;
    var speed = cljs.core.nth.call(null, vec__17507, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17507, 1, null);
    return $elem.fadeIn(speed, on_finish);
  };
  var fade_in = function($elem, var_args) {
    var p__17505 = null;
    if (arguments.length > 1) {
      p__17505 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_in__delegate.call(this, $elem, p__17505);
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__17508) {
    var $elem = cljs.core.first(arglist__17508);
    var p__17505 = cljs.core.rest(arglist__17508);
    return fade_in__delegate($elem, p__17505);
  };
  fade_in.cljs$core$IFn$_invoke$arity$variadic = fade_in__delegate;
  return fade_in;
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__17509) {
    var vec__17511 = p__17509;
    var speed = cljs.core.nth.call(null, vec__17511, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17511, 1, null);
    return $elem.slideUp(speed, on_finish);
  };
  var slide_up = function($elem, var_args) {
    var p__17509 = null;
    if (arguments.length > 1) {
      p__17509 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_up__delegate.call(this, $elem, p__17509);
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__17512) {
    var $elem = cljs.core.first(arglist__17512);
    var p__17509 = cljs.core.rest(arglist__17512);
    return slide_up__delegate($elem, p__17509);
  };
  slide_up.cljs$core$IFn$_invoke$arity$variadic = slide_up__delegate;
  return slide_up;
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__17513) {
    var vec__17515 = p__17513;
    var speed = cljs.core.nth.call(null, vec__17515, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__17515, 1, null);
    return $elem.slideDown(speed, on_finish);
  };
  var slide_down = function($elem, var_args) {
    var p__17513 = null;
    if (arguments.length > 1) {
      p__17513 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_down__delegate.call(this, $elem, p__17513);
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__17516) {
    var $elem = cljs.core.first(arglist__17516);
    var p__17513 = cljs.core.rest(arglist__17516);
    return slide_down__delegate($elem, p__17513);
  };
  slide_down.cljs$core$IFn$_invoke$arity$variadic = slide_down__delegate;
  return slide_down;
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings();
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector));
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  siblings.cljs$core$IFn$_invoke$arity$1 = siblings__1;
  siblings.cljs$core$IFn$_invoke$arity$2 = siblings__2;
  return siblings;
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent();
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents();
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector));
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil();
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents_until.cljs$core$IFn$_invoke$arity$1 = parents_until__1;
  parents_until.cljs$core$IFn$_invoke$arity$2 = parents_until__2;
  parents_until.cljs$core$IFn$_invoke$arity$3 = parents_until__3;
  return parents_until;
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children();
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector));
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  children.cljs$core$IFn$_invoke$arity$1 = children__1;
  children.cljs$core$IFn$_invoke$arity$2 = children__2;
  return children;
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next();
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector));
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next.cljs$core$IFn$_invoke$arity$1 = next__1;
  next.cljs$core$IFn$_invoke$arity$2 = next__2;
  return next;
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev();
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector));
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev.cljs$core$IFn$_invoke$arity$1 = prev__1;
  prev.cljs$core$IFn$_invoke$arity$2 = prev__2;
  return prev;
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll();
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector));
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_all.cljs$core$IFn$_invoke$arity$1 = next_all__1;
  next_all.cljs$core$IFn$_invoke$arity$2 = next_all__2;
  return next_all;
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll();
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector));
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_all.cljs$core$IFn$_invoke$arity$1 = prev_all__1;
  prev_all.cljs$core$IFn$_invoke$arity$2 = prev_all__2;
  return prev_all;
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil();
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_until.cljs$core$IFn$_invoke$arity$1 = next_until__1;
  next_until.cljs$core$IFn$_invoke$arity$2 = next_until__2;
  next_until.cljs$core$IFn$_invoke$arity$3 = next_until__3;
  return next_until;
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil();
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_until.cljs$core$IFn$_invoke$arity$1 = prev_until__1;
  prev_until.cljs$core$IFn$_invoke$arity$2 = prev_until__2;
  prev_until.cljs$core$IFn$_invoke$arity$3 = prev_until__3;
  return prev_until;
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector));
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__17517) {
    var vec__17519 = p__17517;
    var context = cljs.core.nth.call(null, vec__17519, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context);
  };
  var closest = function($elem, selector, var_args) {
    var p__17517 = null;
    if (arguments.length > 2) {
      p__17517 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return closest__delegate.call(this, $elem, selector, p__17517);
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__17520) {
    var $elem = cljs.core.first(arglist__17520);
    arglist__17520 = cljs.core.next(arglist__17520);
    var selector = cljs.core.first(arglist__17520);
    var p__17517 = cljs.core.rest(arglist__17520);
    return closest__delegate($elem, selector, p__17517);
  };
  closest.cljs$core$IFn$_invoke$arity$variadic = closest__delegate;
  return closest;
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone();
};
jayq.core.html = function() {
  var html = null;
  var html__1 = function($elem) {
    return $elem.html();
  };
  var html__2 = function($elem, v) {
    return $elem.html(v);
  };
  html = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return html__1.call(this, $elem);
      case 2:
        return html__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  html.cljs$core$IFn$_invoke$arity$1 = html__1;
  html.cljs$core$IFn$_invoke$arity$2 = html__2;
  return html;
}();
jayq.core.inner = jayq.core.html;
jayq.core.empty = function empty($elem) {
  return $elem.empty();
};
jayq.core.val = function() {
  var val = null;
  var val__1 = function($elem) {
    return $elem.val();
  };
  var val__2 = function($elem, v) {
    return $elem.val(v);
  };
  val = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, $elem);
      case 2:
        return val__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val;
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize();
};
jayq.core.queue = function() {
  var queue = null;
  var queue__1 = function($elem) {
    return $elem.queue();
  };
  var queue__2 = function($elem, x) {
    return $elem.queue(x);
  };
  var queue__3 = function($elem, x, y) {
    return $elem.queue(x, y);
  };
  queue = function($elem, x, y) {
    switch(arguments.length) {
      case 1:
        return queue__1.call(this, $elem);
      case 2:
        return queue__2.call(this, $elem, x);
      case 3:
        return queue__3.call(this, $elem, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  queue.cljs$core$IFn$_invoke$arity$2 = queue__2;
  queue.cljs$core$IFn$_invoke$arity$3 = queue__3;
  return queue;
}();
jayq.core.dequeue = function() {
  var dequeue = null;
  var dequeue__1 = function($elem) {
    return $elem.dequeue();
  };
  var dequeue__2 = function($elem, queue_name) {
    return $elem.dequeue(queue_name);
  };
  dequeue = function($elem, queue_name) {
    switch(arguments.length) {
      case 1:
        return dequeue__1.call(this, $elem);
      case 2:
        return dequeue__2.call(this, $elem, queue_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dequeue.cljs$core$IFn$_invoke$arity$1 = dequeue__1;
  dequeue.cljs$core$IFn$_invoke$arity$2 = dequeue__2;
  return dequeue;
}();
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func);
};
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
};
jQuery.ajaxSetup(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accepts", "accepts", 4131250141), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1014004513), "application/edn, text/edn", new cljs.core.Keyword(null, "clojure", "clojure", 1880188502), "application/clojure, text/clojure"], null), new cljs.core.Keyword(null, "contents", "contents", 4741549708), new cljs.core.PersistentArrayMap(null, 1, ["clojure", 
/edn|clojure/], null), new cljs.core.Keyword(null, "converters", "converters", 3057163845), new cljs.core.PersistentArrayMap(null, 2, ["text edn", jayq.core.mimetype_converter, "text clojure", jayq.core.mimetype_converter], null)], null)));
jayq.core.clj_content_type_QMARK_ = function clj_content_type_QMARK_(x) {
  return cljs.core.re_find.call(null, /^(text|application)\/(clojure|edn)/, x);
};
jayq.core.__GT_content_type = function __GT_content_type(ct) {
  if (typeof ct === "string") {
    return ct;
  } else {
    if (ct instanceof cljs.core.Keyword) {
      return cljs.core.subs.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ct), 1);
    } else {
      return null;
    }
  }
};
jayq.core.preprocess_request = function preprocess_request(p__17523) {
  var map__17525 = p__17523;
  var map__17525__$1 = cljs.core.seq_QMARK_.call(null, map__17525) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17525) : map__17525;
  var request = map__17525__$1;
  var contentType = cljs.core.get.call(null, map__17525__$1, new cljs.core.Keyword(null, "contentType", "contentType", 624772805));
  var data = cljs.core.get.call(null, map__17525__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var ct = jayq.core.__GT_content_type.call(null, contentType);
  return function(ct, map__17525, map__17525__$1, request, contentType, data) {
    return function(p1__17522_SHARP_) {
      if (cljs.core.truth_(jayq.core.clj_content_type_QMARK_.call(null, ct))) {
        return cljs.core.assoc.call(null, p1__17522_SHARP_, new cljs.core.Keyword(null, "data", "data", 1016980252), cljs.core.pr_str.call(null, data));
      } else {
        return p1__17522_SHARP_;
      }
    };
  }(ct, map__17525, map__17525__$1, request, contentType, data).call(null, function(ct, map__17525, map__17525__$1, request, contentType, data) {
    return function(p1__17521_SHARP_) {
      if (cljs.core.truth_(ct)) {
        return cljs.core.assoc.call(null, p1__17521_SHARP_, new cljs.core.Keyword(null, "contentType", "contentType", 624772805), ct);
      } else {
        return p1__17521_SHARP_;
      }
    };
  }(ct, map__17525, map__17525__$1, request, contentType, data).call(null, request));
};
jayq.core.__GT_ajax_settings = function __GT_ajax_settings(request) {
  return cljs.core.clj__GT_js.call(null, jayq.core.preprocess_request.call(null, request));
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.core.__GT_ajax_settings.call(null, settings));
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.core.__GT_ajax_settings.call(null, settings));
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax.cljs$core$IFn$_invoke$arity$1 = ajax__1;
  ajax.cljs$core$IFn$_invoke$arity$2 = ajax__2;
  return ajax;
}();
jayq.core.xhr = function xhr(p__17526, content, callback) {
  var vec__17528 = p__17526;
  var method = cljs.core.nth.call(null, vec__17528, 0, null);
  var uri = cljs.core.nth.call(null, vec__17528, 1, null);
  var params = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), clojure.string.upper_case.call(null, cljs.core.name.call(null, method)), new cljs.core.Keyword(null, "data", "data", 1016980252), cljs.core.clj__GT_js.call(null, content), new cljs.core.Keyword(null, "success", "success", 3441701749), callback], null));
  return jQuery.ajax(uri, params);
};
jayq.core.read = function read($elem) {
  return cljs.reader.read_string.call(null, jayq.core.html.call(null, $elem));
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func);
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__17529) {
    var vec__17531 = p__17529;
    var func = cljs.core.nth.call(null, vec__17531, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func);
  };
  var unbind = function($elem, ev, var_args) {
    var p__17529 = null;
    if (arguments.length > 2) {
      p__17529 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return unbind__delegate.call(this, $elem, ev, p__17529);
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__17532) {
    var $elem = cljs.core.first(arglist__17532);
    arglist__17532 = cljs.core.next(arglist__17532);
    var ev = cljs.core.first(arglist__17532);
    var p__17529 = cljs.core.rest(arglist__17532);
    return unbind__delegate($elem, ev, p__17529);
  };
  unbind.cljs$core$IFn$_invoke$arity$variadic = unbind__delegate;
  return unbind;
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev));
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func);
};
jayq.core.__GT_event = function __GT_event(e) {
  if (cljs.core.coll_QMARK_.call(null, e)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e));
  } else {
    return cljs.core.clj__GT_js.call(null, e);
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__17533) {
    var vec__17535 = p__17533;
    var sel = cljs.core.nth.call(null, vec__17535, 0, null);
    var data = cljs.core.nth.call(null, vec__17535, 1, null);
    var handler = cljs.core.nth.call(null, vec__17535, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var on = function($elem, events, var_args) {
    var p__17533 = null;
    if (arguments.length > 2) {
      p__17533 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return on__delegate.call(this, $elem, events, p__17533);
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__17536) {
    var $elem = cljs.core.first(arglist__17536);
    arglist__17536 = cljs.core.next(arglist__17536);
    var events = cljs.core.first(arglist__17536);
    var p__17533 = cljs.core.rest(arglist__17536);
    return on__delegate($elem, events, p__17533);
  };
  on.cljs$core$IFn$_invoke$arity$variadic = on__delegate;
  return on;
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__17537) {
    var vec__17539 = p__17537;
    var sel = cljs.core.nth.call(null, vec__17539, 0, null);
    var data = cljs.core.nth.call(null, vec__17539, 1, null);
    var handler = cljs.core.nth.call(null, vec__17539, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var one = function($elem, events, var_args) {
    var p__17537 = null;
    if (arguments.length > 2) {
      p__17537 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return one__delegate.call(this, $elem, events, p__17537);
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__17540) {
    var $elem = cljs.core.first(arglist__17540);
    arglist__17540 = cljs.core.next(arglist__17540);
    var events = cljs.core.first(arglist__17540);
    var p__17537 = cljs.core.rest(arglist__17540);
    return one__delegate($elem, events, p__17537);
  };
  one.cljs$core$IFn$_invoke$arity$variadic = one__delegate;
  return one;
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__17541) {
    var vec__17543 = p__17541;
    var sel = cljs.core.nth.call(null, vec__17543, 0, null);
    var handler = cljs.core.nth.call(null, vec__17543, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), handler);
  };
  var off = function($elem, events, var_args) {
    var p__17541 = null;
    if (arguments.length > 2) {
      p__17541 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return off__delegate.call(this, $elem, events, p__17541);
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__17544) {
    var $elem = cljs.core.first(arglist__17544);
    arglist__17544 = cljs.core.next(arglist__17544);
    var events = cljs.core.first(arglist__17544);
    var p__17541 = cljs.core.rest(arglist__17544);
    return off__delegate($elem, events, p__17541);
  };
  off.cljs$core$IFn$_invoke$arity$variadic = off__delegate;
  return off;
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault();
};
jayq.core.height = function() {
  var height = null;
  var height__1 = function($elem) {
    return $elem.height();
  };
  var height__2 = function($elem, x) {
    return $elem.height(x);
  };
  height = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return height__1.call(this, $elem);
      case 2:
        return height__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  height.cljs$core$IFn$_invoke$arity$1 = height__1;
  height.cljs$core$IFn$_invoke$arity$2 = height__2;
  return height;
}();
jayq.core.width = function() {
  var width = null;
  var width__1 = function($elem) {
    return $elem.width();
  };
  var width__2 = function($elem, x) {
    return $elem.width(x);
  };
  width = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return width__1.call(this, $elem);
      case 2:
        return width__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  width.cljs$core$IFn$_invoke$arity$1 = width__1;
  width.cljs$core$IFn$_invoke$arity$2 = width__2;
  return width;
}();
jayq.core.inner_height = function inner_height($elem) {
  return $elem.innerHeight();
};
jayq.core.inner_width = function inner_width($elem) {
  return $elem.innerWidth();
};
jayq.core.outer_height = function outer_height($elem) {
  return $elem.outerHeight();
};
jayq.core.outer_width = function outer_width($elem) {
  return $elem.outerWidth();
};
jayq.core.offset = function() {
  var offset = null;
  var offset__1 = function($elem) {
    return cljs.core.js__GT_clj.call(null, $elem.offset(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
  };
  var offset__2 = function($elem, coords) {
    return cljs.core.clj__GT_js.call(null, coords).offset();
  };
  offset = function($elem, coords) {
    switch(arguments.length) {
      case 1:
        return offset__1.call(this, $elem);
      case 2:
        return offset__2.call(this, $elem, coords);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  offset.cljs$core$IFn$_invoke$arity$1 = offset__1;
  offset.cljs$core$IFn$_invoke$arity$2 = offset__2;
  return offset;
}();
jayq.core.offset_parent = function offset_parent($elem) {
  return $elem.offsetParent();
};
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
};
jayq.core.scroll_left = function() {
  var scroll_left = null;
  var scroll_left__1 = function($elem) {
    return $elem.scrollLeft();
  };
  var scroll_left__2 = function($elem, x) {
    return $elem.scrollLeft(x);
  };
  scroll_left = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_left__1.call(this, $elem);
      case 2:
        return scroll_left__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_left.cljs$core$IFn$_invoke$arity$1 = scroll_left__1;
  scroll_left.cljs$core$IFn$_invoke$arity$2 = scroll_left__2;
  return scroll_left;
}();
jayq.core.scroll_top = function() {
  var scroll_top = null;
  var scroll_top__1 = function($elem) {
    return $elem.scrollTop();
  };
  var scroll_top__2 = function($elem, x) {
    return $elem.scrollTop(x);
  };
  scroll_top = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_top__1.call(this, $elem);
      case 2:
        return scroll_top__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_top.cljs$core$IFn$_invoke$arity$1 = scroll_top__1;
  scroll_top.cljs$core$IFn$_invoke$arity$2 = scroll_top__2;
  return scroll_top;
}();
jayq.core.$deferred = jQuery.Deferred;
jayq.core.$when = jQuery.when;
jayq.core.then = function() {
  var then = null;
  var then__3 = function(deferred, done_fn, fail_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn));
  };
  var then__4 = function(deferred, done_fn, fail_fn, progress_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn), cljs.core.clj__GT_js.call(null, progress_fn));
  };
  then = function(deferred, done_fn, fail_fn, progress_fn) {
    switch(arguments.length) {
      case 3:
        return then__3.call(this, deferred, done_fn, fail_fn);
      case 4:
        return then__4.call(this, deferred, done_fn, fail_fn, progress_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  then.cljs$core$IFn$_invoke$arity$3 = then__3;
  then.cljs$core$IFn$_invoke$arity$4 = then__4;
  return then;
}();
jayq.core.done = function() {
  var done__delegate = function(deferred, fns_args) {
    return deferred.done.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var done = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return done__delegate.call(this, deferred, fns_args);
  };
  done.cljs$lang$maxFixedArity = 1;
  done.cljs$lang$applyTo = function(arglist__17545) {
    var deferred = cljs.core.first(arglist__17545);
    var fns_args = cljs.core.rest(arglist__17545);
    return done__delegate(deferred, fns_args);
  };
  done.cljs$core$IFn$_invoke$arity$variadic = done__delegate;
  return done;
}();
jayq.core.fail = function() {
  var fail__delegate = function(deferred, fns_args) {
    return deferred.fail.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var fail = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fail__delegate.call(this, deferred, fns_args);
  };
  fail.cljs$lang$maxFixedArity = 1;
  fail.cljs$lang$applyTo = function(arglist__17546) {
    var deferred = cljs.core.first(arglist__17546);
    var fns_args = cljs.core.rest(arglist__17546);
    return fail__delegate(deferred, fns_args);
  };
  fail.cljs$core$IFn$_invoke$arity$variadic = fail__delegate;
  return fail;
}();
jayq.core.progress = function progress(deferred, fns_args) {
  return deferred.progress(cljs.core.clj__GT_js.call(null, fns_args));
};
jayq.core.promise = function() {
  var promise = null;
  var promise__1 = function(deferred) {
    return deferred.promise();
  };
  var promise__2 = function(deferred, type) {
    return deferred.promise(type);
  };
  var promise__3 = function(deferred, type, target) {
    return deferred.promise(type, target);
  };
  promise = function(deferred, type, target) {
    switch(arguments.length) {
      case 1:
        return promise__1.call(this, deferred);
      case 2:
        return promise__2.call(this, deferred, type);
      case 3:
        return promise__3.call(this, deferred, type, target);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  promise.cljs$core$IFn$_invoke$arity$1 = promise__1;
  promise.cljs$core$IFn$_invoke$arity$2 = promise__2;
  promise.cljs$core$IFn$_invoke$arity$3 = promise__3;
  return promise;
}();
jayq.core.always = function() {
  var always__delegate = function(deferred, fns_args) {
    return deferred.always.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var always = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return always__delegate.call(this, deferred, fns_args);
  };
  always.cljs$lang$maxFixedArity = 1;
  always.cljs$lang$applyTo = function(arglist__17547) {
    var deferred = cljs.core.first(arglist__17547);
    var fns_args = cljs.core.rest(arglist__17547);
    return always__delegate(deferred, fns_args);
  };
  always.cljs$core$IFn$_invoke$arity$variadic = always__delegate;
  return always;
}();
jayq.core.reject = function reject(deferred, args) {
  return deferred.reject(args);
};
jayq.core.reject_with = function reject_with(deferred, context, args) {
  return deferred.rejectWith(context, args);
};
jayq.core.notify = function notify(deferred, args) {
  return deferred.notify(args);
};
jayq.core.notify_with = function notify_with(deferred, context, args) {
  return deferred.notifyWith(context, args);
};
jayq.core.resolve = function resolve(deferred, args) {
  return deferred.resolve(args);
};
jayq.core.resolve_with = function resolve_with(deferred, context, args) {
  return deferred.resolveWith(context, args);
};
jayq.core.pipe = function() {
  var pipe = null;
  var pipe__2 = function(deferred, done_filter) {
    return deferred.pipe(done_filter);
  };
  var pipe__3 = function(deferred, done_filter, fail_filter) {
    return deferred.pipe(done_filter, fail_filter);
  };
  var pipe__4 = function(deferred, done_filter, fail_filter, progress_filter) {
    return deferred.pipe(done_filter, fail_filter, progress_filter);
  };
  pipe = function(deferred, done_filter, fail_filter, progress_filter) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, deferred, done_filter);
      case 3:
        return pipe__3.call(this, deferred, done_filter, fail_filter);
      case 4:
        return pipe__4.call(this, deferred, done_filter, fail_filter, progress_filter);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  pipe.cljs$core$IFn$_invoke$arity$4 = pipe__4;
  return pipe;
}();
jayq.core.state = function state(deferred) {
  return cljs.core.keyword.call(null, deferred.state());
};
jayq.core.deferred_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", 4374474914), jayq.core.$when, new cljs.core.Keyword(null, "bind", "bind", 1016928175), function(x, f) {
  var dfd = jayq.core.$deferred.call(null);
  jayq.core.done.call(null, x, function(dfd) {
    return function(v) {
      return jayq.core.done.call(null, f.call(null, v), cljs.core.partial.call(null, jayq.core.resolve, dfd));
    };
  }(dfd));
  return jayq.core.promise.call(null, dfd);
}, new cljs.core.Keyword(null, "zero", "zero", 1017639450), cljs.core.identity], null);
jayq.core.ajax_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", 4374474914), cljs.core.identity, new cljs.core.Keyword(null, "bind", "bind", 1016928175), function(x, f) {
  return jayq.core.done.call(null, jayq.core.ajax.call(null, x), f);
}, new cljs.core.Keyword(null, "zero", "zero", 1017639450), cljs.core.identity], null);
goog.provide("clustermap.components.timeline_chart");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.formats.number");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("om.dom");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("jayq.core");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
goog.require("hiccups.runtime");
clustermap.components.timeline_chart.create_chart = function create_chart(data, node, p__13037) {
  var map__13039 = p__13037;
  var map__13039__$1 = cljs.core.seq_QMARK_.call(null, map__13039) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13039) : map__13039;
  var opts = map__13039__$1;
  var y1_title = cljs.core.get.call(null, map__13039__$1, new cljs.core.Keyword(null, "y1-title", "y1-title", 3377247893));
  var y0_title = cljs.core.get.call(null, map__13039__$1, new cljs.core.Keyword(null, "y0-title", "y0-title", 2489744212));
  var x_labels = cljs.core.map.call(null, new cljs.core.Keyword(null, "date", "date", 1016980256), data);
  var stats = cljs.core.map.call(null, new cljs.core.Keyword(null, "stats", "stats", 1123661841), data);
  var y_median = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function(p1__13031_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__13031_SHARP_, 0);
    };
  }(x_labels, stats, map__13039, map__13039__$1, opts, y1_title, y0_title), function(x_labels, stats, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function(p1__13032_SHARP_) {
      return cljs.core.get_in.call(null, p1__13032_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", 1123661841), new cljs.core.Keyword(null, "median", "median", 4230840444)], null));
    };
  }(x_labels, stats, map__13039, map__13039__$1, opts, y1_title, y0_title)), data);
  var y_mean = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function(p1__13033_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__13033_SHARP_, 0);
    };
  }(x_labels, stats, y_median, map__13039, map__13039__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function(p1__13034_SHARP_) {
      return cljs.core.get_in.call(null, p1__13034_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", 1123661841), new cljs.core.Keyword(null, "mean", "mean", 1017251639)], null));
    };
  }(x_labels, stats, y_median, map__13039, map__13039__$1, opts, y1_title, y0_title)), data);
  var y_total = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, y_mean, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function(p1__13035_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__13035_SHARP_, 0);
    };
  }(x_labels, stats, y_median, y_mean, map__13039, map__13039__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, y_mean, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function(p1__13036_SHARP_) {
      return cljs.core.get_in.call(null, p1__13036_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", 1123661841), new cljs.core.Keyword(null, "total", "total", 1124454070)], null));
    };
  }(x_labels, stats, y_median, y_mean, map__13039, map__13039__$1, opts, y1_title, y0_title)), data);
  return jayq.core.$.call(null, node).highcharts(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "chart", "chart", 1108527952), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", 1127031096), null, new cljs.core.Keyword(null, "height", "height", 4087841945), 300], null), new cljs.core.Keyword(null, "title", "title", 1124275658), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", 
  "text", 1017460895), null], null), new cljs.core.Keyword(null, "xAxis", "xAxis", 1126781867), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "categories", "categories", 2310420878), x_labels, new cljs.core.Keyword(null, "labels", "labels", 4198454129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rotation", "rotation", 973603568), 270], null)], null), new cljs.core.Keyword(null, "yAxis", "yAxis", 1127705388), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 1124275658), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", 1017460895), y0_title], null), new cljs.core.Keyword(null, "min", "min", 1014012356), 0, new cljs.core.Keyword(null, "labels", "labels", 4198454129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "formatter", "formatter", 2825495612), function(x_labels, 
  stats, y_median, y_mean, y_total, map__13039, map__13039__$1, opts, y1_title, y0_title) {
    return function() {
      var this$ = this;
      return clustermap.formats.money.readable.call(null, this$.value, new cljs.core.Keyword(null, "curr", "curr", 1016969636), "");
    };
  }(x_labels, stats, y_median, y_mean, y_total, map__13039, map__13039__$1, opts, y1_title, y0_title)], null)], null)], null), new cljs.core.Keyword(null, "series", "series", 4403032553), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(y0_title), new cljs.core.Keyword(null, "type", "type", 1017479852), "line", 
  new cljs.core.Keyword(null, "yAxis", "yAxis", 1127705388), 0, new cljs.core.Keyword(null, "data", "data", 1016980252), y_total], null)], null)], null)));
};
clustermap.components.timeline_chart.timeline_chart = function timeline_chart(data, owner, p__13040) {
  var map__13045 = p__13040;
  var map__13045__$1 = cljs.core.seq_QMARK_.call(null, map__13045) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13045) : map__13045;
  var opts = map__13045__$1;
  var id = cljs.core.get.call(null, map__13045__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  if (typeof clustermap.components.timeline_chart.t13046 !== "undefined") {
  } else {
    clustermap.components.timeline_chart.t13046 = function(id, opts, map__13045, p__13040, owner, data, timeline_chart, meta13047) {
      this.id = id;
      this.opts = opts;
      this.map__13045 = map__13045;
      this.p__13040 = p__13040;
      this.owner = owner;
      this.data = data;
      this.timeline_chart = timeline_chart;
      this.meta13047 = meta13047;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.timeline_chart.t13046.cljs$lang$type = true;
    clustermap.components.timeline_chart.t13046.cljs$lang$ctorStr = "clustermap.components.timeline-chart/t13046";
    clustermap.components.timeline_chart.t13046.cljs$lang$ctorPrWriter = function(map__13045, map__13045__$1, opts, id) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.timeline-chart/t13046");
      };
    }(map__13045, map__13045__$1, opts, id);
    clustermap.components.timeline_chart.t13046.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.timeline_chart.t13046.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__13045, map__13045__$1, opts, id) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        return clustermap.components.timeline_chart.create_chart.call(null, self__.data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
      };
    }(map__13045, map__13045__$1, opts, id);
    clustermap.components.timeline_chart.t13046.prototype.om$core$IDidMount$ = true;
    clustermap.components.timeline_chart.t13046.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__13045, map__13045__$1, opts, id) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        clustermap.components.timeline_chart.create_chart.call(null, self__.data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
        return jayq.core.$.call(null, document).on("clustermap-change-view", function(node, this$__$1, map__13045, map__13045__$1, opts, id) {
          return function(e) {
            var chart = jayq.core.$.call(null, om.core.get_node.call(null, self__.owner, "chart"));
            if (cljs.core.truth_(chart.is(":visible"))) {
              return chart.highcharts().reflow();
            } else {
              return null;
            }
          };
        }(node, this$__$1, map__13045, map__13045__$1, opts, id));
      };
    }(map__13045, map__13045__$1, opts, id);
    clustermap.components.timeline_chart.t13046.prototype.om$core$IRender$ = true;
    clustermap.components.timeline_chart.t13046.prototype.om$core$IRender$render$arity$1 = function(map__13045, map__13045__$1, opts, id) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"timeline-chart", "id":self__.id, "ref":"chart"});
      };
    }(map__13045, map__13045__$1, opts, id);
    clustermap.components.timeline_chart.t13046.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__13045, map__13045__$1, opts, id) {
      return function(_13048) {
        var self__ = this;
        var _13048__$1 = this;
        return self__.meta13047;
      };
    }(map__13045, map__13045__$1, opts, id);
    clustermap.components.timeline_chart.t13046.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__13045, map__13045__$1, opts, id) {
      return function(_13048, meta13047__$1) {
        var self__ = this;
        var _13048__$1 = this;
        return new clustermap.components.timeline_chart.t13046(self__.id, self__.opts, self__.map__13045, self__.p__13040, self__.owner, self__.data, self__.timeline_chart, meta13047__$1);
      };
    }(map__13045, map__13045__$1, opts, id);
    clustermap.components.timeline_chart.__GT_t13046 = function(map__13045, map__13045__$1, opts, id) {
      return function __GT_t13046(id__$1, opts__$1, map__13045__$2, p__13040__$1, owner__$1, data__$1, timeline_chart__$1, meta13047) {
        return new clustermap.components.timeline_chart.t13046(id__$1, opts__$1, map__13045__$2, p__13040__$1, owner__$1, data__$1, timeline_chart__$1, meta13047);
      };
    }(map__13045, map__13045__$1, opts, id);
  }
  return new clustermap.components.timeline_chart.t13046(id, opts, map__13045__$1, p__13040, owner, data, timeline_chart, null);
};
goog.provide("clustermap.components.full_report.charts");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.components.timeline_chart");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.timeline_chart");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.full_report.charts.charts = function charts(data, owner) {
  if (typeof clustermap.components.full_report.charts.t12255 !== "undefined") {
  } else {
    clustermap.components.full_report.charts.t12255 = function(owner, data, charts, meta12256) {
      this.owner = owner;
      this.data = data;
      this.charts = charts;
      this.meta12256 = meta12256;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.charts.t12255.cljs$lang$type = true;
    clustermap.components.full_report.charts.t12255.cljs$lang$ctorStr = "clustermap.components.full-report.charts/t12255";
    clustermap.components.full_report.charts.t12255.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
      return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report.charts/t12255");
    };
    clustermap.components.full_report.charts.t12255.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.charts.t12255.prototype.om$core$IRender$render$arity$1 = function(this__9412__auto__) {
      var self__ = this;
      var this__9412__auto____$1 = this;
      var attrs12258 = function() {
        var temp__4124__auto__ = (new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 1845704779)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var timelines = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.grid", "div.grid", 1323787765), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 2686480467), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell.charts", "div.tbl-cell.charts", 2527561447), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 2686480467), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-row", "div.tbl-row", 1065043552), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell", "div.tbl-cell", 2598766144), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Keyword(null, "div.box.box-first", "div.box.box-first", 2223624352), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "header", "header", 4087600639), "Revenue"], null)], null)), om.core.build.call(null, clustermap.components.timeline_chart.timeline_chart, (new cljs.core.Keyword(null, 
          "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(timelines), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), "turnover-timeline-chart", new cljs.core.Keyword(null, "y0-title", "y0-title", 2489744212), "Revenue", new cljs.core.Keyword(null, "y1-title", "y1-title", 3377247893), "# Filings"], null), new cljs.core.Keyword(null, 
          "react-key", "react-key", 4184082563), "turnover-timeline-chart"], null))], null)], null)], null)], null)], null)], null)], null);
        } else {
          return null;
        }
      }();
      return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs12258) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-charts"], null)], null), attrs12258)) : {"className":"full-report-charts"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
      cljs.core.map_QMARK_.call(null, attrs12258) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12258)], null)));
    };
    clustermap.components.full_report.charts.t12255.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12257) {
      var self__ = this;
      var _12257__$1 = this;
      return self__.meta12256;
    };
    clustermap.components.full_report.charts.t12255.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12257, meta12256__$1) {
      var self__ = this;
      var _12257__$1 = this;
      return new clustermap.components.full_report.charts.t12255(self__.owner, self__.data, self__.charts, meta12256__$1);
    };
    clustermap.components.full_report.charts.__GT_t12255 = function __GT_t12255(owner__$1, data__$1, charts__$1, meta12256) {
      return new clustermap.components.full_report.charts.t12255(owner__$1, data__$1, charts__$1, meta12256);
    };
  }
  return new clustermap.components.full_report.charts.t12255(owner, data, charts, null);
};
goog.provide("clustermap.components.full_report.overview");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
clustermap.components.full_report.overview.describe_selection = function describe_selection(p__12379) {
  var map__12384 = p__12379;
  var map__12384__$1 = cljs.core.seq_QMARK_.call(null, map__12384) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12384) : map__12384;
  var value = cljs.core.get.call(null, map__12384__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  var type = cljs.core.get.call(null, map__12384__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var pred__12385 = cljs.core._EQ_;
  var expr__12386 = type;
  if (cljs.core.truth_(pred__12385.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__12386))) {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
    1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
  } else {
    if (cljs.core.truth_(pred__12385.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__12386))) {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals for the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "name", "name", 1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
    } else {
      if (cljs.core.truth_(pred__12385.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__12386))) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals for the selected Constituency"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over the Portfolio Companies with sites in the selected Constituency"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
      } else {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals over all Portfolio Companies"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all Portfolio Companies"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
      }
    }
  }
};
clustermap.components.full_report.overview.overview_data = function overview_data(p__12388) {
  var map__12414 = p__12388;
  var map__12414__$1 = cljs.core.seq_QMARK_.call(null, map__12414) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12414) : map__12414;
  var selection_investment_stats = cljs.core.get.call(null, map__12414__$1, new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", 4568560312));
  var selection = cljs.core.get.call(null, map__12414__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  var all_investment_stats = cljs.core.get.call(null, map__12414__$1, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 2486056771));
  var sel_descrs = clustermap.components.full_report.overview.describe_selection.call(null, selection);
  var site_stats = function() {
    var or__3541__auto__ = selection_investment_stats;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return all_investment_stats;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "selection", "selection", 3592905982)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066), new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190), new cljs.core.Keyword(null, "turnover", "turnover", 
  1148922435), new cljs.core.Keyword(null, "investor-companies", "investor-companies", 3164659288), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1087385677), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 
  2180417185)], [clustermap.formats.number.fnum.call(null, function() {
    var G__12415 = site_stats;
    var G__12415__$1 = G__12415 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12415);
    var G__12415__$2 = G__12415__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12415__$1);
    return G__12415__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__12416 = site_stats;
    var G__12416__$1 = G__12416 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 621528264)).cljs$core$IFn$_invoke$arity$1(G__12416);
    return G__12416__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__12417 = site_stats;
    var G__12417__$1 = G__12417 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12417);
    var G__12417__$2 = G__12417__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12417__$1);
    return G__12417__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__12418 = site_stats;
    var G__12418__$1 = G__12418 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", 2333064920)).cljs$core$IFn$_invoke$arity$1(G__12418);
    return G__12418__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__12419 = site_stats;
    var G__12419__$1 = G__12419 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__12419);
    var G__12419__$2 = G__12419__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12419__$1);
    return G__12419__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__12420 = site_stats;
    var G__12420__$1 = G__12420 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__12420);
    var G__12420__$2 = G__12420__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12420__$1);
    return G__12420__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__12421 = site_stats;
    var G__12421__$1 = G__12421 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 1780206472)).cljs$core$IFn$_invoke$arity$1(G__12421);
    return G__12421__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__12422 = site_stats;
    var G__12422__$1 = G__12422 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__12422);
    var G__12422__$2 = G__12422__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12422__$1);
    return G__12422__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__12423 = site_stats;
    var G__12423__$1 = G__12423 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__12423);
    var G__12423__$2 = G__12423__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12423__$1);
    return G__12423__$2;
  }()])), new cljs.core.Keyword(null, "averages", "averages", 2913851752), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "averages", "averages", 2913851752)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066), new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190), new cljs.core.Keyword(null, "turnover", "turnover", 1148922435), new cljs.core.Keyword(null, "investor-companies", 
  "investor-companies", 3164659288), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1087385677), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 2180417185)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__12424 = site_stats;
    var G__12424__$1 = G__12424 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12424);
    var G__12424__$2 = G__12424__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12424__$1);
    return G__12424__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__12425 = site_stats;
    var G__12425__$1 = G__12425 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12425);
    var G__12425__$2 = G__12425__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12425__$1);
    return G__12425__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), "\u00a0", clustermap.formats.number.fnum.call(null, function() {
    var G__12426 = site_stats;
    var G__12426__$1 = G__12426 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__12426);
    var G__12426__$2 = G__12426__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12426__$1);
    return G__12426__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__12427 = site_stats;
    var G__12427__$1 = G__12427 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__12427);
    var G__12427__$2 = G__12427__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12427__$1);
    return G__12427__$2;
  }(), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__12428 = site_stats;
    var G__12428__$1 = G__12428 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__12428);
    var G__12428__$2 = G__12428__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12428__$1);
    return G__12428__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__12429 = site_stats;
    var G__12429__$1 = G__12429 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__12429);
    var G__12429__$2 = G__12429__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12429__$1);
    return G__12429__$2;
  }()])), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066), new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190), new cljs.core.Keyword(null, "turnover", "turnover", 1148922435), new cljs.core.Keyword(null, 
  "investor-companies", "investor-companies", 3164659288), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1087385677), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 2180417185)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__12430 = all_investment_stats;
    var G__12430__$1 = G__12430 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12430);
    var G__12430__$2 = G__12430__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12430__$1);
    return G__12430__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__12431 = all_investment_stats;
    var G__12431__$1 = G__12431 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 621528264)).cljs$core$IFn$_invoke$arity$1(G__12431);
    return G__12431__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__12432 = all_investment_stats;
    var G__12432__$1 = G__12432 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12432);
    var G__12432__$2 = G__12432__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12432__$1);
    return G__12432__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__12433 = all_investment_stats;
    var G__12433__$1 = G__12433 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", 2333064920)).cljs$core$IFn$_invoke$arity$1(G__12433);
    return G__12433__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__12434 = all_investment_stats;
    var G__12434__$1 = G__12434 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__12434);
    var G__12434__$2 = G__12434__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12434__$1);
    return G__12434__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__12435 = all_investment_stats;
    var G__12435__$1 = G__12435 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__12435);
    var G__12435__$2 = G__12435__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12435__$1);
    return G__12435__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__12436 = all_investment_stats;
    var G__12436__$1 = G__12436 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 1780206472)).cljs$core$IFn$_invoke$arity$1(G__12436);
    return G__12436__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__12437 = all_investment_stats;
    var G__12437__$1 = G__12437 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__12437);
    var G__12437__$2 = G__12437__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12437__$1);
    return G__12437__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__12438 = all_investment_stats;
    var G__12438__$1 = G__12438 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__12438);
    var G__12438__$2 = G__12438__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__12438__$1);
    return G__12438__$2;
  }()]))], null);
};
clustermap.components.full_report.overview.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        if (true) {
          return null;
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.full_report.overview.overview = function overview(data) {
  var map__12462 = clustermap.components.full_report.overview.overview_data.call(null, data);
  var map__12462__$1 = cljs.core.seq_QMARK_.call(null, map__12462) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12462) : map__12462;
  var benchmark = cljs.core.get.call(null, map__12462__$1, new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015));
  var averages = cljs.core.get.call(null, map__12462__$1, new cljs.core.Keyword(null, "averages", "averages", 2913851752));
  var selection = cljs.core.get.call(null, map__12462__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  if (typeof clustermap.components.full_report.overview.t12463 !== "undefined") {
  } else {
    clustermap.components.full_report.overview.t12463 = function(selection, averages, benchmark, map__12462, data, overview, meta12464) {
      this.selection = selection;
      this.averages = averages;
      this.benchmark = benchmark;
      this.map__12462 = map__12462;
      this.data = data;
      this.overview = overview;
      this.meta12464 = meta12464;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.overview.t12463.cljs$lang$type = true;
    clustermap.components.full_report.overview.t12463.cljs$lang$ctorStr = "clustermap.components.full-report.overview/t12463";
    clustermap.components.full_report.overview.t12463.cljs$lang$ctorPrWriter = function(map__12462, map__12462__$1, benchmark, averages, selection) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report.overview/t12463");
      };
    }(map__12462, map__12462__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t12463.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.overview.t12463.prototype.om$core$IRender$render$arity$1 = function(map__12462, map__12462__$1, benchmark, averages, selection) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.div({"className":"full-report-overview"}, React.DOM.h4(null, "Overview of latest filings", React.DOM.small(null, "\u00a0(may span years : see table below for details)")), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table-stats"}, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "\u00a0"), React.DOM.th(null, "Investor-backed companies"), React.DOM.th(null, "Investors"), React.DOM.th(null, "Constituencies"), React.DOM.th(null, "Revenue"), 
        React.DOM.th({"colSpan":"2"}, "Rev. change"), React.DOM.th(null, "Employees"))), React.DOM.tbody(null, React.DOM.tr(null, React.DOM.th(null, React.DOM.i({"className":"icon-info", "data-toggle":"tooltip", "data-container":"body", "title":self__.selection.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486))}), sablono.interpreter.interpret.call(null, self__.selection.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949)))), React.DOM.td(null, function() {
          var attrs12470 = (new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12470) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12470)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12470) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12470)], null)));
        }()), React.DOM.td(null, function() {
          var attrs12471 = (new cljs.core.Keyword(null, "investor-companies", "investor-companies", 3164659288)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12471) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12471)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12471) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12471)], null)));
        }()), React.DOM.td(null, function() {
          var attrs12472 = (new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12472) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12472)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12472) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12472)], null)));
        }()), React.DOM.td(null, function() {
          var attrs12473 = (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12473) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12473)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12473) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12473)], null)));
        }()), React.DOM.td(null, function() {
          var attrs12474 = clustermap.components.full_report.overview.pos_neg.call(null, (new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922)).cljs$core$IFn$_invoke$arity$1(self__.selection));
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12474) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12474)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12474) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12474)], null)));
        }()), React.DOM.td(null, function() {
          var attrs12475 = (new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12475) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12475)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12475) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12475)], null)));
        }()), React.DOM.td(null, function() {
          var attrs12476 = (new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs12476) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs12476)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs12476) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12476)], null)));
        }()))))));
      };
    }(map__12462, map__12462__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t12463.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12462, map__12462__$1, benchmark, averages, selection) {
      return function(_12465) {
        var self__ = this;
        var _12465__$1 = this;
        return self__.meta12464;
      };
    }(map__12462, map__12462__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t12463.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12462, map__12462__$1, benchmark, averages, selection) {
      return function(_12465, meta12464__$1) {
        var self__ = this;
        var _12465__$1 = this;
        return new clustermap.components.full_report.overview.t12463(self__.selection, self__.averages, self__.benchmark, self__.map__12462, self__.data, self__.overview, meta12464__$1);
      };
    }(map__12462, map__12462__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.__GT_t12463 = function(map__12462, map__12462__$1, benchmark, averages, selection) {
      return function __GT_t12463(selection__$1, averages__$1, benchmark__$1, map__12462__$2, data__$1, overview__$1, meta12464) {
        return new clustermap.components.full_report.overview.t12463(selection__$1, averages__$1, benchmark__$1, map__12462__$2, data__$1, overview__$1, meta12464);
      };
    }(map__12462, map__12462__$1, benchmark, averages, selection);
  }
  return new clustermap.components.full_report.overview.t12463(selection, averages, benchmark, map__12462__$1, data, overview, null);
};
goog.provide("clustermap.components.full_report");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.company_list");
goog.require("clustermap.components.full_report.charts");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.charts");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.overview");
goog.require("clustermap.components.full_report.overview");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("clustermap.components.full_report.company_list");
clustermap.components.full_report.single_company_selection_QMARK_ = function single_company_selection_QMARK_(selector) {
  return cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, selector)) && cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), function() {
    var G__12480 = selector;
    var G__12480__$1 = G__12480 == null ? null : cljs.core.keys.call(null, G__12480);
    var G__12480__$2 = G__12480__$1 == null ? null : cljs.core.first.call(null, G__12480__$1);
    return G__12480__$2;
  }());
};
clustermap.components.full_report.full_report_component = function full_report_component(p__12481, owner) {
  var map__12488 = p__12481;
  var map__12488__$1 = cljs.core.seq_QMARK_.call(null, map__12488) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12488) : map__12488;
  var data = map__12488__$1;
  var all_portfolio_companies_summary = cljs.core.get.call(null, map__12488__$1, new cljs.core.Keyword(null, "all-portfolio-companies-summary", "all-portfolio-companies-summary", 3049476533));
  var selection = cljs.core.get.call(null, map__12488__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  var selector = cljs.core.get.call(null, map__12488__$1, new cljs.core.Keyword(null, "selector", "selector", 2205476689));
  var map__12489 = om.core.get_shared.call(null, owner);
  var map__12489__$1 = cljs.core.seq_QMARK_.call(null, map__12489) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12489) : map__12489;
  var link_fn = cljs.core.get.call(null, map__12489__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
  var path_fn = cljs.core.get.call(null, map__12489__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__12489__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", 1116886791));
  var link_fn__$1 = cljs.core.partial.call(null, link_fn, new cljs.core.Keyword(null, "lists", "lists", 1116886791));
  if (typeof clustermap.components.full_report.t12490 !== "undefined") {
  } else {
    clustermap.components.full_report.t12490 = function(selection, p__12481, owner, path_fn, data, map__12489, selector, link_fn, full_report_component, comm, all_portfolio_companies_summary, map__12488, meta12491) {
      this.selection = selection;
      this.p__12481 = p__12481;
      this.owner = owner;
      this.path_fn = path_fn;
      this.data = data;
      this.map__12489 = map__12489;
      this.selector = selector;
      this.link_fn = link_fn;
      this.full_report_component = full_report_component;
      this.comm = comm;
      this.all_portfolio_companies_summary = all_portfolio_companies_summary;
      this.map__12488 = map__12488;
      this.meta12491 = meta12491;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.t12490.cljs$lang$type = true;
    clustermap.components.full_report.t12490.cljs$lang$ctorStr = "clustermap.components.full-report/t12490";
    clustermap.components.full_report.t12490.cljs$lang$ctorPrWriter = function(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.full-report/t12490");
      };
    }(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t12490.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.full_report.t12490.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).data("bs.tooltip", false);
        return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).tooltip();
      };
    }(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t12490.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.t12490.prototype.om$core$IRender$render$arity$1 = function(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var attrs12493 = om.core.build.call(null, clustermap.components.full_report.overview.overview, self__.data, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "overview"], null));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs12493) ? sablono.interpreter.attributes.call(null, attrs12493) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12493) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments-by-company"], null)) : null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12493), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments-by-company"], null)) : null)], null)));
      };
    }(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t12490.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_12492) {
        var self__ = this;
        var _12492__$1 = this;
        return self__.meta12491;
      };
    }(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t12490.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_12492, meta12491__$1) {
        var self__ = this;
        var _12492__$1 = this;
        return new clustermap.components.full_report.t12490(self__.selection, self__.p__12481, self__.owner, self__.path_fn, self__.data, self__.map__12489, self__.selector, self__.link_fn, self__.full_report_component, self__.comm, self__.all_portfolio_companies_summary, self__.map__12488, meta12491__$1);
      };
    }(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.__GT_t12490 = function(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function __GT_t12490(selection__$1, p__12481__$1, owner__$1, path_fn__$2, data__$1, map__12489__$2, selector__$1, link_fn__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, map__12488__$2, meta12491) {
        return new clustermap.components.full_report.t12490(selection__$1, p__12481__$1, owner__$1, path_fn__$2, data__$1, map__12489__$2, selector__$1, link_fn__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, map__12488__$2, meta12491);
      };
    }(map__12489, map__12489__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__12488, map__12488__$1, data, all_portfolio_companies_summary, selection, selector);
  }
  return new clustermap.components.full_report.t12490(selection, p__12481, owner, path_fn__$1, data, map__12489__$1, selector, link_fn__$1, full_report_component, comm, all_portfolio_companies_summary, map__12488__$1, null);
};
clustermap.components.full_report.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.full_report.full_report_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id), new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared], null));
};
goog.provide("clustermap.ganalytics");
goog.require("cljs.core");
clustermap.ganalytics.send_pageview = function send_pageview(path) {
  var ua_code = function() {
    var G__13107 = window;
    var G__13107__$1 = G__13107 == null ? null : G__13107.config;
    var G__13107__$2 = G__13107__$1 == null ? null : G__13107__$1.ua;
    var G__13107__$3 = G__13107__$2 == null ? null : G__13107__$2.code;
    return G__13107__$3;
  }();
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = window.ga;
    if (cljs.core.truth_(and__3529__auto__)) {
      return ua_code;
    } else {
      return and__3529__auto__;
    }
  }())) {
    return ga("send", "pageview", path);
  } else {
    return null;
  }
};
goog.provide("clustermap.om");
goog.require("cljs.core");
clustermap.om.burrow = function burrow(component_fn, korks) {
  var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return function(use_korks) {
    return function() {
      var G__13175__delegate = function(args) {
        return cljs.core.apply.call(null, component_fn, cljs.core.get_in.call(null, cljs.core.first.call(null, args), use_korks), cljs.core.rest.call(null, args));
      };
      var G__13175 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__13175__delegate.call(this, args);
      };
      G__13175.cljs$lang$maxFixedArity = 0;
      G__13175.cljs$lang$applyTo = function(arglist__13176) {
        var args = cljs.core.seq(arglist__13176);
        return G__13175__delegate(args);
      };
      G__13175.cljs$core$IFn$_invoke$arity$variadic = G__13175__delegate;
      return G__13175;
    }();
  }(use_korks);
};
goog.provide("clustermap.model");
goog.require("cljs.core");
clustermap.model.extract_id = function extract_id(type, obj) {
  var pred__13111 = cljs.core._EQ_;
  var expr__13112 = type;
  if (cljs.core.truth_(pred__13111.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__13112))) {
    return(new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)).cljs$core$IFn$_invoke$arity$1(obj);
  } else {
    if (cljs.core.truth_(pred__13111.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__13112))) {
      return(new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)).cljs$core$IFn$_invoke$arity$1(obj);
    } else {
      if (cljs.core.truth_(pred__13111.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__13112))) {
        return(new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)).cljs$core$IFn$_invoke$arity$1(obj);
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13112));
      }
    }
  }
};
goog.provide("clustermap.routes");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("sablono.core");
goog.require("sablono.core");
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.Keyword(null, "compact_name", "compact_name", 1128032665)], 
null);
clustermap.routes.name_for = function name_for(type, obj) {
  return cljs.core.get.call(null, obj, cljs.core.get.call(null, clustermap.routes.type_name_keys, type));
};
clustermap.routes.portfolio_company_path = function portfolio_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/portfolio-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.investor_company_path = function investor_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/investor-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.constituency_path = function constituency_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/constituency/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.no_selection_path = function no_selection_path(view_id, _) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id));
};
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), clustermap.routes.portfolio_company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), clustermap.routes.investor_company_path, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), clustermap.routes.constituency_path, null, clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = function path_for(view_id, type, obj) {
  return cljs.core.apply.call(null, cljs.core.get.call(null, clustermap.routes.type_paths, type), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_id, obj], null));
};
clustermap.routes.link_for = function link_for(view_id, type, obj) {
  return React.DOM.a({"href":clustermap.routes.path_for.call(null, view_id, type, obj)}, sablono.interpreter.interpret.call(null, clustermap.routes.name_for.call(null, type, obj)));
};
clustermap.routes.path_for_view = function path_for_view(current_route_fn, view_id) {
  var r = current_route_fn.call(null);
  var comps = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["#", cljs.core.name.call(null, view_id), (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(r), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(r)], null);
  return clojure.string.join.call(null, "/", cljs.core.filter.call(null, cljs.core.identity, comps));
};
goog.provide("clustermap.components.search");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
clustermap.components.search.ESCAPE_KEY = 27;
clustermap.components.search.ENTER_KEY = 13;
clustermap.components.search.LEFT_ARROW = 37;
clustermap.components.search.UP_ARROW = 38;
clustermap.components.search.RIGHT_ARROW = 39;
clustermap.components.search.DOWN_ARROW = 40;
clustermap.components.search.search_result_link = function search_result_link(p__12892, owner, p__12893) {
  var map__12902 = p__12892;
  var map__12902__$1 = cljs.core.seq_QMARK_.call(null, map__12902) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12902) : map__12902;
  var search_result = map__12902__$1;
  var type = cljs.core.get.call(null, map__12902__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var name = cljs.core.get.call(null, map__12902__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
  var map__12903 = p__12893;
  var map__12903__$1 = cljs.core.seq_QMARK_.call(null, map__12903) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12903) : map__12903;
  var opts = map__12903__$1;
  var path_fn = cljs.core.get.call(null, map__12903__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__12903__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  if (typeof clustermap.components.search.t12904 !== "undefined") {
  } else {
    clustermap.components.search.t12904 = function(owner, path_fn, search_result_link, name, map__12902, comm, search_result, p__12892, type, map__12903, opts, p__12893, meta12905) {
      this.owner = owner;
      this.path_fn = path_fn;
      this.search_result_link = search_result_link;
      this.name = name;
      this.map__12902 = map__12902;
      this.comm = comm;
      this.search_result = search_result;
      this.p__12892 = p__12892;
      this.type = type;
      this.map__12903 = map__12903;
      this.opts = opts;
      this.p__12893 = p__12893;
      this.meta12905 = meta12905;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t12904.cljs$lang$type = true;
    clustermap.components.search.t12904.cljs$lang$ctorStr = "clustermap.components.search/t12904";
    clustermap.components.search.t12904.cljs$lang$ctorPrWriter = function(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.search/t12904");
      };
    }(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm);
    clustermap.components.search.t12904.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t12904.prototype.om$core$IRenderState$render_state$arity$2 = function(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm) {
      return function(this$, p__12907) {
        var self__ = this;
        var map__12908 = p__12907;
        var map__12908__$1 = cljs.core.seq_QMARK_.call(null, map__12908) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12908) : map__12908;
        var state = map__12908__$1;
        var selected = cljs.core.get.call(null, map__12908__$1, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
        var this$__$1 = this;
        var path = self__.path_fn.call(null, self__.type, self__.search_result);
        return React.DOM.li({"className":cljs.core.truth_(selected) ? "selected" : null}, React.DOM.a({"href":path, "ref":"link", "onClick":function(path, this$__$1, map__12908, map__12908__$1, state, selected, map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm) {
          return function(e) {
            var l = om.core.get_node.call(null, self__.owner, "link");
            var G__12909 = l;
            var G__12909__$1 = G__12909 == null ? null : jayq.core.$.call(null, G__12909);
            var G__12909__$2 = G__12909__$1 == null ? null : G__12909__$1.parents(".search-component");
            var G__12909__$3 = G__12909__$2 == null ? null : G__12909__$2.toggle();
            return G__12909__$3;
          };
        }(path, this$__$1, map__12908, map__12908__$1, state, selected, map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm)}, sablono.interpreter.interpret.call(null, self__.name)));
      };
    }(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm);
    clustermap.components.search.t12904.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm) {
      return function(_12906) {
        var self__ = this;
        var _12906__$1 = this;
        return self__.meta12905;
      };
    }(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm);
    clustermap.components.search.t12904.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm) {
      return function(_12906, meta12905__$1) {
        var self__ = this;
        var _12906__$1 = this;
        return new clustermap.components.search.t12904(self__.owner, self__.path_fn, self__.search_result_link, self__.name, self__.map__12902, self__.comm, self__.search_result, self__.p__12892, self__.type, self__.map__12903, self__.opts, self__.p__12893, meta12905__$1);
      };
    }(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm);
    clustermap.components.search.__GT_t12904 = function(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm) {
      return function __GT_t12904(owner__$1, path_fn__$1, search_result_link__$1, name__$1, map__12902__$2, comm__$1, search_result__$1, p__12892__$1, type__$1, map__12903__$2, opts__$1, p__12893__$1, meta12905) {
        return new clustermap.components.search.t12904(owner__$1, path_fn__$1, search_result_link__$1, name__$1, map__12902__$2, comm__$1, search_result__$1, p__12892__$1, type__$1, map__12903__$2, opts__$1, p__12893__$1, meta12905);
      };
    }(map__12902, map__12902__$1, search_result, type, name, map__12903, map__12903__$1, opts, path_fn, comm);
  }
  return new clustermap.components.search.t12904(owner, path_fn, search_result_link, name, map__12902__$1, comm, search_result, p__12892, type, map__12903__$1, opts, p__12893, null);
};
clustermap.components.search.nth_search_result = function nth_search_result(p__12910, n) {
  var map__12912 = p__12910;
  var map__12912__$1 = cljs.core.seq_QMARK_.call(null, map__12912) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12912) : map__12912;
  var investor_companies = cljs.core.get.call(null, map__12912__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 1928918630));
  var portfolio_companies = cljs.core.get.call(null, map__12912__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 4192656150));
  var constituencies = cljs.core.get.call(null, map__12912__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190));
  var cons = function() {
    var or__3541__auto__ = constituencies;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var pcs = function() {
    var or__3541__auto__ = portfolio_companies;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var invs = function() {
    var or__3541__auto__ = investor_companies;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  if (n < cljs.core.count.call(null, cons)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), cljs.core.get.call(null, constituencies, n)], null);
  } else {
    if (n < cljs.core.count.call(null, cons) + cljs.core.count.call(null, pcs)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), cljs.core.get.call(null, pcs, n - cljs.core.count.call(null, cons))], null);
    } else {
      if (true) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), cljs.core.get.call(null, invs, n - cljs.core.count.call(null, cons) - cljs.core.count.call(null, pcs))], null);
      } else {
        return null;
      }
    }
  }
};
clustermap.components.search.key_down = function key_down(e, search_results, owner, comm) {
  var pred__12919 = cljs.core._EQ__EQ_;
  var expr__12920 = e.keyCode;
  if (cljs.core.truth_(pred__12919.call(null, clustermap.components.search.ESCAPE_KEY, expr__12920))) {
    var G__12922 = om.core.get_node.call(null, owner, "search-component");
    var G__12922__$1 = G__12922 == null ? null : jayq.core.$.call(null, G__12922);
    var G__12922__$2 = G__12922__$1 == null ? null : G__12922__$1.toggle();
    return G__12922__$2;
  } else {
    if (cljs.core.truth_(pred__12919.call(null, clustermap.components.search.ENTER_KEY, expr__12920))) {
      var vec__12923 = clustermap.components.search.nth_search_result.call(null, cljs.core.deref.call(null, search_results), function() {
        var or__3541__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109));
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return 0;
        }
      }());
      var type = cljs.core.nth.call(null, vec__12923, 0, null);
      var res = cljs.core.nth.call(null, vec__12923, 1, null);
      var G__12924_12925 = om.core.get_node.call(null, owner, "search-component");
      var G__12924_12926__$1 = G__12924_12925 == null ? null : jayq.core.$.call(null, G__12924_12925);
      var G__12924_12927__$2 = G__12924_12926__$1 == null ? null : G__12924_12926__$1.toggle();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, clustermap.model.extract_id.call(null, type, res)], null)], null));
    } else {
      if (cljs.core.truth_(pred__12919.call(null, clustermap.components.search.UP_ARROW, expr__12920))) {
        return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109), function() {
          var or__3541__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109));
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return 0;
          }
        }() - 1);
      } else {
        if (cljs.core.truth_(pred__12919.call(null, clustermap.components.search.DOWN_ARROW, expr__12920))) {
          return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109), function() {
            var or__3541__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109));
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return 0;
            }
          }() + 1);
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.search.search_component = function search_component(p__12928, owner) {
  var map__12960 = p__12928;
  var map__12960__$1 = cljs.core.seq_QMARK_.call(null, map__12960) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12960) : map__12960;
  var map__12961 = cljs.core.get.call(null, map__12960__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  var map__12961__$1 = cljs.core.seq_QMARK_.call(null, map__12961) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12961) : map__12961;
  var selection_type = cljs.core.get.call(null, map__12961__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var selection_value = cljs.core.get.call(null, map__12961__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  var view = cljs.core.get.call(null, map__12960__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  var search_results = cljs.core.get.call(null, map__12960__$1, new cljs.core.Keyword(null, "search-results", "search-results", 1025331267));
  var map__12962 = om.core.get_shared.call(null, owner);
  var map__12962__$1 = cljs.core.seq_QMARK_.call(null, map__12962) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12962) : map__12962;
  var path_fn = cljs.core.get.call(null, map__12962__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__12962__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, view);
  var map__12963 = search_results;
  var map__12963__$1 = cljs.core.seq_QMARK_.call(null, map__12963) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12963) : map__12963;
  var investor_companies = cljs.core.get.call(null, map__12963__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 1928918630));
  var portfolio_companies = cljs.core.get.call(null, map__12963__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 4192656150));
  var constituencies = cljs.core.get.call(null, map__12963__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190));
  if (typeof clustermap.components.search.t12964 !== "undefined") {
  } else {
    clustermap.components.search.t12964 = function(search_results, search_component, owner, path_fn, view, portfolio_companies, constituencies, map__12960, investor_companies, map__12961, selection_value, comm, p__12928, map__12963, selection_type, map__12962, meta12965) {
      this.search_results = search_results;
      this.search_component = search_component;
      this.owner = owner;
      this.path_fn = path_fn;
      this.view = view;
      this.portfolio_companies = portfolio_companies;
      this.constituencies = constituencies;
      this.map__12960 = map__12960;
      this.investor_companies = investor_companies;
      this.map__12961 = map__12961;
      this.selection_value = selection_value;
      this.comm = comm;
      this.p__12928 = p__12928;
      this.map__12963 = map__12963;
      this.selection_type = selection_type;
      this.map__12962 = map__12962;
      this.meta12965 = meta12965;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t12964.cljs$lang$type = true;
    clustermap.components.search.t12964.cljs$lang$ctorStr = "clustermap.components.search/t12964";
    clustermap.components.search.t12964.cljs$lang$ctorPrWriter = function(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.search/t12964");
      };
    }(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t12964.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t12964.prototype.om$core$IRenderState$render_state$arity$2 = function(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
      return function(this$, state) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"ref":"search-component", "className":"search-component", "id":"search", "onKeyDown":function(this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return clustermap.components.search.key_down.call(null, e, self__.search_results, self__.owner, self__.comm);
          };
        }(this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results)}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-cell", "style":{"width":"100%"}}, sablono.interpreter.input.call(null, {"ref":"search-field", "type":"text", "placeholder":"Search", "onChange":function(this$__$1, 
        map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 4402534682), e.target.value], null));
          };
        }(this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results)})), React.DOM.div({"className":"tbl-cell", "style":{"width":"34"}}, React.DOM.button({"type":"reset", "onClick":function(this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, 
        portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 4402534682), ""], null));
            return om.core.get_node.call(null, self__.owner, "search-field").value = "";
          };
        }(this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results)}, "\u00d7"))), sablono.interpreter.interpret.call(null, cljs.core.truth_(function() {
          var or__3541__auto__ = cljs.core.not_empty.call(null, self__.constituencies);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            var or__3541__auto____$1 = cljs.core.not_empty.call(null, self__.portfolio_companies);
            if (cljs.core.truth_(or__3541__auto____$1)) {
              return or__3541__auto____$1;
            } else {
              return cljs.core.not_empty.call(null, self__.investor_companies);
            }
          }
        }()) ? function() {
          var idx_cons = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, 0), self__.constituencies);
          var idx_pcs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons)), self__.portfolio_companies);
          var idx_invs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs)), self__.investor_companies);
          var selected_idx = cljs.core.mod.call(null, function() {
            var or__3541__auto__ = (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109)).cljs$core$IFn$_invoke$arity$1(state);
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return 0;
            }
          }(), cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs) + cljs.core.count.call(null, idx_invs));
          var _ = cljs.core.not_EQ_.call(null, selected_idx, (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109)).cljs$core$IFn$_invoke$arity$1(state)) ? om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109), selected_idx) : null;
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results"], null), new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", 1013907977), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 
          1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results-header"], null), "Constituencies"], null) : null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? function() {
            var iter__4266__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
              return function iter__12967(s__12968) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__12968__$1 = s__12968;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__12968__$1);
                      if (temp__4126__auto__) {
                        var s__12968__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__12968__$2)) {
                          var c__4264__auto__ = cljs.core.chunk_first.call(null, s__12968__$2);
                          var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
                          var b__12970 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
                          if (function() {
                            var i__12969 = 0;
                            while (true) {
                              if (i__12969 < size__4265__auto__) {
                                var vec__12973 = cljs.core._nth.call(null, c__4264__auto__, i__12969);
                                var idx = cljs.core.nth.call(null, vec__12973, 0, null);
                                var con = cljs.core.nth.call(null, vec__12973, 1, null);
                                cljs.core.chunk_append.call(null, b__12970, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                1123661827), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(i__12969, vec__12973, idx, con, c__4264__auto__, size__4265__auto__, b__12970, s__12968__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, 
                                map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "constituency-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318))));
                                  };
                                }(i__12969, vec__12973, idx, con, c__4264__auto__, size__4265__auto__, b__12970, s__12968__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), 
                                new cljs.core.Keyword(null, "uid", "uid", 1014020034)], null)));
                                var G__12991 = i__12969 + 1;
                                i__12969 = G__12991;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12970), iter__12967.call(null, cljs.core.chunk_rest.call(null, s__12968__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12970), null);
                          }
                        } else {
                          var vec__12974 = cljs.core.first.call(null, s__12968__$2);
                          var idx = cljs.core.nth.call(null, vec__12974, 0, null);
                          var con = cljs.core.nth.call(null, vec__12974, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(vec__12974, idx, con, s__12968__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, 
                          map__12961__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "constituency-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318))));
                            };
                          }(vec__12974, idx, con, s__12968__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "uid", "uid", 1014020034)], 
                          null)), iter__12967.call(null, cljs.core.rest.call(null, s__12968__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
            return iter__4266__auto__.call(null, idx_cons);
          }() : null, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results-header"], null), "Investor-backed companies"], 
          null) : null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? function() {
            var iter__4266__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
              return function iter__12975(s__12976) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__12976__$1 = s__12976;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__12976__$1);
                      if (temp__4126__auto__) {
                        var s__12976__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__12976__$2)) {
                          var c__4264__auto__ = cljs.core.chunk_first.call(null, s__12976__$2);
                          var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
                          var b__12978 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
                          if (function() {
                            var i__12977 = 0;
                            while (true) {
                              if (i__12977 < size__4265__auto__) {
                                var vec__12981 = cljs.core._nth.call(null, c__4264__auto__, i__12977);
                                var idx = cljs.core.nth.call(null, vec__12981, 0, null);
                                var pc = cljs.core.nth.call(null, vec__12981, 1, null);
                                cljs.core.chunk_append.call(null, b__12978, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), 
                                new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(i__12977, vec__12981, idx, pc, c__4264__auto__, size__4265__auto__, b__12978, s__12976__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, 
                                investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "portfolio-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389))));
                                  };
                                }(i__12977, vec__12981, idx, pc, c__4264__auto__, size__4265__auto__, b__12978, s__12976__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), 
                                new cljs.core.Keyword(null, "uid", "uid", 1014020034)], null)));
                                var G__12992 = i__12977 + 1;
                                i__12977 = G__12992;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12978), iter__12975.call(null, cljs.core.chunk_rest.call(null, s__12976__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12978), null);
                          }
                        } else {
                          var vec__12982 = cljs.core.first.call(null, s__12976__$2);
                          var idx = cljs.core.nth.call(null, vec__12982, 0, null);
                          var pc = cljs.core.nth.call(null, vec__12982, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(vec__12982, idx, pc, s__12976__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, 
                          map__12961__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "portfolio-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389))));
                            };
                          }(vec__12982, idx, pc, s__12976__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "uid", "uid", 1014020034)], 
                          null)), iter__12975.call(null, cljs.core.rest.call(null, s__12976__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
            return iter__4266__auto__.call(null, idx_pcs);
          }() : null, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results-header"], null), "Investors"], null) : 
          null], null)), cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? function() {
            var iter__4266__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
              return function iter__12983(s__12984) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__12984__$1 = s__12984;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__12984__$1);
                      if (temp__4126__auto__) {
                        var s__12984__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__12984__$2)) {
                          var c__4264__auto__ = cljs.core.chunk_first.call(null, s__12984__$2);
                          var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
                          var b__12986 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
                          if (function() {
                            var i__12985 = 0;
                            while (true) {
                              if (i__12985 < size__4265__auto__) {
                                var vec__12989 = cljs.core._nth.call(null, c__4264__auto__, i__12985);
                                var idx = cljs.core.nth.call(null, vec__12989, 0, null);
                                var inv = cljs.core.nth.call(null, vec__12989, 1, null);
                                cljs.core.chunk_append.call(null, b__12986, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                1123661827), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(i__12985, vec__12989, idx, inv, c__4264__auto__, size__4265__auto__, b__12986, s__12984__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, 
                                map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "investor-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593))));
                                  };
                                }(i__12985, vec__12989, idx, inv, c__4264__auto__, size__4265__auto__, b__12986, s__12984__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), 
                                new cljs.core.Keyword(null, "uid", "uid", 1014020034)], null)));
                                var G__12993 = i__12985 + 1;
                                i__12985 = G__12993;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12986), iter__12983.call(null, cljs.core.chunk_rest.call(null, s__12984__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12986), null);
                          }
                        } else {
                          var vec__12990 = cljs.core.first.call(null, s__12984__$2);
                          var idx = cljs.core.nth.call(null, vec__12990, 0, null);
                          var inv = cljs.core.nth.call(null, vec__12990, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(vec__12990, idx, inv, s__12984__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, 
                          map__12961__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "investor-company-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593))));
                            };
                          }(vec__12990, idx, inv, s__12984__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "uid", "uid", 1014020034)], 
                          null)), iter__12983.call(null, cljs.core.rest.call(null, s__12984__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
            return iter__4266__auto__.call(null, idx_invs);
          }() : null], null)], null);
        }() : null));
      };
    }(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t12964.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
      return function(_12966) {
        var self__ = this;
        var _12966__$1 = this;
        return self__.meta12965;
      };
    }(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t12964.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
      return function(_12966, meta12965__$1) {
        var self__ = this;
        var _12966__$1 = this;
        return new clustermap.components.search.t12964(self__.search_results, self__.search_component, self__.owner, self__.path_fn, self__.view, self__.portfolio_companies, self__.constituencies, self__.map__12960, self__.investor_companies, self__.map__12961, self__.selection_value, self__.comm, self__.p__12928, self__.map__12963, self__.selection_type, self__.map__12962, meta12965__$1);
      };
    }(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.__GT_t12964 = function(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results) {
      return function __GT_t12964(search_results__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, constituencies__$1, map__12960__$2, investor_companies__$1, map__12961__$2, selection_value__$1, comm__$1, p__12928__$1, map__12963__$2, selection_type__$1, map__12962__$2, meta12965) {
        return new clustermap.components.search.t12964(search_results__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, constituencies__$1, map__12960__$2, investor_companies__$1, map__12961__$2, selection_value__$1, comm__$1, p__12928__$1, map__12963__$2, selection_type__$1, map__12962__$2, meta12965);
      };
    }(map__12962, map__12962__$1, path_fn, comm, path_fn__$1, map__12963, map__12963__$1, investor_companies, portfolio_companies, constituencies, map__12960, map__12960__$1, map__12961, map__12961__$1, selection_type, selection_value, view, search_results);
  }
  return new clustermap.components.search.t12964(search_results, search_component, owner, path_fn__$1, view, portfolio_companies, constituencies, map__12960__$1, investor_companies, map__12961__$1, selection_value, comm, p__12928, map__12963__$1, selection_type, map__12962__$1, null);
};
clustermap.components.search.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.search.search_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared, new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || (el.disabled || el.tagName.toLowerCase() == "fieldset")) {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && (el.type && el.type.toLowerCase() == "file")) {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els.type) {
    return goog.dom.forms.getValue(els);
  } else {
    for (var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if (val) {
        return val;
      }
    }
    return null;
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("goog.dom");
var div_18334 = document.createElement("div");
var test_html_18335 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_18334.innerHTML = test_html_18335;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_18334.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_18334.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_18334.getElementsByTagName("link").length, 0);
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && (a.right == b.right && (a.bottom == b.bottom && a.left == b.left));
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && (other.right <= box.right && (other.top >= box.top && other.bottom <= box.bottom));
  }
  return other.x >= box.left && (other.x <= box.right && (other.y >= box.top && other.y <= box.bottom));
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && (b.left <= a.right && (a.top <= b.bottom && b.top <= a.bottom));
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && (b.left <= a.right + padding && (a.top <= b.bottom + padding && b.top <= a.bottom + padding));
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && (a.width == b.width && (a.top == b.top && a.height == b.height));
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && (b.left <= a.left + a.width && (a.top <= b.top + b.height && b.top <= a.top + a.height));
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || (!intersection.height || !intersection.width)) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && (this.left + this.width >= another.left + another.width && (this.top <= another.top && this.top + this.height >= another.top + another.height));
  } else {
    return another.x >= this.left && (another.x <= this.left + this.width && (another.y >= this.top && another.y <= this.top + this.height));
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value;
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || (styles.getPropertyValue(property) || "");
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || (goog.style.getCascadedStyle(element, style) || element.style && element.style[style]);
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && ((goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9"));
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && (!goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode())) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.supportsGetBoundingClientRect_ = function(el) {
  if (goog.userAgent.MOBILE && goog.userAgent.WEBKIT) {
    var win = el.ownerDocument.defaultView;
    if (win != win.top) {
      return false;
    }
  }
  return!!el.getBoundingClientRect;
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if (goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && (positionStyle == "static" && (parent != doc.documentElement && parent != doc.body));
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || (parent.scrollHeight > parent.clientHeight || (positionStyle == "fixed" || (positionStyle == "absolute" || positionStyle == "relative"))))) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && ((!goog.userAgent.WEBKIT || (el.clientHeight != 0 || el != body)) && (el != body && (el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")))) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && (visibleRect.left >= 0 && (visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left)) ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && (doc.getBoxObjectFor && (!el.getBoundingClientRect && (positionStyle == "absolute" && ((box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0)))));
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.supportsGetBoundingClientRect_(el)) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && (parent != doc.body && parent != viewportElement);) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && (currentWin != relativeWin && ((currentEl = currentWin.frameElement) && (currentWin = currentWin.parent))));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if (goog.style.supportsGetBoundingClientRect_(el)) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top;
    } else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y;
    }
    if (goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
    }
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0];
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY;
  }
  return pos;
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && (!offsetWidth && !offsetHeight);
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if (goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || (styleSheet.owningElement || (styleSheet));
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && (goog.dom.getDomHelper(doc).isCss1CompatMode() && (ieCurrentStyle.width != "auto" && (ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing)))) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft");
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && (el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if (goog.userAgent.IE) {
    property = "-ms-transform";
  } else {
    if (goog.userAgent.WEBKIT) {
      property = "-webkit-transform";
    } else {
      if (goog.userAgent.OPERA) {
        property = "-o-transform";
      } else {
        if (goog.userAgent.GECKO) {
          property = "-moz-transform";
        }
      }
    }
  }
  var transform;
  if (property) {
    transform = goog.style.getStyle_(element, property);
  }
  if (!transform) {
    transform = goog.style.getStyle_(element, "transform");
  }
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.string");
goog.require("domina.support");
goog.require("goog.style");
goog.require("goog.style");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_17884 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_17885 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_17886 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", 2558708147), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_17886, opt_wrapper_17884, table_section_wrapper_17885, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 
5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_17884, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_17885, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_17885, cell_wrapper_17886, table_section_wrapper_17885, table_section_wrapper_17885]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3529__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3529__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3529__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var seq__17891 = cljs.core.seq.call(null, tbody);
  var chunk__17892 = null;
  var count__17893 = 0;
  var i__17894 = 0;
  while (true) {
    if (i__17894 < count__17893) {
      var child = cljs.core._nth.call(null, chunk__17892, i__17894);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__17895 = seq__17891;
      var G__17896 = chunk__17892;
      var G__17897 = count__17893;
      var G__17898 = i__17894 + 1;
      seq__17891 = G__17895;
      chunk__17892 = G__17896;
      count__17893 = G__17897;
      i__17894 = G__17898;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__17891);
      if (temp__4126__auto__) {
        var seq__17891__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17891__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17891__$1);
          var G__17899 = cljs.core.chunk_rest.call(null, seq__17891__$1);
          var G__17900 = c__4297__auto__;
          var G__17901 = cljs.core.count.call(null, c__4297__auto__);
          var G__17902 = 0;
          seq__17891 = G__17899;
          chunk__17892 = G__17900;
          count__17893 = G__17901;
          i__17894 = G__17902;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__17891__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__17903 = cljs.core.next.call(null, seq__17891__$1);
          var G__17904 = null;
          var G__17905 = 0;
          var G__17906 = 0;
          seq__17891 = G__17903;
          chunk__17892 = G__17904;
          count__17893 = G__17905;
          i__17894 = G__17906;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))).toLowerCase();
  var vec__17908 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__17908, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__17908, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__17908, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(start_wrap) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(html__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(end_wrap);
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__17909 = wrapper.lastChild;
        var G__17910 = level - 1;
        wrapper = G__17909;
        level = G__17910;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if (and__3529__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__3529__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj17912 = {};
  return obj17912;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__3529__auto__ = content;
    if (and__3529__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4168__auto__ = content == null ? null : content;
    return function() {
      var or__3541__auto__ = domina.nodes[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.nodes["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__3529__auto__ = nodeseq;
    if (and__3529__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4168__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3541__auto__ = domina.single_node[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.single_node["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__3529__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined);
      } else {
        return and__3529__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__17913) {
    var mesg = cljs.core.seq(arglist__17913);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__17914) {
    var mesg = cljs.core.seq(arglist__17914);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__17915) {
    var contents = cljs.core.seq(arglist__17915);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__17916_SHARP_) {
    return p1__17916_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__17917_SHARP_, p2__17918_SHARP_) {
    return goog.dom.insertChildAt(p1__17917_SHARP_, p2__17918_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__17920_SHARP_, p2__17919_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__17919_SHARP_, p1__17920_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__17922_SHARP_, p2__17921_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__17921_SHARP_, p1__17922_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__17924_SHARP_, p2__17923_SHARP_) {
    return goog.dom.replaceNode(p2__17923_SHARP_, p1__17924_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__17929_17933 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__17930_17934 = null;
    var count__17931_17935 = 0;
    var i__17932_17936 = 0;
    while (true) {
      if (i__17932_17936 < count__17931_17935) {
        var n_17937 = cljs.core._nth.call(null, chunk__17930_17934, i__17932_17936);
        goog.style.setStyle(n_17937, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__17938 = seq__17929_17933;
        var G__17939 = chunk__17930_17934;
        var G__17940 = count__17931_17935;
        var G__17941 = i__17932_17936 + 1;
        seq__17929_17933 = G__17938;
        chunk__17930_17934 = G__17939;
        count__17931_17935 = G__17940;
        i__17932_17936 = G__17941;
        continue;
      } else {
        var temp__4126__auto___17942 = cljs.core.seq.call(null, seq__17929_17933);
        if (temp__4126__auto___17942) {
          var seq__17929_17943__$1 = temp__4126__auto___17942;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17929_17943__$1)) {
            var c__4297__auto___17944 = cljs.core.chunk_first.call(null, seq__17929_17943__$1);
            var G__17945 = cljs.core.chunk_rest.call(null, seq__17929_17943__$1);
            var G__17946 = c__4297__auto___17944;
            var G__17947 = cljs.core.count.call(null, c__4297__auto___17944);
            var G__17948 = 0;
            seq__17929_17933 = G__17945;
            chunk__17930_17934 = G__17946;
            count__17931_17935 = G__17947;
            i__17932_17936 = G__17948;
            continue;
          } else {
            var n_17949 = cljs.core.first.call(null, seq__17929_17943__$1);
            goog.style.setStyle(n_17949, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__17950 = cljs.core.next.call(null, seq__17929_17943__$1);
            var G__17951 = null;
            var G__17952 = 0;
            var G__17953 = 0;
            seq__17929_17933 = G__17950;
            chunk__17930_17934 = G__17951;
            count__17931_17935 = G__17952;
            i__17932_17936 = G__17953;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__17954) {
    var content = cljs.core.first(arglist__17954);
    arglist__17954 = cljs.core.next(arglist__17954);
    var name = cljs.core.first(arglist__17954);
    var value = cljs.core.rest(arglist__17954);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__17959_17963 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__17960_17964 = null;
    var count__17961_17965 = 0;
    var i__17962_17966 = 0;
    while (true) {
      if (i__17962_17966 < count__17961_17965) {
        var n_17967 = cljs.core._nth.call(null, chunk__17960_17964, i__17962_17966);
        n_17967.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__17968 = seq__17959_17963;
        var G__17969 = chunk__17960_17964;
        var G__17970 = count__17961_17965;
        var G__17971 = i__17962_17966 + 1;
        seq__17959_17963 = G__17968;
        chunk__17960_17964 = G__17969;
        count__17961_17965 = G__17970;
        i__17962_17966 = G__17971;
        continue;
      } else {
        var temp__4126__auto___17972 = cljs.core.seq.call(null, seq__17959_17963);
        if (temp__4126__auto___17972) {
          var seq__17959_17973__$1 = temp__4126__auto___17972;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17959_17973__$1)) {
            var c__4297__auto___17974 = cljs.core.chunk_first.call(null, seq__17959_17973__$1);
            var G__17975 = cljs.core.chunk_rest.call(null, seq__17959_17973__$1);
            var G__17976 = c__4297__auto___17974;
            var G__17977 = cljs.core.count.call(null, c__4297__auto___17974);
            var G__17978 = 0;
            seq__17959_17963 = G__17975;
            chunk__17960_17964 = G__17976;
            count__17961_17965 = G__17977;
            i__17962_17966 = G__17978;
            continue;
          } else {
            var n_17979 = cljs.core.first.call(null, seq__17959_17973__$1);
            n_17979.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__17980 = cljs.core.next.call(null, seq__17959_17973__$1);
            var G__17981 = null;
            var G__17982 = 0;
            var G__17983 = 0;
            seq__17959_17963 = G__17980;
            chunk__17960_17964 = G__17981;
            count__17961_17965 = G__17982;
            i__17962_17966 = G__17983;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__17984) {
    var content = cljs.core.first(arglist__17984);
    arglist__17984 = cljs.core.next(arglist__17984);
    var name = cljs.core.first(arglist__17984);
    var value = cljs.core.rest(arglist__17984);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__17989_17993 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__17990_17994 = null;
  var count__17991_17995 = 0;
  var i__17992_17996 = 0;
  while (true) {
    if (i__17992_17996 < count__17991_17995) {
      var n_17997 = cljs.core._nth.call(null, chunk__17990_17994, i__17992_17996);
      n_17997.removeAttribute(cljs.core.name.call(null, name));
      var G__17998 = seq__17989_17993;
      var G__17999 = chunk__17990_17994;
      var G__18000 = count__17991_17995;
      var G__18001 = i__17992_17996 + 1;
      seq__17989_17993 = G__17998;
      chunk__17990_17994 = G__17999;
      count__17991_17995 = G__18000;
      i__17992_17996 = G__18001;
      continue;
    } else {
      var temp__4126__auto___18002 = cljs.core.seq.call(null, seq__17989_17993);
      if (temp__4126__auto___18002) {
        var seq__17989_18003__$1 = temp__4126__auto___18002;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17989_18003__$1)) {
          var c__4297__auto___18004 = cljs.core.chunk_first.call(null, seq__17989_18003__$1);
          var G__18005 = cljs.core.chunk_rest.call(null, seq__17989_18003__$1);
          var G__18006 = c__4297__auto___18004;
          var G__18007 = cljs.core.count.call(null, c__4297__auto___18004);
          var G__18008 = 0;
          seq__17989_17993 = G__18005;
          chunk__17990_17994 = G__18006;
          count__17991_17995 = G__18007;
          i__17992_17996 = G__18008;
          continue;
        } else {
          var n_18009 = cljs.core.first.call(null, seq__17989_18003__$1);
          n_18009.removeAttribute(cljs.core.name.call(null, name));
          var G__18010 = cljs.core.next.call(null, seq__17989_18003__$1);
          var G__18011 = null;
          var G__18012 = 0;
          var G__18013 = 0;
          seq__17989_17993 = G__18010;
          chunk__17990_17994 = G__18011;
          count__17991_17995 = G__18012;
          i__17992_17996 = G__18013;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__18015 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__18015, 0, null);
    var v = cljs.core.nth.call(null, vec__18015, 1, null);
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = k;
      if (cljs.core.truth_(and__3529__auto__)) {
        return v;
      } else {
        return and__3529__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.PersistentArrayMap.EMPTY;
        } else {
          return null;
        }
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs__$1) {
    return function(p1__18016_SHARP_) {
      var attr = attrs__$1.item(p1__18016_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.call(null, attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__18023_18029 = cljs.core.seq.call(null, styles);
  var chunk__18024_18030 = null;
  var count__18025_18031 = 0;
  var i__18026_18032 = 0;
  while (true) {
    if (i__18026_18032 < count__18025_18031) {
      var vec__18027_18033 = cljs.core._nth.call(null, chunk__18024_18030, i__18026_18032);
      var name_18034 = cljs.core.nth.call(null, vec__18027_18033, 0, null);
      var value_18035 = cljs.core.nth.call(null, vec__18027_18033, 1, null);
      domina.set_style_BANG_.call(null, content, name_18034, value_18035);
      var G__18036 = seq__18023_18029;
      var G__18037 = chunk__18024_18030;
      var G__18038 = count__18025_18031;
      var G__18039 = i__18026_18032 + 1;
      seq__18023_18029 = G__18036;
      chunk__18024_18030 = G__18037;
      count__18025_18031 = G__18038;
      i__18026_18032 = G__18039;
      continue;
    } else {
      var temp__4126__auto___18040 = cljs.core.seq.call(null, seq__18023_18029);
      if (temp__4126__auto___18040) {
        var seq__18023_18041__$1 = temp__4126__auto___18040;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18023_18041__$1)) {
          var c__4297__auto___18042 = cljs.core.chunk_first.call(null, seq__18023_18041__$1);
          var G__18043 = cljs.core.chunk_rest.call(null, seq__18023_18041__$1);
          var G__18044 = c__4297__auto___18042;
          var G__18045 = cljs.core.count.call(null, c__4297__auto___18042);
          var G__18046 = 0;
          seq__18023_18029 = G__18043;
          chunk__18024_18030 = G__18044;
          count__18025_18031 = G__18045;
          i__18026_18032 = G__18046;
          continue;
        } else {
          var vec__18028_18047 = cljs.core.first.call(null, seq__18023_18041__$1);
          var name_18048 = cljs.core.nth.call(null, vec__18028_18047, 0, null);
          var value_18049 = cljs.core.nth.call(null, vec__18028_18047, 1, null);
          domina.set_style_BANG_.call(null, content, name_18048, value_18049);
          var G__18050 = cljs.core.next.call(null, seq__18023_18041__$1);
          var G__18051 = null;
          var G__18052 = 0;
          var G__18053 = 0;
          seq__18023_18029 = G__18050;
          chunk__18024_18030 = G__18051;
          count__18025_18031 = G__18052;
          i__18026_18032 = G__18053;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__18060_18066 = cljs.core.seq.call(null, attrs);
  var chunk__18061_18067 = null;
  var count__18062_18068 = 0;
  var i__18063_18069 = 0;
  while (true) {
    if (i__18063_18069 < count__18062_18068) {
      var vec__18064_18070 = cljs.core._nth.call(null, chunk__18061_18067, i__18063_18069);
      var name_18071 = cljs.core.nth.call(null, vec__18064_18070, 0, null);
      var value_18072 = cljs.core.nth.call(null, vec__18064_18070, 1, null);
      domina.set_attr_BANG_.call(null, content, name_18071, value_18072);
      var G__18073 = seq__18060_18066;
      var G__18074 = chunk__18061_18067;
      var G__18075 = count__18062_18068;
      var G__18076 = i__18063_18069 + 1;
      seq__18060_18066 = G__18073;
      chunk__18061_18067 = G__18074;
      count__18062_18068 = G__18075;
      i__18063_18069 = G__18076;
      continue;
    } else {
      var temp__4126__auto___18077 = cljs.core.seq.call(null, seq__18060_18066);
      if (temp__4126__auto___18077) {
        var seq__18060_18078__$1 = temp__4126__auto___18077;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18060_18078__$1)) {
          var c__4297__auto___18079 = cljs.core.chunk_first.call(null, seq__18060_18078__$1);
          var G__18080 = cljs.core.chunk_rest.call(null, seq__18060_18078__$1);
          var G__18081 = c__4297__auto___18079;
          var G__18082 = cljs.core.count.call(null, c__4297__auto___18079);
          var G__18083 = 0;
          seq__18060_18066 = G__18080;
          chunk__18061_18067 = G__18081;
          count__18062_18068 = G__18082;
          i__18063_18069 = G__18083;
          continue;
        } else {
          var vec__18065_18084 = cljs.core.first.call(null, seq__18060_18078__$1);
          var name_18085 = cljs.core.nth.call(null, vec__18065_18084, 0, null);
          var value_18086 = cljs.core.nth.call(null, vec__18065_18084, 1, null);
          domina.set_attr_BANG_.call(null, content, name_18085, value_18086);
          var G__18087 = cljs.core.next.call(null, seq__18060_18078__$1);
          var G__18088 = null;
          var G__18089 = 0;
          var G__18090 = 0;
          seq__18060_18066 = G__18087;
          chunk__18061_18067 = G__18088;
          count__18062_18068 = G__18089;
          i__18063_18069 = G__18090;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__18095_18099 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__18096_18100 = null;
  var count__18097_18101 = 0;
  var i__18098_18102 = 0;
  while (true) {
    if (i__18098_18102 < count__18097_18101) {
      var node_18103 = cljs.core._nth.call(null, chunk__18096_18100, i__18098_18102);
      goog.dom.classes.add(node_18103, class$);
      var G__18104 = seq__18095_18099;
      var G__18105 = chunk__18096_18100;
      var G__18106 = count__18097_18101;
      var G__18107 = i__18098_18102 + 1;
      seq__18095_18099 = G__18104;
      chunk__18096_18100 = G__18105;
      count__18097_18101 = G__18106;
      i__18098_18102 = G__18107;
      continue;
    } else {
      var temp__4126__auto___18108 = cljs.core.seq.call(null, seq__18095_18099);
      if (temp__4126__auto___18108) {
        var seq__18095_18109__$1 = temp__4126__auto___18108;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18095_18109__$1)) {
          var c__4297__auto___18110 = cljs.core.chunk_first.call(null, seq__18095_18109__$1);
          var G__18111 = cljs.core.chunk_rest.call(null, seq__18095_18109__$1);
          var G__18112 = c__4297__auto___18110;
          var G__18113 = cljs.core.count.call(null, c__4297__auto___18110);
          var G__18114 = 0;
          seq__18095_18099 = G__18111;
          chunk__18096_18100 = G__18112;
          count__18097_18101 = G__18113;
          i__18098_18102 = G__18114;
          continue;
        } else {
          var node_18115 = cljs.core.first.call(null, seq__18095_18109__$1);
          goog.dom.classes.add(node_18115, class$);
          var G__18116 = cljs.core.next.call(null, seq__18095_18109__$1);
          var G__18117 = null;
          var G__18118 = 0;
          var G__18119 = 0;
          seq__18095_18099 = G__18116;
          chunk__18096_18100 = G__18117;
          count__18097_18101 = G__18118;
          i__18098_18102 = G__18119;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__18124_18128 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__18125_18129 = null;
  var count__18126_18130 = 0;
  var i__18127_18131 = 0;
  while (true) {
    if (i__18127_18131 < count__18126_18130) {
      var node_18132 = cljs.core._nth.call(null, chunk__18125_18129, i__18127_18131);
      goog.dom.classes.remove(node_18132, class$);
      var G__18133 = seq__18124_18128;
      var G__18134 = chunk__18125_18129;
      var G__18135 = count__18126_18130;
      var G__18136 = i__18127_18131 + 1;
      seq__18124_18128 = G__18133;
      chunk__18125_18129 = G__18134;
      count__18126_18130 = G__18135;
      i__18127_18131 = G__18136;
      continue;
    } else {
      var temp__4126__auto___18137 = cljs.core.seq.call(null, seq__18124_18128);
      if (temp__4126__auto___18137) {
        var seq__18124_18138__$1 = temp__4126__auto___18137;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18124_18138__$1)) {
          var c__4297__auto___18139 = cljs.core.chunk_first.call(null, seq__18124_18138__$1);
          var G__18140 = cljs.core.chunk_rest.call(null, seq__18124_18138__$1);
          var G__18141 = c__4297__auto___18139;
          var G__18142 = cljs.core.count.call(null, c__4297__auto___18139);
          var G__18143 = 0;
          seq__18124_18128 = G__18140;
          chunk__18125_18129 = G__18141;
          count__18126_18130 = G__18142;
          i__18127_18131 = G__18143;
          continue;
        } else {
          var node_18144 = cljs.core.first.call(null, seq__18124_18138__$1);
          goog.dom.classes.remove(node_18144, class$);
          var G__18145 = cljs.core.next.call(null, seq__18124_18138__$1);
          var G__18146 = null;
          var G__18147 = 0;
          var G__18148 = 0;
          seq__18124_18128 = G__18145;
          chunk__18125_18129 = G__18146;
          count__18126_18130 = G__18147;
          i__18127_18131 = G__18148;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__18153_18157 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__18154_18158 = null;
  var count__18155_18159 = 0;
  var i__18156_18160 = 0;
  while (true) {
    if (i__18156_18160 < count__18155_18159) {
      var node_18161 = cljs.core._nth.call(null, chunk__18154_18158, i__18156_18160);
      goog.dom.classes.toggle(node_18161, class$);
      var G__18162 = seq__18153_18157;
      var G__18163 = chunk__18154_18158;
      var G__18164 = count__18155_18159;
      var G__18165 = i__18156_18160 + 1;
      seq__18153_18157 = G__18162;
      chunk__18154_18158 = G__18163;
      count__18155_18159 = G__18164;
      i__18156_18160 = G__18165;
      continue;
    } else {
      var temp__4126__auto___18166 = cljs.core.seq.call(null, seq__18153_18157);
      if (temp__4126__auto___18166) {
        var seq__18153_18167__$1 = temp__4126__auto___18166;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18153_18167__$1)) {
          var c__4297__auto___18168 = cljs.core.chunk_first.call(null, seq__18153_18167__$1);
          var G__18169 = cljs.core.chunk_rest.call(null, seq__18153_18167__$1);
          var G__18170 = c__4297__auto___18168;
          var G__18171 = cljs.core.count.call(null, c__4297__auto___18168);
          var G__18172 = 0;
          seq__18153_18157 = G__18169;
          chunk__18154_18158 = G__18170;
          count__18155_18159 = G__18171;
          i__18156_18160 = G__18172;
          continue;
        } else {
          var node_18173 = cljs.core.first.call(null, seq__18153_18167__$1);
          goog.dom.classes.toggle(node_18173, class$);
          var G__18174 = cljs.core.next.call(null, seq__18153_18167__$1);
          var G__18175 = null;
          var G__18176 = 0;
          var G__18177 = 0;
          seq__18153_18157 = G__18174;
          chunk__18154_18158 = G__18175;
          count__18155_18159 = G__18176;
          i__18156_18160 = G__18177;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_18186__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__18182_18187 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__18183_18188 = null;
  var count__18184_18189 = 0;
  var i__18185_18190 = 0;
  while (true) {
    if (i__18185_18190 < count__18184_18189) {
      var node_18191 = cljs.core._nth.call(null, chunk__18183_18188, i__18185_18190);
      goog.dom.classes.set(node_18191, classes_18186__$1);
      var G__18192 = seq__18182_18187;
      var G__18193 = chunk__18183_18188;
      var G__18194 = count__18184_18189;
      var G__18195 = i__18185_18190 + 1;
      seq__18182_18187 = G__18192;
      chunk__18183_18188 = G__18193;
      count__18184_18189 = G__18194;
      i__18185_18190 = G__18195;
      continue;
    } else {
      var temp__4126__auto___18196 = cljs.core.seq.call(null, seq__18182_18187);
      if (temp__4126__auto___18196) {
        var seq__18182_18197__$1 = temp__4126__auto___18196;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18182_18197__$1)) {
          var c__4297__auto___18198 = cljs.core.chunk_first.call(null, seq__18182_18197__$1);
          var G__18199 = cljs.core.chunk_rest.call(null, seq__18182_18197__$1);
          var G__18200 = c__4297__auto___18198;
          var G__18201 = cljs.core.count.call(null, c__4297__auto___18198);
          var G__18202 = 0;
          seq__18182_18187 = G__18199;
          chunk__18183_18188 = G__18200;
          count__18184_18189 = G__18201;
          i__18185_18190 = G__18202;
          continue;
        } else {
          var node_18203 = cljs.core.first.call(null, seq__18182_18197__$1);
          goog.dom.classes.set(node_18203, classes_18186__$1);
          var G__18204 = cljs.core.next.call(null, seq__18182_18197__$1);
          var G__18205 = null;
          var G__18206 = 0;
          var G__18207 = 0;
          seq__18182_18187 = G__18204;
          chunk__18183_18188 = G__18205;
          count__18184_18189 = G__18206;
          i__18185_18190 = G__18207;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__18212_18216 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__18213_18217 = null;
  var count__18214_18218 = 0;
  var i__18215_18219 = 0;
  while (true) {
    if (i__18215_18219 < count__18214_18218) {
      var node_18220 = cljs.core._nth.call(null, chunk__18213_18217, i__18215_18219);
      goog.dom.setTextContent(node_18220, value);
      var G__18221 = seq__18212_18216;
      var G__18222 = chunk__18213_18217;
      var G__18223 = count__18214_18218;
      var G__18224 = i__18215_18219 + 1;
      seq__18212_18216 = G__18221;
      chunk__18213_18217 = G__18222;
      count__18214_18218 = G__18223;
      i__18215_18219 = G__18224;
      continue;
    } else {
      var temp__4126__auto___18225 = cljs.core.seq.call(null, seq__18212_18216);
      if (temp__4126__auto___18225) {
        var seq__18212_18226__$1 = temp__4126__auto___18225;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18212_18226__$1)) {
          var c__4297__auto___18227 = cljs.core.chunk_first.call(null, seq__18212_18226__$1);
          var G__18228 = cljs.core.chunk_rest.call(null, seq__18212_18226__$1);
          var G__18229 = c__4297__auto___18227;
          var G__18230 = cljs.core.count.call(null, c__4297__auto___18227);
          var G__18231 = 0;
          seq__18212_18216 = G__18228;
          chunk__18213_18217 = G__18229;
          count__18214_18218 = G__18230;
          i__18215_18219 = G__18231;
          continue;
        } else {
          var node_18232 = cljs.core.first.call(null, seq__18212_18226__$1);
          goog.dom.setTextContent(node_18232, value);
          var G__18233 = cljs.core.next.call(null, seq__18212_18226__$1);
          var G__18234 = null;
          var G__18235 = 0;
          var G__18236 = 0;
          seq__18212_18216 = G__18233;
          chunk__18213_18217 = G__18234;
          count__18214_18218 = G__18235;
          i__18215_18219 = G__18236;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__18241_18245 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__18242_18246 = null;
  var count__18243_18247 = 0;
  var i__18244_18248 = 0;
  while (true) {
    if (i__18244_18248 < count__18243_18247) {
      var node_18249 = cljs.core._nth.call(null, chunk__18242_18246, i__18244_18248);
      goog.dom.forms.setValue(node_18249, value);
      var G__18250 = seq__18241_18245;
      var G__18251 = chunk__18242_18246;
      var G__18252 = count__18243_18247;
      var G__18253 = i__18244_18248 + 1;
      seq__18241_18245 = G__18250;
      chunk__18242_18246 = G__18251;
      count__18243_18247 = G__18252;
      i__18244_18248 = G__18253;
      continue;
    } else {
      var temp__4126__auto___18254 = cljs.core.seq.call(null, seq__18241_18245);
      if (temp__4126__auto___18254) {
        var seq__18241_18255__$1 = temp__4126__auto___18254;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__18241_18255__$1)) {
          var c__4297__auto___18256 = cljs.core.chunk_first.call(null, seq__18241_18255__$1);
          var G__18257 = cljs.core.chunk_rest.call(null, seq__18241_18255__$1);
          var G__18258 = c__4297__auto___18256;
          var G__18259 = cljs.core.count.call(null, c__4297__auto___18256);
          var G__18260 = 0;
          seq__18241_18245 = G__18257;
          chunk__18242_18246 = G__18258;
          count__18243_18247 = G__18259;
          i__18244_18248 = G__18260;
          continue;
        } else {
          var node_18261 = cljs.core.first.call(null, seq__18241_18255__$1);
          goog.dom.forms.setValue(node_18261, value);
          var G__18262 = cljs.core.next.call(null, seq__18241_18255__$1);
          var G__18263 = null;
          var G__18264 = 0;
          var G__18265 = 0;
          seq__18241_18245 = G__18262;
          chunk__18242_18246 = G__18263;
          count__18243_18247 = G__18264;
          i__18244_18248 = G__18265;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))).toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = allows_inner_html_QMARK_;
    if (and__3529__auto__) {
      var and__3529__auto____$1 = function() {
        var or__3541__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__3541__auto__)) {
          return or__3541__auto__;
        } else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__3529__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__3529__auto____$1;
      }
    } else {
      return and__3529__auto__;
    }
  }())) {
    var value_18276 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__18272_18277 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__18273_18278 = null;
      var count__18274_18279 = 0;
      var i__18275_18280 = 0;
      while (true) {
        if (i__18275_18280 < count__18274_18279) {
          var node_18281 = cljs.core._nth.call(null, chunk__18273_18278, i__18275_18280);
          node_18281.innerHTML = value_18276;
          var G__18282 = seq__18272_18277;
          var G__18283 = chunk__18273_18278;
          var G__18284 = count__18274_18279;
          var G__18285 = i__18275_18280 + 1;
          seq__18272_18277 = G__18282;
          chunk__18273_18278 = G__18283;
          count__18274_18279 = G__18284;
          i__18275_18280 = G__18285;
          continue;
        } else {
          var temp__4126__auto___18286 = cljs.core.seq.call(null, seq__18272_18277);
          if (temp__4126__auto___18286) {
            var seq__18272_18287__$1 = temp__4126__auto___18286;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__18272_18287__$1)) {
              var c__4297__auto___18288 = cljs.core.chunk_first.call(null, seq__18272_18287__$1);
              var G__18289 = cljs.core.chunk_rest.call(null, seq__18272_18287__$1);
              var G__18290 = c__4297__auto___18288;
              var G__18291 = cljs.core.count.call(null, c__4297__auto___18288);
              var G__18292 = 0;
              seq__18272_18277 = G__18289;
              chunk__18273_18278 = G__18290;
              count__18274_18279 = G__18291;
              i__18275_18280 = G__18292;
              continue;
            } else {
              var node_18293 = cljs.core.first.call(null, seq__18272_18287__$1);
              node_18293.innerHTML = value_18276;
              var G__18294 = cljs.core.next.call(null, seq__18272_18287__$1);
              var G__18295 = null;
              var G__18296 = 0;
              var G__18297 = 0;
              seq__18272_18277 = G__18294;
              chunk__18273_18278 = G__18295;
              count__18274_18279 = G__18296;
              i__18275_18280 = G__18297;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e18271) {
      if (e18271 instanceof Error) {
        var e_18298 = e18271;
        domina.replace_children_BANG_.call(null, content, value_18276);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e18271;
        } else {
        }
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if (cljs.core.truth_(function() {
      var and__3529__auto__ = bubble;
      if (cljs.core.truth_(and__3529__auto__)) {
        return value == null;
      } else {
        return and__3529__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node.call(null, node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.call(null, parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3541__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__18305_18309 = cljs.core.seq.call(null, children);
    var chunk__18306_18310 = null;
    var count__18307_18311 = 0;
    var i__18308_18312 = 0;
    while (true) {
      if (i__18308_18312 < count__18307_18311) {
        var child_18313 = cljs.core._nth.call(null, chunk__18306_18310, i__18308_18312);
        frag.appendChild(child_18313);
        var G__18314 = seq__18305_18309;
        var G__18315 = chunk__18306_18310;
        var G__18316 = count__18307_18311;
        var G__18317 = i__18308_18312 + 1;
        seq__18305_18309 = G__18314;
        chunk__18306_18310 = G__18315;
        count__18307_18311 = G__18316;
        i__18308_18312 = G__18317;
        continue;
      } else {
        var temp__4126__auto___18318 = cljs.core.seq.call(null, seq__18305_18309);
        if (temp__4126__auto___18318) {
          var seq__18305_18319__$1 = temp__4126__auto___18318;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__18305_18319__$1)) {
            var c__4297__auto___18320 = cljs.core.chunk_first.call(null, seq__18305_18319__$1);
            var G__18321 = cljs.core.chunk_rest.call(null, seq__18305_18319__$1);
            var G__18322 = c__4297__auto___18320;
            var G__18323 = cljs.core.count.call(null, c__4297__auto___18320);
            var G__18324 = 0;
            seq__18305_18309 = G__18321;
            chunk__18306_18310 = G__18322;
            count__18307_18311 = G__18323;
            i__18308_18312 = G__18324;
            continue;
          } else {
            var child_18325 = cljs.core.first.call(null, seq__18305_18319__$1);
            frag.appendChild(child_18325);
            var G__18326 = cljs.core.next.call(null, seq__18305_18319__$1);
            var G__18327 = null;
            var G__18328 = 0;
            var G__18329 = 0;
            seq__18305_18309 = G__18326;
            chunk__18306_18310 = G__18327;
            count__18307_18311 = G__18328;
            i__18308_18312 = G__18329;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__18299_SHARP_, p2__18300_SHARP_) {
        return f.call(null, p1__18299_SHARP_, p2__18300_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3529__auto__ = obj;
  if (cljs.core.truth_(and__3529__auto__)) {
    var and__3529__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__3529__auto____$1) {
      return obj.length;
    } else {
      return and__3529__auto____$1;
    }
  } else {
    return and__3529__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__18331 = list_thing;
      if (G__18331) {
        var bit__4191__auto__ = G__18331.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4191__auto__ || G__18331.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__18331.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18331);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18331);
      }
    }()) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
        } else {
          return null;
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__18332 = content;
      if (G__18332) {
        var bit__4191__auto__ = G__18332.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4191__auto__ || G__18332.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__18332.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18332);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18332);
      }
    }()) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
        } else {
          return null;
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__18333 = content;
      if (G__18333) {
        var bit__4191__auto__ = G__18333.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4191__auto__ || G__18333.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__18333.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18333);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__18333);
      }
    }()) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return content;
        } else {
          return null;
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.object");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = function() {
  var obj17694 = {};
  return obj17694;
}();
domina.events.prevent_default = function prevent_default(evt) {
  if (function() {
    var and__3529__auto__ = evt;
    if (and__3529__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt);
  } else {
    var x__4168__auto__ = evt == null ? null : evt;
    return function() {
      var or__3541__auto__ = domina.events.prevent_default[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.events.prevent_default["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if (function() {
    var and__3529__auto__ = evt;
    if (and__3529__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt);
  } else {
    var x__4168__auto__ = evt == null ? null : evt;
    return function() {
      var or__3541__auto__ = domina.events.stop_propagation[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.events.stop_propagation["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.target = function target(evt) {
  if (function() {
    var and__3529__auto__ = evt;
    if (and__3529__auto__) {
      return evt.domina$events$Event$target$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt);
  } else {
    var x__4168__auto__ = evt == null ? null : evt;
    return function() {
      var or__3541__auto__ = domina.events.target[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.events.target["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.current_target = function current_target(evt) {
  if (function() {
    var and__3529__auto__ = evt;
    if (and__3529__auto__) {
      return evt.domina$events$Event$current_target$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt);
  } else {
    var x__4168__auto__ = evt == null ? null : evt;
    return function() {
      var or__3541__auto__ = domina.events.current_target[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.events.current_target["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.event_type = function event_type(evt) {
  if (function() {
    var and__3529__auto__ = evt;
    if (and__3529__auto__) {
      return evt.domina$events$Event$event_type$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt);
  } else {
    var x__4168__auto__ = evt == null ? null : evt;
    return function() {
      var or__3541__auto__ = domina.events.event_type[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.events.event_type["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.raw_event = function raw_event(evt) {
  if (function() {
    var and__3529__auto__ = evt;
    if (and__3529__auto__) {
      return evt.domina$events$Event$raw_event$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt);
  } else {
    var x__4168__auto__ = evt == null ? null : evt;
    return function() {
      var or__3541__auto__ = domina.events.raw_event[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = domina.events.raw_event["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.root_element = window.document.documentElement;
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if (typeof domina.events.t17698 !== "undefined") {
      } else {
        domina.events.t17698 = function(evt, f, create_listener_function, meta17699) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta17699 = meta17699;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472;
        };
        domina.events.t17698.cljs$lang$type = true;
        domina.events.t17698.cljs$lang$ctorStr = "domina.events/t17698";
        domina.events.t17698.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
          return cljs.core._write.call(null, writer__4109__auto__, "domina.events/t17698");
        };
        domina.events.t17698.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var o__$1 = this;
          var temp__4124__auto__ = self__.evt[k];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var val = temp__4124__auto__;
            return val;
          } else {
            return self__.evt[cljs.core.name.call(null, k)];
          }
        };
        domina.events.t17698.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var o__$1 = this;
          var or__3541__auto__ = cljs.core._lookup.call(null, o__$1, k);
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return not_found;
          }
        };
        domina.events.t17698.prototype.domina$events$Event$ = true;
        domina.events.t17698.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.preventDefault();
        };
        domina.events.t17698.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.stopPropagation();
        };
        domina.events.t17698.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.target;
        };
        domina.events.t17698.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.currentTarget;
        };
        domina.events.t17698.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.type;
        };
        domina.events.t17698.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt;
        };
        domina.events.t17698.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17700) {
          var self__ = this;
          var _17700__$1 = this;
          return self__.meta17699;
        };
        domina.events.t17698.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17700, meta17699__$1) {
          var self__ = this;
          var _17700__$1 = this;
          return new domina.events.t17698(self__.evt, self__.f, self__.create_listener_function, meta17699__$1);
        };
        domina.events.__GT_t17698 = function __GT_t17698(evt__$1, f__$1, create_listener_function__$1, meta17699) {
          return new domina.events.t17698(evt__$1, f__$1, create_listener_function__$1, meta17699);
        };
      }
      return new domina.events.t17698(evt, f, create_listener_function, null);
    }());
    return true;
  };
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = cljs.core.name.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__4266__auto__ = function(f, t) {
      return function iter__17705(s__17706) {
        return new cljs.core.LazySeq(null, function(f, t) {
          return function() {
            var s__17706__$1 = s__17706;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__17706__$1);
              if (temp__4126__auto__) {
                var s__17706__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__17706__$2)) {
                  var c__4264__auto__ = cljs.core.chunk_first.call(null, s__17706__$2);
                  var size__4265__auto__ = cljs.core.count.call(null, c__4264__auto__);
                  var b__17708 = cljs.core.chunk_buffer.call(null, size__4265__auto__);
                  if (function() {
                    var i__17707 = 0;
                    while (true) {
                      if (i__17707 < size__4265__auto__) {
                        var node = cljs.core._nth.call(null, c__4264__auto__, i__17707);
                        cljs.core.chunk_append.call(null, b__17708, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                        var G__17709 = i__17707 + 1;
                        i__17707 = G__17709;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17708), iter__17705.call(null, cljs.core.chunk_rest.call(null, s__17706__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17708), null);
                  }
                } else {
                  var node = cljs.core.first.call(null, s__17706__$2);
                  return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__17705.call(null, cljs.core.rest.call(null, s__17706__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(f, t), null, null);
      };
    }(f, t);
    return iter__4266__auto__.call(null, domina.nodes.call(null, content));
  }());
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false);
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false);
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_;
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true);
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_;
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true);
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_;
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element);
  };
  var unlisten_BANG___1 = function(content) {
    var seq__17718 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__17719 = null;
    var count__17720 = 0;
    var i__17721 = 0;
    while (true) {
      if (i__17721 < count__17720) {
        var node = cljs.core._nth.call(null, chunk__17719, i__17721);
        goog.events.removeAll(node);
        var G__17726 = seq__17718;
        var G__17727 = chunk__17719;
        var G__17728 = count__17720;
        var G__17729 = i__17721 + 1;
        seq__17718 = G__17726;
        chunk__17719 = G__17727;
        count__17720 = G__17728;
        i__17721 = G__17729;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__17718);
        if (temp__4126__auto__) {
          var seq__17718__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17718__$1)) {
            var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17718__$1);
            var G__17730 = cljs.core.chunk_rest.call(null, seq__17718__$1);
            var G__17731 = c__4297__auto__;
            var G__17732 = cljs.core.count.call(null, c__4297__auto__);
            var G__17733 = 0;
            seq__17718 = G__17730;
            chunk__17719 = G__17731;
            count__17720 = G__17732;
            i__17721 = G__17733;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__17718__$1);
            goog.events.removeAll(node);
            var G__17734 = cljs.core.next.call(null, seq__17718__$1);
            var G__17735 = null;
            var G__17736 = 0;
            var G__17737 = 0;
            seq__17718 = G__17734;
            chunk__17719 = G__17735;
            count__17720 = G__17736;
            i__17721 = G__17737;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = cljs.core.name.call(null, type);
    var seq__17722 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__17723 = null;
    var count__17724 = 0;
    var i__17725 = 0;
    while (true) {
      if (i__17725 < count__17724) {
        var node = cljs.core._nth.call(null, chunk__17723, i__17725);
        goog.events.removeAll(node, type__$1);
        var G__17738 = seq__17722;
        var G__17739 = chunk__17723;
        var G__17740 = count__17724;
        var G__17741 = i__17725 + 1;
        seq__17722 = G__17738;
        chunk__17723 = G__17739;
        count__17724 = G__17740;
        i__17725 = G__17741;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__17722);
        if (temp__4126__auto__) {
          var seq__17722__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17722__$1)) {
            var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__17722__$1);
            var G__17742 = cljs.core.chunk_rest.call(null, seq__17722__$1);
            var G__17743 = c__4297__auto__;
            var G__17744 = cljs.core.count.call(null, c__4297__auto__);
            var G__17745 = 0;
            seq__17722 = G__17742;
            chunk__17723 = G__17743;
            count__17724 = G__17744;
            i__17725 = G__17745;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__17722__$1);
            goog.events.removeAll(node, type__$1);
            var G__17746 = cljs.core.next.call(null, seq__17722__$1);
            var G__17747 = null;
            var G__17748 = 0;
            var G__17749 = 0;
            seq__17722 = G__17746;
            chunk__17723 = G__17747;
            count__17724 = G__17748;
            i__17725 = G__17749;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_;
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null));
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while (true) {
      var temp__4124__auto__ = n.parentNode;
      if (cljs.core.truth_(temp__4124__auto__)) {
        var parent = temp__4124__auto__;
        var G__17750 = parent;
        var G__17751 = cljs.core.cons.call(null, parent, so_far);
        n = G__17750;
        so_far = G__17751;
        continue;
      } else {
        return so_far;
      }
      break;
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes;
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__17760_17768 = cljs.core.seq.call(null, ancestors);
  var chunk__17761_17769 = null;
  var count__17762_17770 = 0;
  var i__17763_17771 = 0;
  while (true) {
    if (i__17763_17771 < count__17762_17770) {
      var n_17772 = cljs.core._nth.call(null, chunk__17761_17769, i__17763_17771);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_17772;
        goog.events.fireListeners(n_17772, evt.type, true, evt);
      }
      var G__17773 = seq__17760_17768;
      var G__17774 = chunk__17761_17769;
      var G__17775 = count__17762_17770;
      var G__17776 = i__17763_17771 + 1;
      seq__17760_17768 = G__17773;
      chunk__17761_17769 = G__17774;
      count__17762_17770 = G__17775;
      i__17763_17771 = G__17776;
      continue;
    } else {
      var temp__4126__auto___17777 = cljs.core.seq.call(null, seq__17760_17768);
      if (temp__4126__auto___17777) {
        var seq__17760_17778__$1 = temp__4126__auto___17777;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17760_17778__$1)) {
          var c__4297__auto___17779 = cljs.core.chunk_first.call(null, seq__17760_17778__$1);
          var G__17780 = cljs.core.chunk_rest.call(null, seq__17760_17778__$1);
          var G__17781 = c__4297__auto___17779;
          var G__17782 = cljs.core.count.call(null, c__4297__auto___17779);
          var G__17783 = 0;
          seq__17760_17768 = G__17780;
          chunk__17761_17769 = G__17781;
          count__17762_17770 = G__17782;
          i__17763_17771 = G__17783;
          continue;
        } else {
          var n_17784 = cljs.core.first.call(null, seq__17760_17778__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_17784;
            goog.events.fireListeners(n_17784, evt.type, true, evt);
          }
          var G__17785 = cljs.core.next.call(null, seq__17760_17778__$1);
          var G__17786 = null;
          var G__17787 = 0;
          var G__17788 = 0;
          seq__17760_17768 = G__17785;
          chunk__17761_17769 = G__17786;
          count__17762_17770 = G__17787;
          i__17763_17771 = G__17788;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__17764_17789 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__17765_17790 = null;
  var count__17766_17791 = 0;
  var i__17767_17792 = 0;
  while (true) {
    if (i__17767_17792 < count__17766_17791) {
      var n_17793 = cljs.core._nth.call(null, chunk__17765_17790, i__17767_17792);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_17793;
        goog.events.fireListeners(n_17793, evt.type, false, evt);
      }
      var G__17794 = seq__17764_17789;
      var G__17795 = chunk__17765_17790;
      var G__17796 = count__17766_17791;
      var G__17797 = i__17767_17792 + 1;
      seq__17764_17789 = G__17794;
      chunk__17765_17790 = G__17795;
      count__17766_17791 = G__17796;
      i__17767_17792 = G__17797;
      continue;
    } else {
      var temp__4126__auto___17798 = cljs.core.seq.call(null, seq__17764_17789);
      if (temp__4126__auto___17798) {
        var seq__17764_17799__$1 = temp__4126__auto___17798;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17764_17799__$1)) {
          var c__4297__auto___17800 = cljs.core.chunk_first.call(null, seq__17764_17799__$1);
          var G__17801 = cljs.core.chunk_rest.call(null, seq__17764_17799__$1);
          var G__17802 = c__4297__auto___17800;
          var G__17803 = cljs.core.count.call(null, c__4297__auto___17800);
          var G__17804 = 0;
          seq__17764_17789 = G__17801;
          chunk__17765_17790 = G__17802;
          count__17766_17791 = G__17803;
          i__17767_17792 = G__17804;
          continue;
        } else {
          var n_17805 = cljs.core.first.call(null, seq__17764_17799__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_17805;
            goog.events.fireListeners(n_17805, evt.type, false, evt);
          }
          var G__17806 = cljs.core.next.call(null, seq__17764_17799__$1);
          var G__17807 = null;
          var G__17808 = 0;
          var G__17809 = 0;
          seq__17764_17789 = G__17806;
          chunk__17765_17790 = G__17807;
          count__17766_17791 = G__17808;
          i__17767_17792 = G__17809;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return evt.returnValue_;
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt);
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3529__auto__ = o.getParentEventTarget;
  if (cljs.core.truth_(and__3529__auto__)) {
    return o.dispatchEvent;
  } else {
    return and__3529__auto__;
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map);
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(cljs.core.name.call(null, type));
    var seq__17816_17822 = cljs.core.seq.call(null, evt_map);
    var chunk__17817_17823 = null;
    var count__17818_17824 = 0;
    var i__17819_17825 = 0;
    while (true) {
      if (i__17819_17825 < count__17818_17824) {
        var vec__17820_17826 = cljs.core._nth.call(null, chunk__17817_17823, i__17819_17825);
        var k_17827 = cljs.core.nth.call(null, vec__17820_17826, 0, null);
        var v_17828 = cljs.core.nth.call(null, vec__17820_17826, 1, null);
        evt[k_17827] = v_17828;
        var G__17829 = seq__17816_17822;
        var G__17830 = chunk__17817_17823;
        var G__17831 = count__17818_17824;
        var G__17832 = i__17819_17825 + 1;
        seq__17816_17822 = G__17829;
        chunk__17817_17823 = G__17830;
        count__17818_17824 = G__17831;
        i__17819_17825 = G__17832;
        continue;
      } else {
        var temp__4126__auto___17833 = cljs.core.seq.call(null, seq__17816_17822);
        if (temp__4126__auto___17833) {
          var seq__17816_17834__$1 = temp__4126__auto___17833;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17816_17834__$1)) {
            var c__4297__auto___17835 = cljs.core.chunk_first.call(null, seq__17816_17834__$1);
            var G__17836 = cljs.core.chunk_rest.call(null, seq__17816_17834__$1);
            var G__17837 = c__4297__auto___17835;
            var G__17838 = cljs.core.count.call(null, c__4297__auto___17835);
            var G__17839 = 0;
            seq__17816_17822 = G__17836;
            chunk__17817_17823 = G__17837;
            count__17818_17824 = G__17838;
            i__17819_17825 = G__17839;
            continue;
          } else {
            var vec__17821_17840 = cljs.core.first.call(null, seq__17816_17834__$1);
            var k_17841 = cljs.core.nth.call(null, vec__17821_17840, 0, null);
            var v_17842 = cljs.core.nth.call(null, vec__17821_17840, 1, null);
            evt[k_17841] = v_17842;
            var G__17843 = cljs.core.next.call(null, seq__17816_17834__$1);
            var G__17844 = null;
            var G__17845 = 0;
            var G__17846 = 0;
            seq__17816_17822 = G__17843;
            chunk__17817_17823 = G__17844;
            count__17818_17824 = G__17845;
            i__17819_17825 = G__17846;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt);
    } else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt);
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_;
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key);
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = cljs.core.name.call(null, type);
  return cljs.core.mapcat.call(null, function(type__$1) {
    return function(p1__17847_SHARP_) {
      return goog.events.getListeners(p1__17847_SHARP_, type__$1, false);
    };
  }(type__$1), domina.nodes.call(null, content));
};
goog.provide("clustermap.formats.string");
goog.require("cljs.core");
clustermap.formats.string.pluralize = function() {
  var pluralize__delegate = function(n, word, p__13100) {
    var vec__13102 = p__13100;
    var irreg = cljs.core.nth.call(null, vec__13102, 0, null);
    if (n === 1) {
      return word;
    } else {
      var or__3541__auto__ = irreg;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(word) + "s";
      }
    }
  };
  var pluralize = function(n, word, var_args) {
    var p__13100 = null;
    if (arguments.length > 2) {
      p__13100 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return pluralize__delegate.call(this, n, word, p__13100);
  };
  pluralize.cljs$lang$maxFixedArity = 2;
  pluralize.cljs$lang$applyTo = function(arglist__13103) {
    var n = cljs.core.first(arglist__13103);
    arglist__13103 = cljs.core.next(arglist__13103);
    var word = cljs.core.first(arglist__13103);
    var p__13100 = cljs.core.rest(arglist__13103);
    return pluralize__delegate(n, word, p__13100);
  };
  pluralize.cljs$core$IFn$_invoke$arity$variadic = pluralize__delegate;
  return pluralize;
}();
goog.provide("clustermap.components.reset_selection_button");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
clustermap.components.reset_selection_button.reset_selection_button = function reset_selection_button(path_fn) {
  return React.DOM.a({"className":"btn btn-link btn-reset", "href":path_fn.call(null, null, null)}, "Reset to UK wide");
};
goog.provide("clustermap.components.map_report");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.string");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.formats.string");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("domina.events");
goog.require("domina.events");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.string");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.map_report.full_report_button = function full_report_button(comm, view_path_fn) {
  return React.DOM.a({"className":"btn btn-link", "href":view_path_fn.call(null, new cljs.core.Keyword(null, "lists", "lists", 1116886791))}, React.DOM.i({"className":"icon-lists-sm"}), "Full report");
};
clustermap.components.map_report.type_counts = function type_counts(site_stats) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783), function() {
    var G__12634 = site_stats;
    var G__12634__$1 = G__12634 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 1780206472)).cljs$core$IFn$_invoke$arity$1(G__12634);
    return G__12634__$1;
  }(), new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326), function() {
    var G__12635 = site_stats;
    var G__12635__$1 = G__12635 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", 2333064920)).cljs$core$IFn$_invoke$arity$1(G__12635);
    return G__12635__$1;
  }(), new cljs.core.Keyword(null, "const-count", "const-count", 1728788887), function() {
    var G__12636 = site_stats;
    var G__12636__$1 = G__12636 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 621528264)).cljs$core$IFn$_invoke$arity$1(G__12636);
    return G__12636__$1;
  }()], null);
};
clustermap.components.map_report.all_portfolio_companies_summary_report = function all_portfolio_companies_summary_report(site_stats, comm, view_path_fn) {
  var map__12668 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__12668__$1 = cljs.core.seq_QMARK_.call(null, map__12668) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12668) : map__12668;
  var const_count = cljs.core.get.call(null, map__12668__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__12668__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__12668__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t12669 !== "undefined") {
  } else {
    clustermap.components.map_report.t12669 = function(pc_count, ic_count, const_count, map__12668, view_path_fn, comm, site_stats, all_portfolio_companies_summary_report, meta12670) {
      this.pc_count = pc_count;
      this.ic_count = ic_count;
      this.const_count = const_count;
      this.map__12668 = map__12668;
      this.view_path_fn = view_path_fn;
      this.comm = comm;
      this.site_stats = site_stats;
      this.all_portfolio_companies_summary_report = all_portfolio_companies_summary_report;
      this.meta12670 = meta12670;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t12669.cljs$lang$type = true;
    clustermap.components.map_report.t12669.cljs$lang$ctorStr = "clustermap.components.map-report/t12669";
    clustermap.components.map_report.t12669.cljs$lang$ctorPrWriter = function(map__12668, map__12668__$1, const_count, ic_count, pc_count) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.map-report/t12669");
      };
    }(map__12668, map__12668__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12669.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t12669.prototype.om$core$IRender$render$arity$1 = function(map__12668, map__12668__$1, const_count, ic_count, pc_count) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.div(null, React.DOM.div({"className":"header secondary"}, React.DOM.h2(null, "All investor-backed companies"), React.DOM.h3(null, "UK wide")), React.DOM.ul(null, function() {
          var attrs12674 = clustermap.formats.number.fnum.call(null, self__.pc_count, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12674) ? sablono.interpreter.attributes.call(null, attrs12674) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12674) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Investor-backed companies")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12674), React.DOM.small(null, "Investor-backed companies")], null)));
        }(), function() {
          var attrs12679 = clustermap.formats.number.fnum.call(null, self__.ic_count, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12679) ? sablono.interpreter.attributes.call(null, attrs12679) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12679) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Investors")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12679), React.DOM.small(null, "Investors")], null)));
        }(), function() {
          var attrs12684 = clustermap.formats.number.fnum.call(null, self__.const_count, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12684) ? sablono.interpreter.attributes.call(null, attrs12684) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12684) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12685 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12685) ? sablono.interpreter.attributes.call(null, attrs12685) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12685) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12685)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12684), function() {
            var attrs12686 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12686) ? sablono.interpreter.attributes.call(null, attrs12686) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12686) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12686)], null)));
          }()], null)));
        }(), function() {
          var attrs12687 = clustermap.formats.money.fmoney.call(null, function() {
            var G__12697 = self__.site_stats;
            var G__12697__$1 = G__12697 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12697);
            var G__12697__$2 = G__12697__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12697__$1);
            return G__12697__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12687) ? sablono.interpreter.attributes.call(null, attrs12687) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12687) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12687), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs12692 = clustermap.formats.number.fnum.call(null, function() {
            var G__12698 = self__.site_stats;
            var G__12698__$1 = G__12698 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12698);
            var G__12698__$2 = G__12698__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12698__$1);
            return G__12698__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12692) ? sablono.interpreter.attributes.call(null, attrs12692) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12692) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12692), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm, self__.view_path_fn)));
      };
    }(map__12668, map__12668__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12669.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12668, map__12668__$1, const_count, ic_count, pc_count) {
      return function(_12671) {
        var self__ = this;
        var _12671__$1 = this;
        return self__.meta12670;
      };
    }(map__12668, map__12668__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12669.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12668, map__12668__$1, const_count, ic_count, pc_count) {
      return function(_12671, meta12670__$1) {
        var self__ = this;
        var _12671__$1 = this;
        return new clustermap.components.map_report.t12669(self__.pc_count, self__.ic_count, self__.const_count, self__.map__12668, self__.view_path_fn, self__.comm, self__.site_stats, self__.all_portfolio_companies_summary_report, meta12670__$1);
      };
    }(map__12668, map__12668__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t12669 = function(map__12668, map__12668__$1, const_count, ic_count, pc_count) {
      return function __GT_t12669(pc_count__$1, ic_count__$1, const_count__$1, map__12668__$2, view_path_fn__$1, comm__$1, site_stats__$1, all_portfolio_companies_summary_report__$1, meta12670) {
        return new clustermap.components.map_report.t12669(pc_count__$1, ic_count__$1, const_count__$1, map__12668__$2, view_path_fn__$1, comm__$1, site_stats__$1, all_portfolio_companies_summary_report__$1, meta12670);
      };
    }(map__12668, map__12668__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t12669(pc_count, ic_count, const_count, map__12668__$1, view_path_fn, comm, site_stats, all_portfolio_companies_summary_report, null);
};
clustermap.components.map_report.portfolio_company_report = function portfolio_company_report(portfolio_company, site_stats, comm, path_fn, view_path_fn) {
  var map__12724 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__12724__$1 = cljs.core.seq_QMARK_.call(null, map__12724) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12724) : map__12724;
  var const_count = cljs.core.get.call(null, map__12724__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__12724__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__12724__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t12725 !== "undefined") {
  } else {
    clustermap.components.map_report.t12725 = function(pc_count, path_fn, const_count, portfolio_company, ic_count, map__12724, comm, view_path_fn, portfolio_company_report, site_stats, meta12726) {
      this.pc_count = pc_count;
      this.path_fn = path_fn;
      this.const_count = const_count;
      this.portfolio_company = portfolio_company;
      this.ic_count = ic_count;
      this.map__12724 = map__12724;
      this.comm = comm;
      this.view_path_fn = view_path_fn;
      this.portfolio_company_report = portfolio_company_report;
      this.site_stats = site_stats;
      this.meta12726 = meta12726;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t12725.cljs$lang$type = true;
    clustermap.components.map_report.t12725.cljs$lang$ctorStr = "clustermap.components.map-report/t12725";
    clustermap.components.map_report.t12725.cljs$lang$ctorPrWriter = function(map__12724, map__12724__$1, const_count, ic_count, pc_count) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.map-report/t12725");
      };
    }(map__12724, map__12724__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12725.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t12725.prototype.om$core$IRender$render$arity$1 = function(map__12724, map__12724__$1, const_count, ic_count, pc_count) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.div(null, React.DOM.div({"className":"header secondary"}, React.DOM.h2(null, "Investor-backed company"), function() {
          var attrs12730 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.portfolio_company);
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs12730) ? sablono.interpreter.attributes.call(null, attrs12730) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12730) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12730)], null)));
        }(), sablono.interpreter.interpret.call(null, clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn))), React.DOM.ul(null, function() {
          var attrs12731 = clustermap.formats.number.fnum.call(null, self__.ic_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12731) ? sablono.interpreter.attributes.call(null, attrs12731) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12731) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12732 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12732) ? sablono.interpreter.attributes.call(null, attrs12732) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12732) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12732)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12731), function() {
            var attrs12733 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12733) ? sablono.interpreter.attributes.call(null, attrs12733) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12733) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12733)], null)));
          }()], null)));
        }(), function() {
          var attrs12734 = clustermap.formats.number.fnum.call(null, self__.const_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12734) ? sablono.interpreter.attributes.call(null, attrs12734) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12734) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12735 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12735) ? sablono.interpreter.attributes.call(null, attrs12735) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12735) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12735)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12734), function() {
            var attrs12736 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12736) ? sablono.interpreter.attributes.call(null, attrs12736) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12736) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12736)], null)));
          }()], null)));
        }(), function() {
          var attrs12737 = clustermap.formats.money.fmoney.call(null, function() {
            var G__12747 = self__.site_stats;
            var G__12747__$1 = G__12747 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12747);
            var G__12747__$2 = G__12747__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12747__$1);
            return G__12747__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12737) ? sablono.interpreter.attributes.call(null, attrs12737) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12737) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12737), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs12742 = clustermap.formats.number.fnum.call(null, function() {
            var G__12748 = self__.site_stats;
            var G__12748__$1 = G__12748 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12748);
            var G__12748__$2 = G__12748__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12748__$1);
            return G__12748__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12742) ? sablono.interpreter.attributes.call(null, attrs12742) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12742) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12742), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm, self__.view_path_fn)));
      };
    }(map__12724, map__12724__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12725.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12724, map__12724__$1, const_count, ic_count, pc_count) {
      return function(_12727) {
        var self__ = this;
        var _12727__$1 = this;
        return self__.meta12726;
      };
    }(map__12724, map__12724__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12725.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12724, map__12724__$1, const_count, ic_count, pc_count) {
      return function(_12727, meta12726__$1) {
        var self__ = this;
        var _12727__$1 = this;
        return new clustermap.components.map_report.t12725(self__.pc_count, self__.path_fn, self__.const_count, self__.portfolio_company, self__.ic_count, self__.map__12724, self__.comm, self__.view_path_fn, self__.portfolio_company_report, self__.site_stats, meta12726__$1);
      };
    }(map__12724, map__12724__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t12725 = function(map__12724, map__12724__$1, const_count, ic_count, pc_count) {
      return function __GT_t12725(pc_count__$1, path_fn__$1, const_count__$1, portfolio_company__$1, ic_count__$1, map__12724__$2, comm__$1, view_path_fn__$1, portfolio_company_report__$1, site_stats__$1, meta12726) {
        return new clustermap.components.map_report.t12725(pc_count__$1, path_fn__$1, const_count__$1, portfolio_company__$1, ic_count__$1, map__12724__$2, comm__$1, view_path_fn__$1, portfolio_company_report__$1, site_stats__$1, meta12726);
      };
    }(map__12724, map__12724__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t12725(pc_count, path_fn, const_count, portfolio_company, ic_count, map__12724__$1, comm, view_path_fn, portfolio_company_report, site_stats, null);
};
clustermap.components.map_report.investor_company_report = function investor_company_report(investor_company, site_stats, comm, path_fn, view_path_fn) {
  var map__12774 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__12774__$1 = cljs.core.seq_QMARK_.call(null, map__12774) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12774) : map__12774;
  var const_count = cljs.core.get.call(null, map__12774__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__12774__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__12774__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t12775 !== "undefined") {
  } else {
    clustermap.components.map_report.t12775 = function(pc_count, map__12774, path_fn, const_count, investor_company, ic_count, comm, investor_company_report, view_path_fn, site_stats, meta12776) {
      this.pc_count = pc_count;
      this.map__12774 = map__12774;
      this.path_fn = path_fn;
      this.const_count = const_count;
      this.investor_company = investor_company;
      this.ic_count = ic_count;
      this.comm = comm;
      this.investor_company_report = investor_company_report;
      this.view_path_fn = view_path_fn;
      this.site_stats = site_stats;
      this.meta12776 = meta12776;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t12775.cljs$lang$type = true;
    clustermap.components.map_report.t12775.cljs$lang$ctorStr = "clustermap.components.map-report/t12775";
    clustermap.components.map_report.t12775.cljs$lang$ctorPrWriter = function(map__12774, map__12774__$1, const_count, ic_count, pc_count) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.map-report/t12775");
      };
    }(map__12774, map__12774__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12775.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t12775.prototype.om$core$IRender$render$arity$1 = function(map__12774, map__12774__$1, const_count, ic_count, pc_count) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.div(null, React.DOM.div({"className":"header secondary"}, React.DOM.h2(null, "Investor"), function() {
          var attrs12780 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.investor_company);
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs12780) ? sablono.interpreter.attributes.call(null, attrs12780) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12780) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12780)], null)));
        }(), sablono.interpreter.interpret.call(null, clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn))), React.DOM.ul(null, function() {
          var attrs12781 = clustermap.formats.number.fnum.call(null, self__.pc_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12781) ? sablono.interpreter.attributes.call(null, attrs12781) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12781) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12782 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12782) ? sablono.interpreter.attributes.call(null, attrs12782) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12782) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12782)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12781), function() {
            var attrs12783 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12783) ? sablono.interpreter.attributes.call(null, attrs12783) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12783) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12783)], null)));
          }()], null)));
        }(), function() {
          var attrs12784 = clustermap.formats.number.fnum.call(null, self__.const_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12784) ? sablono.interpreter.attributes.call(null, attrs12784) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12784) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12785 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12785) ? sablono.interpreter.attributes.call(null, attrs12785) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12785) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12785)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12784), function() {
            var attrs12786 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12786) ? sablono.interpreter.attributes.call(null, attrs12786) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12786) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12786)], null)));
          }()], null)));
        }(), function() {
          var attrs12787 = clustermap.formats.money.fmoney.call(null, function() {
            var G__12797 = self__.site_stats;
            var G__12797__$1 = G__12797 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12797);
            var G__12797__$2 = G__12797__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12797__$1);
            return G__12797__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12787) ? sablono.interpreter.attributes.call(null, attrs12787) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12787) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12787), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs12792 = clustermap.formats.number.fnum.call(null, function() {
            var G__12798 = self__.site_stats;
            var G__12798__$1 = G__12798 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12798);
            var G__12798__$2 = G__12798__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12798__$1);
            return G__12798__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12792) ? sablono.interpreter.attributes.call(null, attrs12792) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12792) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12792), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm, self__.view_path_fn)));
      };
    }(map__12774, map__12774__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12775.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12774, map__12774__$1, const_count, ic_count, pc_count) {
      return function(_12777) {
        var self__ = this;
        var _12777__$1 = this;
        return self__.meta12776;
      };
    }(map__12774, map__12774__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12775.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12774, map__12774__$1, const_count, ic_count, pc_count) {
      return function(_12777, meta12776__$1) {
        var self__ = this;
        var _12777__$1 = this;
        return new clustermap.components.map_report.t12775(self__.pc_count, self__.map__12774, self__.path_fn, self__.const_count, self__.investor_company, self__.ic_count, self__.comm, self__.investor_company_report, self__.view_path_fn, self__.site_stats, meta12776__$1);
      };
    }(map__12774, map__12774__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t12775 = function(map__12774, map__12774__$1, const_count, ic_count, pc_count) {
      return function __GT_t12775(pc_count__$1, map__12774__$2, path_fn__$1, const_count__$1, investor_company__$1, ic_count__$1, comm__$1, investor_company_report__$1, view_path_fn__$1, site_stats__$1, meta12776) {
        return new clustermap.components.map_report.t12775(pc_count__$1, map__12774__$2, path_fn__$1, const_count__$1, investor_company__$1, ic_count__$1, comm__$1, investor_company_report__$1, view_path_fn__$1, site_stats__$1, meta12776);
      };
    }(map__12774, map__12774__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t12775(pc_count, map__12774__$1, path_fn, const_count, investor_company, ic_count, comm, investor_company_report, view_path_fn, site_stats, null);
};
clustermap.components.map_report.constituency_report = function constituency_report(constituency, site_stats, comm, path_fn, view_path_fn) {
  var map__12828 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__12828__$1 = cljs.core.seq_QMARK_.call(null, map__12828) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12828) : map__12828;
  var const_count = cljs.core.get.call(null, map__12828__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__12828__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__12828__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t12829 !== "undefined") {
  } else {
    clustermap.components.map_report.t12829 = function(pc_count, path_fn, const_count, ic_count, constituency_report, comm, constituency, view_path_fn, map__12828, site_stats, meta12830) {
      this.pc_count = pc_count;
      this.path_fn = path_fn;
      this.const_count = const_count;
      this.ic_count = ic_count;
      this.constituency_report = constituency_report;
      this.comm = comm;
      this.constituency = constituency;
      this.view_path_fn = view_path_fn;
      this.map__12828 = map__12828;
      this.site_stats = site_stats;
      this.meta12830 = meta12830;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t12829.cljs$lang$type = true;
    clustermap.components.map_report.t12829.cljs$lang$ctorStr = "clustermap.components.map-report/t12829";
    clustermap.components.map_report.t12829.cljs$lang$ctorPrWriter = function(map__12828, map__12828__$1, const_count, ic_count, pc_count) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.map-report/t12829");
      };
    }(map__12828, map__12828__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12829.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t12829.prototype.om$core$IRender$render$arity$1 = function(map__12828, map__12828__$1, const_count, ic_count, pc_count) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.div(null, React.DOM.div({"className":"header secondary"}, React.DOM.h2(null, "Constituency"), function() {
          var attrs12834 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs12834) ? sablono.interpreter.attributes.call(null, attrs12834) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12834) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.br(null), cljs.core.truth_(function() {
            var or__3541__auto__ = (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return(new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            }
          }()) ? React.DOM.small(null, "(", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ", ", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ")") : null], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12834), React.DOM.br(null), cljs.core.truth_(function() {
            var or__3541__auto__ = (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return(new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            }
          }()) ? React.DOM.small(null, "(", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ", ", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ")") : null], null)));
        }(), sablono.interpreter.interpret.call(null, clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn))), React.DOM.ul(null, function() {
          var attrs12839 = clustermap.formats.number.fnum.call(null, self__.pc_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12839) ? sablono.interpreter.attributes.call(null, attrs12839) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12839) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12840 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12840) ? sablono.interpreter.attributes.call(null, attrs12840) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12840) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12840)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12839), function() {
            var attrs12841 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12841) ? sablono.interpreter.attributes.call(null, attrs12841) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12841) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12841)], null)));
          }()], null)));
        }(), function() {
          var attrs12842 = clustermap.formats.number.fnum.call(null, self__.ic_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12842) ? sablono.interpreter.attributes.call(null, attrs12842) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12842) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs12843 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12843) ? sablono.interpreter.attributes.call(null, attrs12843) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12843) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12843)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12842), function() {
            var attrs12844 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs12844) ? sablono.interpreter.attributes.call(null, attrs12844) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12844) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12844)], null)));
          }()], null)));
        }(), function() {
          var attrs12845 = clustermap.formats.money.fmoney.call(null, function() {
            var G__12855 = self__.site_stats;
            var G__12855__$1 = G__12855 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__12855);
            var G__12855__$2 = G__12855__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12855__$1);
            return G__12855__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12845) ? sablono.interpreter.attributes.call(null, attrs12845) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12845) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12845), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs12850 = clustermap.formats.number.fnum.call(null, function() {
            var G__12856 = self__.site_stats;
            var G__12856__$1 = G__12856 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__12856);
            var G__12856__$2 = G__12856__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__12856__$1);
            return G__12856__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs12850) ? sablono.interpreter.attributes.call(null, attrs12850) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12850) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12850), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm, self__.view_path_fn)));
      };
    }(map__12828, map__12828__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12829.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12828, map__12828__$1, const_count, ic_count, pc_count) {
      return function(_12831) {
        var self__ = this;
        var _12831__$1 = this;
        return self__.meta12830;
      };
    }(map__12828, map__12828__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t12829.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12828, map__12828__$1, const_count, ic_count, pc_count) {
      return function(_12831, meta12830__$1) {
        var self__ = this;
        var _12831__$1 = this;
        return new clustermap.components.map_report.t12829(self__.pc_count, self__.path_fn, self__.const_count, self__.ic_count, self__.constituency_report, self__.comm, self__.constituency, self__.view_path_fn, self__.map__12828, self__.site_stats, meta12830__$1);
      };
    }(map__12828, map__12828__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t12829 = function(map__12828, map__12828__$1, const_count, ic_count, pc_count) {
      return function __GT_t12829(pc_count__$1, path_fn__$1, const_count__$1, ic_count__$1, constituency_report__$1, comm__$1, constituency__$1, view_path_fn__$1, map__12828__$2, site_stats__$1, meta12830) {
        return new clustermap.components.map_report.t12829(pc_count__$1, path_fn__$1, const_count__$1, ic_count__$1, constituency_report__$1, comm__$1, constituency__$1, view_path_fn__$1, map__12828__$2, site_stats__$1, meta12830);
      };
    }(map__12828, map__12828__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t12829(pc_count, path_fn, const_count, ic_count, constituency_report, comm, constituency, view_path_fn, map__12828__$1, site_stats, null);
};
clustermap.components.map_report.map_report_component = function map_report_component(data, owner) {
  var map__12861 = om.core.get_shared.call(null, owner);
  var map__12861__$1 = cljs.core.seq_QMARK_.call(null, map__12861) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12861) : map__12861;
  var view_path_fn = cljs.core.get.call(null, map__12861__$1, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 978272186));
  var path_fn = cljs.core.get.call(null, map__12861__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__12861__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "map", "map", 1014012110));
  var type = cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.Keyword(null, "type", "type", 1017479852)], null));
  var value = cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
  var site_stats = (new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", 4568560312)).cljs$core$IFn$_invoke$arity$1(data);
  var pred__12862 = cljs.core._EQ__EQ_;
  var expr__12863 = type;
  if (cljs.core.truth_(pred__12862.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__12863))) {
    return clustermap.components.map_report.portfolio_company_report.call(null, value, site_stats, comm, path_fn__$1, view_path_fn);
  } else {
    if (cljs.core.truth_(pred__12862.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__12863))) {
      return clustermap.components.map_report.investor_company_report.call(null, value, site_stats, comm, path_fn__$1, view_path_fn);
    } else {
      if (cljs.core.truth_(pred__12862.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__12863))) {
        return clustermap.components.map_report.constituency_report.call(null, value, site_stats, comm, path_fn__$1, view_path_fn);
      } else {
        return clustermap.components.map_report.all_portfolio_companies_summary_report.call(null, site_stats, comm, view_path_fn);
      }
    }
  }
};
clustermap.components.map_report.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.map_report.map_report_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared, new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj17290 = {};
  return obj17290;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = secretary.core.route_matches[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = secretary.core.route_matches["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj17292 = {};
  return obj17292;
}();
secretary.core.route_value = function route_value(this$) {
  if (function() {
    var and__3529__auto__ = this$;
    if (and__3529__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__3529__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4168__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3541__auto__ = secretary.core.route_value[goog.typeOf(x__4168__auto__)];
      if (or__3541__auto__) {
        return or__3541__auto__;
      } else {
        var or__3541__auto____$1 = secretary.core.route_value["_"];
        if (or__3541__auto____$1) {
          return or__3541__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj17294 = {};
  return obj17294;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = secretary.core.render_route[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = secretary.core.render_route["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3529__auto__ = this$;
      if (and__3529__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3529__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4168__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3541__auto__ = secretary.core.render_route[goog.typeOf(x__4168__auto__)];
        if (or__3541__auto__) {
          return or__3541__auto__;
        } else {
          var or__3541__auto____$1 = secretary.core.render_route["_"];
          if (or__3541__auto____$1) {
            return or__3541__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__4407__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4408__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4409__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4410__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4411__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("encode-pair", function(method_table__4407__auto__, prefer_table__4408__auto__, method_cache__4409__auto__, cached_hierarchy__4410__auto__, hierarchy__4411__auto__) {
    return function(p__17295) {
      var vec__17296 = p__17295;
      var k = cljs.core.nth.call(null, vec__17296, 0, null);
      var v = cljs.core.nth.call(null, vec__17296, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", 1410725665);
      } else {
        if (function() {
          var or__3541__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__3541__auto__) {
            return or__3541__auto__;
          } else {
            var G__17298 = v;
            if (G__17298) {
              var bit__4191__auto__ = G__17298.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4191__auto__ || G__17298.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__17298.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__17298);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__17298);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", 572371848);
        } else {
          return null;
        }
      }
    };
  }(method_table__4407__auto__, prefer_table__4408__auto__, method_cache__4409__auto__, cached_hierarchy__4410__auto__, hierarchy__4411__auto__), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4411__auto__, method_table__4407__auto__, prefer_table__4408__auto__, method_cache__4409__auto__, cached_hierarchy__4410__auto__);
}();
secretary.core.key_index = function() {
  var key_index = null;
  var key_index__1 = function(k) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[]";
  };
  var key_index__2 = function(k, index) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "]";
  };
  key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return key_index__1.call(this, k);
      case 2:
        return key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  key_index.cljs$core$IFn$_invoke$arity$1 = key_index__1;
  key_index.cljs$core$IFn$_invoke$arity$2 = key_index__2;
  return key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", 1410725665), function(p__17299) {
  var vec__17300 = p__17299;
  var k = cljs.core.nth.call(null, vec__17300, 0, null);
  var v = cljs.core.nth.call(null, vec__17300, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__17300, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__17300, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", 572371848), function(p__17301) {
  var vec__17302 = p__17301;
  var k = cljs.core.nth.call(null, vec__17302, 0, null);
  var v = cljs.core.nth.call(null, vec__17302, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__17302, k, v) {
    return function(p__17303) {
      var vec__17304 = p__17303;
      var ik = cljs.core.nth.call(null, vec__17304, 0, null);
      var iv = cljs.core.nth.call(null, vec__17304, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__17302, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", 2558708147), function(p__17305) {
  var vec__17306 = p__17305;
  var k = cljs.core.nth.call(null, vec__17306, 0, null);
  var v = cljs.core.nth.call(null, vec__17306, 1, null);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.encode.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)));
});
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__17309) {
      var vec__17310 = p__17309;
      var _ = cljs.core.nth.call(null, vec__17310, 0, null);
      var part = cljs.core.nth.call(null, vec__17310, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return part;
          } else {
            return null;
          }
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__17312 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__17312, 0, null);
  var key = cljs.core.nth.call(null, vec__17312, 1, null);
  var path = cljs.core.nth.call(null, vec__17312, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__17314 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__17314, 0, null);
      var v = cljs.core.nth.call(null, vec__17314, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + "\\" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__17318) {
    var vec__17319 = p__17318;
    var re = cljs.core.nth.call(null, vec__17319, 0, null);
    var action = cljs.core.nth.call(null, vec__17319, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__17320 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__17320, 0, null);
      var c = cljs.core.nth.call(null, vec__17320, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__17323 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__17323, 0, null);
      var vec__17324 = cljs.core.nth.call(null, vec__17323, 1, null);
      var r = cljs.core.nth.call(null, vec__17324, 0, null);
      var p = cljs.core.nth.call(null, vec__17324, 1, null);
      var G__17325 = s__$2;
      var G__17326 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r);
      var G__17327 = cljs.core.conj.call(null, params, p);
      s__$1 = G__17325;
      pattern = G__17326;
      params = G__17327;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + "$"), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", 1013904284);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__17333 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__17333, 0, null);
  var params = cljs.core.nth.call(null, vec__17333, 1, null);
  if (typeof secretary.core.t17334 !== "undefined") {
  } else {
    secretary.core.t17334 = function(params, re, vec__17333, clauses, orig_route, compile_route, meta17335) {
      this.params = params;
      this.re = re;
      this.vec__17333 = vec__17333;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta17335 = meta17335;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t17334.cljs$lang$type = true;
    secretary.core.t17334.cljs$lang$ctorStr = "secretary.core/t17334";
    secretary.core.t17334.cljs$lang$ctorPrWriter = function(clauses, vec__17333, re, params) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "secretary.core/t17334");
      };
    }(clauses, vec__17333, re, params);
    secretary.core.t17334.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t17334.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__17333, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__17337 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__17337, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__17337, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__17333, re, params);
    secretary.core.t17334.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t17334.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__17333, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__17333, re, params);
    secretary.core.t17334.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__17333, re, params) {
      return function(_17336) {
        var self__ = this;
        var _17336__$1 = this;
        return self__.meta17335;
      };
    }(clauses, vec__17333, re, params);
    secretary.core.t17334.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__17333, re, params) {
      return function(_17336, meta17335__$1) {
        var self__ = this;
        var _17336__$1 = this;
        return new secretary.core.t17334(self__.params, self__.re, self__.vec__17333, self__.clauses, self__.orig_route, self__.compile_route, meta17335__$1);
      };
    }(clauses, vec__17333, re, params);
    secretary.core.__GT_t17334 = function(clauses, vec__17333, re, params) {
      return function __GT_t17334(params__$1, re__$1, vec__17333__$1, clauses__$1, orig_route__$1, compile_route__$1, meta17335) {
        return new secretary.core.t17334(params__$1, re__$1, vec__17333__$1, clauses__$1, orig_route__$1, compile_route__$1, meta17335);
      };
    }(clauses, vec__17333, re, params);
  }
  return new secretary.core.t17334(params, re, vec__17333, clauses, orig_route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__17339 = obj;
      if (G__17339) {
        var bit__4191__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = bit__4191__auto__;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return G__17339.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__17339.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__17339);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__17339);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__17340) {
    var obj = cljs.core.first(arglist__17340);
    var args = cljs.core.rest(arglist__17340);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__17343) {
      var vec__17344 = p__17343;
      var x = cljs.core.nth.call(null, vec__17344, 0, null);
      var _ = cljs.core.nth.call(null, vec__17344, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__17347) {
    var vec__17348 = p__17347;
    var compiled_route = cljs.core.nth.call(null, vec__17348, 0, null);
    var action = cljs.core.nth.call(null, vec__17348, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", 3885920680), action, new cljs.core.Keyword(null, "params", "params", 4313443576), params, new cljs.core.Keyword(null, "route", "route", 1122608571), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 1122608571)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__17351 = clojure.string.split.call(null, uri, /\?/);
  var uri_path = cljs.core.nth.call(null, vec__17351, 0, null);
  var query_string = cljs.core.nth.call(null, vec__17351, 1, null);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__17352 = secretary.core.locate_route.call(null, uri_path);
  var map__17352__$1 = cljs.core.seq_QMARK_.call(null, map__17352) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17352) : map__17352;
  var params = cljs.core.get.call(null, map__17352__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
  var action = cljs.core.get.call(null, map__17352__$1, new cljs.core.Keyword(null, "action", "action", 3885920680));
  var action__$1 = function() {
    var or__3541__auto__ = action;
    if (cljs.core.truth_(or__3541__auto__)) {
      return or__3541__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__17353 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__17353, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__17353, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__17354 = params;
  var map__17354__$1 = cljs.core.seq_QMARK_.call(null, map__17354) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17354) : map__17354;
  var m = map__17354__$1;
  var query_params = cljs.core.get.call(null, map__17354__$1, new cljs.core.Keyword(null, "query-params", "query-params", 1080249757));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__17354, map__17354__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.deref.call(null, a).call(null, lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__17354, map__17354__$1, m, query_params, a));
  var path__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836)], null))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path);
  var temp__4124__auto__ = function() {
    var and__3529__auto__ = query_params;
    if (cljs.core.truth_(and__3529__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3529__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var query_string = temp__4124__auto__;
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path__$1) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_string);
  } else {
    return path__$1;
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if (specials.indexOf(query.slice(-1)) >= 0) {
      query += " * ";
    } else {
      query += " ";
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e));
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if (inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if (specials.indexOf(tv) < 0) {
          currentPart.tag = tv;
        } else {
          currentPart.oper = tv;
        }
        inTag = -1;
      }
    };
    var endId = function() {
      if (inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1;
      }
    };
    var endClass = function() {
      if (inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1;
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass();
    };
    var endPart = function() {
      endAll();
      if (inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)});
      }
      currentPart.loops = currentPart.pseudos.length || (currentPart.attrs.length || currentPart.classes.length);
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if (currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase();
      }
      if (queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query;
      }
      queryParts.push(currentPart);
      currentPart = null;
    };
    for (;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if (lc == "\\") {
        continue;
      }
      if (!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag;
        }};
        inTag = x;
      }
      if (inBrackets >= 0) {
        if (cc == "]") {
          if (!cp.attr) {
            cp.attr = ts(inBrackets + 1, x);
          } else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x);
          }
          var cmf = cp.matchFor;
          if (cmf) {
            if (cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1);
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1;
        } else {
          if (cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1;
          }
        }
      } else {
        if (inParens >= 0) {
          if (cc == ")") {
            if (inPseudo >= 0) {
              cp.value = ts(inParens + 1, x);
            }
            inPseudo = inParens = -1;
          }
        } else {
          if (cc == "#") {
            endAll();
            inId = x + 1;
          } else {
            if (cc == ".") {
              endAll();
              inClass = x;
            } else {
              if (cc == ":") {
                endAll();
                inPseudo = x;
              } else {
                if (cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {};
                } else {
                  if (cc == "(") {
                    if (inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp);
                    }
                    inParens = x;
                  } else {
                    if (cc == " " && lc != cc) {
                      endPart();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts;
  };
  var agree = function(first, second) {
    if (!first) {
      return second;
    }
    if (!second) {
      return first;
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments);
    };
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if (i) {
      r.push(i);
    }
    return r;
  }
  var isElement = function(n) {
    return 1 == n.nodeType;
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if (!elem) {
      return blank;
    }
    if (attr == "class") {
      return elem.className || blank;
    }
    if (attr == "for") {
      return elem.htmlFor || blank;
    }
    if (attr == "style") {
      return elem.style.cssText || blank;
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank;
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0;
    };
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0;
    };
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length;
    };
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0;
    };
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0;
    };
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value;
    };
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while (node = node[pSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var _lookRight = function(node) {
    while (node = node[nSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if (!tret) {
      return-1;
    }
    var l = tret.length;
    if (cl == l && (ci >= 0 && cl >= 0)) {
      return ci;
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for (;te;te = te[nSibling]) {
      if (simpleNodeTest(te)) {
        te["_i"] = ++i;
        if (node === te) {
          ci = i;
        }
      }
    }
    return ci;
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2);
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2;
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"];
    };
  }, "first-child":function() {
    return _lookLeft;
  }, "last-child":function() {
    return _lookRight;
  }, "only-child":function(name, condition) {
    return function(node) {
      if (!_lookLeft(node)) {
        return false;
      }
      if (!_lookRight(node)) {
        return false;
      }
      return true;
    };
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for (var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if (nt === 1 || nt == 3) {
          return false;
        }
      }
      return true;
    };
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if (cz == '"' || cz == "'") {
      condition = condition.slice(1, -1);
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0;
    };
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if (p.tag != "*") {
      ignores.tag = 1;
    }
    if (!p.classes.length) {
      ignores.classes = 1;
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem);
    };
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10);
    }
    if (condition == "odd") {
      return isOdd;
    } else {
      if (condition == "even") {
        return isEven;
      }
    }
    if (condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if (pred > 0) {
        if (idx < 0) {
          idx = idx % pred && pred + idx % pred;
        } else {
          if (idx > 0) {
            if (idx >= pred) {
              lb = idx - idx % pred;
            }
            idx = idx % pred;
          }
        }
      } else {
        if (pred < 0) {
          pred *= -1;
          if (idx > 0) {
            ub = idx;
            idx = idx % pred;
          }
        }
      }
      if (pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && ((ub < 0 || i <= ub) && i % pred == idx);
        };
      } else {
        condition = idx;
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount;
    };
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if (clc == "class") {
      cond = "className";
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc];
    };
  } : function(cond) {
    return function(elem) {
      return elem && (elem.getAttribute && elem.hasAttribute(cond));
    };
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if (!query) {
      return goog.functions.TRUE;
    }
    ignores = ignores || {};
    var ff = null;
    if (!ignores.el) {
      ff = agree(ff, isElement);
    }
    if (!ignores.tag) {
      if (query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag();
        });
      }
    }
    if (!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className);
        });
        ff.count = idx;
      });
    }
    if (!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if (pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value));
        }
      });
    }
    if (!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if (attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor);
        } else {
          if (a.length) {
            matcher = defaultGetter(a);
          }
        }
        if (matcher) {
          ff = agree(ff, matcher);
        }
      });
    }
    if (!ignores.id) {
      if (query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id;
        });
      }
    }
    if (!ff) {
      if (!("default" in ignores)) {
        ff = goog.functions.TRUE;
      }
    }
    return ff;
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while (node = node[nSibling]) {
        if (noNextElementSibling && !isElement(node)) {
          continue;
        }
        if ((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node);
        }
        break;
      }
      return ret;
    };
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while (te) {
        if (simpleNodeTest(te)) {
          if (bag && !_isUnique(te, bag)) {
            break;
          }
          if (filterFunc(te)) {
            ret.push(te);
          }
        }
        te = te[nSibling];
      }
      return ret;
    };
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while (te = tret[x++]) {
        if (simpleNodeTest(te) && ((!bag || _isUnique(te, bag)) && filterFunc(te, x))) {
          ret.push(te);
        }
      }
      return ret;
    };
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while (pn) {
      if (pn == root) {
        break;
      }
      pn = pn.parentNode;
    }
    return!!pn;
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if (retFunc) {
      return retFunc;
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if (!oper) {
      if (query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if (!te || !filterFunc(te)) {
            return;
          }
          if (9 == root.nodeType) {
            return getArr(te, arr);
          } else {
            if (_isDescendant(te, root)) {
              return getArr(te, arr);
            }
          }
        };
      } else {
        if (ecs && (/\{\s*\[native code\]\s*\}/.test(String(ecs)) && (query.classes.length && !cssCaseBug))) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while (te = tret[x++]) {
              if (filterFunc(te, root)) {
                ret.push(te);
              }
            }
            return ret;
          };
        } else {
          if (!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                ret.push(te);
              }
              return ret;
            };
          } else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                if (filterFunc(te, root)) {
                  ret.push(te);
                }
              }
              return ret;
            };
          }
        }
      }
    } else {
      var skipFilters = {el:1};
      if (wildcardTag) {
        skipFilters.tag = 1;
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if ("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc);
      } else {
        if ("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc);
        } else {
          if ("\x3e" == oper) {
            retFunc = _childElements(filterFunc);
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc;
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for (var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if (x > 0) {
        bag = {};
        ret.nozip = true;
      }
      var gef = getElementsFunc(qp);
      for (var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag);
      }
      if (!ret.length) {
        break;
      }
      candidates = ret;
    }
    return ret;
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if (qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if (r) {
          r.nozip = true;
        }
        return r;
      };
    }
    return function(root) {
      return filterDown(root, qparts);
    };
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if (qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if (qsaCached && !opt_forceDOM) {
        return qsaCached;
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if (domCached) {
      return domCached;
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if (query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true;
    }
    var useQSA = qsaAvail && (!opt_forceDOM && (specials.indexOf(qcz) == -1 && ((!goog.userAgent.IE || query.indexOf(":") == -1) && (!(cssCaseBug && query.indexOf(".") >= 0) && (query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1)))));
    if (useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if (!(9 == root.nodeType || nospace)) {
            throw "";
          }
          var r = root[qsa](tq);
          if (goog.userAgent.IE) {
            r.commentStrip = true;
          } else {
            r.nozip = true;
          }
          return r;
        } catch (e) {
          return getQueryFunc(query, true)(root);
        }
      };
    } else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while (tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root));
        }
        return ret;
      };
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if (caseSensitive) {
      return node.getAttribute("_uid") || (node.setAttribute("_uid", ++_zipIdx) || _zipIdx);
    } else {
      return node.uniqueID;
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx);
  };
  var _isUnique = function(node, bag) {
    if (!bag) {
      return 1;
    }
    var id = _nodeUID(node);
    if (!bag[id]) {
      return bag[id] = 1;
    }
    return 0;
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if (arr && arr.nozip) {
      return arr;
    }
    var ret = [];
    if (!arr || !arr.length) {
      return ret;
    }
    if (arr[0]) {
      ret.push(arr[0]);
    }
    if (arr.length < 2) {
      return ret;
    }
    _zipIdx++;
    if (goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for (var x = 1, te;te = arr[x];x++) {
        if (arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te);
        }
        te.setAttribute(_zipIdxName, szidx);
      }
    } else {
      if (goog.userAgent.IE && arr.commentStrip) {
        try {
          for (var x = 1, te;te = arr[x];x++) {
            if (isElement(te)) {
              ret.push(te);
            }
          }
        } catch (e) {
        }
      } else {
        if (arr[0]) {
          arr[0][_zipIdxName] = _zipIdx;
        }
        for (var x = 1, te;te = arr[x];x++) {
          if (arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te);
          }
          te[_zipIdxName] = _zipIdx;
        }
      }
    }
    return ret;
  };
  var query = function(query, root) {
    if (!query) {
      return[];
    }
    if (query.constructor == Array) {
      return(query);
    }
    if (!goog.isString(query)) {
      return[query];
    }
    if (goog.isString(root)) {
      root = goog.dom.getElement(root);
      if (!root) {
        return[];
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || (goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion));
    var r = getQueryFunc(query)(root);
    if (r && r.nozip) {
      return r;
    }
    return _zip(r);
  };
  query.pseudos = pseudos;
  return query;
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr);
  };
  var sel__2 = function(base, expr) {
    if (typeof domina.css.t17881 !== "undefined") {
    } else {
      domina.css.t17881 = function(expr, base, sel, meta17882) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta17882 = meta17882;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.css.t17881.cljs$lang$type = true;
      domina.css.t17881.cljs$lang$ctorStr = "domina.css/t17881";
      domina.css.t17881.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "domina.css/t17881");
      };
      domina.css.t17881.prototype.domina$DomContent$ = true;
      domina.css.t17881.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__17876_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__17876_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base));
      };
      domina.css.t17881.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__17877_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__17877_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base))));
      };
      domina.css.t17881.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17883) {
        var self__ = this;
        var _17883__$1 = this;
        return self__.meta17882;
      };
      domina.css.t17881.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17883, meta17882__$1) {
        var self__ = this;
        var _17883__$1 = this;
        return new domina.css.t17881(self__.expr, self__.base, self__.sel, meta17882__$1);
      };
      domina.css.__GT_t17881 = function __GT_t17881(expr__$1, base__$1, sel__$1, meta17882) {
        return new domina.css.t17881(expr__$1, base__$1, sel__$1, meta17882);
      };
    }
    return new domina.css.t17881(expr, base, sel, null);
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel;
}();
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3529__auto__)) {
      return doc.setProperty;
    } else {
      return and__3529__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Could not find XPath support in this browser.");
      } else {
        return null;
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__18336 = i + 1;
        var G__18337 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__18336;
        acc = G__18337;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t18341 !== "undefined") {
    } else {
      domina.xpath.t18341 = function(expr, base, xpath, meta18342) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta18342 = meta18342;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t18341.cljs$lang$type = true;
      domina.xpath.t18341.cljs$lang$ctorStr = "domina.xpath/t18341";
      domina.xpath.t18341.cljs$lang$ctorPrWriter = function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "domina.xpath/t18341");
      };
      domina.xpath.t18341.prototype.domina$DomContent$ = true;
      domina.xpath.t18341.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
      };
      domina.xpath.t18341.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
      };
      domina.xpath.t18341.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18343) {
        var self__ = this;
        var _18343__$1 = this;
        return self__.meta18342;
      };
      domina.xpath.t18341.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18343, meta18342__$1) {
        var self__ = this;
        var _18343__$1 = this;
        return new domina.xpath.t18341(self__.expr, self__.base, self__.xpath, meta18342__$1);
      };
      domina.xpath.__GT_t18341 = function __GT_t18341(expr__$1, base__$1, xpath__$1, meta18342) {
        return new domina.xpath.t18341(expr__$1, base__$1, xpath__$1, meta18342);
      };
    }
    return new domina.xpath.t18341(expr, base, xpath, null);
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("clustermap.nav");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("cljs.core.async");
goog.require("domina.css");
goog.require("domina");
goog.require("jayq.core");
goog.require("domina");
goog.require("cljs.core.async");
goog.require("domina.events");
goog.require("domina.events");
goog.require("jayq.core");
goog.require("domina.css");
goog.require("domina.xpath");
goog.require("domina.xpath");
clustermap.nav.init_bootstrap_tooltips = function init_bootstrap_tooltips() {
  return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']").tooltip();
};
clustermap.nav.handle_toggle_nav_search = function handle_toggle_nav_search() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav .search \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(e) {
    var target = domina.events.target.call(null, e);
    var parent = domina.xpath.xpath.call(null, target, "..");
    domina.events.prevent_default.call(null, e);
    domina.toggle_class_BANG_.call(null, parent, "open");
    return jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, domina.css.sel.call(null, "#search")))).toggle();
  });
};
clustermap.nav.handle_hide_show_map_report = function handle_hide_show_map_report() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#map-report \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(e) {
    var target = domina.events.target.call(null, e);
    var mr = domina.css.sel.call(null, "#map-report");
    domina.events.prevent_default.call(null, e);
    if (cljs.core.truth_(domina.has_class_QMARK_.call(null, mr, "open"))) {
      domina.remove_class_BANG_.call(null, mr, "open");
      return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "-270px"], null), 400);
    } else {
      if (true) {
        domina.add_class_BANG_.call(null, mr, "open");
        return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "0px"], null), 400);
      } else {
        return null;
      }
    }
  });
};
clustermap.nav.body_view_classes = new cljs.core.PersistentArrayMap(null, 2, ["map", "view-map", "lists", "view-lists"], null);
clustermap.nav.change_view = function change_view(view) {
  if (cljs.core.truth_(cljs.core.get.call(null, clustermap.nav.body_view_classes, view))) {
  } else {
    throw new Error("unknown view: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view));
  }
  var body = domina.css.sel.call(null, "body");
  var target_selector = "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view);
  var target_li = domina.css.sel.call(null, target_selector);
  var ul = domina.xpath.xpath.call(null, target_li, "..");
  var active_li = domina.css.sel.call(null, ul, "\x3e .active");
  domina.remove_class_BANG_.call(null, active_li, "active");
  domina.add_class_BANG_.call(null, target_li, "active");
  var seq__13120_13126 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__13121_13127 = null;
  var count__13122_13128 = 0;
  var i__13123_13129 = 0;
  while (true) {
    if (i__13123_13129 < count__13122_13128) {
      var vec__13124_13130 = cljs.core._nth.call(null, chunk__13121_13127, i__13123_13129);
      var v_13131 = cljs.core.nth.call(null, vec__13124_13130, 0, null);
      var body_class_13132 = cljs.core.nth.call(null, vec__13124_13130, 1, null);
      if (cljs.core._EQ_.call(null, v_13131, view)) {
        domina.add_class_BANG_.call(null, body, body_class_13132);
      } else {
        domina.remove_class_BANG_.call(null, body, body_class_13132);
      }
      var G__13133 = seq__13120_13126;
      var G__13134 = chunk__13121_13127;
      var G__13135 = count__13122_13128;
      var G__13136 = i__13123_13129 + 1;
      seq__13120_13126 = G__13133;
      chunk__13121_13127 = G__13134;
      count__13122_13128 = G__13135;
      i__13123_13129 = G__13136;
      continue;
    } else {
      var temp__4126__auto___13137 = cljs.core.seq.call(null, seq__13120_13126);
      if (temp__4126__auto___13137) {
        var seq__13120_13138__$1 = temp__4126__auto___13137;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13120_13138__$1)) {
          var c__4297__auto___13139 = cljs.core.chunk_first.call(null, seq__13120_13138__$1);
          var G__13140 = cljs.core.chunk_rest.call(null, seq__13120_13138__$1);
          var G__13141 = c__4297__auto___13139;
          var G__13142 = cljs.core.count.call(null, c__4297__auto___13139);
          var G__13143 = 0;
          seq__13120_13126 = G__13140;
          chunk__13121_13127 = G__13141;
          count__13122_13128 = G__13142;
          i__13123_13129 = G__13143;
          continue;
        } else {
          var vec__13125_13144 = cljs.core.first.call(null, seq__13120_13138__$1);
          var v_13145 = cljs.core.nth.call(null, vec__13125_13144, 0, null);
          var body_class_13146 = cljs.core.nth.call(null, vec__13125_13144, 1, null);
          if (cljs.core._EQ_.call(null, v_13145, view)) {
            domina.add_class_BANG_.call(null, body, body_class_13146);
          } else {
            domina.remove_class_BANG_.call(null, body, body_class_13146);
          }
          var G__13147 = cljs.core.next.call(null, seq__13120_13138__$1);
          var G__13148 = null;
          var G__13149 = 0;
          var G__13150 = 0;
          seq__13120_13126 = G__13147;
          chunk__13121_13127 = G__13148;
          count__13122_13128 = G__13149;
          i__13123_13129 = G__13150;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return jayq.core.$.call(null, document).trigger("clustermap-change-view");
};
clustermap.nav.handle_view_switches = function handle_view_switches(comm) {
  var seq__13157 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__13158 = null;
  var count__13159 = 0;
  var i__13160 = 0;
  while (true) {
    if (i__13160 < count__13159) {
      var vec__13161 = cljs.core._nth.call(null, chunk__13158, i__13160);
      var v = cljs.core.nth.call(null, vec__13161, 0, null);
      var _ = cljs.core.nth.call(null, vec__13161, 1, null);
      domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(seq__13157, chunk__13158, count__13159, i__13160, vec__13161, v, _) {
        return function(e) {
          domina.events.prevent_default.call(null, e);
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), v], null));
        };
      }(seq__13157, chunk__13158, count__13159, i__13160, vec__13161, v, _));
      var G__13163 = seq__13157;
      var G__13164 = chunk__13158;
      var G__13165 = count__13159;
      var G__13166 = i__13160 + 1;
      seq__13157 = G__13163;
      chunk__13158 = G__13164;
      count__13159 = G__13165;
      i__13160 = G__13166;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__13157);
      if (temp__4126__auto__) {
        var seq__13157__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13157__$1)) {
          var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__13157__$1);
          var G__13167 = cljs.core.chunk_rest.call(null, seq__13157__$1);
          var G__13168 = c__4297__auto__;
          var G__13169 = cljs.core.count.call(null, c__4297__auto__);
          var G__13170 = 0;
          seq__13157 = G__13167;
          chunk__13158 = G__13168;
          count__13159 = G__13169;
          i__13160 = G__13170;
          continue;
        } else {
          var vec__13162 = cljs.core.first.call(null, seq__13157__$1);
          var v = cljs.core.nth.call(null, vec__13162, 0, null);
          var _ = cljs.core.nth.call(null, vec__13162, 1, null);
          domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(seq__13157, chunk__13158, count__13159, i__13160, vec__13162, v, _, seq__13157__$1, temp__4126__auto__) {
            return function(e) {
              domina.events.prevent_default.call(null, e);
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), v], null));
            };
          }(seq__13157, chunk__13158, count__13159, i__13160, vec__13162, v, _, seq__13157__$1, temp__4126__auto__));
          var G__13171 = cljs.core.next.call(null, seq__13157__$1);
          var G__13172 = null;
          var G__13173 = 0;
          var G__13174 = 0;
          seq__13157 = G__13171;
          chunk__13158 = G__13172;
          count__13159 = G__13173;
          i__13160 = G__13174;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.nav.init = function init(comm) {
  clustermap.nav.init_bootstrap_tooltips.call(null);
  clustermap.nav.handle_toggle_nav_search.call(null);
  clustermap.nav.handle_hide_show_map_report.call(null);
  return clustermap.nav.handle_view_switches.call(null, comm);
};
goog.provide("clustermap.components.page_title");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.page_title.describe_type = function describe_type(type) {
  var pred__12868 = cljs.core._EQ_;
  var expr__12869 = type;
  if (cljs.core.truth_(pred__12868.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__12869))) {
    return "Investor-backed company";
  } else {
    if (cljs.core.truth_(pred__12868.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__12869))) {
      return "Investor";
    } else {
      if (cljs.core.truth_(pred__12868.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__12869))) {
        return "Constituency";
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__12869));
      }
    }
  }
};
clustermap.components.page_title.page_title_component = function page_title_component(p__12871, owner) {
  var map__12882 = p__12871;
  var map__12882__$1 = cljs.core.seq_QMARK_.call(null, map__12882) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12882) : map__12882;
  var selection = map__12882__$1;
  var value = cljs.core.get.call(null, map__12882__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  var type = cljs.core.get.call(null, map__12882__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var map__12883 = om.core.get_shared.call(null, owner);
  var map__12883__$1 = cljs.core.seq_QMARK_.call(null, map__12883) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12883) : map__12883;
  var view_path_fn = cljs.core.get.call(null, map__12883__$1, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 978272186));
  var path_fn = cljs.core.get.call(null, map__12883__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__12883__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", 1116886791));
  var type_descr = function() {
    var G__12884 = selection;
    var G__12884__$1 = G__12884 == null ? null : (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(G__12884);
    var G__12884__$2 = G__12884__$1 == null ? null : clustermap.components.page_title.describe_type.call(null, G__12884__$1);
    return G__12884__$2;
  }();
  var name = function() {
    var G__12885 = selection;
    var G__12885__$1 = G__12885 == null ? null : (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__12885);
    var G__12885__$2 = G__12885__$1 == null ? null : (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(G__12885__$1);
    return G__12885__$2;
  }();
  var url = function() {
    var G__12886 = selection;
    var G__12886__$1 = G__12886 == null ? null : (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__12886);
    var G__12886__$2 = G__12886__$1 == null ? null : (new cljs.core.Keyword(null, "web_url", "web_url", 2237655414)).cljs$core$IFn$_invoke$arity$1(G__12886__$1);
    return G__12886__$2;
  }();
  if (typeof clustermap.components.page_title.t12887 !== "undefined") {
  } else {
    clustermap.components.page_title.t12887 = function(p__12871, selection, owner, path_fn, type_descr, map__12882, map__12883, value, name, comm, page_title_component, type, view_path_fn, url, meta12888) {
      this.p__12871 = p__12871;
      this.selection = selection;
      this.owner = owner;
      this.path_fn = path_fn;
      this.type_descr = type_descr;
      this.map__12882 = map__12882;
      this.map__12883 = map__12883;
      this.value = value;
      this.name = name;
      this.comm = comm;
      this.page_title_component = page_title_component;
      this.type = type;
      this.view_path_fn = view_path_fn;
      this.url = url;
      this.meta12888 = meta12888;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.page_title.t12887.cljs$lang$type = true;
    clustermap.components.page_title.t12887.cljs$lang$ctorStr = "clustermap.components.page-title/t12887";
    clustermap.components.page_title.t12887.cljs$lang$ctorPrWriter = function(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.page-title/t12887");
      };
    }(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type);
    clustermap.components.page_title.t12887.prototype.om$core$IRender$ = true;
    clustermap.components.page_title.t12887.prototype.om$core$IRender$render$arity$1 = function(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type) {
      return function(this__9412__auto__) {
        var self__ = this;
        var this__9412__auto____$1 = this;
        return React.DOM.div({"id":"page-title"}, React.DOM.a({"className":"btn btn-link", "href":self__.view_path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110))}, "View on map"), sablono.interpreter.interpret.call(null, cljs.core.truth_(self__.type_descr) ? clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn) : null), function() {
          var attrs12890 = function() {
            var or__3541__auto__ = self__.type_descr;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return "All investor-backed companies";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h2, cljs.core.map_QMARK_.call(null, attrs12890) ? sablono.interpreter.attributes.call(null, attrs12890) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12890) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs12890)], null)));
        }(), function() {
          var attrs12891 = function() {
            var or__3541__auto__ = self__.name;
            if (cljs.core.truth_(or__3541__auto__)) {
              return or__3541__auto__;
            } else {
              return "UK wide";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs12891) ? sablono.interpreter.attributes.call(null, attrs12891) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs12891) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696)) ? new cljs.core.PersistentVector(null, 
          6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 1123453049), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs12891), sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696)) ? new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 1123453049), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 
          2564439702)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null)));
        }(), cljs.core.truth_(self__.url) ? React.DOM.a({"href":self__.url, "target":"_blank"}, sablono.interpreter.interpret.call(null, self__.url)) : null);
      };
    }(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type);
    clustermap.components.page_title.t12887.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type) {
      return function(_12889) {
        var self__ = this;
        var _12889__$1 = this;
        return self__.meta12888;
      };
    }(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type);
    clustermap.components.page_title.t12887.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type) {
      return function(_12889, meta12888__$1) {
        var self__ = this;
        var _12889__$1 = this;
        return new clustermap.components.page_title.t12887(self__.p__12871, self__.selection, self__.owner, self__.path_fn, self__.type_descr, self__.map__12882, self__.map__12883, self__.value, self__.name, self__.comm, self__.page_title_component, self__.type, self__.view_path_fn, self__.url, meta12888__$1);
      };
    }(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type);
    clustermap.components.page_title.__GT_t12887 = function(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type) {
      return function __GT_t12887(p__12871__$1, selection__$1, owner__$1, path_fn__$2, type_descr__$1, map__12882__$2, map__12883__$2, value__$1, name__$1, comm__$1, page_title_component__$1, type__$1, view_path_fn__$1, url__$1, meta12888) {
        return new clustermap.components.page_title.t12887(p__12871__$1, selection__$1, owner__$1, path_fn__$2, type_descr__$1, map__12882__$2, map__12883__$2, value__$1, name__$1, comm__$1, page_title_component__$1, type__$1, view_path_fn__$1, url__$1, meta12888);
      };
    }(map__12883, map__12883__$1, view_path_fn, path_fn, comm, path_fn__$1, type_descr, name, url, map__12882, map__12882__$1, selection, value, type);
  }
  return new clustermap.components.page_title.t12887(p__12871, selection, owner, path_fn__$1, type_descr, map__12882__$1, map__12883__$1, value, name, comm, page_title_component, type, view_path_fn, url, null);
};
clustermap.components.page_title.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.om.burrow.call(null, clustermap.components.page_title.page_title_component, new cljs.core.Keyword(null, "selection", "selection", 3592905982)), app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared, new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("clustermap.components.map");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.boundarylines");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("clustermap.rtree");
goog.require("om.dom");
goog.require("clustermap.rtree");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("clustermap.boundarylines");
goog.require("jayq.core");
goog.require("om.core");
goog.require("om.core");
goog.require("hiccups.runtime");
clustermap.components.map.initial_bounds = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [59.54, 2.3], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [49.29, -11.29], null)], null);
clustermap.components.map.locate_map = function locate_map(m) {
  return m.fitBounds(cljs.core.clj__GT_js.call(null, clustermap.components.map.initial_bounds), cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["paddingTopLeft", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), "paddingBottomRight", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null)));
};
clustermap.components.map.api_key = function() {
  var or__3541__auto__ = function() {
    var G__12495 = config;
    var G__12495__$1 = G__12495 == null ? null : G__12495.components;
    var G__12495__$2 = G__12495__$1 == null ? null : G__12495__$1.map;
    var G__12495__$3 = G__12495__$2 == null ? null : G__12495__$2.api_key;
    return G__12495__$3;
  }();
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return "mccraigmccraig.h4f921b9";
  }
}();
clustermap.components.map.create_map = function create_map(id_or_el) {
  var m = L.map.call(null, id_or_el, {"zoomControl":false});
  var tiles = L.mapbox.tileLayer.call(null, clustermap.components.map.api_key, {"detectRetina":cljs.core.not.call(null, config.repl)});
  var zoom = L.control.zoom.call(null, {"position":"bottomright"});
  m.addLayer(tiles);
  m.addControl(zoom);
  clustermap.components.map.locate_map.call(null, m);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", 4353500414), m, new cljs.core.Keyword(null, "markers", "markers", 1853155051), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "paths", "paths", 1120343136), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "path-selections", "path-selections", 512369281), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY)], 
  null);
};
clustermap.components.map.geojson_point_bounds = function geojson_point_bounds(longlats) {
  var s = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.last, longlats));
  var w = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.first, longlats));
  var n = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.last, longlats));
  var e = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.first, longlats));
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = s;
    if (cljs.core.truth_(and__3529__auto__)) {
      var and__3529__auto____$1 = w;
      if (cljs.core.truth_(and__3529__auto____$1)) {
        var and__3529__auto____$2 = n;
        if (cljs.core.truth_(and__3529__auto____$2)) {
          return e;
        } else {
          return and__3529__auto____$2;
        }
      } else {
        return and__3529__auto____$1;
      }
    } else {
      return and__3529__auto__;
    }
  }())) {
    return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, w], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, e], null)], null)));
  } else {
    return null;
  }
};
clustermap.components.map.pan_to_show = function() {
  var pan_to_show__delegate = function(m, all_bounds) {
    if (cljs.core.truth_(cljs.core.not_empty.call(null, all_bounds))) {
      var fb = cljs.core.first.call(null, all_bounds);
      var fb_copy = new L.LatLngBounds(fb.getSouthWest(), fb.getNorthEast());
      var super_bounds = cljs.core.reduce.call(null, function(fb, fb_copy) {
        return function(sb, bounds) {
          return sb.extend(bounds);
        };
      }(fb, fb_copy), fb_copy, cljs.core.rest.call(null, all_bounds));
      return m.fitBounds(super_bounds);
    } else {
      return null;
    }
  };
  var pan_to_show = function(m, var_args) {
    var all_bounds = null;
    if (arguments.length > 1) {
      all_bounds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pan_to_show__delegate.call(this, m, all_bounds);
  };
  pan_to_show.cljs$lang$maxFixedArity = 1;
  pan_to_show.cljs$lang$applyTo = function(arglist__12496) {
    var m = cljs.core.first(arglist__12496);
    var all_bounds = cljs.core.rest(arglist__12496);
    return pan_to_show__delegate(m, all_bounds);
  };
  pan_to_show.cljs$core$IFn$_invoke$arity$variadic = pan_to_show__delegate;
  return pan_to_show;
}();
clustermap.components.map.marker_popup_content = function marker_popup_content(path_fn, location_sites) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs12498 = cljs.core.map.call(null, function(site) {
      return "\x3cli\x3e\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", 1017115293), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), site), new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), 
      null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(site))) + "\x3c/a\x3e\x3c/li\x3e";
    }, location_sites);
    if (cljs.core.map_QMARK_.call(null, attrs12498)) {
      return "\x3cul" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), "map-marker-popup-location-list"], null), attrs12498))) + "\x3e\x3c/ul\x3e";
    } else {
      return'\x3cul class\x3d"map-marker-popup-location-list"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs12498)) + "\x3c/ul\x3e";
    }
  }());
};
clustermap.components.map.create_marker = function create_marker(path_fn, leaflet_map, location_sites) {
  var temp__4124__auto__ = function() {
    var G__12501 = location_sites;
    var G__12501__$1 = G__12501 == null ? null : cljs.core.first.call(null, G__12501);
    var G__12501__$2 = G__12501__$1 == null ? null : (new cljs.core.Keyword(null, "location", "location", 2914947879)).cljs$core$IFn$_invoke$arity$1(G__12501__$1);
    var G__12501__$3 = G__12501__$2 == null ? null : cljs.core.reverse.call(null, G__12501__$2);
    var G__12501__$4 = G__12501__$3 == null ? null : cljs.core.clj__GT_js.call(null, G__12501__$3);
    return G__12501__$4;
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var latlong = temp__4124__auto__;
    var icon = L.divIcon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "map-marker", new cljs.core.Keyword(null, "iconSize", "iconSize", 4570914700), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [24, 28], null), new cljs.core.Keyword(null, "iconAnchor", "iconAnchor", 4290568192), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 
    14], null), new cljs.core.Keyword(null, "popupAnchor", "popupAnchor", 1041293811), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -8], null)], null)));
    var marker = L.marker(latlong, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "icon", "icon", 1017130987), icon], null)));
    var popup_content = clustermap.components.map.marker_popup_content.call(null, path_fn, location_sites);
    marker.bindPopup(popup_content);
    marker.addTo(leaflet_map);
    return marker;
  } else {
    return console.log("missing location: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var sb__4468__auto__ = new goog.string.StringBuffer;
      var _STAR_print_fn_STAR_12502_12503 = cljs.core._STAR_print_fn_STAR_;
      try {
        cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_fn_STAR_12502_12503, sb__4468__auto__, temp__4124__auto__) {
          return function(x__4469__auto__) {
            return sb__4468__auto__.append(x__4469__auto__);
          };
        }(_STAR_print_fn_STAR_12502_12503, sb__4468__auto__, temp__4124__auto__);
        cljs.core.pr.call(null, location_sites);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_12502_12503;
      }
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4468__auto__);
    }()));
  }
};
clustermap.components.map.update_marker = function update_marker(path_fn, leaflet_map, marker, location) {
  marker.setPopupContent(clustermap.components.map.marker_popup_content.call(null, path_fn, location));
  return marker;
};
clustermap.components.map.remove_marker = function remove_marker(leaflet_map, marker) {
  return leaflet_map.removeLayer(marker);
};
clustermap.components.map.update_markers = function update_markers(path_fn, leaflet_map, markers_atom, new_locations) {
  var markers = cljs.core.deref.call(null, markers_atom);
  var marker_keys = cljs.core.set.call(null, cljs.core.keys.call(null, markers));
  var location_keys = cljs.core.set.call(null, cljs.core.keys.call(null, new_locations));
  var update_marker_keys = clojure.set.intersection.call(null, marker_keys, location_keys);
  var new_marker_keys = clojure.set.difference.call(null, location_keys, marker_keys);
  var remove_marker_keys = clojure.set.difference.call(null, marker_keys, location_keys);
  var new_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.create_marker.call(null, path_fn, leaflet_map, cljs.core.get.call(null, new_locations, k))], null);
    };
  }(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys), new_marker_keys));
  var updated_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.update_marker.call(null, path_fn, leaflet_map, cljs.core.get.call(null, markers, k), cljs.core.get.call(null, new_locations, k))], null);
    };
  }(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers), update_marker_keys));
  var _ = function() {
    var seq__12508 = cljs.core.seq.call(null, remove_marker_keys);
    var chunk__12509 = null;
    var count__12510 = 0;
    var i__12511 = 0;
    while (true) {
      if (i__12511 < count__12510) {
        var k = cljs.core._nth.call(null, chunk__12509, i__12511);
        clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
        var G__12512 = seq__12508;
        var G__12513 = chunk__12509;
        var G__12514 = count__12510;
        var G__12515 = i__12511 + 1;
        seq__12508 = G__12512;
        chunk__12509 = G__12513;
        count__12510 = G__12514;
        i__12511 = G__12515;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__12508);
        if (temp__4126__auto__) {
          var seq__12508__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__12508__$1)) {
            var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__12508__$1);
            var G__12516 = cljs.core.chunk_rest.call(null, seq__12508__$1);
            var G__12517 = c__4297__auto__;
            var G__12518 = cljs.core.count.call(null, c__4297__auto__);
            var G__12519 = 0;
            seq__12508 = G__12516;
            chunk__12509 = G__12517;
            count__12510 = G__12518;
            i__12511 = G__12519;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__12508__$1);
            clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
            var G__12520 = cljs.core.next.call(null, seq__12508__$1);
            var G__12521 = null;
            var G__12522 = 0;
            var G__12523 = 0;
            seq__12508 = G__12520;
            chunk__12509 = G__12521;
            count__12510 = G__12522;
            i__12511 = G__12523;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  return cljs.core.reset_BANG_.call(null, markers_atom, cljs.core.merge.call(null, updated_markers, new_markers));
};
clustermap.components.map.postgis_envelope__GT_latlngbounds = function postgis_envelope__GT_latlngbounds(envelope) {
  var map__12532 = cljs.core.js__GT_clj.call(null, envelope);
  var map__12532__$1 = cljs.core.seq_QMARK_.call(null, map__12532) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12532) : map__12532;
  var clj_envelope = map__12532__$1;
  var vec__12533 = cljs.core.get.call(null, map__12532__$1, "coordinates");
  var vec__12534 = cljs.core.nth.call(null, vec__12533, 0, null);
  var vec__12535 = cljs.core.nth.call(null, vec__12534, 0, null);
  var miny0 = cljs.core.nth.call(null, vec__12535, 0, null);
  var minx0 = cljs.core.nth.call(null, vec__12535, 1, null);
  var vec__12536 = cljs.core.nth.call(null, vec__12534, 1, null);
  var maxy1 = cljs.core.nth.call(null, vec__12536, 0, null);
  var minx1 = cljs.core.nth.call(null, vec__12536, 1, null);
  var vec__12537 = cljs.core.nth.call(null, vec__12534, 2, null);
  var maxy2 = cljs.core.nth.call(null, vec__12537, 0, null);
  var maxx2 = cljs.core.nth.call(null, vec__12537, 1, null);
  var vec__12538 = cljs.core.nth.call(null, vec__12534, 3, null);
  var miny3 = cljs.core.nth.call(null, vec__12538, 0, null);
  var maxx3 = cljs.core.nth.call(null, vec__12538, 1, null);
  var vec__12539 = cljs.core.nth.call(null, vec__12534, 4, null);
  var miny4 = cljs.core.nth.call(null, vec__12539, 0, null);
  var minx4 = cljs.core.nth.call(null, vec__12539, 1, null);
  var inner = vec__12534;
  var coords = vec__12533;
  return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [minx0, miny0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [maxx2, maxy2], null)], null)));
};
clustermap.components.map.tolerance_boundaryline = function tolerance_boundaryline(fetch_boundaryline_fn, index, boundaryline_id, zoom) {
  var default_bl = cljs.core.truth_(index) ? index[boundaryline_id] : null;
  var default_tolerance = cljs.core.truth_(default_bl) ? default_bl["tolerance"] : null;
  var default$ = cljs.core.truth_(default_bl) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_tolerance, default_bl], null) : null;
  var or__3541__auto__ = fetch_boundaryline_fn.call(null, boundaryline_id, zoom, new cljs.core.Keyword(null, "min-zoom", "min-zoom", 3894785504), 7);
  if (cljs.core.truth_(or__3541__auto__)) {
    return or__3541__auto__;
  } else {
    return default$;
  }
};
clustermap.components.map.style_leaflet_path = function style_leaflet_path(leaflet_path, p__12540) {
  var map__12542 = p__12540;
  var map__12542__$1 = cljs.core.seq_QMARK_.call(null, map__12542) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12542) : map__12542;
  var highlighted = cljs.core.get.call(null, map__12542__$1, new cljs.core.Keyword(null, "highlighted", "highlighted", 3500421061));
  var selected = cljs.core.get.call(null, map__12542__$1, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = selected;
    if (cljs.core.truth_(and__3529__auto__)) {
      return highlighted;
    } else {
      return and__3529__auto__;
    }
  }())) {
    return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#0000aa", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 1, new cljs.core.Keyword(null, "fill", "fill", 1017047285), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 960226426), 0.2], null)));
  } else {
    if (cljs.core.truth_(selected)) {
      return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#0000aa", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 1, new cljs.core.Keyword(null, "fill", "fill", 1017047285), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 960226426), 0.2], null)));
    } else {
      if (cljs.core.truth_(highlighted)) {
        return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#000000", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 1, new cljs.core.Keyword(null, "fill", "fill", 1017047285), false], null)));
      } else {
        if (true) {
          return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#ff0000", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 0, new cljs.core.Keyword(null, "fill", "fill", 1017047285), false, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 960226426), 0], null)));
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.map.create_path = function create_path(comm, leaflet_map, boundaryline_id, js_boundaryline, p__12543) {
  var map__12545 = p__12543;
  var map__12545__$1 = cljs.core.seq_QMARK_.call(null, map__12545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12545) : map__12545;
  var path_attrs = map__12545__$1;
  var selected = cljs.core.get.call(null, map__12545__$1, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
  var tolerance = js_boundaryline["tolerance"];
  var bounds = clustermap.components.map.postgis_envelope__GT_latlngbounds.call(null, js_boundaryline["envelope"]);
  var leaflet_path = L.geoJson(js_boundaryline["geojson"]);
  clustermap.components.map.style_leaflet_path.call(null, leaflet_path, path_attrs);
  leaflet_path.addTo(leaflet_map);
  leaflet_path.on("click", function(tolerance, bounds, leaflet_path, map__12545, map__12545__$1, path_attrs, selected) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), boundaryline_id], null)], null));
    };
  }(tolerance, bounds, leaflet_path, map__12545, map__12545__$1, path_attrs, selected));
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", 1013907597), boundaryline_id, new cljs.core.Keyword(null, "tolerance", "tolerance", 2046976895), tolerance, new cljs.core.Keyword(null, "selected", "selected", 2205476365), selected, new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071), leaflet_path, new cljs.core.Keyword(null, "bounds", "bounds", 3925666343), bounds], null);
};
clustermap.components.map.fetch_create_path = function fetch_create_path(comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, boundaryline_id, path_attrs) {
  var temp__4124__auto__ = clustermap.components.map.tolerance_boundaryline.call(null, fetch_boundaryline_fn, js_boundaryline_index, boundaryline_id, leaflet_map.getZoom());
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__12547 = temp__4124__auto__;
    var tolerance = cljs.core.nth.call(null, vec__12547, 0, null);
    var js_boundaryline = cljs.core.nth.call(null, vec__12547, 1, null);
    return clustermap.components.map.create_path.call(null, comm, leaflet_map, boundaryline_id, js_boundaryline, path_attrs);
  } else {
    return null;
  }
};
clustermap.components.map.replace_path = function replace_path(comm, leaflet_map, boundaryline_id, old_path, js_boundaryline, path_attrs) {
  leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071)).cljs$core$IFn$_invoke$arity$1(old_path));
  return clustermap.components.map.create_path.call(null, comm, leaflet_map, (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(old_path), js_boundaryline, path_attrs);
};
clustermap.components.map.update_path = function update_path(comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, p__12548, path_attrs) {
  var map__12551 = p__12548;
  var map__12551__$1 = cljs.core.seq_QMARK_.call(null, map__12551) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12551) : map__12551;
  var path = map__12551__$1;
  var boundaryline_id = cljs.core.get.call(null, map__12551__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var temp__4124__auto__ = clustermap.components.map.tolerance_boundaryline.call(null, fetch_boundaryline_fn, js_boundaryline_index, boundaryline_id, leaflet_map.getZoom());
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__12552 = temp__4124__auto__;
    var tolerance = cljs.core.nth.call(null, vec__12552, 0, null);
    var js_boundaryline = cljs.core.nth.call(null, vec__12552, 1, null);
    if (cljs.core.not_EQ_.call(null, tolerance, (new cljs.core.Keyword(null, "tolerance", "tolerance", 2046976895)).cljs$core$IFn$_invoke$arity$1(path))) {
      return clustermap.components.map.replace_path.call(null, comm, leaflet_map, boundaryline_id, path, js_boundaryline, path_attrs);
    } else {
      clustermap.components.map.style_leaflet_path.call(null, (new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071)).cljs$core$IFn$_invoke$arity$1(path), path_attrs);
      return path;
    }
  } else {
    return path;
  }
};
clustermap.components.map.delete_path = function delete_path(leaflet_map, path) {
  return leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071)).cljs$core$IFn$_invoke$arity$1(path));
};
clustermap.components.map.update_paths = function update_paths(comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, paths_atom, path_selections_atom, new_path_highlights, new_selection_locations) {
  if (cljs.core.truth_(js_boundaryline_index)) {
    var paths = cljs.core.deref.call(null, paths_atom);
    var path_keys = cljs.core.set.call(null, cljs.core.keys.call(null, paths));
    var old_selection_path_keys = cljs.core.deref.call(null, path_selections_atom);
    var new_selection_path_keys = cljs.core.set.call(null, cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "uk_constituencies", "uk_constituencies", 575411487), new cljs.core.Keyword(null, "boundarylinecolls", "boundarylinecolls", 2038297115)), cljs.core.apply.call(null, cljs.core.concat, cljs.core.vals.call(null, new_selection_locations)))));
    var live_path_keys = clojure.set.union.call(null, new_selection_path_keys, new_path_highlights);
    var create_path_keys = clojure.set.difference.call(null, live_path_keys, path_keys);
    var delete_path_keys = clojure.set.difference.call(null, path_keys, live_path_keys);
    var update_path_keys = clojure.set.intersection.call(null, path_keys, live_path_keys);
    var created_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys) {
      return function(k) {
        return clustermap.components.map.fetch_create_path.call(null, comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, k, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 3500421061), cljs.core.contains_QMARK_.call(null, new_path_highlights, k)], null));
      };
    }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys), create_path_keys);
    var updated_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths) {
      return function(k) {
        return clustermap.components.map.update_path.call(null, comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, cljs.core.get.call(null, paths, k), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 3500421061), cljs.core.contains_QMARK_.call(null, new_path_highlights, k)], null));
      };
    }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths), update_path_keys);
    var _ = function() {
      var seq__12559 = cljs.core.seq.call(null, delete_path_keys);
      var chunk__12560 = null;
      var count__12561 = 0;
      var i__12562 = 0;
      while (true) {
        if (i__12562 < count__12561) {
          var k = cljs.core._nth.call(null, chunk__12560, i__12562);
          var temp__4124__auto___12565 = cljs.core.get.call(null, paths, k);
          if (cljs.core.truth_(temp__4124__auto___12565)) {
            var path_12566 = temp__4124__auto___12565;
            clustermap.components.map.delete_path.call(null, leaflet_map, path_12566);
          } else {
          }
          var G__12567 = seq__12559;
          var G__12568 = chunk__12560;
          var G__12569 = count__12561;
          var G__12570 = i__12562 + 1;
          seq__12559 = G__12567;
          chunk__12560 = G__12568;
          count__12561 = G__12569;
          i__12562 = G__12570;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq.call(null, seq__12559);
          if (temp__4126__auto__) {
            var seq__12559__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__12559__$1)) {
              var c__4297__auto__ = cljs.core.chunk_first.call(null, seq__12559__$1);
              var G__12571 = cljs.core.chunk_rest.call(null, seq__12559__$1);
              var G__12572 = c__4297__auto__;
              var G__12573 = cljs.core.count.call(null, c__4297__auto__);
              var G__12574 = 0;
              seq__12559 = G__12571;
              chunk__12560 = G__12572;
              count__12561 = G__12573;
              i__12562 = G__12574;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__12559__$1);
              var temp__4124__auto___12575 = cljs.core.get.call(null, paths, k);
              if (cljs.core.truth_(temp__4124__auto___12575)) {
                var path_12576 = temp__4124__auto___12575;
                clustermap.components.map.delete_path.call(null, leaflet_map, path_12576);
              } else {
              }
              var G__12577 = cljs.core.next.call(null, seq__12559__$1);
              var G__12578 = null;
              var G__12579 = 0;
              var G__12580 = 0;
              seq__12559 = G__12577;
              chunk__12560 = G__12578;
              count__12561 = G__12579;
              i__12562 = G__12580;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }();
    var new_paths = cljs.core.reduce.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths, updated_paths, _) {
      return function(m, p__12563) {
        var map__12564 = p__12563;
        var map__12564__$1 = cljs.core.seq_QMARK_.call(null, map__12564) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12564) : map__12564;
        var path = map__12564__$1;
        var id = cljs.core.get.call(null, map__12564__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
        return cljs.core.assoc.call(null, m, id, path);
      };
    }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths, updated_paths, _), cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, cljs.core.identity, cljs.core.concat.call(null, created_paths, updated_paths)));
    cljs.core.reset_BANG_.call(null, path_selections_atom, new_selection_path_keys);
    return cljs.core.reset_BANG_.call(null, paths_atom, new_paths);
  } else {
    return null;
  }
};
clustermap.components.map.pan_to_selection = function pan_to_selection(owner, leaflet_map, paths_atom, path_selections_atom) {
  var paths = cljs.core.deref.call(null, paths_atom);
  var path_selections = cljs.core.deref.call(null, path_selections_atom);
  if (cljs.core.empty_QMARK_.call(null, path_selections)) {
    return clustermap.components.map.locate_map.call(null, leaflet_map);
  } else {
    if (cljs.core.empty_QMARK_.call(null, paths)) {
      return om.core.set_state.call(null, owner, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121), true);
    } else {
      if (cljs.core.truth_(om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121)))) {
        om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121), false);
      } else {
      }
      var temp__4124__auto__ = function() {
        var G__12582 = cljs.core.select_keys.call(null, paths, path_selections);
        var G__12582__$1 = G__12582 == null ? null : cljs.core.vals.call(null, G__12582);
        var G__12582__$2 = G__12582__$1 == null ? null : cljs.core.map.call(null, new cljs.core.Keyword(null, "bounds", "bounds", 3925666343), G__12582__$1);
        var G__12582__$3 = G__12582__$2 == null ? null : cljs.core.not_empty.call(null, G__12582__$2);
        return G__12582__$3;
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var bounds = temp__4124__auto__;
        return cljs.core.apply.call(null, clustermap.components.map.pan_to_show, leaflet_map, bounds);
      } else {
        return clustermap.components.map.pan_to_show.call(null, clustermap.components.map.initial_bounds);
      }
    }
  }
};
clustermap.components.map.constituency_marker_popup_content = function constituency_marker_popup_content(path_fn, constituency) {
  var bl_id = function() {
    var G__12586 = constituency;
    var G__12586__$1 = G__12586 == null ? null : G__12586.properties;
    var G__12586__$2 = G__12586__$1 == null ? null : G__12586__$1.id;
    return G__12586__$2;
  }();
  var bl_name = function() {
    var G__12587 = constituency;
    var G__12587__$1 = G__12587 == null ? null : G__12587.properties;
    var G__12587__$2 = G__12587__$1 == null ? null : G__12587__$1.compact_name;
    return G__12587__$2;
  }();
  return "\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", 1017115293), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), bl_id, new cljs.core.Keyword(null, 
  "compact_name", "compact_name", 1128032665), bl_name], null)), new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs12588 = bl_name;
    if (cljs.core.map_QMARK_.call(null, attrs12588)) {
      return "\x3cspan" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), "map-marker-constituency-name"], null), attrs12588))) + "\x3e\x3c/span\x3e";
    } else {
      return'\x3cspan class\x3d"map-marker-constituency-name"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs12588)) + "\x3c/span\x3e";
    }
  }()) + "\x3c/a\x3e";
};
clustermap.components.map.map_component = function map_component(p__12589, owner) {
  var map__12608 = p__12589;
  var map__12608__$1 = cljs.core.seq_QMARK_.call(null, map__12608) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12608) : map__12608;
  var app_state = map__12608__$1;
  var selection = cljs.core.get.call(null, map__12608__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  if (typeof clustermap.components.map.t12609 !== "undefined") {
  } else {
    clustermap.components.map.t12609 = function(selection, app_state, map__12608, owner, p__12589, map_component, meta12610) {
      this.selection = selection;
      this.app_state = app_state;
      this.map__12608 = map__12608;
      this.owner = owner;
      this.p__12589 = p__12589;
      this.map_component = map_component;
      this.meta12610 = meta12610;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map.t12609.cljs$lang$type = true;
    clustermap.components.map.t12609.cljs$lang$ctorStr = "clustermap.components.map/t12609";
    clustermap.components.map.t12609.cljs$lang$ctorPrWriter = function(map__12608, map__12608__$1, app_state, selection) {
      return function(this__4108__auto__, writer__4109__auto__, opt__4110__auto__) {
        return cljs.core._write.call(null, writer__4109__auto__, "clustermap.components.map/t12609");
      };
    }(map__12608, map__12608__$1, app_state, selection);
    clustermap.components.map.t12609.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.map.t12609.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__12608, map__12608__$1, app_state, selection) {
      return function(this$, p__12612, p__12613) {
        var self__ = this;
        var map__12614 = p__12612;
        var map__12614__$1 = cljs.core.seq_QMARK_.call(null, map__12614) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12614) : map__12614;
        var next_selection = cljs.core.get.call(null, map__12614__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
        var next_locations = cljs.core.get.call(null, map__12614__$1, new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", 1821239162));
        var next_uk_constituencies = cljs.core.get.call(null, map__12614__$1, new cljs.core.Keyword(null, "uk-constituencies", "uk-constituencies", 2507232365));
        var next_uk_constituencies_rtree = cljs.core.get.call(null, map__12614__$1, new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600));
        var next_boundarylines = cljs.core.get.call(null, map__12614__$1, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847));
        var next_zoom = cljs.core.get.call(null, map__12614__$1, new cljs.core.Keyword(null, "zoom", "zoom", 1017648965));
        var map__12615 = p__12613;
        var map__12615__$1 = cljs.core.seq_QMARK_.call(null, map__12615) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12615) : map__12615;
        var next_path_highlights = cljs.core.get.call(null, map__12615__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745));
        var this$__$1 = this;
        var map__12616 = om.core.get_props.call(null, self__.owner);
        var map__12616__$1 = cljs.core.seq_QMARK_.call(null, map__12616) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12616) : map__12616;
        var uk_constituencies_rtree = cljs.core.get.call(null, map__12616__$1, new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600));
        var map__12617 = om.core.get_shared.call(null, self__.owner);
        var map__12617__$1 = cljs.core.seq_QMARK_.call(null, map__12617) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12617) : map__12617;
        var path_fn = cljs.core.get.call(null, map__12617__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
        var link_fn = cljs.core.get.call(null, map__12617__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
        var fetch_boundaryline_fn = cljs.core.get.call(null, map__12617__$1, new cljs.core.Keyword(null, "fetch-boundaryline-fn", "fetch-boundaryline-fn", 3464186934));
        var comm = cljs.core.get.call(null, map__12617__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
        var map__12618 = om.core.get_state.call(null, self__.owner);
        var map__12618__$1 = cljs.core.seq_QMARK_.call(null, map__12618) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12618) : map__12618;
        var map__12619 = cljs.core.get.call(null, map__12618__$1, new cljs.core.Keyword(null, "map", "map", 1014012110));
        var map__12619__$1 = cljs.core.seq_QMARK_.call(null, map__12619) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12619) : map__12619;
        var path_selections = cljs.core.get.call(null, map__12619__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", 512369281));
        var paths = cljs.core.get.call(null, map__12619__$1, new cljs.core.Keyword(null, "paths", "paths", 1120343136));
        var markers = cljs.core.get.call(null, map__12619__$1, new cljs.core.Keyword(null, "markers", "markers", 1853155051));
        var leaflet_map = cljs.core.get.call(null, map__12619__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", 4353500414));
        var pan_pending = cljs.core.get.call(null, map__12618__$1, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121));
        var path_highlights = cljs.core.get.call(null, map__12618__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745));
        var mousemove_listener = cljs.core.get.call(null, map__12618__$1, new cljs.core.Keyword(null, "mousemove-listener", "mousemove-listener", 3228037661));
        var click_listener = cljs.core.get.call(null, map__12618__$1, new cljs.core.Keyword(null, "click-listener", "click-listener", 1807691467));
        clustermap.components.map.update_markers.call(null, path_fn, leaflet_map, markers, next_locations);
        if (cljs.core.not_EQ_.call(null, next_uk_constituencies_rtree, uk_constituencies_rtree)) {
          om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "mousemove-listener", "mousemove-listener", 3228037661), function(map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, 
          next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__12615, map__12615__$1, next_path_highlights, map__12608, map__12608__$1, app_state, selection) {
            return function(e) {
              var lat = e.latlng.lat;
              var lng = e.latlng.lng;
              var hits = clustermap.rtree.point_in_polygons.call(null, next_uk_constituencies_rtree, lng, lat);
              var hit_path_ids = cljs.core.map.call(null, function(lat, lng, hits, map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, 
              next_boundarylines, next_zoom, map__12615, map__12615__$1, next_path_highlights, map__12608, map__12608__$1, app_state, selection) {
                return function(hit) {
                  return hit.properties.id;
                };
              }(lat, lng, hits, map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__12615, map__12615__$1, 
              next_path_highlights, map__12608, map__12608__$1, app_state, selection), hits);
              var highlight_hit = cljs.core.first.call(null, hits);
              var highlight_path_ids = cljs.core.set.call(null, cljs.core.take.call(null, 1, hit_path_ids));
              var old_path_highlights = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745));
              if (cljs.core.truth_(function() {
                var and__3529__auto__ = highlight_hit;
                if (cljs.core.truth_(and__3529__auto__)) {
                  return cljs.core.not_EQ_.call(null, old_path_highlights, highlight_path_ids) && cljs.core.not.call(null, om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 4726192654)));
                } else {
                  return and__3529__auto__;
                }
              }())) {
                var G__12620_12626 = L.popup();
                G__12620_12626.setLatLng(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lat, lng], null)));
                G__12620_12626.setContent(clustermap.components.map.constituency_marker_popup_content.call(null, path_fn, highlight_hit));
                G__12620_12626.openOn(leaflet_map);
              } else {
              }
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745), highlight_path_ids);
            };
          }(map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__12615, map__12615__$1, next_path_highlights, 
          map__12608, map__12608__$1, app_state, selection));
          if (cljs.core.truth_(mousemove_listener)) {
            leaflet_map.off("mousemove", mousemove_listener);
          } else {
          }
          leaflet_map.on("mousemove", om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "mousemove-listener", "mousemove-listener", 3228037661)));
          om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "click-listener", "click-listener", 1807691467), function(map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, 
          next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__12615, map__12615__$1, next_path_highlights, map__12608, map__12608__$1, app_state, selection) {
            return function(e) {
              var hits = clustermap.rtree.point_in_polygons.call(null, next_uk_constituencies_rtree, e.latlng.lng, e.latlng.lat);
              var hit_path_ids = cljs.core.map.call(null, function(hits, map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, 
              next_zoom, map__12615, map__12615__$1, next_path_highlights, map__12608, map__12608__$1, app_state, selection) {
                return function(hit) {
                  return hit.properties.id;
                };
              }(hits, map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__12615, map__12615__$1, 
              next_path_highlights, map__12608, map__12608__$1, app_state, selection), hits);
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), cljs.core.first.call(null, hit_path_ids)], null)], null));
            };
          }(map__12616, map__12616__$1, uk_constituencies_rtree, map__12617, map__12617__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__12618, map__12618__$1, map__12619, map__12619__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__12614, map__12614__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__12615, map__12615__$1, next_path_highlights, 
          map__12608, map__12608__$1, app_state, selection));
          if (cljs.core.truth_(click_listener)) {
            leaflet_map.off("click", click_listener);
          } else {
          }
          leaflet_map.on("click", om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "click-listener", "click-listener", 1807691467)));
        } else {
        }
        if (cljs.core.truth_(next_uk_constituencies)) {
          clustermap.components.map.update_paths.call(null, comm, fetch_boundaryline_fn, next_uk_constituencies, leaflet_map, paths, path_selections, next_path_highlights, next_locations);
        } else {
        }
        if (cljs.core.truth_(function() {
          var or__3541__auto__ = pan_pending;
          if (cljs.core.truth_(or__3541__auto__)) {
            return or__3541__auto__;
          } else {
            return cljs.core.not_EQ_.call(null, next_selection, self__.selection);
          }
        }())) {
          return clustermap.components.map.pan_to_selection.call(null, self__.owner, leaflet_map, paths, path_selections);
        } else {
          return null;
        }
      };
    }(map__12608, map__12608__$1, app_state, selection);
    clustermap.components.map.t12609.prototype.om$core$IDidMount$ = true;
    clustermap.components.map.t12609.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__12608, map__12608__$1, app_state, selection) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        var map__12621 = clustermap.components.map.create_map.call(null, node);
        var map__12621__$1 = cljs.core.seq_QMARK_.call(null, map__12621) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12621) : map__12621;
        var map = map__12621__$1;
        var path = cljs.core.get.call(null, map__12621__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
        var markers = cljs.core.get.call(null, map__12621__$1, new cljs.core.Keyword(null, "markers", "markers", 1853155051));
        var leaflet_map = cljs.core.get.call(null, map__12621__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", 4353500414));
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "map", "map", 1014012110), map);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745), cljs.core.PersistentHashSet.EMPTY);
        leaflet_map.on("zoomend", function(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection) {
          return function(e) {
            return cljs.core.swap_BANG_.call(null, om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "app-state", "app-state", 1424976215)), cljs.core.assoc, new cljs.core.Keyword(null, "zoom", "zoom", 1017648965), leaflet_map.getZoom());
          };
        }(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection));
        leaflet_map.on("popupopen", function(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection) {
          return function(e) {
            var popup_el = e.popup._container;
            var marker_popup_location_list_cnt = jayq.core.$.call(null, popup_el).find(".map-marker-popup-location-list").length;
            if (marker_popup_location_list_cnt > 0) {
              om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 4726192654), true);
            } else {
            }
            return jayq.core.$.call(null, popup_el).on("mousemove", function(popup_el, marker_popup_location_list_cnt, node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection) {
              return function(e__$1) {
                e__$1.preventDefault();
                return false;
              };
            }(popup_el, marker_popup_location_list_cnt, node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection));
          };
        }(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection));
        leaflet_map.on("popupclose", function(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection) {
          return function(e) {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 4726192654), null);
          };
        }(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection));
        jayq.core.$.call(null, document).on("clustermap-change-view", function(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection) {
          return function(e) {
            var map__12622 = om.core.get_state.call(null, self__.owner);
            var map__12622__$1 = cljs.core.seq_QMARK_.call(null, map__12622) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12622) : map__12622;
            var map__12623 = cljs.core.get.call(null, map__12622__$1, new cljs.core.Keyword(null, "map", "map", 1014012110));
            var map__12623__$1 = cljs.core.seq_QMARK_.call(null, map__12623) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12623) : map__12623;
            var path_selections = cljs.core.get.call(null, map__12623__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", 512369281));
            var paths = cljs.core.get.call(null, map__12623__$1, new cljs.core.Keyword(null, "paths", "paths", 1120343136));
            leaflet_map.invalidateSize();
            return clustermap.components.map.pan_to_selection.call(null, self__.owner, leaflet_map, paths, path_selections);
          };
        }(node, map__12621, map__12621__$1, map, path, markers, leaflet_map, this$__$1, map__12608, map__12608__$1, app_state, selection));
        return om.core.update_BANG_.call(null, self__.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "zoom", "zoom", 1017648965), leaflet_map.getZoom());
      };
    }(map__12608, map__12608__$1, app_state, selection);
    clustermap.components.map.t12609.prototype.om$core$IRender$ = true;
    clustermap.components.map.t12609.prototype.om$core$IRender$render$arity$1 = function(map__12608, map__12608__$1, app_state, selection) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"map", "ref":"map"});
      };
    }(map__12608, map__12608__$1, app_state, selection);
    clustermap.components.map.t12609.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__12608, map__12608__$1, app_state, selection) {
      return function(_12611) {
        var self__ = this;
        var _12611__$1 = this;
        return self__.meta12610;
      };
    }(map__12608, map__12608__$1, app_state, selection);
    clustermap.components.map.t12609.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__12608, map__12608__$1, app_state, selection) {
      return function(_12611, meta12610__$1) {
        var self__ = this;
        var _12611__$1 = this;
        return new clustermap.components.map.t12609(self__.selection, self__.app_state, self__.map__12608, self__.owner, self__.p__12589, self__.map_component, meta12610__$1);
      };
    }(map__12608, map__12608__$1, app_state, selection);
    clustermap.components.map.__GT_t12609 = function(map__12608, map__12608__$1, app_state, selection) {
      return function __GT_t12609(selection__$1, app_state__$1, map__12608__$2, owner__$1, p__12589__$1, map_component__$1, meta12610) {
        return new clustermap.components.map.t12609(selection__$1, app_state__$1, map__12608__$2, owner__$1, p__12589__$1, map_component__$1, meta12610);
      };
    }(map__12608, map__12608__$1, app_state, selection);
  }
  return new clustermap.components.map.t12609(selection, app_state, map__12608__$1, owner, p__12589, map_component, null);
};
clustermap.components.map.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.map.map_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), cljs.core.merge.call(null, shared, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), app_state, new cljs.core.Keyword(null, "fetch-boundaryline-fn", "fetch-boundaryline-fn", 3464186934), cljs.core.partial.call(null, clustermap.boundarylines.get_or_fetch_best_boundaryline, 
  app_state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847))], null)), new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("clustermap.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.boundarylines");
goog.require("secretary.core");
goog.require("clustermap.components.map");
goog.require("clustermap.nav");
goog.require("om.dom");
goog.require("goog.history.EventType");
goog.require("clustermap.rtree");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("clustermap.rtree");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.full_report");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("clustermap.boundarylines");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.search");
goog.require("clustermap.components.map_report");
goog.require("clustermap.components.map_report");
goog.require("clustermap.routes");
goog.require("clustermap.components.full_report");
goog.require("clustermap.components.search");
goog.require("om.core");
goog.require("om.core");
goog.require("secretary.core");
goog.require("clustermap.components.page_title");
goog.require("clustermap.nav");
goog.require("clojure.string");
goog.require("clustermap.components.page_title");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("clustermap.components.map");
goog.require("clustermap.api");
clustermap.app.state = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "selector", "selector", 2205476689), new cljs.core.Keyword(null, "zoom", "zoom", 1017648965), new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600), new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 2486056771), new cljs.core.Keyword(null, "uk-constituencies", "uk-constituencies", 2507232365), new cljs.core.Keyword(null, 
"selection-investment-stats", "selection-investment-stats", 4568560312), new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", 1821239162), new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 1845704779), new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", 4566552504), new cljs.core.Keyword(null, "all-portfolio-company-site-stats", 
"all-portfolio-company-site-stats", 1130880684), new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685), new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 4247521796), new cljs.core.Keyword(null, "search-results", "search-results", 1025331267), new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847), new cljs.core.Keyword(null, 
"selection-investments", "selection-investments", 2385751217), new cljs.core.Keyword(null, "view", "view", 1017523735)], [null, null, null, null, null, null, null, null, null, null, null, null, cljs.core.PersistentArrayMap.EMPTY, null, null, null, new cljs.core.Keyword(null, "map", "map", 1014012110)]));
clustermap.app.new_state = function new_state(state, path_values) {
  return cljs.core.reduce.call(null, function(s, p__11796) {
    var vec__11797 = p__11796;
    var key_or_path = cljs.core.nth.call(null, vec__11797, 0, null);
    var value_or_fn = cljs.core.nth.call(null, vec__11797, 1, null);
    var path = cljs.core.sequential_QMARK_.call(null, key_or_path) ? key_or_path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_path], null);
    return cljs.core.update_in.call(null, s, path, cljs.core.fn_QMARK_.call(null, value_or_fn) ? value_or_fn : function(path, vec__11797, key_or_path, value_or_fn) {
      return function(ov) {
        return value_or_fn;
      };
    }(path, vec__11797, key_or_path, value_or_fn));
  }, state, path_values);
};
clustermap.app.set_state = function() {
  var set_state__delegate = function(p__11798) {
    var map__11800 = p__11798;
    var map__11800__$1 = cljs.core.seq_QMARK_.call(null, map__11800) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11800) : map__11800;
    var path_values = map__11800__$1;
    return cljs.core.swap_BANG_.call(null, clustermap.app.state, clustermap.app.new_state, path_values);
  };
  var set_state = function(var_args) {
    var p__11798 = null;
    if (arguments.length > 0) {
      p__11798 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_state__delegate.call(this, p__11798);
  };
  set_state.cljs$lang$maxFixedArity = 0;
  set_state.cljs$lang$applyTo = function(arglist__11801) {
    var p__11798 = cljs.core.seq(arglist__11801);
    return set_state__delegate(p__11798);
  };
  set_state.cljs$core$IFn$_invoke$arity$variadic = set_state__delegate;
  return set_state;
}();
clustermap.app.load_uk_constituencies = function load_uk_constituencies() {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_11823) {
            var state_val_11824 = state_11823[1];
            if (state_val_11824 === 2) {
              var inst_11819 = state_11823[2];
              var inst_11820 = clustermap.rtree.rtree_index.call(null, inst_11819);
              var inst_11821 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "uk-constituencies", "uk-constituencies", 2507232365), inst_11819, new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600), inst_11820);
              var state_11823__$1 = state_11823;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11823__$1, inst_11821);
            } else {
              if (state_val_11824 === 1) {
                var inst_11817 = clustermap.api.boundaryline_collection_index.call(null, "uk_constituencies", new cljs.core.Keyword(null, "raw", "raw", 1014016922), true);
                var state_11823__$1 = state_11823;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11823__$1, 2, inst_11817);
              } else {
                return null;
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_11828 = [null, null, null, null, null, null, null];
              statearr_11828[0] = state_machine__5677__auto__;
              statearr_11828[1] = 1;
              return statearr_11828;
            };
            var state_machine__5677__auto____1 = function(state_11823) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_11823);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e11829) {
                    if (e11829 instanceof Object) {
                      var ex__5680__auto__ = e11829;
                      var statearr_11830_11832 = state_11823;
                      statearr_11830_11832[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11823);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11829;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11833 = state_11823;
                  state_11823 = G__11833;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_11823) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_11823);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_11831 = f__5692__auto__.call(null);
        statearr_11831[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_11831;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
clustermap.app.load_all_investment_stats = function load_all_investment_stats() {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_11853) {
            var state_val_11854 = state_11853[1];
            if (state_val_11854 === 2) {
              var inst_11850 = state_11853[2];
              var inst_11851 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 2486056771), inst_11850);
              var state_11853__$1 = state_11853;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11853__$1, inst_11851);
            } else {
              if (state_val_11854 === 1) {
                var inst_11848 = clustermap.api.investment_stats.call(null);
                var state_11853__$1 = state_11853;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11853__$1, 2, inst_11848);
              } else {
                return null;
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_11858 = [null, null, null, null, null, null, null];
              statearr_11858[0] = state_machine__5677__auto__;
              statearr_11858[1] = 1;
              return statearr_11858;
            };
            var state_machine__5677__auto____1 = function(state_11853) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_11853);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e11859) {
                    if (e11859 instanceof Object) {
                      var ex__5680__auto__ = e11859;
                      var statearr_11860_11862 = state_11853;
                      statearr_11860_11862[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11853);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11859;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11863 = state_11853;
                  state_11853 = G__11863;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_11853) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_11853);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_11861 = f__5692__auto__.call(null);
        statearr_11861[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_11861;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
clustermap.app.process_search_results = function process_search_results(results) {
  return clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "search-results", "search-results", 1025331267), cljs.core.js__GT_clj.call(null, results));
};
clustermap.app.process_selection = function process_selection(p__11864, type) {
  var vec__11866 = p__11864;
  var selection = cljs.core.nth.call(null, vec__11866, 0, null);
  var selection_investment_stats = cljs.core.nth.call(null, vec__11866, 1, null);
  var selection_investment_account_timelines = cljs.core.nth.call(null, vec__11866, 2, null);
  var selection_investment_aggs = cljs.core.nth.call(null, vec__11866, 3, null);
  var selection_investments = cljs.core.nth.call(null, vec__11866, 4, null);
  var selection_portfolio_company_locations = cljs.core.nth.call(null, vec__11866, 5, null);
  return clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), type, new cljs.core.Keyword(null, "value", "value", 1125876963), selection], null), new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", 4568560312), selection_investment_stats, new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 
  1845704779), selection_investment_account_timelines, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685), selection_investment_aggs, new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217), selection_investments, new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", 1821239162), selection_portfolio_company_locations);
};
clustermap.app.make_selection = function make_selection(p__11867) {
  var vec__11872 = p__11867;
  var type = cljs.core.nth.call(null, vec__11872, 0, null);
  var id = cljs.core.nth.call(null, vec__11872, 1, null);
  var selector = cljs.core.truth_(type) ? new cljs.core.PersistentArrayMap.fromArray([type, id], true, false) : cljs.core.PersistentArrayMap.EMPTY;
  var old_selector = (new cljs.core.Keyword(null, "selector", "selector", 2205476689)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state));
  if (cljs.core.not_EQ_.call(null, selector, old_selector)) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selector", "selector", 2205476689), selector);
    var pred__11873 = cljs.core._EQ_;
    var expr__11874 = type;
    if (cljs.core.truth_(pred__11873.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__11874))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.portfolio_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
      selector)], null), type], null);
    } else {
      if (cljs.core.truth_(pred__11873.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__11874))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.investor_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
        selector)], null), type], null);
      } else {
        if (cljs.core.truth_(pred__11873.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__11874))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.constituency.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
          selector)], null), type], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), null], null), type], null);
        }
      }
    }
  } else {
    return null;
  }
};
clustermap.app.change_view = function change_view(view) {
  var view__$1 = cljs.core.keyword.call(null, view);
  if (cljs.core.not_EQ_.call(null, view__$1, (new cljs.core.Keyword(null, "view", "view", 1017523735)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state)))) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "view", "view", 1017523735), view__$1);
    return clustermap.nav.change_view.call(null, cljs.core.name.call(null, view__$1));
  } else {
    return null;
  }
};
clustermap.app.history = new goog.History;
clustermap.app.set_route = function set_route(view, type, id) {
  if (cljs.core.truth_(function() {
    var and__3529__auto__ = type;
    if (cljs.core.truth_(and__3529__auto__)) {
      return id;
    } else {
      return and__3529__auto__;
    }
  }())) {
    return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, function() {
      var or__3541__auto__ = view;
      if (cljs.core.truth_(or__3541__auto__)) {
        return or__3541__auto__;
      } else {
        return "map";
      }
    }())) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, type)) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, id)));
  } else {
    if (cljs.core.truth_(view)) {
      return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view)));
    } else {
      if (true) {
        return clustermap.app.history.setToken("");
      } else {
        return null;
      }
    }
  }
};
clustermap.app.parse_route = function parse_route() {
  var fragment = clustermap.app.history.getToken();
  var vec__11879 = cljs.core.re_matches.call(null, /\/([^\/]+)(?:\/([^\/]+)\/(.+))?$/, fragment);
  var _ = cljs.core.nth.call(null, vec__11879, 0, null);
  var view = cljs.core.nth.call(null, vec__11879, 1, null);
  var type = cljs.core.nth.call(null, vec__11879, 2, null);
  var id = cljs.core.nth.call(null, vec__11879, 3, null);
  var type__$1 = function() {
    var G__11880 = type;
    var G__11880__$1 = G__11880 == null ? null : clojure.string.trim.call(null, G__11880);
    var G__11880__$2 = G__11880__$1 == null ? null : cljs.core.count.call(null, G__11880__$1);
    return G__11880__$2;
  }() > 0 ? clojure.string.trim.call(null, type) : null;
  var id__$1 = function() {
    var G__11881 = id;
    var G__11881__$1 = G__11881 == null ? null : clojure.string.trim.call(null, G__11881);
    var G__11881__$2 = G__11881__$1 == null ? null : cljs.core.count.call(null, G__11881__$1);
    return G__11881__$2;
  }() > 0 ? clojure.string.trim.call(null, id) : null;
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "view", "view", 1017523735), view, new cljs.core.Keyword(null, "type", "type", 1017479852), type__$1, new cljs.core.Keyword(null, "id", "id", 1013907597), id__$1], null);
};
clustermap.app.change_view_path = cljs.core.partial.call(null, clustermap.routes.path_for_view, clustermap.app.parse_route);
clustermap.app.set_selection_route = function set_selection_route(p__11882) {
  var vec__11885 = p__11882;
  var type = cljs.core.nth.call(null, vec__11885, 0, null);
  var id = cljs.core.nth.call(null, vec__11885, 1, null);
  var map__11886 = clustermap.app.parse_route.call(null);
  var map__11886__$1 = cljs.core.seq_QMARK_.call(null, map__11886) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11886) : map__11886;
  var view = cljs.core.get.call(null, map__11886__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.set_view_route = function set_view_route(view) {
  var map__11888 = clustermap.app.parse_route.call(null);
  var map__11888__$1 = cljs.core.seq_QMARK_.call(null, map__11888) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11888) : map__11888;
  var id = cljs.core.get.call(null, map__11888__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var type = cljs.core.get.call(null, map__11888__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.update_selection_investment_aggs_table_view = function update_selection_investment_aggs_table_view(table_view) {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_11921) {
            var state_val_11922 = state_11921[1];
            if (state_val_11922 === 2) {
              var inst_11912 = state_11921[7];
              var inst_11918 = state_11921[2];
              var inst_11919 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", 4566552504), inst_11912, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685), inst_11918);
              var state_11921__$1 = state_11921;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11921__$1, inst_11919);
            } else {
              if (state_val_11922 === 1) {
                var inst_11912 = state_11921[7];
                var inst_11910 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_11911 = (new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", 4566552504)).cljs$core$IFn$_invoke$arity$1(inst_11910);
                var inst_11912__$1 = cljs.core.merge.call(null, inst_11911, table_view);
                var inst_11913 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_11914 = (new cljs.core.Keyword(null, "selector", "selector", 2205476689)).cljs$core$IFn$_invoke$arity$1(inst_11913);
                var inst_11915 = cljs.core.merge.call(null, inst_11914, inst_11912__$1);
                var inst_11916 = clustermap.api.investment_aggs.call(null, inst_11915);
                var state_11921__$1 = function() {
                  var statearr_11923 = state_11921;
                  statearr_11923[7] = inst_11912__$1;
                  return statearr_11923;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11921__$1, 2, inst_11916);
              } else {
                return null;
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_11927 = [null, null, null, null, null, null, null, null];
              statearr_11927[0] = state_machine__5677__auto__;
              statearr_11927[1] = 1;
              return statearr_11927;
            };
            var state_machine__5677__auto____1 = function(state_11921) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_11921);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e11928) {
                    if (e11928 instanceof Object) {
                      var ex__5680__auto__ = e11928;
                      var statearr_11929_11931 = state_11921;
                      statearr_11929_11931[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11921);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11928;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11932 = state_11921;
                  state_11921 = G__11932;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_11921) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_11921);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_11930 = f__5692__auto__.call(null);
        statearr_11930[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_11930;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
clustermap.app.update_selection_investments_table_view = function update_selection_investments_table_view(table_view) {
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__) {
          return function(state_11965) {
            var state_val_11966 = state_11965[1];
            if (state_val_11966 === 2) {
              var inst_11956 = state_11965[7];
              var inst_11962 = state_11965[2];
              var inst_11963 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 4247521796), inst_11956, new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217), inst_11962);
              var state_11965__$1 = state_11965;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11965__$1, inst_11963);
            } else {
              if (state_val_11966 === 1) {
                var inst_11956 = state_11965[7];
                var inst_11954 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_11955 = (new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 4247521796)).cljs$core$IFn$_invoke$arity$1(inst_11954);
                var inst_11956__$1 = cljs.core.merge.call(null, inst_11955, table_view);
                var inst_11957 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_11958 = (new cljs.core.Keyword(null, "selector", "selector", 2205476689)).cljs$core$IFn$_invoke$arity$1(inst_11957);
                var inst_11959 = cljs.core.merge.call(null, inst_11958, inst_11956__$1);
                var inst_11960 = clustermap.api.investments.call(null, inst_11959);
                var state_11965__$1 = function() {
                  var statearr_11967 = state_11965;
                  statearr_11967[7] = inst_11956__$1;
                  return statearr_11967;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11965__$1, 2, inst_11960);
              } else {
                return null;
              }
            }
          };
        }(c__5691__auto__);
        return function(switch__5676__auto__, c__5691__auto__) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_11971 = [null, null, null, null, null, null, null, null];
              statearr_11971[0] = state_machine__5677__auto__;
              statearr_11971[1] = 1;
              return statearr_11971;
            };
            var state_machine__5677__auto____1 = function(state_11965) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_11965);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e11972) {
                    if (e11972 instanceof Object) {
                      var ex__5680__auto__ = e11972;
                      var statearr_11973_11975 = state_11965;
                      statearr_11973_11975[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11965);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11972;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11976 = state_11965;
                  state_11965 = G__11976;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_11965) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_11965);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__);
      }();
      var state__5693__auto__ = function() {
        var statearr_11974 = f__5692__auto__.call(null);
        statearr_11974[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_11974;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__));
  return c__5691__auto__;
};
clustermap.app.event_handlers = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "search", "search", 4402534682), clustermap.api.ordered_api.call(null, clustermap.api.search, clustermap.app.process_search_results), new cljs.core.Keyword(null, "select", "select", 4402849902), clustermap.app.set_selection_route, new cljs.core.Keyword(null, "route-select", "route-select", 529886322), clustermap.api.ordered_api.call(null, clustermap.app.make_selection, clustermap.app.process_selection), 
new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), clustermap.app.set_view_route, new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), clustermap.app.change_view, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), clustermap.app.update_selection_investment_aggs_table_view, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 
4277131912), clustermap.app.update_selection_investments_table_view], null);
clustermap.app.handle_event = function handle_event(type, val) {
  var handler = cljs.core.get.call(null, clustermap.app.event_handlers, type);
  if (cljs.core.not.call(null, handler)) {
    throw new Error("no handler for event-type: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type));
  } else {
  }
  return handler.call(null, val);
};
clustermap.app.init_routes = function init_routes(comm) {
  var action__9445__auto___11993 = function(params__9446__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9446__auto__)) {
      var map__11985 = params__9446__auto__;
      var map__11985__$1 = cljs.core.seq_QMARK_.call(null, map__11985) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11985) : map__11985;
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9446__auto__)) {
        var vec__11986 = params__9446__auto__;
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "", action__9445__auto___11993);
  var action__9445__auto___11994 = function(params__9446__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9446__auto__)) {
      var map__11987 = params__9446__auto__;
      var map__11987__$1 = cljs.core.seq_QMARK_.call(null, map__11987) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11987) : map__11987;
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9446__auto__)) {
        var vec__11988 = params__9446__auto__;
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/", action__9445__auto___11994);
  var action__9445__auto___11995 = function(params__9446__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9446__auto__)) {
      var map__11989 = params__9446__auto__;
      var map__11989__$1 = cljs.core.seq_QMARK_.call(null, map__11989) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11989) : map__11989;
      var view = cljs.core.get.call(null, map__11989__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
      cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9446__auto__)) {
        var vec__11990 = params__9446__auto__;
        var view = cljs.core.nth.call(null, vec__11990, 0, null);
        cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view", action__9445__auto___11995);
  var action__9445__auto___11996 = function(params__9446__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9446__auto__)) {
      var map__11991 = params__9446__auto__;
      var map__11991__$1 = cljs.core.seq_QMARK_.call(null, map__11991) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11991) : map__11991;
      var id = cljs.core.get.call(null, map__11991__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
      var type = cljs.core.get.call(null, map__11991__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
      var view = cljs.core.get.call(null, map__11991__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
      cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, type), id], null)], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9446__auto__)) {
        var vec__11992 = params__9446__auto__;
        var view = cljs.core.nth.call(null, vec__11992, 0, null);
        var type = cljs.core.nth.call(null, vec__11992, 1, null);
        var id = cljs.core.nth.call(null, vec__11992, 2, null);
        cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, type), id], null)], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view/:type/:id", action__9445__auto___11996);
  goog.events.listen(clustermap.app.history, goog.history.EventType.NAVIGATE, function(e) {
    var token = e.token;
    clustermap.ganalytics.send_pageview.call(null, token);
    return secretary.core.dispatch_BANG_.call(null, token);
  });
  return clustermap.app.history.setEnabled(true);
};
clustermap.app.init = function init() {
  var comm = cljs.core.async.chan.call(null);
  var path_fn = clustermap.routes.path_for;
  var link_fn = clustermap.routes.link_for;
  var shared = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), path_fn, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), link_fn, new cljs.core.Keyword(null, "view-path-fn", "view-path-fn", 978272186), clustermap.app.change_view_path], null);
  clustermap.nav.init.call(null, comm);
  clustermap.app.init_routes.call(null, comm);
  clustermap.app.load_uk_constituencies.call(null);
  clustermap.app.load_all_investment_stats.call(null);
  clustermap.components.map.mount.call(null, clustermap.app.state, "map-component", shared);
  clustermap.components.search.mount.call(null, clustermap.app.state, "search-component", shared);
  clustermap.components.map_report.mount.call(null, clustermap.app.state, "map-report-component", shared);
  clustermap.components.page_title.mount.call(null, clustermap.app.state, "page-title-component", shared);
  clustermap.components.full_report.mount.call(null, clustermap.app.state, "full-report-component", shared);
  var c__5691__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto__, comm, path_fn, link_fn, shared) {
    return function() {
      var f__5692__auto__ = function() {
        var switch__5676__auto__ = function(c__5691__auto__, comm, path_fn, link_fn, shared) {
          return function(state_12043) {
            var state_val_12044 = state_12043[1];
            if (state_val_12044 === 7) {
              var inst_12032 = state_12043[2];
              var inst_12033 = cljs.core.nth.call(null, inst_12032, 0, null);
              var inst_12034 = cljs.core.nth.call(null, inst_12032, 1, null);
              var inst_12035 = clustermap.app.handle_event.call(null, inst_12033, inst_12034);
              var state_12043__$1 = function() {
                var statearr_12045 = state_12043;
                statearr_12045[7] = inst_12035;
                return statearr_12045;
              }();
              var statearr_12046_12059 = state_12043__$1;
              statearr_12046_12059[2] = null;
              statearr_12046_12059[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12044 === 6) {
                var inst_12039 = state_12043[2];
                var state_12043__$1 = state_12043;
                var statearr_12047_12060 = state_12043__$1;
                statearr_12047_12060[2] = inst_12039;
                statearr_12047_12060[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12044 === 5) {
                  var state_12043__$1 = state_12043;
                  var statearr_12048_12061 = state_12043__$1;
                  statearr_12048_12061[2] = null;
                  statearr_12048_12061[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12044 === 4) {
                    var state_12043__$1 = state_12043;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12043__$1, 7, comm);
                  } else {
                    if (state_val_12044 === 3) {
                      var inst_12041 = state_12043[2];
                      var state_12043__$1 = state_12043;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12043__$1, inst_12041);
                    } else {
                      if (state_val_12044 === 2) {
                        var state_12043__$1 = state_12043;
                        if (true) {
                          var statearr_12049_12062 = state_12043__$1;
                          statearr_12049_12062[1] = 4;
                        } else {
                          var statearr_12050_12063 = state_12043__$1;
                          statearr_12050_12063[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12044 === 1) {
                          var state_12043__$1 = state_12043;
                          var statearr_12051_12064 = state_12043__$1;
                          statearr_12051_12064[2] = null;
                          statearr_12051_12064[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5691__auto__, comm, path_fn, link_fn, shared);
        return function(switch__5676__auto__, c__5691__auto__, comm, path_fn, link_fn, shared) {
          return function() {
            var state_machine__5677__auto__ = null;
            var state_machine__5677__auto____0 = function() {
              var statearr_12055 = [null, null, null, null, null, null, null, null];
              statearr_12055[0] = state_machine__5677__auto__;
              statearr_12055[1] = 1;
              return statearr_12055;
            };
            var state_machine__5677__auto____1 = function(state_12043) {
              while (true) {
                var ret_value__5678__auto__ = function() {
                  try {
                    while (true) {
                      var result__5679__auto__ = switch__5676__auto__.call(null, state_12043);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5679__auto__;
                      }
                      break;
                    }
                  } catch (e12056) {
                    if (e12056 instanceof Object) {
                      var ex__5680__auto__ = e12056;
                      var statearr_12057_12065 = state_12043;
                      statearr_12057_12065[5] = ex__5680__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12043);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12056;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12066 = state_12043;
                  state_12043 = G__12066;
                  continue;
                } else {
                  return ret_value__5678__auto__;
                }
                break;
              }
            };
            state_machine__5677__auto__ = function(state_12043) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5677__auto____0.call(this);
                case 1:
                  return state_machine__5677__auto____1.call(this, state_12043);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
            state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
            return state_machine__5677__auto__;
          }();
        }(switch__5676__auto__, c__5691__auto__, comm, path_fn, link_fn, shared);
      }();
      var state__5693__auto__ = function() {
        var statearr_12058 = f__5692__auto__.call(null);
        statearr_12058[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto__;
        return statearr_12058;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
    };
  }(c__5691__auto__, comm, path_fn, link_fn, shared));
  return c__5691__auto__;
};
goog.provide("clustermap.core");
goog.require("cljs.core");
goog.require("clustermap.app");
goog.require("clustermap.app");
goog.require("clojure.browser.repl");
clustermap.core.init = function init() {
  return clustermap.app.init.call(null);
};
if (cljs.core.truth_(config.repl)) {
  setTimeout(clustermap.core.init, 2E3);
} else {
  if (true) {
    clustermap.core.init.call(null);
  } else {
  }
}
;goog.provide("clustermap.async");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.async.map_async = function() {
  var map_async__delegate = function(f, colls) {
    var coll_chs = cljs.core.map.call(null, function(coll) {
      var ch = cljs.core.async.chan.call(null);
      cljs.core.async.onto_chan.call(null, ch, coll);
      return ch;
    }, colls);
    return cljs.core.async.map.call(null, f, coll_chs);
  };
  var map_async = function(f, var_args) {
    var colls = null;
    if (arguments.length > 1) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map_async__delegate.call(this, f, colls);
  };
  map_async.cljs$lang$maxFixedArity = 1;
  map_async.cljs$lang$applyTo = function(arglist__12067) {
    var f = cljs.core.first(arglist__12067);
    var colls = cljs.core.rest(arglist__12067);
    return map_async__delegate(f, colls);
  };
  map_async.cljs$core$IFn$_invoke$arity$variadic = map_async__delegate;
  return map_async;
}();
clustermap.async.dorun_async = function() {
  var dorun_async__delegate = function(ch, p__12068) {
    var map__12128 = p__12068;
    var map__12128__$1 = cljs.core.seq_QMARK_.call(null, map__12128) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12128) : map__12128;
    var delay = cljs.core.get.call(null, map__12128__$1, new cljs.core.Keyword(null, "delay", "delay", 1109372149));
    var log = cljs.core.get.call(null, map__12128__$1, new cljs.core.Keyword(null, "log", "log", 1014011574));
    var c__5691__auto___12187 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5691__auto___12187, map__12128, map__12128__$1, delay, log) {
      return function() {
        var f__5692__auto__ = function() {
          var switch__5676__auto__ = function(c__5691__auto___12187, map__12128, map__12128__$1, delay, log) {
            return function(state_12157) {
              var state_val_12158 = state_12157[1];
              if (state_val_12158 === 7) {
                var inst_12148 = state_12157[2];
                var state_12157__$1 = state_12157;
                if (cljs.core.truth_(inst_12148)) {
                  var statearr_12159_12188 = state_12157__$1;
                  statearr_12159_12188[1] = 15;
                } else {
                  var statearr_12160_12189 = state_12157__$1;
                  statearr_12160_12189[1] = 16;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12158 === 1) {
                  var state_12157__$1 = state_12157;
                  var statearr_12161_12190 = state_12157__$1;
                  statearr_12161_12190[2] = null;
                  statearr_12161_12190[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12158 === 4) {
                    var inst_12131 = state_12157[7];
                    var inst_12131__$1 = state_12157[2];
                    var state_12157__$1 = function() {
                      var statearr_12162 = state_12157;
                      statearr_12162[7] = inst_12131__$1;
                      return statearr_12162;
                    }();
                    if (cljs.core.truth_(inst_12131__$1)) {
                      var statearr_12163_12191 = state_12157__$1;
                      statearr_12163_12191[1] = 5;
                    } else {
                      var statearr_12164_12192 = state_12157__$1;
                      statearr_12164_12192[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12158 === 15) {
                      var state_12157__$1 = state_12157;
                      var statearr_12165_12193 = state_12157__$1;
                      statearr_12165_12193[2] = null;
                      statearr_12165_12193[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12158 === 13) {
                        var state_12157__$1 = state_12157;
                        var statearr_12166_12194 = state_12157__$1;
                        statearr_12166_12194[2] = null;
                        statearr_12166_12194[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12158 === 6) {
                          var state_12157__$1 = state_12157;
                          var statearr_12167_12195 = state_12157__$1;
                          statearr_12167_12195[2] = null;
                          statearr_12167_12195[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12158 === 17) {
                            var inst_12153 = state_12157[2];
                            var state_12157__$1 = state_12157;
                            var statearr_12168_12196 = state_12157__$1;
                            statearr_12168_12196[2] = inst_12153;
                            statearr_12168_12196[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12158 === 3) {
                              var inst_12155 = state_12157[2];
                              var state_12157__$1 = state_12157;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12157__$1, inst_12155);
                            } else {
                              if (state_val_12158 === 12) {
                                var inst_12131 = state_12157[7];
                                var inst_12141 = cljs.core.clj__GT_js.call(null, inst_12131);
                                var inst_12142 = console.log(inst_12141);
                                var state_12157__$1 = state_12157;
                                var statearr_12169_12197 = state_12157__$1;
                                statearr_12169_12197[2] = inst_12142;
                                statearr_12169_12197[1] = 14;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12158 === 2) {
                                  var state_12157__$1 = state_12157;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12157__$1, 4, ch);
                                } else {
                                  if (state_val_12158 === 11) {
                                    var inst_12136 = state_12157[2];
                                    var state_12157__$1 = state_12157;
                                    var statearr_12170_12198 = state_12157__$1;
                                    statearr_12170_12198[2] = inst_12136;
                                    statearr_12170_12198[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12158 === 9) {
                                      var state_12157__$1 = state_12157;
                                      var statearr_12171_12199 = state_12157__$1;
                                      statearr_12171_12199[2] = null;
                                      statearr_12171_12199[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12158 === 5) {
                                        var state_12157__$1 = state_12157;
                                        if (cljs.core.truth_(delay)) {
                                          var statearr_12172_12200 = state_12157__$1;
                                          statearr_12172_12200[1] = 8;
                                        } else {
                                          var statearr_12173_12201 = state_12157__$1;
                                          statearr_12173_12201[1] = 9;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12158 === 14) {
                                          var inst_12131 = state_12157[7];
                                          var inst_12145 = state_12157[2];
                                          var state_12157__$1 = function() {
                                            var statearr_12174 = state_12157;
                                            statearr_12174[8] = inst_12145;
                                            return statearr_12174;
                                          }();
                                          var statearr_12175_12202 = state_12157__$1;
                                          statearr_12175_12202[2] = inst_12131;
                                          statearr_12175_12202[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12158 === 16) {
                                            var state_12157__$1 = state_12157;
                                            var statearr_12176_12203 = state_12157__$1;
                                            statearr_12176_12203[2] = null;
                                            statearr_12176_12203[1] = 17;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12158 === 10) {
                                              var inst_12139 = state_12157[2];
                                              var state_12157__$1 = function() {
                                                var statearr_12177 = state_12157;
                                                statearr_12177[9] = inst_12139;
                                                return statearr_12177;
                                              }();
                                              if (cljs.core.truth_(log)) {
                                                var statearr_12178_12204 = state_12157__$1;
                                                statearr_12178_12204[1] = 12;
                                              } else {
                                                var statearr_12179_12205 = state_12157__$1;
                                                statearr_12179_12205[1] = 13;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12158 === 8) {
                                                var inst_12134 = cljs.core.async.timeout.call(null, delay);
                                                var state_12157__$1 = state_12157;
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12157__$1, 11, inst_12134);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5691__auto___12187, map__12128, map__12128__$1, delay, log);
          return function(switch__5676__auto__, c__5691__auto___12187, map__12128, map__12128__$1, delay, log) {
            return function() {
              var state_machine__5677__auto__ = null;
              var state_machine__5677__auto____0 = function() {
                var statearr_12183 = [null, null, null, null, null, null, null, null, null, null];
                statearr_12183[0] = state_machine__5677__auto__;
                statearr_12183[1] = 1;
                return statearr_12183;
              };
              var state_machine__5677__auto____1 = function(state_12157) {
                while (true) {
                  var ret_value__5678__auto__ = function() {
                    try {
                      while (true) {
                        var result__5679__auto__ = switch__5676__auto__.call(null, state_12157);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5679__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5679__auto__;
                        }
                        break;
                      }
                    } catch (e12184) {
                      if (e12184 instanceof Object) {
                        var ex__5680__auto__ = e12184;
                        var statearr_12185_12206 = state_12157;
                        statearr_12185_12206[5] = ex__5680__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12157);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12184;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5678__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12207 = state_12157;
                    state_12157 = G__12207;
                    continue;
                  } else {
                    return ret_value__5678__auto__;
                  }
                  break;
                }
              };
              state_machine__5677__auto__ = function(state_12157) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5677__auto____0.call(this);
                  case 1:
                    return state_machine__5677__auto____1.call(this, state_12157);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5677__auto____0;
              state_machine__5677__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5677__auto____1;
              return state_machine__5677__auto__;
            }();
          }(switch__5676__auto__, c__5691__auto___12187, map__12128, map__12128__$1, delay, log);
        }();
        var state__5693__auto__ = function() {
          var statearr_12186 = f__5692__auto__.call(null);
          statearr_12186[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5691__auto___12187;
          return statearr_12186;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5693__auto__);
      };
    }(c__5691__auto___12187, map__12128, map__12128__$1, delay, log));
    return null;
  };
  var dorun_async = function(ch, var_args) {
    var p__12068 = null;
    if (arguments.length > 1) {
      p__12068 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dorun_async__delegate.call(this, ch, p__12068);
  };
  dorun_async.cljs$lang$maxFixedArity = 1;
  dorun_async.cljs$lang$applyTo = function(arglist__12208) {
    var ch = cljs.core.first(arglist__12208);
    var p__12068 = cljs.core.rest(arglist__12208);
    return dorun_async__delegate(ch, p__12068);
  };
  dorun_async.cljs$core$IFn$_invoke$arity$variadic = dorun_async__delegate;
  return dorun_async;
}();

//# sourceMappingURL=clustermap.js.map