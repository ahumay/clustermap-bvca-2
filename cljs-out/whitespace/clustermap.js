var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2227";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__46622__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__46622 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__46622__delegate.call(this, args);
    };
    G__46622.cljs$lang$maxFixedArity = 0;
    G__46622.cljs$lang$applyTo = function(arglist__46623) {
      var args = cljs.core.seq(arglist__46623);
      return G__46622__delegate(args);
    };
    G__46622.cljs$core$IFn$_invoke$arity$variadic = G__46622__delegate;
    return G__46622;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3527__auto__ = ty;
    if (cljs.core.truth_(and__3527__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3527__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4395__auto___46624 = len;
  var i_46625 = 0;
  while (true) {
    if (i_46625 < n__4395__auto___46624) {
      new_arr[i_46625] = arr[i_46625];
      var G__46626 = i_46625 + 1;
      i_46625 = G__46626;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__46627__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__46627 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46627__delegate.call(this, array, i, idxs);
    };
    G__46627.cljs$lang$maxFixedArity = 2;
    G__46627.cljs$lang$applyTo = function(arglist__46628) {
      var array = cljs.core.first(arglist__46628);
      arglist__46628 = cljs.core.next(arglist__46628);
      var i = cljs.core.first(arglist__46628);
      var idxs = cljs.core.rest(arglist__46628);
      return G__46627__delegate(array, i, idxs);
    };
    G__46627.cljs$core$IFn$_invoke$arity$variadic = G__46627__delegate;
    return G__46627;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__46629__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__46629 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__46629__delegate.call(this, array, idx, idx2, idxv);
    };
    G__46629.cljs$lang$maxFixedArity = 3;
    G__46629.cljs$lang$applyTo = function(arglist__46630) {
      var array = cljs.core.first(arglist__46630);
      arglist__46630 = cljs.core.next(arglist__46630);
      var idx = cljs.core.first(arglist__46630);
      arglist__46630 = cljs.core.next(arglist__46630);
      var idx2 = cljs.core.first(arglist__46630);
      var idxv = cljs.core.rest(arglist__46630);
      return G__46629__delegate(array, idx, idx2, idxv);
    };
    G__46629.cljs$core$IFn$_invoke$arity$variadic = G__46629__delegate;
    return G__46629;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj46632 = {};
  return obj46632;
}();
cljs.core.IFn = function() {
  var obj46634 = {};
  return obj46634;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = cljs.core._invoke[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._invoke["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj46636 = {};
  return obj46636;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3527__auto__ = value;
    if (and__3527__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4166__auto__ = value == null ? null : value;
    return function() {
      var or__3539__auto__ = cljs.core._clone[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._clone["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj46638 = {};
  return obj46638;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._count[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._count["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj46640 = {};
  return obj46640;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._empty[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._empty["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj46642 = {};
  return obj46642;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._conj[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._conj["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj46644 = {};
  return obj46644;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3527__auto__ = coll;
      if (and__3527__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4166__auto__ = coll == null ? null : coll;
      return function() {
        var or__3539__auto__ = cljs.core._nth[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._nth["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3527__auto__ = coll;
      if (and__3527__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4166__auto__ = coll == null ? null : coll;
      return function() {
        var or__3539__auto__ = cljs.core._nth[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._nth["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj46646 = {};
  return obj46646;
}();
cljs.core.ISeq = function() {
  var obj46648 = {};
  return obj46648;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._first[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._first["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._rest[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._rest["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj46650 = {};
  return obj46650;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._next[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._next["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj46652 = {};
  return obj46652;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3527__auto__ = o;
      if (and__3527__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4166__auto__ = o == null ? null : o;
      return function() {
        var or__3539__auto__ = cljs.core._lookup[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._lookup["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3527__auto__ = o;
      if (and__3527__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4166__auto__ = o == null ? null : o;
      return function() {
        var or__3539__auto__ = cljs.core._lookup[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._lookup["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj46654 = {};
  return obj46654;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._assoc[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._assoc["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj46656 = {};
  return obj46656;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._dissoc[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._dissoc["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj46658 = {};
  return obj46658;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._key[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._key["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._val[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._val["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj46660 = {};
  return obj46660;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._disjoin[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._disjoin["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj46662 = {};
  return obj46662;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._peek[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._peek["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._pop[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._pop["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj46664 = {};
  return obj46664;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._assoc_n[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj46666 = {};
  return obj46666;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._deref[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._deref["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj46668 = {};
  return obj46668;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj46670 = {};
  return obj46670;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._meta[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._meta["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj46672 = {};
  return obj46672;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._with_meta[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._with_meta["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj46674 = {};
  return obj46674;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3527__auto__ = coll;
      if (and__3527__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4166__auto__ = coll == null ? null : coll;
      return function() {
        var or__3539__auto__ = cljs.core._reduce[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._reduce["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3527__auto__ = coll;
      if (and__3527__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4166__auto__ = coll == null ? null : coll;
      return function() {
        var or__3539__auto__ = cljs.core._reduce[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._reduce["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj46676 = {};
  return obj46676;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj46678 = {};
  return obj46678;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._equiv[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._equiv["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj46680 = {};
  return obj46680;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._hash[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._hash["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj46682 = {};
  return obj46682;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._seq[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._seq["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj46684 = {};
  return obj46684;
}();
cljs.core.IList = function() {
  var obj46686 = {};
  return obj46686;
}();
cljs.core.IRecord = function() {
  var obj46688 = {};
  return obj46688;
}();
cljs.core.IReversible = function() {
  var obj46690 = {};
  return obj46690;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._rseq[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._rseq["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj46692 = {};
  return obj46692;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._entry_key[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._entry_key["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._comparator[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._comparator["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj46694 = {};
  return obj46694;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3527__auto__ = writer;
    if (and__3527__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4166__auto__ = writer == null ? null : writer;
    return function() {
      var or__3539__auto__ = cljs.core._write[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._write["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3527__auto__ = writer;
    if (and__3527__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4166__auto__ = writer == null ? null : writer;
    return function() {
      var or__3539__auto__ = cljs.core._flush[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._flush["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj46696 = {};
  return obj46696;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._pr_writer[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj46698 = {};
  return obj46698;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3527__auto__ = d;
    if (and__3527__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4166__auto__ = d == null ? null : d;
    return function() {
      var or__3539__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj46700 = {};
  return obj46700;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = cljs.core._notify_watches[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = cljs.core._add_watch[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._add_watch["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = cljs.core._remove_watch[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj46702 = {};
  return obj46702;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._as_transient[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._as_transient["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj46704 = {};
  return obj46704;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj46706 = {};
  return obj46706;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj46708 = {};
  return obj46708;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj46710 = {};
  return obj46710;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj46712 = {};
  return obj46712;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3527__auto__ = tcoll;
    if (and__3527__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4166__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3539__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj46714 = {};
  return obj46714;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = cljs.core._compare[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._compare["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj46716 = {};
  return obj46716;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._drop_first[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._drop_first["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj46718 = {};
  return obj46718;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._chunked_first[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj46720 = {};
  return obj46720;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3527__auto__ = coll;
    if (and__3527__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4166__auto__ = coll == null ? null : coll;
    return function() {
      var or__3539__auto__ = cljs.core._chunked_next[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj46722 = {};
  return obj46722;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = cljs.core._name[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._name["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = cljs.core._namespace[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._namespace["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3527__auto__) {
        return b.ns;
      } else {
        return and__3527__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3950__auto__ = self__._hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__46724 = null;
  var G__46724__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__46724__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__46724 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__46724__2.call(this, self__, coll);
      case 3:
        return G__46724__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__46724;
}();
cljs.core.Symbol.prototype.apply = function(self__, args46723) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args46723)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__46726 = value;
  if (G__46726) {
    var bit__4189__auto__ = G__46726.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4189__auto__ || G__46726.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__46726.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__46726);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__46726);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__46728 = coll;
      if (G__46728) {
        var bit__4182__auto__ = G__46728.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4182__auto__ || G__46728.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__46730 = coll;
      if (G__46730) {
        var bit__4182__auto__ = G__46730.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4182__auto__ || G__46730.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__46732 = coll;
      if (G__46732) {
        var bit__4182__auto__ = G__46732.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4182__auto__ || G__46732.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__46734 = coll;
      if (G__46734) {
        var bit__4182__auto__ = G__46734.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4182__auto__ || G__46734.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__46735__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__46736 = y;
            var G__46737 = cljs.core.first.call(null, more);
            var G__46738 = cljs.core.next.call(null, more);
            x = G__46736;
            y = G__46737;
            more = G__46738;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__46735 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46735__delegate.call(this, x, y, more);
    };
    G__46735.cljs$lang$maxFixedArity = 2;
    G__46735.cljs$lang$applyTo = function(arglist__46739) {
      var x = cljs.core.first(arglist__46739);
      arglist__46739 = cljs.core.next(arglist__46739);
      var y = cljs.core.first(arglist__46739);
      var more = cljs.core.rest(arglist__46739);
      return G__46735__delegate(x, y, more);
    };
    G__46735.cljs$core$IFn$_invoke$arity$variadic = G__46735__delegate;
    return G__46735;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__46740 = nval;
            var G__46741 = n + 1;
            val = G__46740;
            n = G__46741;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__46742 = nval;
          var G__46743 = n + 1;
          val__$1 = G__46742;
          n = G__46743;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__46744 = nval;
          var G__46745 = n + 1;
          val__$1 = G__46744;
          n = G__46745;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__46746 = nval;
            var G__46747 = n + 1;
            val = G__46746;
            n = G__46747;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__46748 = nval;
          var G__46749 = n + 1;
          val__$1 = G__46748;
          n = G__46749;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__46750 = nval;
          var G__46751 = n + 1;
          val__$1 = G__46750;
          n = G__46751;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__46753 = x;
  if (G__46753) {
    var bit__4189__auto__ = G__46753.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4189__auto__ || G__46753.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__46753.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__46753);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__46753);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__46755 = x;
  if (G__46755) {
    var bit__4189__auto__ = G__46755.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4189__auto__ || G__46755.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__46755.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__46755);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__46755);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__46756 = sn;
      s = G__46756;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__46757__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__46758 = conj.call(null, coll, x);
          var G__46759 = cljs.core.first.call(null, xs);
          var G__46760 = cljs.core.next.call(null, xs);
          coll = G__46758;
          x = G__46759;
          xs = G__46760;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__46757 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46757__delegate.call(this, coll, x, xs);
    };
    G__46757.cljs$lang$maxFixedArity = 2;
    G__46757.cljs$lang$applyTo = function(arglist__46761) {
      var coll = cljs.core.first(arglist__46761);
      arglist__46761 = cljs.core.next(arglist__46761);
      var x = cljs.core.first(arglist__46761);
      var xs = cljs.core.rest(arglist__46761);
      return G__46757__delegate(coll, x, xs);
    };
    G__46757.cljs$core$IFn$_invoke$arity$variadic = G__46757__delegate;
    return G__46757;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__46762 = cljs.core.next.call(null, s);
      var G__46763 = acc + 1;
      s = G__46762;
      acc = G__46763;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__46765 = coll;
      if (G__46765) {
        var bit__4182__auto__ = G__46765.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4182__auto__ || G__46765.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__46766 = cljs.core.next.call(null, coll);
              var G__46767 = n - 1;
              coll = G__46766;
              n = G__46767;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__46768 = cljs.core.next.call(null, coll);
              var G__46769 = n - 1;
              var G__46770 = not_found;
              coll = G__46768;
              n = G__46769;
              not_found = G__46770;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__46775 = coll;
          if (G__46775) {
            var bit__4182__auto__ = G__46775.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4182__auto__ || G__46775.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__46776 = coll;
                  if (G__46776) {
                    var bit__4189__auto__ = G__46776.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4189__auto__ || G__46776.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__46776.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__46776);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__46776);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__46777 = coll;
          if (G__46777) {
            var bit__4182__auto__ = G__46777.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4182__auto__ || G__46777.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__46778 = coll;
                  if (G__46778) {
                    var bit__4189__auto__ = G__46778.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4189__auto__ || G__46778.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__46778.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__46778);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__46778);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__46781 = o;
        if (G__46781) {
          var bit__4182__auto__ = G__46781.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4182__auto__ || G__46781.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__46782 = o;
        if (G__46782) {
          var bit__4182__auto__ = G__46782.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4182__auto__ || G__46782.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__46783__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__46784 = ret;
          var G__46785 = cljs.core.first.call(null, kvs);
          var G__46786 = cljs.core.second.call(null, kvs);
          var G__46787 = cljs.core.nnext.call(null, kvs);
          coll = G__46784;
          k = G__46785;
          v = G__46786;
          kvs = G__46787;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__46783 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__46783__delegate.call(this, coll, k, v, kvs);
    };
    G__46783.cljs$lang$maxFixedArity = 3;
    G__46783.cljs$lang$applyTo = function(arglist__46788) {
      var coll = cljs.core.first(arglist__46788);
      arglist__46788 = cljs.core.next(arglist__46788);
      var k = cljs.core.first(arglist__46788);
      arglist__46788 = cljs.core.next(arglist__46788);
      var v = cljs.core.first(arglist__46788);
      var kvs = cljs.core.rest(arglist__46788);
      return G__46783__delegate(coll, k, v, kvs);
    };
    G__46783.cljs$core$IFn$_invoke$arity$variadic = G__46783__delegate;
    return G__46783;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__46789__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__46790 = ret;
            var G__46791 = cljs.core.first.call(null, ks);
            var G__46792 = cljs.core.next.call(null, ks);
            coll = G__46790;
            k = G__46791;
            ks = G__46792;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__46789 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46789__delegate.call(this, coll, k, ks);
    };
    G__46789.cljs$lang$maxFixedArity = 2;
    G__46789.cljs$lang$applyTo = function(arglist__46793) {
      var coll = cljs.core.first(arglist__46793);
      arglist__46793 = cljs.core.next(arglist__46793);
      var k = cljs.core.first(arglist__46793);
      var ks = cljs.core.rest(arglist__46793);
      return G__46789__delegate(coll, k, ks);
    };
    G__46789.cljs$core$IFn$_invoke$arity$variadic = G__46789__delegate;
    return G__46789;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3539__auto__ = goog.isFunction(f);
  if (or__3539__auto__) {
    return or__3539__auto__;
  } else {
    var G__46797 = f;
    if (G__46797) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto____$1 = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto____$1)) {
          return or__3539__auto____$1;
        } else {
          return G__46797.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__46797.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__46797);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__46797);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__46805 = o;
    if (G__46805) {
      var bit__4189__auto__ = G__46805.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4189__auto__ || G__46805.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__46805.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__46805);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__46805);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t46806 !== "undefined") {
      } else {
        cljs.core.t46806 = function(meta, o, with_meta, meta46807) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta46807 = meta46807;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t46806.cljs$lang$type = true;
        cljs.core.t46806.cljs$lang$ctorStr = "cljs.core/t46806";
        cljs.core.t46806.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
          return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/t46806");
        };
        cljs.core.t46806.prototype.call = function() {
          var G__46810__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__46810 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__46810__delegate.call(this, self__, args);
          };
          G__46810.cljs$lang$maxFixedArity = 1;
          G__46810.cljs$lang$applyTo = function(arglist__46811) {
            var self__ = cljs.core.first(arglist__46811);
            var args = cljs.core.rest(arglist__46811);
            return G__46810__delegate(self__, args);
          };
          G__46810.cljs$core$IFn$_invoke$arity$variadic = G__46810__delegate;
          return G__46810;
        }();
        cljs.core.t46806.prototype.apply = function(self__, args46809) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args46809)));
        };
        cljs.core.t46806.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__46812__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__46812 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__46812__delegate.call(this, args);
          };
          G__46812.cljs$lang$maxFixedArity = 0;
          G__46812.cljs$lang$applyTo = function(arglist__46813) {
            var args = cljs.core.seq(arglist__46813);
            return G__46812__delegate(args);
          };
          G__46812.cljs$core$IFn$_invoke$arity$variadic = G__46812__delegate;
          return G__46812;
        }();
        cljs.core.t46806.prototype.cljs$core$Fn$ = true;
        cljs.core.t46806.prototype.cljs$core$IMeta$_meta$arity$1 = function(_46808) {
          var self__ = this;
          var _46808__$1 = this;
          return self__.meta46807;
        };
        cljs.core.t46806.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_46808, meta46807__$1) {
          var self__ = this;
          var _46808__$1 = this;
          return new cljs.core.t46806(self__.meta, self__.o, self__.with_meta, meta46807__$1);
        };
        cljs.core.__GT_t46806 = function __GT_t46806(meta__$1, o__$1, with_meta__$1, meta46807) {
          return new cljs.core.t46806(meta__$1, o__$1, with_meta__$1, meta46807);
        };
      }
      return new cljs.core.t46806(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3527__auto__ = !(o == null);
    if (and__3527__auto__) {
      var G__46817 = o;
      if (G__46817) {
        var bit__4189__auto__ = G__46817.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4189__auto__ || G__46817.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__46817.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__46817);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__46817);
      }
    } else {
      return and__3527__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__46818__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__46819 = ret;
            var G__46820 = cljs.core.first.call(null, ks);
            var G__46821 = cljs.core.next.call(null, ks);
            coll = G__46819;
            k = G__46820;
            ks = G__46821;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__46818 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46818__delegate.call(this, coll, k, ks);
    };
    G__46818.cljs$lang$maxFixedArity = 2;
    G__46818.cljs$lang$applyTo = function(arglist__46822) {
      var coll = cljs.core.first(arglist__46822);
      arglist__46822 = cljs.core.next(arglist__46822);
      var k = cljs.core.first(arglist__46822);
      var ks = cljs.core.rest(arglist__46822);
      return G__46818__delegate(coll, k, ks);
    };
    G__46818.cljs$core$IFn$_invoke$arity$variadic = G__46818__delegate;
    return G__46818;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj46824 = {};
  return obj46824;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj46828 = {};
      return obj46828;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__46830 = o;
    if (G__46830) {
      var bit__4182__auto__ = G__46830.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4182__auto__ || G__46830.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__46832 = x;
    if (G__46832) {
      var bit__4189__auto__ = G__46832.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4189__auto__ || G__46832.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__46832.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__46832);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__46832);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__46834 = x;
    if (G__46834) {
      var bit__4189__auto__ = G__46834.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4189__auto__ || G__46834.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__46834.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__46834);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__46834);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__46836 = x;
  if (G__46836) {
    var bit__4189__auto__ = G__46836.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4189__auto__ || G__46836.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__46836.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__46836);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__46836);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__46838 = x;
  if (G__46838) {
    var bit__4189__auto__ = G__46838.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4189__auto__ || G__46838.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__46838.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__46838);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__46838);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__46840 = x;
  if (G__46840) {
    var bit__4189__auto__ = G__46840.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4189__auto__ || G__46840.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__46840.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__46840);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__46840);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__46842 = x;
  if (G__46842) {
    var bit__4189__auto__ = G__46842.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4189__auto__ || G__46842.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__46842.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__46842);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__46842);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__46844 = x;
    if (G__46844) {
      var bit__4189__auto__ = G__46844.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4189__auto__ || G__46844.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__46844.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__46844);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__46844);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__46846 = x;
  if (G__46846) {
    var bit__4189__auto__ = G__46846.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4189__auto__ || G__46846.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__46846.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__46846);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__46846);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__46848 = x;
  if (G__46848) {
    var bit__4182__auto__ = G__46848.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4182__auto__ || G__46848.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj46852 = {};
    return obj46852;
  };
  var js_obj__1 = function() {
    var G__46853__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__46853 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__46853__delegate.call(this, keyvals);
    };
    G__46853.cljs$lang$maxFixedArity = 0;
    G__46853.cljs$lang$applyTo = function(arglist__46854) {
      var keyvals = cljs.core.seq(arglist__46854);
      return G__46853__delegate(keyvals);
    };
    G__46853.cljs$core$IFn$_invoke$arity$variadic = G__46853__delegate;
    return G__46853;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__46855 = i__$1 + 1;
      var G__46856 = j__$1 + 1;
      var G__46857 = len__$1 - 1;
      i__$1 = G__46855;
      j__$1 = G__46856;
      len__$1 = G__46857;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__46858 = i__$1 - 1;
      var G__46859 = j__$1 - 1;
      var G__46860 = len__$1 - 1;
      i__$1 = G__46858;
      j__$1 = G__46859;
      len__$1 = G__46860;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj46862 = {};
  return obj46862;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__46864 = s;
    if (G__46864) {
      var bit__4189__auto__ = G__46864.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4189__auto__ || G__46864.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__46864.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__46864);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__46864);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__46866 = s;
  if (G__46866) {
    var bit__4189__auto__ = G__46866.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4189__auto__ || G__46866.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__46866.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__46866);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__46866);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3539__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3539__auto__) {
    return or__3539__auto__;
  } else {
    var G__46870 = f;
    if (G__46870) {
      var bit__4189__auto__ = G__46870.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4189__auto__ || G__46870.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__46870.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__46870);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__46870);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__46871__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__46872 = cljs.core.conj.call(null, s, x__$1);
              var G__46873 = etc;
              s = G__46872;
              xs = G__46873;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__46871 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46871__delegate.call(this, x, y, more);
    };
    G__46871.cljs$lang$maxFixedArity = 2;
    G__46871.cljs$lang$applyTo = function(arglist__46874) {
      var x = cljs.core.first(arglist__46874);
      arglist__46874 = cljs.core.next(arglist__46874);
      var y = cljs.core.first(arglist__46874);
      var more = cljs.core.rest(arglist__46874);
      return G__46871__delegate(x, y, more);
    };
    G__46871.cljs$core$IFn$_invoke$arity$variadic = G__46871__delegate;
    return G__46871;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3539__auto__ = cljs.core.seq.call(null, coll);
    if (or__3539__auto__) {
      return or__3539__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__46876 = x;
            if (G__46876) {
              var bit__4182__auto__ = G__46876.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4182__auto__ || G__46876.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__46877 = xs;
        var G__46878 = ys;
        var G__46879 = len;
        var G__46880 = n + 1;
        xs = G__46877;
        ys = G__46878;
        len = G__46879;
        n = G__46880;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__46881 = nval;
          var G__46882 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__46881;
          coll__$1 = G__46882;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__46885 = coll;
      if (G__46885) {
        var bit__4182__auto__ = G__46885.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4182__auto__ || G__46885.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__46886 = coll;
      if (G__46886) {
        var bit__4182__auto__ = G__46886.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4182__auto__ || G__46886.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__46887__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__46887 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46887__delegate.call(this, x, y, more);
    };
    G__46887.cljs$lang$maxFixedArity = 2;
    G__46887.cljs$lang$applyTo = function(arglist__46888) {
      var x = cljs.core.first(arglist__46888);
      arglist__46888 = cljs.core.next(arglist__46888);
      var y = cljs.core.first(arglist__46888);
      var more = cljs.core.rest(arglist__46888);
      return G__46887__delegate(x, y, more);
    };
    G__46887.cljs$core$IFn$_invoke$arity$variadic = G__46887__delegate;
    return G__46887;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__46889__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__46889 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46889__delegate.call(this, x, y, more);
    };
    G__46889.cljs$lang$maxFixedArity = 2;
    G__46889.cljs$lang$applyTo = function(arglist__46890) {
      var x = cljs.core.first(arglist__46890);
      arglist__46890 = cljs.core.next(arglist__46890);
      var y = cljs.core.first(arglist__46890);
      var more = cljs.core.rest(arglist__46890);
      return G__46889__delegate(x, y, more);
    };
    G__46889.cljs$core$IFn$_invoke$arity$variadic = G__46889__delegate;
    return G__46889;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__46891__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__46891 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46891__delegate.call(this, x, y, more);
    };
    G__46891.cljs$lang$maxFixedArity = 2;
    G__46891.cljs$lang$applyTo = function(arglist__46892) {
      var x = cljs.core.first(arglist__46892);
      arglist__46892 = cljs.core.next(arglist__46892);
      var y = cljs.core.first(arglist__46892);
      var more = cljs.core.rest(arglist__46892);
      return G__46891__delegate(x, y, more);
    };
    G__46891.cljs$core$IFn$_invoke$arity$variadic = G__46891__delegate;
    return G__46891;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__46893__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__46893 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46893__delegate.call(this, x, y, more);
    };
    G__46893.cljs$lang$maxFixedArity = 2;
    G__46893.cljs$lang$applyTo = function(arglist__46894) {
      var x = cljs.core.first(arglist__46894);
      arglist__46894 = cljs.core.next(arglist__46894);
      var y = cljs.core.first(arglist__46894);
      var more = cljs.core.rest(arglist__46894);
      return G__46893__delegate(x, y, more);
    };
    G__46893.cljs$core$IFn$_invoke$arity$variadic = G__46893__delegate;
    return G__46893;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__46895__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__46896 = y;
            var G__46897 = cljs.core.first.call(null, more);
            var G__46898 = cljs.core.next.call(null, more);
            x = G__46896;
            y = G__46897;
            more = G__46898;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__46895 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46895__delegate.call(this, x, y, more);
    };
    G__46895.cljs$lang$maxFixedArity = 2;
    G__46895.cljs$lang$applyTo = function(arglist__46899) {
      var x = cljs.core.first(arglist__46899);
      arglist__46899 = cljs.core.next(arglist__46899);
      var y = cljs.core.first(arglist__46899);
      var more = cljs.core.rest(arglist__46899);
      return G__46895__delegate(x, y, more);
    };
    G__46895.cljs$core$IFn$_invoke$arity$variadic = G__46895__delegate;
    return G__46895;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__46900__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__46901 = y;
            var G__46902 = cljs.core.first.call(null, more);
            var G__46903 = cljs.core.next.call(null, more);
            x = G__46901;
            y = G__46902;
            more = G__46903;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__46900 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46900__delegate.call(this, x, y, more);
    };
    G__46900.cljs$lang$maxFixedArity = 2;
    G__46900.cljs$lang$applyTo = function(arglist__46904) {
      var x = cljs.core.first(arglist__46904);
      arglist__46904 = cljs.core.next(arglist__46904);
      var y = cljs.core.first(arglist__46904);
      var more = cljs.core.rest(arglist__46904);
      return G__46900__delegate(x, y, more);
    };
    G__46900.cljs$core$IFn$_invoke$arity$variadic = G__46900__delegate;
    return G__46900;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__46905__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__46906 = y;
            var G__46907 = cljs.core.first.call(null, more);
            var G__46908 = cljs.core.next.call(null, more);
            x = G__46906;
            y = G__46907;
            more = G__46908;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__46905 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46905__delegate.call(this, x, y, more);
    };
    G__46905.cljs$lang$maxFixedArity = 2;
    G__46905.cljs$lang$applyTo = function(arglist__46909) {
      var x = cljs.core.first(arglist__46909);
      arglist__46909 = cljs.core.next(arglist__46909);
      var y = cljs.core.first(arglist__46909);
      var more = cljs.core.rest(arglist__46909);
      return G__46905__delegate(x, y, more);
    };
    G__46905.cljs$core$IFn$_invoke$arity$variadic = G__46905__delegate;
    return G__46905;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__46910__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__46911 = y;
            var G__46912 = cljs.core.first.call(null, more);
            var G__46913 = cljs.core.next.call(null, more);
            x = G__46911;
            y = G__46912;
            more = G__46913;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__46910 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46910__delegate.call(this, x, y, more);
    };
    G__46910.cljs$lang$maxFixedArity = 2;
    G__46910.cljs$lang$applyTo = function(arglist__46914) {
      var x = cljs.core.first(arglist__46914);
      arglist__46914 = cljs.core.next(arglist__46914);
      var y = cljs.core.first(arglist__46914);
      var more = cljs.core.rest(arglist__46914);
      return G__46910__delegate(x, y, more);
    };
    G__46910.cljs$core$IFn$_invoke$arity$variadic = G__46910__delegate;
    return G__46910;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3846__auto__ = x;
    var y__3847__auto__ = y;
    return x__3846__auto__ > y__3847__auto__ ? x__3846__auto__ : y__3847__auto__;
  };
  var max__3 = function() {
    var G__46915__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3846__auto__ = x;
        var y__3847__auto__ = y;
        return x__3846__auto__ > y__3847__auto__ ? x__3846__auto__ : y__3847__auto__;
      }(), more);
    };
    var G__46915 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46915__delegate.call(this, x, y, more);
    };
    G__46915.cljs$lang$maxFixedArity = 2;
    G__46915.cljs$lang$applyTo = function(arglist__46916) {
      var x = cljs.core.first(arglist__46916);
      arglist__46916 = cljs.core.next(arglist__46916);
      var y = cljs.core.first(arglist__46916);
      var more = cljs.core.rest(arglist__46916);
      return G__46915__delegate(x, y, more);
    };
    G__46915.cljs$core$IFn$_invoke$arity$variadic = G__46915__delegate;
    return G__46915;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3853__auto__ = x;
    var y__3854__auto__ = y;
    return x__3853__auto__ < y__3854__auto__ ? x__3853__auto__ : y__3854__auto__;
  };
  var min__3 = function() {
    var G__46917__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3853__auto__ = x;
        var y__3854__auto__ = y;
        return x__3853__auto__ < y__3854__auto__ ? x__3853__auto__ : y__3854__auto__;
      }(), more);
    };
    var G__46917 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46917__delegate.call(this, x, y, more);
    };
    G__46917.cljs$lang$maxFixedArity = 2;
    G__46917.cljs$lang$applyTo = function(arglist__46918) {
      var x = cljs.core.first(arglist__46918);
      arglist__46918 = cljs.core.next(arglist__46918);
      var y = cljs.core.first(arglist__46918);
      var more = cljs.core.rest(arglist__46918);
      return G__46917__delegate(x, y, more);
    };
    G__46917.cljs$core$IFn$_invoke$arity$variadic = G__46917__delegate;
    return G__46917;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__46919__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__46919 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46919__delegate.call(this, x, y, more);
    };
    G__46919.cljs$lang$maxFixedArity = 2;
    G__46919.cljs$lang$applyTo = function(arglist__46920) {
      var x = cljs.core.first(arglist__46920);
      arglist__46920 = cljs.core.next(arglist__46920);
      var y = cljs.core.first(arglist__46920);
      var more = cljs.core.rest(arglist__46920);
      return G__46919__delegate(x, y, more);
    };
    G__46919.cljs$core$IFn$_invoke$arity$variadic = G__46919__delegate;
    return G__46919;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__46921__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__46921 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46921__delegate.call(this, x, y, more);
    };
    G__46921.cljs$lang$maxFixedArity = 2;
    G__46921.cljs$lang$applyTo = function(arglist__46922) {
      var x = cljs.core.first(arglist__46922);
      arglist__46922 = cljs.core.next(arglist__46922);
      var y = cljs.core.first(arglist__46922);
      var more = cljs.core.rest(arglist__46922);
      return G__46921__delegate(x, y, more);
    };
    G__46921.cljs$core$IFn$_invoke$arity$variadic = G__46921__delegate;
    return G__46921;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__46923__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__46923 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46923__delegate.call(this, x, y, more);
    };
    G__46923.cljs$lang$maxFixedArity = 2;
    G__46923.cljs$lang$applyTo = function(arglist__46924) {
      var x = cljs.core.first(arglist__46924);
      arglist__46924 = cljs.core.next(arglist__46924);
      var y = cljs.core.first(arglist__46924);
      var more = cljs.core.rest(arglist__46924);
      return G__46923__delegate(x, y, more);
    };
    G__46923.cljs$core$IFn$_invoke$arity$variadic = G__46923__delegate;
    return G__46923;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__46925__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__46925 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46925__delegate.call(this, x, y, more);
    };
    G__46925.cljs$lang$maxFixedArity = 2;
    G__46925.cljs$lang$applyTo = function(arglist__46926) {
      var x = cljs.core.first(arglist__46926);
      arglist__46926 = cljs.core.next(arglist__46926);
      var y = cljs.core.first(arglist__46926);
      var more = cljs.core.rest(arglist__46926);
      return G__46925__delegate(x, y, more);
    };
    G__46925.cljs$core$IFn$_invoke$arity$variadic = G__46925__delegate;
    return G__46925;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__46927__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__46927 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46927__delegate.call(this, x, y, more);
    };
    G__46927.cljs$lang$maxFixedArity = 2;
    G__46927.cljs$lang$applyTo = function(arglist__46928) {
      var x = cljs.core.first(arglist__46928);
      arglist__46928 = cljs.core.next(arglist__46928);
      var y = cljs.core.first(arglist__46928);
      var more = cljs.core.rest(arglist__46928);
      return G__46927__delegate(x, y, more);
    };
    G__46927.cljs$core$IFn$_invoke$arity$variadic = G__46927__delegate;
    return G__46927;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__46929__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__46929 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46929__delegate.call(this, x, y, more);
    };
    G__46929.cljs$lang$maxFixedArity = 2;
    G__46929.cljs$lang$applyTo = function(arglist__46930) {
      var x = cljs.core.first(arglist__46930);
      arglist__46930 = cljs.core.next(arglist__46930);
      var y = cljs.core.first(arglist__46930);
      var more = cljs.core.rest(arglist__46930);
      return G__46929__delegate(x, y, more);
    };
    G__46929.cljs$core$IFn$_invoke$arity$variadic = G__46929__delegate;
    return G__46929;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__46931__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__46931 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46931__delegate.call(this, x, y, more);
    };
    G__46931.cljs$lang$maxFixedArity = 2;
    G__46931.cljs$lang$applyTo = function(arglist__46932) {
      var x = cljs.core.first(arglist__46932);
      arglist__46932 = cljs.core.next(arglist__46932);
      var y = cljs.core.first(arglist__46932);
      var more = cljs.core.rest(arglist__46932);
      return G__46931__delegate(x, y, more);
    };
    G__46931.cljs$core$IFn$_invoke$arity$variadic = G__46931__delegate;
    return G__46931;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__46933__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__46934 = y;
            var G__46935 = cljs.core.first.call(null, more);
            var G__46936 = cljs.core.next.call(null, more);
            x = G__46934;
            y = G__46935;
            more = G__46936;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__46933 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__46933__delegate.call(this, x, y, more);
    };
    G__46933.cljs$lang$maxFixedArity = 2;
    G__46933.cljs$lang$applyTo = function(arglist__46937) {
      var x = cljs.core.first(arglist__46937);
      arglist__46937 = cljs.core.next(arglist__46937);
      var y = cljs.core.first(arglist__46937);
      var more = cljs.core.rest(arglist__46937);
      return G__46933__delegate(x, y, more);
    };
    G__46933.cljs$core$IFn$_invoke$arity$variadic = G__46933__delegate;
    return G__46933;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__46938 = n__$1 - 1;
      var G__46939 = cljs.core.next.call(null, xs);
      n__$1 = G__46938;
      xs = G__46939;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__46940__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__46941 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__46942 = cljs.core.next.call(null, more);
          sb = G__46941;
          more = G__46942;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__46940 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__46940__delegate.call(this, x, ys);
    };
    G__46940.cljs$lang$maxFixedArity = 1;
    G__46940.cljs$lang$applyTo = function(arglist__46943) {
      var x = cljs.core.first(arglist__46943);
      var ys = cljs.core.rest(arglist__46943);
      return G__46940__delegate(x, ys);
    };
    G__46940.cljs$core$IFn$_invoke$arity$variadic = G__46940__delegate;
    return G__46940;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__46944 = cljs.core.next.call(null, xs);
            var G__46945 = cljs.core.next.call(null, ys);
            xs = G__46944;
            ys = G__46945;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__46946 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__46947 = cljs.core.next.call(null, s);
        res = G__46946;
        s = G__46947;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__46948 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__46949 = cljs.core.next.call(null, s);
      h = G__46948;
      s = G__46949;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__46950 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__46951 = cljs.core.next.call(null, s__$1);
      h = G__46950;
      s__$1 = G__46951;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__46958_46964 = cljs.core.seq.call(null, fn_map);
  var chunk__46959_46965 = null;
  var count__46960_46966 = 0;
  var i__46961_46967 = 0;
  while (true) {
    if (i__46961_46967 < count__46960_46966) {
      var vec__46962_46968 = cljs.core._nth.call(null, chunk__46959_46965, i__46961_46967);
      var key_name_46969 = cljs.core.nth.call(null, vec__46962_46968, 0, null);
      var f_46970 = cljs.core.nth.call(null, vec__46962_46968, 1, null);
      var str_name_46971 = cljs.core.name.call(null, key_name_46969);
      obj[str_name_46971] = f_46970;
      var G__46972 = seq__46958_46964;
      var G__46973 = chunk__46959_46965;
      var G__46974 = count__46960_46966;
      var G__46975 = i__46961_46967 + 1;
      seq__46958_46964 = G__46972;
      chunk__46959_46965 = G__46973;
      count__46960_46966 = G__46974;
      i__46961_46967 = G__46975;
      continue;
    } else {
      var temp__4126__auto___46976 = cljs.core.seq.call(null, seq__46958_46964);
      if (temp__4126__auto___46976) {
        var seq__46958_46977__$1 = temp__4126__auto___46976;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46958_46977__$1)) {
          var c__4295__auto___46978 = cljs.core.chunk_first.call(null, seq__46958_46977__$1);
          var G__46979 = cljs.core.chunk_rest.call(null, seq__46958_46977__$1);
          var G__46980 = c__4295__auto___46978;
          var G__46981 = cljs.core.count.call(null, c__4295__auto___46978);
          var G__46982 = 0;
          seq__46958_46964 = G__46979;
          chunk__46959_46965 = G__46980;
          count__46960_46966 = G__46981;
          i__46961_46967 = G__46982;
          continue;
        } else {
          var vec__46963_46983 = cljs.core.first.call(null, seq__46958_46977__$1);
          var key_name_46984 = cljs.core.nth.call(null, vec__46963_46983, 0, null);
          var f_46985 = cljs.core.nth.call(null, vec__46963_46983, 1, null);
          var str_name_46986 = cljs.core.name.call(null, key_name_46984);
          obj[str_name_46986] = f_46985;
          var G__46987 = cljs.core.next.call(null, seq__46958_46977__$1);
          var G__46988 = null;
          var G__46989 = 0;
          var G__46990 = 0;
          seq__46958_46964 = G__46987;
          chunk__46959_46965 = G__46988;
          count__46960_46966 = G__46989;
          i__46961_46967 = G__46990;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__46992 = coll;
  if (G__46992) {
    var bit__4189__auto__ = G__46992.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4189__auto__ || G__46992.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__46992.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__46992);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__46992);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__46993 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__46993;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__46994 = i - 1;
        var G__46995 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__46994;
        r = G__46995;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__46996) {
    var xs = cljs.core.seq(arglist__46996);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3539__auto__ = coll == null;
    if (or__3539__auto__) {
      return or__3539__auto__;
    } else {
      var G__47000 = coll;
      if (G__47000) {
        var bit__4182__auto__ = G__47000.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4182__auto__ || G__47000.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__47002 = x;
  if (G__47002) {
    var bit__4189__auto__ = G__47002.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4189__auto__ || G__47002.cljs$core$IList$) {
      return true;
    } else {
      if (!G__47002.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__47002);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__47002);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__47004 = null;
  var G__47004__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__47004__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__47004 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47004__2.call(this, self__, coll);
      case 3:
        return G__47004__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47004;
}();
cljs.core.Keyword.prototype.apply = function(self__, args47003) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47003)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__47006 = x;
    if (G__47006) {
      var bit__4182__auto__ = G__47006.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4182__auto__ || G__47006.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__47007 = ls.sval();
        ls = G__47007;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__47009 = s;
    if (G__47009) {
      var bit__4182__auto__ = G__47009.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4182__auto__ || G__47009.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__47010 = cljs.core.next.call(null, s__$1);
      s__$1 = G__47010;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_47011 = 0;
  var xs_47012 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_47012) {
      ret[i_47011] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_47012));
      var G__47013 = i_47011 + 1;
      var G__47014 = cljs.core.next.call(null, xs_47012);
      i_47011 = G__47013;
      xs_47012 = G__47014;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__47015 = i + 1;
          var G__47016 = cljs.core.next.call(null, s__$1);
          i = G__47015;
          s__$1 = G__47016;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4395__auto___47017 = size;
      var i_47018 = 0;
      while (true) {
        if (i_47018 < n__4395__auto___47017) {
          a[i_47018] = init_val_or_seq;
          var G__47019 = i_47018 + 1;
          i_47018 = G__47019;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__47020 = i + 1;
          var G__47021 = cljs.core.next.call(null, s__$1);
          i = G__47020;
          s__$1 = G__47021;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4395__auto___47022 = size;
      var i_47023 = 0;
      while (true) {
        if (i_47023 < n__4395__auto___47022) {
          a[i_47023] = init_val_or_seq;
          var G__47024 = i_47023 + 1;
          i_47023 = G__47024;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__47025 = i + 1;
          var G__47026 = cljs.core.next.call(null, s__$1);
          i = G__47025;
          s__$1 = G__47026;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4395__auto___47027 = size;
      var i_47028 = 0;
      while (true) {
        if (i_47028 < n__4395__auto___47027) {
          a[i_47028] = init_val_or_seq;
          var G__47029 = i_47028 + 1;
          i_47028 = G__47029;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__47030 = i + 1;
          var G__47031 = cljs.core.next.call(null, s__$1);
          i = G__47030;
          s__$1 = G__47031;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4395__auto___47032 = size;
      var i_47033 = 0;
      while (true) {
        if (i_47033 < n__4395__auto___47032) {
          a[i_47033] = init_val_or_seq;
          var G__47034 = i_47033 + 1;
          i_47033 = G__47034;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__47035 = cljs.core.next.call(null, s__$1);
        var G__47036 = i - 1;
        var G__47037 = sum + 1;
        s__$1 = G__47035;
        i = G__47036;
        sum = G__47037;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__47038__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__47038 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47038__delegate.call(this, x, y, zs);
    };
    G__47038.cljs$lang$maxFixedArity = 2;
    G__47038.cljs$lang$applyTo = function(arglist__47039) {
      var x = cljs.core.first(arglist__47039);
      arglist__47039 = cljs.core.next(arglist__47039);
      var y = cljs.core.first(arglist__47039);
      var zs = cljs.core.rest(arglist__47039);
      return G__47038__delegate(x, y, zs);
    };
    G__47038.cljs$core$IFn$_invoke$arity$variadic = G__47038__delegate;
    return G__47038;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__47040__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__47040 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__47040__delegate.call(this, a, b, c, d, more);
    };
    G__47040.cljs$lang$maxFixedArity = 4;
    G__47040.cljs$lang$applyTo = function(arglist__47041) {
      var a = cljs.core.first(arglist__47041);
      arglist__47041 = cljs.core.next(arglist__47041);
      var b = cljs.core.first(arglist__47041);
      arglist__47041 = cljs.core.next(arglist__47041);
      var c = cljs.core.first(arglist__47041);
      arglist__47041 = cljs.core.next(arglist__47041);
      var d = cljs.core.first(arglist__47041);
      var more = cljs.core.rest(arglist__47041);
      return G__47040__delegate(a, b, c, d, more);
    };
    G__47040.cljs$core$IFn$_invoke$arity$variadic = G__47040__delegate;
    return G__47040;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__47042__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__47043 = ntcoll;
          var G__47044 = cljs.core.first.call(null, vals);
          var G__47045 = cljs.core.next.call(null, vals);
          tcoll = G__47043;
          val = G__47044;
          vals = G__47045;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__47042 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47042__delegate.call(this, tcoll, val, vals);
    };
    G__47042.cljs$lang$maxFixedArity = 2;
    G__47042.cljs$lang$applyTo = function(arglist__47046) {
      var tcoll = cljs.core.first(arglist__47046);
      arglist__47046 = cljs.core.next(arglist__47046);
      var val = cljs.core.first(arglist__47046);
      var vals = cljs.core.rest(arglist__47046);
      return G__47042__delegate(tcoll, val, vals);
    };
    G__47042.cljs$core$IFn$_invoke$arity$variadic = G__47042__delegate;
    return G__47042;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__47047__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__47048 = ntcoll;
          var G__47049 = cljs.core.first.call(null, kvs);
          var G__47050 = cljs.core.second.call(null, kvs);
          var G__47051 = cljs.core.nnext.call(null, kvs);
          tcoll = G__47048;
          key = G__47049;
          val = G__47050;
          kvs = G__47051;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__47047 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47047__delegate.call(this, tcoll, key, val, kvs);
    };
    G__47047.cljs$lang$maxFixedArity = 3;
    G__47047.cljs$lang$applyTo = function(arglist__47052) {
      var tcoll = cljs.core.first(arglist__47052);
      arglist__47052 = cljs.core.next(arglist__47052);
      var key = cljs.core.first(arglist__47052);
      arglist__47052 = cljs.core.next(arglist__47052);
      var val = cljs.core.first(arglist__47052);
      var kvs = cljs.core.rest(arglist__47052);
      return G__47047__delegate(tcoll, key, val, kvs);
    };
    G__47047.cljs$core$IFn$_invoke$arity$variadic = G__47047__delegate;
    return G__47047;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__47053__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__47054 = ntcoll;
          var G__47055 = cljs.core.first.call(null, ks);
          var G__47056 = cljs.core.next.call(null, ks);
          tcoll = G__47054;
          key = G__47055;
          ks = G__47056;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__47053 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47053__delegate.call(this, tcoll, key, ks);
    };
    G__47053.cljs$lang$maxFixedArity = 2;
    G__47053.cljs$lang$applyTo = function(arglist__47057) {
      var tcoll = cljs.core.first(arglist__47057);
      arglist__47057 = cljs.core.next(arglist__47057);
      var key = cljs.core.first(arglist__47057);
      var ks = cljs.core.rest(arglist__47057);
      return G__47053__delegate(tcoll, key, ks);
    };
    G__47053.cljs$core$IFn$_invoke$arity$variadic = G__47053__delegate;
    return G__47053;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__47058__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__47059 = ntcoll;
          var G__47060 = cljs.core.first.call(null, vals);
          var G__47061 = cljs.core.next.call(null, vals);
          tcoll = G__47059;
          val = G__47060;
          vals = G__47061;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__47058 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47058__delegate.call(this, tcoll, val, vals);
    };
    G__47058.cljs$lang$maxFixedArity = 2;
    G__47058.cljs$lang$applyTo = function(arglist__47062) {
      var tcoll = cljs.core.first(arglist__47062);
      arglist__47062 = cljs.core.next(arglist__47062);
      var val = cljs.core.first(arglist__47062);
      var vals = cljs.core.rest(arglist__47062);
      return G__47058__delegate(tcoll, val, vals);
    };
    G__47058.cljs$core$IFn$_invoke$arity$variadic = G__47058__delegate;
    return G__47058;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4439 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4439);
      } else {
        return f.call(null, a4439);
      }
    } else {
      var b4440 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4439, b4440);
        } else {
          return f.call(null, a4439, b4440);
        }
      } else {
        var c4441 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4439, b4440, c4441);
          } else {
            return f.call(null, a4439, b4440, c4441);
          }
        } else {
          var d4442 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4439, b4440, c4441, d4442);
            } else {
              return f.call(null, a4439, b4440, c4441, d4442);
            }
          } else {
            var e4443 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4439, b4440, c4441, d4442, e4443);
              } else {
                return f.call(null, a4439, b4440, c4441, d4442, e4443);
              }
            } else {
              var f4444 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4439, b4440, c4441, d4442, e4443, f4444);
                } else {
                  return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444);
                }
              } else {
                var g4445 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4439, b4440, c4441, d4442, e4443, f4444, g4445);
                  } else {
                    return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445);
                  }
                } else {
                  var h4446 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446);
                    } else {
                      return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446);
                    }
                  } else {
                    var i4447 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447);
                      } else {
                        return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447);
                      }
                    } else {
                      var j4448 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448);
                        } else {
                          return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448);
                        }
                      } else {
                        var k4449 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449);
                          } else {
                            return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449);
                          }
                        } else {
                          var l4450 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450);
                            } else {
                              return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450);
                            }
                          } else {
                            var m4451 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451);
                              } else {
                                return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451);
                              }
                            } else {
                              var n4452 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452);
                                } else {
                                  return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452);
                                }
                              } else {
                                var o4453 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453);
                                  } else {
                                    return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453);
                                  }
                                } else {
                                  var p4454 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454);
                                    } else {
                                      return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454);
                                    }
                                  } else {
                                    var q4455 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455);
                                      } else {
                                        return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455);
                                      }
                                    } else {
                                      var r4456 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455, r4456);
                                        } else {
                                          return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455, r4456);
                                        }
                                      } else {
                                        var s4457 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455, r4456, s4457);
                                          } else {
                                            return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455, r4456, s4457);
                                          }
                                        } else {
                                          var t4458 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455, r4456, s4457, t4458);
                                            } else {
                                              return f.call(null, a4439, b4440, c4441, d4442, e4443, f4444, g4445, h4446, i4447, j4448, k4449, l4450, m4451, n4452, o4453, p4454, q4455, r4456, s4457, t4458);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__47063__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__47063 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__47063__delegate.call(this, f, a, b, c, d, args);
    };
    G__47063.cljs$lang$maxFixedArity = 5;
    G__47063.cljs$lang$applyTo = function(arglist__47064) {
      var f = cljs.core.first(arglist__47064);
      arglist__47064 = cljs.core.next(arglist__47064);
      var a = cljs.core.first(arglist__47064);
      arglist__47064 = cljs.core.next(arglist__47064);
      var b = cljs.core.first(arglist__47064);
      arglist__47064 = cljs.core.next(arglist__47064);
      var c = cljs.core.first(arglist__47064);
      arglist__47064 = cljs.core.next(arglist__47064);
      var d = cljs.core.first(arglist__47064);
      var args = cljs.core.rest(arglist__47064);
      return G__47063__delegate(f, a, b, c, d, args);
    };
    G__47063.cljs$core$IFn$_invoke$arity$variadic = G__47063__delegate;
    return G__47063;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__47065__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__47065 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__47065__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__47065.cljs$lang$maxFixedArity = 6;
    G__47065.cljs$lang$applyTo = function(arglist__47066) {
      var obj = cljs.core.first(arglist__47066);
      arglist__47066 = cljs.core.next(arglist__47066);
      var f = cljs.core.first(arglist__47066);
      arglist__47066 = cljs.core.next(arglist__47066);
      var a = cljs.core.first(arglist__47066);
      arglist__47066 = cljs.core.next(arglist__47066);
      var b = cljs.core.first(arglist__47066);
      arglist__47066 = cljs.core.next(arglist__47066);
      var c = cljs.core.first(arglist__47066);
      arglist__47066 = cljs.core.next(arglist__47066);
      var d = cljs.core.first(arglist__47066);
      var args = cljs.core.rest(arglist__47066);
      return G__47065__delegate(obj, f, a, b, c, d, args);
    };
    G__47065.cljs$core$IFn$_invoke$arity$variadic = G__47065__delegate;
    return G__47065;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__47067__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__47067 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47067__delegate.call(this, x, y, more);
    };
    G__47067.cljs$lang$maxFixedArity = 2;
    G__47067.cljs$lang$applyTo = function(arglist__47068) {
      var x = cljs.core.first(arglist__47068);
      arglist__47068 = cljs.core.next(arglist__47068);
      var y = cljs.core.first(arglist__47068);
      var more = cljs.core.rest(arglist__47068);
      return G__47067__delegate(x, y, more);
    };
    G__47067.cljs$core$IFn$_invoke$arity$variadic = G__47067__delegate;
    return G__47067;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__47069 = pred;
        var G__47070 = cljs.core.next.call(null, coll);
        pred = G__47069;
        coll = G__47070;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3539__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        var G__47071 = pred;
        var G__47072 = cljs.core.next.call(null, coll);
        pred = G__47071;
        coll = G__47072;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__47073 = null;
    var G__47073__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__47073__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__47073__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__47073__3 = function() {
      var G__47074__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__47074 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__47074__delegate.call(this, x, y, zs);
      };
      G__47074.cljs$lang$maxFixedArity = 2;
      G__47074.cljs$lang$applyTo = function(arglist__47075) {
        var x = cljs.core.first(arglist__47075);
        arglist__47075 = cljs.core.next(arglist__47075);
        var y = cljs.core.first(arglist__47075);
        var zs = cljs.core.rest(arglist__47075);
        return G__47074__delegate(x, y, zs);
      };
      G__47074.cljs$core$IFn$_invoke$arity$variadic = G__47074__delegate;
      return G__47074;
    }();
    G__47073 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__47073__0.call(this);
        case 1:
          return G__47073__1.call(this, x);
        case 2:
          return G__47073__2.call(this, x, y);
        default:
          return G__47073__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__47073.cljs$lang$maxFixedArity = 2;
    G__47073.cljs$lang$applyTo = G__47073__3.cljs$lang$applyTo;
    return G__47073;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__47076__delegate = function(args) {
      return x;
    };
    var G__47076 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__47076__delegate.call(this, args);
    };
    G__47076.cljs$lang$maxFixedArity = 0;
    G__47076.cljs$lang$applyTo = function(arglist__47077) {
      var args = cljs.core.seq(arglist__47077);
      return G__47076__delegate(args);
    };
    G__47076.cljs$core$IFn$_invoke$arity$variadic = G__47076__delegate;
    return G__47076;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__47078 = null;
      var G__47078__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__47078__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__47078__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__47078__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__47078__4 = function() {
        var G__47079__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__47079 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47079__delegate.call(this, x, y, z, args);
        };
        G__47079.cljs$lang$maxFixedArity = 3;
        G__47079.cljs$lang$applyTo = function(arglist__47080) {
          var x = cljs.core.first(arglist__47080);
          arglist__47080 = cljs.core.next(arglist__47080);
          var y = cljs.core.first(arglist__47080);
          arglist__47080 = cljs.core.next(arglist__47080);
          var z = cljs.core.first(arglist__47080);
          var args = cljs.core.rest(arglist__47080);
          return G__47079__delegate(x, y, z, args);
        };
        G__47079.cljs$core$IFn$_invoke$arity$variadic = G__47079__delegate;
        return G__47079;
      }();
      G__47078 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__47078__0.call(this);
          case 1:
            return G__47078__1.call(this, x);
          case 2:
            return G__47078__2.call(this, x, y);
          case 3:
            return G__47078__3.call(this, x, y, z);
          default:
            return G__47078__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47078.cljs$lang$maxFixedArity = 3;
      G__47078.cljs$lang$applyTo = G__47078__4.cljs$lang$applyTo;
      return G__47078;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__47081 = null;
      var G__47081__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__47081__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__47081__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__47081__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__47081__4 = function() {
        var G__47082__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__47082 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47082__delegate.call(this, x, y, z, args);
        };
        G__47082.cljs$lang$maxFixedArity = 3;
        G__47082.cljs$lang$applyTo = function(arglist__47083) {
          var x = cljs.core.first(arglist__47083);
          arglist__47083 = cljs.core.next(arglist__47083);
          var y = cljs.core.first(arglist__47083);
          arglist__47083 = cljs.core.next(arglist__47083);
          var z = cljs.core.first(arglist__47083);
          var args = cljs.core.rest(arglist__47083);
          return G__47082__delegate(x, y, z, args);
        };
        G__47082.cljs$core$IFn$_invoke$arity$variadic = G__47082__delegate;
        return G__47082;
      }();
      G__47081 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__47081__0.call(this);
          case 1:
            return G__47081__1.call(this, x);
          case 2:
            return G__47081__2.call(this, x, y);
          case 3:
            return G__47081__3.call(this, x, y, z);
          default:
            return G__47081__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47081.cljs$lang$maxFixedArity = 3;
      G__47081.cljs$lang$applyTo = G__47081__4.cljs$lang$applyTo;
      return G__47081;
    }();
  };
  var comp__4 = function() {
    var G__47084__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__47085__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__47086 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__47087 = cljs.core.next.call(null, fs__$2);
                ret = G__47086;
                fs__$2 = G__47087;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__47085 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__47085__delegate.call(this, args);
          };
          G__47085.cljs$lang$maxFixedArity = 0;
          G__47085.cljs$lang$applyTo = function(arglist__47088) {
            var args = cljs.core.seq(arglist__47088);
            return G__47085__delegate(args);
          };
          G__47085.cljs$core$IFn$_invoke$arity$variadic = G__47085__delegate;
          return G__47085;
        }();
      }(fs__$1);
    };
    var G__47084 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47084__delegate.call(this, f1, f2, f3, fs);
    };
    G__47084.cljs$lang$maxFixedArity = 3;
    G__47084.cljs$lang$applyTo = function(arglist__47089) {
      var f1 = cljs.core.first(arglist__47089);
      arglist__47089 = cljs.core.next(arglist__47089);
      var f2 = cljs.core.first(arglist__47089);
      arglist__47089 = cljs.core.next(arglist__47089);
      var f3 = cljs.core.first(arglist__47089);
      var fs = cljs.core.rest(arglist__47089);
      return G__47084__delegate(f1, f2, f3, fs);
    };
    G__47084.cljs$core$IFn$_invoke$arity$variadic = G__47084__delegate;
    return G__47084;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__47090__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__47090 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__47090__delegate.call(this, args);
      };
      G__47090.cljs$lang$maxFixedArity = 0;
      G__47090.cljs$lang$applyTo = function(arglist__47091) {
        var args = cljs.core.seq(arglist__47091);
        return G__47090__delegate(args);
      };
      G__47090.cljs$core$IFn$_invoke$arity$variadic = G__47090__delegate;
      return G__47090;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__47092__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__47092 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__47092__delegate.call(this, args);
      };
      G__47092.cljs$lang$maxFixedArity = 0;
      G__47092.cljs$lang$applyTo = function(arglist__47093) {
        var args = cljs.core.seq(arglist__47093);
        return G__47092__delegate(args);
      };
      G__47092.cljs$core$IFn$_invoke$arity$variadic = G__47092__delegate;
      return G__47092;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__47094__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__47094 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__47094__delegate.call(this, args);
      };
      G__47094.cljs$lang$maxFixedArity = 0;
      G__47094.cljs$lang$applyTo = function(arglist__47095) {
        var args = cljs.core.seq(arglist__47095);
        return G__47094__delegate(args);
      };
      G__47094.cljs$core$IFn$_invoke$arity$variadic = G__47094__delegate;
      return G__47094;
    }();
  };
  var partial__5 = function() {
    var G__47096__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__47097__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__47097 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__47097__delegate.call(this, args);
        };
        G__47097.cljs$lang$maxFixedArity = 0;
        G__47097.cljs$lang$applyTo = function(arglist__47098) {
          var args = cljs.core.seq(arglist__47098);
          return G__47097__delegate(args);
        };
        G__47097.cljs$core$IFn$_invoke$arity$variadic = G__47097__delegate;
        return G__47097;
      }();
    };
    var G__47096 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__47096__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__47096.cljs$lang$maxFixedArity = 4;
    G__47096.cljs$lang$applyTo = function(arglist__47099) {
      var f = cljs.core.first(arglist__47099);
      arglist__47099 = cljs.core.next(arglist__47099);
      var arg1 = cljs.core.first(arglist__47099);
      arglist__47099 = cljs.core.next(arglist__47099);
      var arg2 = cljs.core.first(arglist__47099);
      arglist__47099 = cljs.core.next(arglist__47099);
      var arg3 = cljs.core.first(arglist__47099);
      var more = cljs.core.rest(arglist__47099);
      return G__47096__delegate(f, arg1, arg2, arg3, more);
    };
    G__47096.cljs$core$IFn$_invoke$arity$variadic = G__47096__delegate;
    return G__47096;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__47100 = null;
      var G__47100__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__47100__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__47100__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__47100__4 = function() {
        var G__47101__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__47101 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47101__delegate.call(this, a, b, c, ds);
        };
        G__47101.cljs$lang$maxFixedArity = 3;
        G__47101.cljs$lang$applyTo = function(arglist__47102) {
          var a = cljs.core.first(arglist__47102);
          arglist__47102 = cljs.core.next(arglist__47102);
          var b = cljs.core.first(arglist__47102);
          arglist__47102 = cljs.core.next(arglist__47102);
          var c = cljs.core.first(arglist__47102);
          var ds = cljs.core.rest(arglist__47102);
          return G__47101__delegate(a, b, c, ds);
        };
        G__47101.cljs$core$IFn$_invoke$arity$variadic = G__47101__delegate;
        return G__47101;
      }();
      G__47100 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__47100__1.call(this, a);
          case 2:
            return G__47100__2.call(this, a, b);
          case 3:
            return G__47100__3.call(this, a, b, c);
          default:
            return G__47100__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47100.cljs$lang$maxFixedArity = 3;
      G__47100.cljs$lang$applyTo = G__47100__4.cljs$lang$applyTo;
      return G__47100;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__47103 = null;
      var G__47103__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__47103__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__47103__4 = function() {
        var G__47104__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__47104 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47104__delegate.call(this, a, b, c, ds);
        };
        G__47104.cljs$lang$maxFixedArity = 3;
        G__47104.cljs$lang$applyTo = function(arglist__47105) {
          var a = cljs.core.first(arglist__47105);
          arglist__47105 = cljs.core.next(arglist__47105);
          var b = cljs.core.first(arglist__47105);
          arglist__47105 = cljs.core.next(arglist__47105);
          var c = cljs.core.first(arglist__47105);
          var ds = cljs.core.rest(arglist__47105);
          return G__47104__delegate(a, b, c, ds);
        };
        G__47104.cljs$core$IFn$_invoke$arity$variadic = G__47104__delegate;
        return G__47104;
      }();
      G__47103 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__47103__2.call(this, a, b);
          case 3:
            return G__47103__3.call(this, a, b, c);
          default:
            return G__47103__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47103.cljs$lang$maxFixedArity = 3;
      G__47103.cljs$lang$applyTo = G__47103__4.cljs$lang$applyTo;
      return G__47103;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__47106 = null;
      var G__47106__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__47106__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__47106__4 = function() {
        var G__47107__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__47107 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47107__delegate.call(this, a, b, c, ds);
        };
        G__47107.cljs$lang$maxFixedArity = 3;
        G__47107.cljs$lang$applyTo = function(arglist__47108) {
          var a = cljs.core.first(arglist__47108);
          arglist__47108 = cljs.core.next(arglist__47108);
          var b = cljs.core.first(arglist__47108);
          arglist__47108 = cljs.core.next(arglist__47108);
          var c = cljs.core.first(arglist__47108);
          var ds = cljs.core.rest(arglist__47108);
          return G__47107__delegate(a, b, c, ds);
        };
        G__47107.cljs$core$IFn$_invoke$arity$variadic = G__47107__delegate;
        return G__47107;
      }();
      G__47106 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__47106__2.call(this, a, b);
          case 3:
            return G__47106__3.call(this, a, b, c);
          default:
            return G__47106__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47106.cljs$lang$maxFixedArity = 3;
      G__47106.cljs$lang$applyTo = G__47106__4.cljs$lang$applyTo;
      return G__47106;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4395__auto___47109 = size;
          var i_47110 = 0;
          while (true) {
            if (i_47110 < n__4395__auto___47109) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_47110, cljs.core._nth.call(null, c, i_47110)));
              var G__47111 = i_47110 + 1;
              i_47110 = G__47111;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4395__auto___47112 = size;
        var i_47113 = 0;
        while (true) {
          if (i_47113 < n__4395__auto___47112) {
            var x_47114 = f.call(null, cljs.core._nth.call(null, c, i_47113));
            if (x_47114 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_47114);
            }
            var G__47115 = i_47113 + 1;
            i_47113 = G__47115;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4395__auto___47116 = size;
          var i_47117 = 0;
          while (true) {
            if (i_47117 < n__4395__auto___47116) {
              var x_47118 = f.call(null, idx + i_47117, cljs.core._nth.call(null, c, i_47117));
              if (x_47118 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_47118);
              }
              var G__47119 = i_47117 + 1;
              i_47117 = G__47119;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            return p.call(null, y);
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3527__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__47126__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__47126 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47126__delegate.call(this, x, y, z, args);
        };
        G__47126.cljs$lang$maxFixedArity = 3;
        G__47126.cljs$lang$applyTo = function(arglist__47127) {
          var x = cljs.core.first(arglist__47127);
          arglist__47127 = cljs.core.next(arglist__47127);
          var y = cljs.core.first(arglist__47127);
          arglist__47127 = cljs.core.next(arglist__47127);
          var z = cljs.core.first(arglist__47127);
          var args = cljs.core.rest(arglist__47127);
          return G__47126__delegate(x, y, z, args);
        };
        G__47126.cljs$core$IFn$_invoke$arity$variadic = G__47126__delegate;
        return G__47126;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3527__auto____$1)) {
              var and__3527__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3527__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3527__auto____$2;
              }
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3527__auto____$1)) {
              var and__3527__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3527__auto____$2)) {
                var and__3527__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3527__auto____$3)) {
                  var and__3527__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3527__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3527__auto____$4;
                  }
                } else {
                  return and__3527__auto____$3;
                }
              } else {
                return and__3527__auto____$2;
              }
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__47128__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__47120_SHARP_) {
            var and__3527__auto__ = p1.call(null, p1__47120_SHARP_);
            if (cljs.core.truth_(and__3527__auto__)) {
              return p2.call(null, p1__47120_SHARP_);
            } else {
              return and__3527__auto__;
            }
          }, args));
        };
        var G__47128 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47128__delegate.call(this, x, y, z, args);
        };
        G__47128.cljs$lang$maxFixedArity = 3;
        G__47128.cljs$lang$applyTo = function(arglist__47129) {
          var x = cljs.core.first(arglist__47129);
          arglist__47129 = cljs.core.next(arglist__47129);
          var y = cljs.core.first(arglist__47129);
          arglist__47129 = cljs.core.next(arglist__47129);
          var z = cljs.core.first(arglist__47129);
          var args = cljs.core.rest(arglist__47129);
          return G__47128__delegate(x, y, z, args);
        };
        G__47128.cljs$core$IFn$_invoke$arity$variadic = G__47128__delegate;
        return G__47128;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3527__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3527__auto____$1)) {
              var and__3527__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3527__auto____$2)) {
                var and__3527__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3527__auto____$3)) {
                  var and__3527__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3527__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3527__auto____$4;
                  }
                } else {
                  return and__3527__auto____$3;
                }
              } else {
                return and__3527__auto____$2;
              }
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3527__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3527__auto____$1)) {
              var and__3527__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3527__auto____$2)) {
                var and__3527__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3527__auto____$3)) {
                  var and__3527__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3527__auto____$4)) {
                    var and__3527__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3527__auto____$5)) {
                      var and__3527__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3527__auto____$6)) {
                        var and__3527__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3527__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3527__auto____$7;
                        }
                      } else {
                        return and__3527__auto____$6;
                      }
                    } else {
                      return and__3527__auto____$5;
                    }
                  } else {
                    return and__3527__auto____$4;
                  }
                } else {
                  return and__3527__auto____$3;
                }
              } else {
                return and__3527__auto____$2;
              }
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__47130__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__47121_SHARP_) {
            var and__3527__auto__ = p1.call(null, p1__47121_SHARP_);
            if (cljs.core.truth_(and__3527__auto__)) {
              var and__3527__auto____$1 = p2.call(null, p1__47121_SHARP_);
              if (cljs.core.truth_(and__3527__auto____$1)) {
                return p3.call(null, p1__47121_SHARP_);
              } else {
                return and__3527__auto____$1;
              }
            } else {
              return and__3527__auto__;
            }
          }, args));
        };
        var G__47130 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47130__delegate.call(this, x, y, z, args);
        };
        G__47130.cljs$lang$maxFixedArity = 3;
        G__47130.cljs$lang$applyTo = function(arglist__47131) {
          var x = cljs.core.first(arglist__47131);
          arglist__47131 = cljs.core.next(arglist__47131);
          var y = cljs.core.first(arglist__47131);
          arglist__47131 = cljs.core.next(arglist__47131);
          var z = cljs.core.first(arglist__47131);
          var args = cljs.core.rest(arglist__47131);
          return G__47130__delegate(x, y, z, args);
        };
        G__47130.cljs$core$IFn$_invoke$arity$variadic = G__47130__delegate;
        return G__47130;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__47132__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__47122_SHARP_) {
                return p1__47122_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__47123_SHARP_) {
                var and__3527__auto__ = p1__47123_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3527__auto__)) {
                  return p1__47123_SHARP_.call(null, y);
                } else {
                  return and__3527__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__47124_SHARP_) {
                var and__3527__auto__ = p1__47124_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3527__auto__)) {
                  var and__3527__auto____$1 = p1__47124_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3527__auto____$1)) {
                    return p1__47124_SHARP_.call(null, z);
                  } else {
                    return and__3527__auto____$1;
                  }
                } else {
                  return and__3527__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__47133__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__47125_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__47125_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__47133 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__47133__delegate.call(this, x, y, z, args);
            };
            G__47133.cljs$lang$maxFixedArity = 3;
            G__47133.cljs$lang$applyTo = function(arglist__47134) {
              var x = cljs.core.first(arglist__47134);
              arglist__47134 = cljs.core.next(arglist__47134);
              var y = cljs.core.first(arglist__47134);
              arglist__47134 = cljs.core.next(arglist__47134);
              var z = cljs.core.first(arglist__47134);
              var args = cljs.core.rest(arglist__47134);
              return G__47133__delegate(x, y, z, args);
            };
            G__47133.cljs$core$IFn$_invoke$arity$variadic = G__47133__delegate;
            return G__47133;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__47132 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47132__delegate.call(this, p1, p2, p3, ps);
    };
    G__47132.cljs$lang$maxFixedArity = 3;
    G__47132.cljs$lang$applyTo = function(arglist__47135) {
      var p1 = cljs.core.first(arglist__47135);
      arglist__47135 = cljs.core.next(arglist__47135);
      var p2 = cljs.core.first(arglist__47135);
      arglist__47135 = cljs.core.next(arglist__47135);
      var p3 = cljs.core.first(arglist__47135);
      var ps = cljs.core.rest(arglist__47135);
      return G__47132__delegate(p1, p2, p3, ps);
    };
    G__47132.cljs$core$IFn$_invoke$arity$variadic = G__47132__delegate;
    return G__47132;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3539__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3539__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3539__auto____$1)) {
            return or__3539__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__47142__delegate = function(x, y, z, args) {
          var or__3539__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__47142 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47142__delegate.call(this, x, y, z, args);
        };
        G__47142.cljs$lang$maxFixedArity = 3;
        G__47142.cljs$lang$applyTo = function(arglist__47143) {
          var x = cljs.core.first(arglist__47143);
          arglist__47143 = cljs.core.next(arglist__47143);
          var y = cljs.core.first(arglist__47143);
          arglist__47143 = cljs.core.next(arglist__47143);
          var z = cljs.core.first(arglist__47143);
          var args = cljs.core.rest(arglist__47143);
          return G__47142__delegate(x, y, z, args);
        };
        G__47142.cljs$core$IFn$_invoke$arity$variadic = G__47142__delegate;
        return G__47142;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3539__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3539__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3539__auto____$1)) {
            return or__3539__auto____$1;
          } else {
            var or__3539__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3539__auto____$2)) {
              return or__3539__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3539__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3539__auto____$1)) {
            return or__3539__auto____$1;
          } else {
            var or__3539__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3539__auto____$2)) {
              return or__3539__auto____$2;
            } else {
              var or__3539__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3539__auto____$3)) {
                return or__3539__auto____$3;
              } else {
                var or__3539__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3539__auto____$4)) {
                  return or__3539__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__47144__delegate = function(x, y, z, args) {
          var or__3539__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3539__auto__) {
              return function(p1__47136_SHARP_) {
                var or__3539__auto____$1 = p1.call(null, p1__47136_SHARP_);
                if (cljs.core.truth_(or__3539__auto____$1)) {
                  return or__3539__auto____$1;
                } else {
                  return p2.call(null, p1__47136_SHARP_);
                }
              };
            }(or__3539__auto__), args);
          }
        };
        var G__47144 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47144__delegate.call(this, x, y, z, args);
        };
        G__47144.cljs$lang$maxFixedArity = 3;
        G__47144.cljs$lang$applyTo = function(arglist__47145) {
          var x = cljs.core.first(arglist__47145);
          arglist__47145 = cljs.core.next(arglist__47145);
          var y = cljs.core.first(arglist__47145);
          arglist__47145 = cljs.core.next(arglist__47145);
          var z = cljs.core.first(arglist__47145);
          var args = cljs.core.rest(arglist__47145);
          return G__47144__delegate(x, y, z, args);
        };
        G__47144.cljs$core$IFn$_invoke$arity$variadic = G__47144__delegate;
        return G__47144;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3539__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3539__auto____$1)) {
            return or__3539__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3539__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3539__auto____$1)) {
            return or__3539__auto____$1;
          } else {
            var or__3539__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3539__auto____$2)) {
              return or__3539__auto____$2;
            } else {
              var or__3539__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3539__auto____$3)) {
                return or__3539__auto____$3;
              } else {
                var or__3539__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3539__auto____$4)) {
                  return or__3539__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3539__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3539__auto____$1)) {
            return or__3539__auto____$1;
          } else {
            var or__3539__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3539__auto____$2)) {
              return or__3539__auto____$2;
            } else {
              var or__3539__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3539__auto____$3)) {
                return or__3539__auto____$3;
              } else {
                var or__3539__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3539__auto____$4)) {
                  return or__3539__auto____$4;
                } else {
                  var or__3539__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3539__auto____$5)) {
                    return or__3539__auto____$5;
                  } else {
                    var or__3539__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3539__auto____$6)) {
                      return or__3539__auto____$6;
                    } else {
                      var or__3539__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3539__auto____$7)) {
                        return or__3539__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__47146__delegate = function(x, y, z, args) {
          var or__3539__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3539__auto__) {
              return function(p1__47137_SHARP_) {
                var or__3539__auto____$1 = p1.call(null, p1__47137_SHARP_);
                if (cljs.core.truth_(or__3539__auto____$1)) {
                  return or__3539__auto____$1;
                } else {
                  var or__3539__auto____$2 = p2.call(null, p1__47137_SHARP_);
                  if (cljs.core.truth_(or__3539__auto____$2)) {
                    return or__3539__auto____$2;
                  } else {
                    return p3.call(null, p1__47137_SHARP_);
                  }
                }
              };
            }(or__3539__auto__), args);
          }
        };
        var G__47146 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47146__delegate.call(this, x, y, z, args);
        };
        G__47146.cljs$lang$maxFixedArity = 3;
        G__47146.cljs$lang$applyTo = function(arglist__47147) {
          var x = cljs.core.first(arglist__47147);
          arglist__47147 = cljs.core.next(arglist__47147);
          var y = cljs.core.first(arglist__47147);
          arglist__47147 = cljs.core.next(arglist__47147);
          var z = cljs.core.first(arglist__47147);
          var args = cljs.core.rest(arglist__47147);
          return G__47146__delegate(x, y, z, args);
        };
        G__47146.cljs$core$IFn$_invoke$arity$variadic = G__47146__delegate;
        return G__47146;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__47148__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__47138_SHARP_) {
                return p1__47138_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__47139_SHARP_) {
                var or__3539__auto__ = p1__47139_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3539__auto__)) {
                  return or__3539__auto__;
                } else {
                  return p1__47139_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__47140_SHARP_) {
                var or__3539__auto__ = p1__47140_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3539__auto__)) {
                  return or__3539__auto__;
                } else {
                  var or__3539__auto____$1 = p1__47140_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3539__auto____$1)) {
                    return or__3539__auto____$1;
                  } else {
                    return p1__47140_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__47149__delegate = function(x, y, z, args) {
              var or__3539__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3539__auto__)) {
                return or__3539__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3539__auto__, ps__$1) {
                  return function(p1__47141_SHARP_) {
                    return cljs.core.some.call(null, p1__47141_SHARP_, args);
                  };
                }(or__3539__auto__, ps__$1), ps__$1);
              }
            };
            var G__47149 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__47149__delegate.call(this, x, y, z, args);
            };
            G__47149.cljs$lang$maxFixedArity = 3;
            G__47149.cljs$lang$applyTo = function(arglist__47150) {
              var x = cljs.core.first(arglist__47150);
              arglist__47150 = cljs.core.next(arglist__47150);
              var y = cljs.core.first(arglist__47150);
              arglist__47150 = cljs.core.next(arglist__47150);
              var z = cljs.core.first(arglist__47150);
              var args = cljs.core.rest(arglist__47150);
              return G__47149__delegate(x, y, z, args);
            };
            G__47149.cljs$core$IFn$_invoke$arity$variadic = G__47149__delegate;
            return G__47149;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__47148 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47148__delegate.call(this, p1, p2, p3, ps);
    };
    G__47148.cljs$lang$maxFixedArity = 3;
    G__47148.cljs$lang$applyTo = function(arglist__47151) {
      var p1 = cljs.core.first(arglist__47151);
      arglist__47151 = cljs.core.next(arglist__47151);
      var p2 = cljs.core.first(arglist__47151);
      arglist__47151 = cljs.core.next(arglist__47151);
      var p3 = cljs.core.first(arglist__47151);
      var ps = cljs.core.rest(arglist__47151);
      return G__47148__delegate(p1, p2, p3, ps);
    };
    G__47148.cljs$core$IFn$_invoke$arity$variadic = G__47148__delegate;
    return G__47148;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4395__auto___47153 = size;
          var i_47154 = 0;
          while (true) {
            if (i_47154 < n__4395__auto___47153) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_47154)));
              var G__47155 = i_47154 + 1;
              i_47154 = G__47155;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__47156__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__47152_SHARP_) {
          return cljs.core.apply.call(null, f, p1__47152_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__47156 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__47156__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__47156.cljs$lang$maxFixedArity = 4;
    G__47156.cljs$lang$applyTo = function(arglist__47157) {
      var f = cljs.core.first(arglist__47157);
      arglist__47157 = cljs.core.next(arglist__47157);
      var c1 = cljs.core.first(arglist__47157);
      arglist__47157 = cljs.core.next(arglist__47157);
      var c2 = cljs.core.first(arglist__47157);
      arglist__47157 = cljs.core.next(arglist__47157);
      var c3 = cljs.core.first(arglist__47157);
      var colls = cljs.core.rest(arglist__47157);
      return G__47156__delegate(f, c1, c2, c3, colls);
    };
    G__47156.cljs$core$IFn$_invoke$arity$variadic = G__47156__delegate;
    return G__47156;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__47158 = n__$1 - 1;
        var G__47159 = cljs.core.rest.call(null, s);
        n__$1 = G__47158;
        coll__$1 = G__47159;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__47160 = cljs.core.next.call(null, s);
      var G__47161 = cljs.core.next.call(null, lead);
      s = G__47160;
      lead = G__47161;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3527__auto__ = s;
        if (and__3527__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3527__auto__;
        }
      }())) {
        var G__47162 = pred__$1;
        var G__47163 = cljs.core.rest.call(null, s);
        pred__$1 = G__47162;
        coll__$1 = G__47163;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__47164__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__47164 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47164__delegate.call(this, c1, c2, colls);
    };
    G__47164.cljs$lang$maxFixedArity = 2;
    G__47164.cljs$lang$applyTo = function(arglist__47165) {
      var c1 = cljs.core.first(arglist__47165);
      arglist__47165 = cljs.core.next(arglist__47165);
      var c2 = cljs.core.first(arglist__47165);
      var colls = cljs.core.rest(arglist__47165);
      return G__47164__delegate(c1, c2, colls);
    };
    G__47164.cljs$core$IFn$_invoke$arity$variadic = G__47164__delegate;
    return G__47164;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__47166__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__47166 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__47166__delegate.call(this, f, coll, colls);
    };
    G__47166.cljs$lang$maxFixedArity = 2;
    G__47166.cljs$lang$applyTo = function(arglist__47167) {
      var f = cljs.core.first(arglist__47167);
      arglist__47167 = cljs.core.next(arglist__47167);
      var coll = cljs.core.first(arglist__47167);
      var colls = cljs.core.rest(arglist__47167);
      return G__47166__delegate(f, coll, colls);
    };
    G__47166.cljs$core$IFn$_invoke$arity$variadic = G__47166__delegate;
    return G__47166;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4395__auto___47168 = size;
        var i_47169 = 0;
        while (true) {
          if (i_47169 < n__4395__auto___47168) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_47169)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_47169));
            } else {
            }
            var G__47170 = i_47169 + 1;
            i_47169 = G__47170;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__47171_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__47171_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__47173 = to;
      if (G__47173) {
        var bit__4182__auto__ = G__47173.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4182__auto__ || G__47173.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__47174__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__47174 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__47174__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__47174.cljs$lang$maxFixedArity = 4;
    G__47174.cljs$lang$applyTo = function(arglist__47175) {
      var f = cljs.core.first(arglist__47175);
      arglist__47175 = cljs.core.next(arglist__47175);
      var c1 = cljs.core.first(arglist__47175);
      arglist__47175 = cljs.core.next(arglist__47175);
      var c2 = cljs.core.first(arglist__47175);
      arglist__47175 = cljs.core.next(arglist__47175);
      var c3 = cljs.core.first(arglist__47175);
      var colls = cljs.core.rest(arglist__47175);
      return G__47174__delegate(f, c1, c2, c3, colls);
    };
    G__47174.cljs$core$IFn$_invoke$arity$variadic = G__47174__delegate;
    return G__47174;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__47177 = m__$1;
          if (G__47177) {
            var bit__4189__auto__ = G__47177.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4189__auto__ || G__47177.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__47177.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__47177);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__47177);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__47178 = sentinel;
            var G__47179 = m__$2;
            var G__47180 = cljs.core.next.call(null, ks__$1);
            sentinel = G__47178;
            m__$1 = G__47179;
            ks__$1 = G__47180;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__47181, v) {
  var vec__47183 = p__47181;
  var k = cljs.core.nth.call(null, vec__47183, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__47183, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__47184, f) {
    var vec__47194 = p__47184;
    var k = cljs.core.nth.call(null, vec__47194, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__47194, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__47185, f, a) {
    var vec__47195 = p__47185;
    var k = cljs.core.nth.call(null, vec__47195, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__47195, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__47186, f, a, b) {
    var vec__47196 = p__47186;
    var k = cljs.core.nth.call(null, vec__47196, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__47196, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__47187, f, a, b, c) {
    var vec__47197 = p__47187;
    var k = cljs.core.nth.call(null, vec__47197, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__47197, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__47199__delegate = function(m, p__47188, f, a, b, c, args) {
      var vec__47198 = p__47188;
      var k = cljs.core.nth.call(null, vec__47198, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__47198, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__47199 = function(m, p__47188, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__47199__delegate.call(this, m, p__47188, f, a, b, c, args);
    };
    G__47199.cljs$lang$maxFixedArity = 6;
    G__47199.cljs$lang$applyTo = function(arglist__47200) {
      var m = cljs.core.first(arglist__47200);
      arglist__47200 = cljs.core.next(arglist__47200);
      var p__47188 = cljs.core.first(arglist__47200);
      arglist__47200 = cljs.core.next(arglist__47200);
      var f = cljs.core.first(arglist__47200);
      arglist__47200 = cljs.core.next(arglist__47200);
      var a = cljs.core.first(arglist__47200);
      arglist__47200 = cljs.core.next(arglist__47200);
      var b = cljs.core.first(arglist__47200);
      arglist__47200 = cljs.core.next(arglist__47200);
      var c = cljs.core.first(arglist__47200);
      var args = cljs.core.rest(arglist__47200);
      return G__47199__delegate(m, p__47188, f, a, b, c, args);
    };
    G__47199.cljs$core$IFn$_invoke$arity$variadic = G__47199__delegate;
    return G__47199;
  }();
  update_in = function(m, p__47188, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__47188, f);
      case 4:
        return update_in__4.call(this, m, p__47188, f, a);
      case 5:
        return update_in__5.call(this, m, p__47188, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__47188, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__47188, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4109__auto__, writer__4110__auto__, opts__4111__auto__) {
  return cljs.core._write.call(null, writer__4110__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__47201 = ll - 5;
      var G__47202 = r;
      ll = G__47201;
      ret = G__47202;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__47203 = cljs.core.pv_aget.call(null, node, 0);
      var G__47204 = level - 5;
      node = G__47203;
      level = G__47204;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__47205 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__47206 = level - 5;
        node = G__47205;
        level = G__47206;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__47208 = j + 1;
              var G__47209 = init__$2;
              j = G__47208;
              init__$1 = G__47209;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__47210 = i + step_init[0];
        i = G__47210;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4395__auto___47211 = len;
    var i_47212 = 0;
    while (true) {
      if (i_47212 < n__4395__auto___47211) {
        new_tail[i_47212] = self__.tail[i_47212];
        var G__47213 = i_47212 + 1;
        i_47212 = G__47213;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__47214 = null;
  var G__47214__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__47214__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__47214 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47214__2.call(this, self__, k);
      case 3:
        return G__47214__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47214;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args47207) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47207)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__47215 = i + 1;
        var G__47216 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__47215;
        out = G__47216;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__47217) {
    var args = cljs.core.seq(arglist__47217);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3846__auto__ = self__.end;
    var y__3847__auto__ = v_pos + 1;
    return x__3846__auto__ > y__3847__auto__ ? x__3846__auto__ : y__3847__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__47219 = null;
  var G__47219__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__47219__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__47219 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47219__2.call(this, self__, k);
      case 3:
        return G__47219__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47219;
}();
cljs.core.Subvec.prototype.apply = function(self__, args47218) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47218)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__47220 = meta;
      var G__47221 = v.v;
      var G__47222 = v.start + start;
      var G__47223 = v.start + end;
      var G__47224 = __hash;
      meta = G__47220;
      v = G__47221;
      start = G__47222;
      end = G__47223;
      __hash = G__47224;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj47228 = {};
    return obj47228;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__47229 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__47230 = level - 5;
        node = G__47229;
        level = G__47230;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__47232 = null;
  var G__47232__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47232__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47232 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47232__2.call(this, self__, k);
      case 3:
        return G__47232__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47232;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args47231) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47231)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3539__auto__ = self__.front;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3539__auto__ = self__.rear;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__47233 = i + incr;
        i = G__47233;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__47234 = i + 1;
      var G__47235 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__47234;
      out = G__47235;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj47239 = {};
    return obj47239;
  }();
  var l = ks.length;
  var i_47240 = 0;
  while (true) {
    if (i_47240 < l) {
      var k_47241 = ks[i_47240];
      new_obj[k_47241] = obj[k_47241];
      var G__47242 = i_47240 + 1;
      i_47240 = G__47242;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__47245 = cljs.core.rest.call(null, keys__$1);
        var G__47246 = init__$2;
        keys__$1 = G__47245;
        init__$1 = G__47246;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__47243_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__47243_SHARP_, self__.strobj[p1__47243_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__47247 = null;
  var G__47247__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47247__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47247 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47247__2.call(this, self__, k);
      case 3:
        return G__47247__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47247;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args47244) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47244)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj47249 = {};
  return obj47249;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__47250 = i + 2;
          i = G__47250;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__47251 = i + 2;
          i = G__47251;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__47252 = i + 2;
          i = G__47252;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__47253 = i + 2;
          i = G__47253;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__47254 = i + 2;
          i = G__47254;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_47255 = 0;
  while (true) {
    if (i_47255 < l) {
      narr[i_47255] = arr[i_47255];
      var G__47256 = i_47255 + 1;
      i_47255 = G__47256;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__47261 = i + 2;
        var G__47262 = init__$2;
        i = G__47261;
        init__$1 = G__47262;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj47259 = {};
    return obj47259;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__47263 = s + 2;
            var G__47264 = d;
            s = G__47263;
            d = G__47264;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__47265 = s + 2;
              var G__47266 = d + 2;
              s = G__47265;
              d = G__47266;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__47260 = cljs.core.aclone.call(null, self__.arr);
          G__47260[idx + 1] = v;
          return G__47260;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__47267 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__47268 = cljs.core.next.call(null, es);
          ret = G__47267;
          es = G__47268;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__47269 = null;
  var G__47269__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47269__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47269 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47269__2.call(this, self__, k);
      case 3:
        return G__47269__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47269;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args47257) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47257)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__47270 = i + 2;
        var G__47271 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__47270;
        ret = G__47271;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__47272_47274 = self__.arr;
      G__47272_47274.pop();
      G__47272_47274.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__47273 = o;
      if (G__47273) {
        var bit__4189__auto__ = G__47273.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4189__auto__ || G__47273.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__47273.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__47273);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__47273);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__47275 = cljs.core.next.call(null, es);
          var G__47276 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__47275;
          tcoll__$2 = G__47276;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__47277 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__47278 = i + 2;
      out = G__47277;
      i = G__47278;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4109__auto__, writer__4110__auto__, opts__4111__auto__) {
  return cljs.core._write.call(null, writer__4110__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__47281 = cljs.core.aclone.call(null, arr);
    G__47281[i] = a;
    return G__47281;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__47282 = cljs.core.aclone.call(null, arr);
    G__47282[i] = a;
    G__47282[j] = b;
    return G__47282;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__47283 = i + 2;
        var G__47284 = init__$2;
        i = G__47283;
        init__$1 = G__47284;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_47285 = 0;
        var j_47286 = 0;
        while (true) {
          if (i_47285 < 32) {
            if ((self__.bitmap >>> i_47285 & 1) === 0) {
              var G__47287 = i_47285 + 1;
              var G__47288 = j_47286;
              i_47285 = G__47287;
              j_47286 = G__47288;
              continue;
            } else {
              nodes[i_47285] = !(self__.arr[j_47286] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_47286]), self__.arr[j_47286], self__.arr[j_47286 + 1], added_leaf_QMARK_) : self__.arr[j_47286 + 1];
              var G__47289 = i_47285 + 1;
              var G__47290 = j_47286 + 2;
              i_47285 = G__47289;
              j_47286 = G__47290;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_47291 = 0;
      var j_47292 = 0;
      while (true) {
        if (i_47291 < 32) {
          if ((self__.bitmap >>> i_47291 & 1) === 0) {
            var G__47293 = i_47291 + 1;
            var G__47294 = j_47292;
            i_47291 = G__47293;
            j_47292 = G__47294;
            continue;
          } else {
            nodes[i_47291] = !(self__.arr[j_47292] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_47292]), self__.arr[j_47292], self__.arr[j_47292 + 1], added_leaf_QMARK_) : self__.arr[j_47292 + 1];
            var G__47295 = i_47291 + 1;
            var G__47296 = j_47292 + 2;
            i_47291 = G__47295;
            j_47292 = G__47296;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__47297 = i + 1;
        var G__47298 = j + 2;
        var G__47299 = bitmap | 1 << i;
        i = G__47297;
        j = G__47298;
        bitmap = G__47299;
        continue;
      } else {
        var G__47300 = i + 1;
        var G__47301 = j;
        var G__47302 = bitmap;
        i = G__47300;
        j = G__47301;
        bitmap = G__47302;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__47303 = i + 1;
          var G__47304 = init__$2;
          i = G__47303;
          init__$1 = G__47304;
          continue;
        }
      } else {
        var G__47305 = i + 1;
        var G__47306 = init__$1;
        i = G__47305;
        init__$1 = G__47306;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__47307 = i + 2;
        i = G__47307;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__47308 = j + 2;
                j = G__47308;
                continue;
              }
            } else {
              var G__47309 = j + 2;
              j = G__47309;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__47310 = j + 1;
              j = G__47310;
              continue;
            }
          } else {
            var G__47311 = j + 1;
            j = G__47311;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj47314 = {};
    return obj47314;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__47315 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__47316 = cljs.core.next.call(null, es);
          ret = G__47315;
          es = G__47316;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__47317 = null;
  var G__47317__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47317__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47317 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47317__2.call(this, self__, k);
      case 3:
        return G__47317__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47317;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args47312) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47312)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__47318 = i + 1;
      var G__47319 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__47318;
      out = G__47319;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__47320 = o;
      if (G__47320) {
        var bit__4189__auto__ = G__47320.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4189__auto__ || G__47320.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__47320.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__47320);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__47320);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__47321 = cljs.core.next.call(null, es);
          var G__47322 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__47321;
          tcoll__$1 = G__47322;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__47323 = ascending_QMARK_ ? t.left : t.right;
      var G__47324 = cljs.core.conj.call(null, stack__$1, t);
      t = G__47323;
      stack__$1 = G__47324;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__47326 = null;
  var G__47326__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47326__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47326 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47326__2.call(this, self__, k);
      case 3:
        return G__47326__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47326;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args47325) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47325)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__47328 = null;
  var G__47328__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47328__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47328 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47328__2.call(this, self__, k);
      case 3:
        return G__47328__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47328;
}();
cljs.core.RedNode.prototype.apply = function(self__, args47327) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47327)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__47330 = t.left;
          t = G__47330;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__47331 = t.right;
            t = G__47331;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__47332 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__47333 = cljs.core.next.call(null, es);
          ret = G__47332;
          es = G__47333;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__47334 = null;
  var G__47334__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47334__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47334 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47334__2.call(this, self__, k);
      case 3:
        return G__47334__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47334;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args47329) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47329)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__47335 = cljs.core.conj.call(null, stack, t);
              var G__47336 = t.left;
              stack = G__47335;
              t = G__47336;
              continue;
            } else {
              var G__47337 = stack;
              var G__47338 = t.right;
              stack = G__47337;
              t = G__47338;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__47339 = cljs.core.conj.call(null, stack, t);
                var G__47340 = t.right;
                stack = G__47339;
                t = G__47340;
                continue;
              } else {
                var G__47341 = stack;
                var G__47342 = t.left;
                stack = G__47341;
                t = G__47342;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__47343 = cljs.core.nnext.call(null, in$);
        var G__47344 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__47343;
        out = G__47344;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__47345) {
    var keyvals = cljs.core.seq(arglist__47345);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__47346) {
    var keyvals = cljs.core.seq(arglist__47346);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj47350 = {};
      return obj47350;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__47351 = cljs.core.nnext.call(null, kvs);
        kvs = G__47351;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__47352) {
    var keyvals = cljs.core.seq(arglist__47352);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__47353 = cljs.core.nnext.call(null, in$);
        var G__47354 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__47353;
        out = G__47354;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__47355) {
    var keyvals = cljs.core.seq(arglist__47355);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__47356 = cljs.core.nnext.call(null, in$);
        var G__47357 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__47356;
        out = G__47357;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__47358) {
    var comparator = cljs.core.first(arglist__47358);
    var keyvals = cljs.core.rest(arglist__47358);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__47359 = self__.mseq;
    if (G__47359) {
      var bit__4189__auto__ = G__47359.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4189__auto__ || G__47359.cljs$core$INext$) {
        return true;
      } else {
        if (!G__47359.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47359);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47359);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__47360 = self__.mseq;
    if (G__47360) {
      var bit__4189__auto__ = G__47360.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4189__auto__ || G__47360.cljs$core$INext$) {
        return true;
      } else {
        if (!G__47360.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47360);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47360);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__47361 = self__.mseq;
    if (G__47361) {
      var bit__4189__auto__ = G__47361.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4189__auto__ || G__47361.cljs$core$INext$) {
        return true;
      } else {
        if (!G__47361.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47361);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47361);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__47362 = self__.mseq;
    if (G__47362) {
      var bit__4189__auto__ = G__47362.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4189__auto__ || G__47362.cljs$core$INext$) {
        return true;
      } else {
        if (!G__47362.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47362);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__47362);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__47363_SHARP_, p2__47364_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3539__auto__ = p1__47363_SHARP_;
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__47364_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__47365) {
    var maps = cljs.core.seq(arglist__47365);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3539__auto__ = m1;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__47366) {
    var f = cljs.core.first(arglist__47366);
    var maps = cljs.core.rest(arglist__47366);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__47367 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__47368 = cljs.core.next.call(null, keys);
      ret = G__47367;
      keys = G__47368;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__47369_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__47369_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__47371 = null;
  var G__47371__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47371__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47371 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47371__2.call(this, self__, k);
      case 3:
        return G__47371__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47371;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args47370) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47370)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__47372 = i + 1;
        var G__47373 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__47372;
        out = G__47373;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__47374 = i + 1;
        var G__47375 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__47374;
        out = G__47375;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__47377 = null;
  var G__47377__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__47377__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__47377 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47377__2.call(this, self__, k);
      case 3:
        return G__47377__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47377;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args47376) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47376)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__47378_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__47378_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__47380 = null;
  var G__47380__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__47380__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__47380 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__47380__2.call(this, self__, k);
      case 3:
        return G__47380__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47380;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args47379) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47379)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4389__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4389__auto__.length) {
        var G__47381 = i + 1;
        var G__47382 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__47381;
        res = G__47382;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__47383 = cljs.core._next.call(null, in$__$1);
            var G__47384 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__47383;
            out = G__47384;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__47385__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__47385 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__47385__delegate.call(this, keys);
    };
    G__47385.cljs$lang$maxFixedArity = 0;
    G__47385.cljs$lang$applyTo = function(arglist__47386) {
      var keys = cljs.core.seq(arglist__47386);
      return G__47385__delegate(keys);
    };
    G__47385.cljs$core$IFn$_invoke$arity$variadic = G__47385__delegate;
    return G__47385;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__47387) {
    var keys = cljs.core.seq(arglist__47387);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__47388) {
    var comparator = cljs.core.first(arglist__47388);
    var keys = cljs.core.rest(arglist__47388);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__47389_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__47389_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__47389_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__47396, seen__$1) {
        while (true) {
          var vec__47397 = p__47396;
          var f = cljs.core.nth.call(null, vec__47397, 0, null);
          var xs__$1 = vec__47397;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__47398 = cljs.core.rest.call(null, s);
              var G__47399 = seen__$1;
              p__47396 = G__47398;
              seen__$1 = G__47399;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__47400 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__47401 = cljs.core.next.call(null, s__$1);
      ret = G__47400;
      s__$1 = G__47401;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__47403 = x;
    if (G__47403) {
      var bit__4182__auto__ = G__47403.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4182__auto__ || G__47403.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__47404 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__47405 = cljs.core.next.call(null, ks);
      var G__47406 = cljs.core.next.call(null, vs);
      map = G__47404;
      ks = G__47405;
      vs = G__47406;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__47409__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__47407_SHARP_, p2__47408_SHARP_) {
        return max_key.call(null, k, p1__47407_SHARP_, p2__47408_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__47409 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47409__delegate.call(this, k, x, y, more);
    };
    G__47409.cljs$lang$maxFixedArity = 3;
    G__47409.cljs$lang$applyTo = function(arglist__47410) {
      var k = cljs.core.first(arglist__47410);
      arglist__47410 = cljs.core.next(arglist__47410);
      var x = cljs.core.first(arglist__47410);
      arglist__47410 = cljs.core.next(arglist__47410);
      var y = cljs.core.first(arglist__47410);
      var more = cljs.core.rest(arglist__47410);
      return G__47409__delegate(k, x, y, more);
    };
    G__47409.cljs$core$IFn$_invoke$arity$variadic = G__47409__delegate;
    return G__47409;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__47413__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__47411_SHARP_, p2__47412_SHARP_) {
        return min_key.call(null, k, p1__47411_SHARP_, p2__47412_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__47413 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47413__delegate.call(this, k, x, y, more);
    };
    G__47413.cljs$lang$maxFixedArity = 3;
    G__47413.cljs$lang$applyTo = function(arglist__47414) {
      var k = cljs.core.first(arglist__47414);
      arglist__47414 = cljs.core.next(arglist__47414);
      var x = cljs.core.first(arglist__47414);
      arglist__47414 = cljs.core.next(arglist__47414);
      var y = cljs.core.first(arglist__47414);
      var more = cljs.core.rest(arglist__47414);
      return G__47413__delegate(k, x, y, more);
    };
    G__47413.cljs$core$IFn$_invoke$arity$variadic = G__47413__delegate;
    return G__47413;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__47417 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__47417, 0, null);
        var s = vec__47417;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__47418 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__47418, 0, null);
      var s = vec__47418;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__47421 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__47421, 0, null);
        var s = vec__47421;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__47422 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__47422, 0, null);
      var s = vec__47422;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
        return function(p1__47423_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__47423_SHARP_));
        };
      }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__47434 = null;
      var G__47434__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__47434__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__47434__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__47434__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__47434__4 = function() {
        var G__47435__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__47435 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47435__delegate.call(this, x, y, z, args);
        };
        G__47435.cljs$lang$maxFixedArity = 3;
        G__47435.cljs$lang$applyTo = function(arglist__47436) {
          var x = cljs.core.first(arglist__47436);
          arglist__47436 = cljs.core.next(arglist__47436);
          var y = cljs.core.first(arglist__47436);
          arglist__47436 = cljs.core.next(arglist__47436);
          var z = cljs.core.first(arglist__47436);
          var args = cljs.core.rest(arglist__47436);
          return G__47435__delegate(x, y, z, args);
        };
        G__47435.cljs$core$IFn$_invoke$arity$variadic = G__47435__delegate;
        return G__47435;
      }();
      G__47434 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__47434__0.call(this);
          case 1:
            return G__47434__1.call(this, x);
          case 2:
            return G__47434__2.call(this, x, y);
          case 3:
            return G__47434__3.call(this, x, y, z);
          default:
            return G__47434__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47434.cljs$lang$maxFixedArity = 3;
      G__47434.cljs$lang$applyTo = G__47434__4.cljs$lang$applyTo;
      return G__47434;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__47437 = null;
      var G__47437__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__47437__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__47437__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__47437__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__47437__4 = function() {
        var G__47438__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__47438 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47438__delegate.call(this, x, y, z, args);
        };
        G__47438.cljs$lang$maxFixedArity = 3;
        G__47438.cljs$lang$applyTo = function(arglist__47439) {
          var x = cljs.core.first(arglist__47439);
          arglist__47439 = cljs.core.next(arglist__47439);
          var y = cljs.core.first(arglist__47439);
          arglist__47439 = cljs.core.next(arglist__47439);
          var z = cljs.core.first(arglist__47439);
          var args = cljs.core.rest(arglist__47439);
          return G__47438__delegate(x, y, z, args);
        };
        G__47438.cljs$core$IFn$_invoke$arity$variadic = G__47438__delegate;
        return G__47438;
      }();
      G__47437 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__47437__0.call(this);
          case 1:
            return G__47437__1.call(this, x);
          case 2:
            return G__47437__2.call(this, x, y);
          case 3:
            return G__47437__3.call(this, x, y, z);
          default:
            return G__47437__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47437.cljs$lang$maxFixedArity = 3;
      G__47437.cljs$lang$applyTo = G__47437__4.cljs$lang$applyTo;
      return G__47437;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__47440 = null;
      var G__47440__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__47440__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__47440__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__47440__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__47440__4 = function() {
        var G__47441__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__47441 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__47441__delegate.call(this, x, y, z, args);
        };
        G__47441.cljs$lang$maxFixedArity = 3;
        G__47441.cljs$lang$applyTo = function(arglist__47442) {
          var x = cljs.core.first(arglist__47442);
          arglist__47442 = cljs.core.next(arglist__47442);
          var y = cljs.core.first(arglist__47442);
          arglist__47442 = cljs.core.next(arglist__47442);
          var z = cljs.core.first(arglist__47442);
          var args = cljs.core.rest(arglist__47442);
          return G__47441__delegate(x, y, z, args);
        };
        G__47441.cljs$core$IFn$_invoke$arity$variadic = G__47441__delegate;
        return G__47441;
      }();
      G__47440 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__47440__0.call(this);
          case 1:
            return G__47440__1.call(this, x);
          case 2:
            return G__47440__2.call(this, x, y);
          case 3:
            return G__47440__3.call(this, x, y, z);
          default:
            return G__47440__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__47440.cljs$lang$maxFixedArity = 3;
      G__47440.cljs$lang$applyTo = G__47440__4.cljs$lang$applyTo;
      return G__47440;
    }();
  };
  var juxt__4 = function() {
    var G__47443__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__47444 = null;
          var G__47444__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__47424_SHARP_, p2__47425_SHARP_) {
                return cljs.core.conj.call(null, p1__47424_SHARP_, p2__47425_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__47444__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__47426_SHARP_, p2__47427_SHARP_) {
                return cljs.core.conj.call(null, p1__47426_SHARP_, p2__47427_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__47444__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__47428_SHARP_, p2__47429_SHARP_) {
                return cljs.core.conj.call(null, p1__47428_SHARP_, p2__47429_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__47444__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__47430_SHARP_, p2__47431_SHARP_) {
                return cljs.core.conj.call(null, p1__47430_SHARP_, p2__47431_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__47444__4 = function() {
            var G__47445__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__47432_SHARP_, p2__47433_SHARP_) {
                  return cljs.core.conj.call(null, p1__47432_SHARP_, cljs.core.apply.call(null, p2__47433_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__47445 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__47445__delegate.call(this, x, y, z, args);
            };
            G__47445.cljs$lang$maxFixedArity = 3;
            G__47445.cljs$lang$applyTo = function(arglist__47446) {
              var x = cljs.core.first(arglist__47446);
              arglist__47446 = cljs.core.next(arglist__47446);
              var y = cljs.core.first(arglist__47446);
              arglist__47446 = cljs.core.next(arglist__47446);
              var z = cljs.core.first(arglist__47446);
              var args = cljs.core.rest(arglist__47446);
              return G__47445__delegate(x, y, z, args);
            };
            G__47445.cljs$core$IFn$_invoke$arity$variadic = G__47445__delegate;
            return G__47445;
          }();
          G__47444 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__47444__0.call(this);
              case 1:
                return G__47444__1.call(this, x);
              case 2:
                return G__47444__2.call(this, x, y);
              case 3:
                return G__47444__3.call(this, x, y, z);
              default:
                return G__47444__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__47444.cljs$lang$maxFixedArity = 3;
          G__47444.cljs$lang$applyTo = G__47444__4.cljs$lang$applyTo;
          return G__47444;
        }();
      }(fs__$1);
    };
    var G__47443 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__47443__delegate.call(this, f, g, h, fs);
    };
    G__47443.cljs$lang$maxFixedArity = 3;
    G__47443.cljs$lang$applyTo = function(arglist__47447) {
      var f = cljs.core.first(arglist__47447);
      arglist__47447 = cljs.core.next(arglist__47447);
      var g = cljs.core.first(arglist__47447);
      arglist__47447 = cljs.core.next(arglist__47447);
      var h = cljs.core.first(arglist__47447);
      var fs = cljs.core.rest(arglist__47447);
      return G__47443__delegate(f, g, h, fs);
    };
    G__47443.cljs$core$IFn$_invoke$arity$variadic = G__47443__delegate;
    return G__47443;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__47448 = cljs.core.next.call(null, coll);
        coll = G__47448;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__47449 = n - 1;
        var G__47450 = cljs.core.next.call(null, coll);
        n = G__47449;
        coll = G__47450;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__47452 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__47452, 0, null);
  var flags = cljs.core.nth.call(null, vec__47452, 1, null);
  var pattern = cljs.core.nth.call(null, vec__47452, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_47454 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_47455__$1 = cljs.core.next.call(null, coll);
      var n_47456 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_47455__$1 && (n_47456 == null || !(n_47456 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_47455__$1), writer, opts);
          var G__47457 = cljs.core.next.call(null, coll_47455__$1);
          var G__47458 = n_47456 - 1;
          coll_47455__$1 = G__47457;
          n_47456 = G__47458;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_47455__$1) && n_47456 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_47454;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__47463 = cljs.core.seq.call(null, ss);
    var chunk__47464 = null;
    var count__47465 = 0;
    var i__47466 = 0;
    while (true) {
      if (i__47466 < count__47465) {
        var s = cljs.core._nth.call(null, chunk__47464, i__47466);
        cljs.core._write.call(null, writer, s);
        var G__47467 = seq__47463;
        var G__47468 = chunk__47464;
        var G__47469 = count__47465;
        var G__47470 = i__47466 + 1;
        seq__47463 = G__47467;
        chunk__47464 = G__47468;
        count__47465 = G__47469;
        i__47466 = G__47470;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__47463);
        if (temp__4126__auto__) {
          var seq__47463__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__47463__$1)) {
            var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__47463__$1);
            var G__47471 = cljs.core.chunk_rest.call(null, seq__47463__$1);
            var G__47472 = c__4295__auto__;
            var G__47473 = cljs.core.count.call(null, c__4295__auto__);
            var G__47474 = 0;
            seq__47463 = G__47471;
            chunk__47464 = G__47472;
            count__47465 = G__47473;
            i__47466 = G__47474;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__47463__$1);
            cljs.core._write.call(null, writer, s);
            var G__47475 = cljs.core.next.call(null, seq__47463__$1);
            var G__47476 = null;
            var G__47477 = 0;
            var G__47478 = 0;
            seq__47463 = G__47475;
            chunk__47464 = G__47476;
            count__47465 = G__47477;
            i__47466 = G__47478;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__47479) {
    var writer = cljs.core.first(arglist__47479);
    var ss = cljs.core.rest(arglist__47479);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj47481 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj47481;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3527__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3527__auto__)) {
            var and__3527__auto____$1 = function() {
              var G__47487 = obj;
              if (G__47487) {
                var bit__4189__auto__ = G__47487.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4189__auto__ || G__47487.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__47487.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__47487);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__47487);
              }
            }();
            if (and__3527__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3527__auto____$1;
            }
          } else {
            return and__3527__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__47488 = obj;
              if (G__47488) {
                var bit__4182__auto__ = G__47488.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4182__auto__ || G__47488.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__47490 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                                ns = G__47490;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__47489 = obj;
                              if (G__47489) {
                                var bit__4189__auto__ = G__47489.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4189__auto__ || G__47489.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__47489.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__47489);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__47489);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__47495 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__47496 = null;
  var count__47497 = 0;
  var i__47498 = 0;
  while (true) {
    if (i__47498 < count__47497) {
      var obj = cljs.core._nth.call(null, chunk__47496, i__47498);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__47499 = seq__47495;
      var G__47500 = chunk__47496;
      var G__47501 = count__47497;
      var G__47502 = i__47498 + 1;
      seq__47495 = G__47499;
      chunk__47496 = G__47500;
      count__47497 = G__47501;
      i__47498 = G__47502;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__47495);
      if (temp__4126__auto__) {
        var seq__47495__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__47495__$1)) {
          var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__47495__$1);
          var G__47503 = cljs.core.chunk_rest.call(null, seq__47495__$1);
          var G__47504 = c__4295__auto__;
          var G__47505 = cljs.core.count.call(null, c__4295__auto__);
          var G__47506 = 0;
          seq__47495 = G__47503;
          chunk__47496 = G__47504;
          count__47497 = G__47505;
          i__47498 = G__47506;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__47495__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__47507 = cljs.core.next.call(null, seq__47495__$1);
          var G__47508 = null;
          var G__47509 = 0;
          var G__47510 = 0;
          seq__47495 = G__47507;
          chunk__47496 = G__47508;
          count__47497 = G__47509;
          i__47498 = G__47510;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__47511) {
    var objs = cljs.core.seq(arglist__47511);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__47512) {
    var objs = cljs.core.seq(arglist__47512);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__47513) {
    var objs = cljs.core.seq(arglist__47513);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__47514) {
    var objs = cljs.core.seq(arglist__47514);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__47515) {
    var objs = cljs.core.seq(arglist__47515);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__47516) {
    var objs = cljs.core.seq(arglist__47516);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__47517) {
    var objs = cljs.core.seq(arglist__47517);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__47518) {
    var objs = cljs.core.seq(arglist__47518);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj47520 = {};
  return obj47520;
}();
cljs.core.IReset = function() {
  var obj47522 = {};
  return obj47522;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3527__auto__ = o;
    if (and__3527__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4166__auto__ = o == null ? null : o;
    return function() {
      var or__3539__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj47524 = {};
  return obj47524;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3527__auto__ = o;
      if (and__3527__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4166__auto__ = o == null ? null : o;
      return function() {
        var or__3539__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3527__auto__ = o;
      if (and__3527__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4166__auto__ = o == null ? null : o;
      return function() {
        var or__3539__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3527__auto__ = o;
      if (and__3527__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4166__auto__ = o == null ? null : o;
      return function() {
        var or__3539__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3527__auto__ = o;
      if (and__3527__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4166__auto__ = o == null ? null : o;
      return function() {
        var or__3539__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__47525 = cljs.core.seq.call(null, self__.watches);
  var chunk__47526 = null;
  var count__47527 = 0;
  var i__47528 = 0;
  while (true) {
    if (i__47528 < count__47527) {
      var vec__47529 = cljs.core._nth.call(null, chunk__47526, i__47528);
      var key = cljs.core.nth.call(null, vec__47529, 0, null);
      var f = cljs.core.nth.call(null, vec__47529, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__47531 = seq__47525;
      var G__47532 = chunk__47526;
      var G__47533 = count__47527;
      var G__47534 = i__47528 + 1;
      seq__47525 = G__47531;
      chunk__47526 = G__47532;
      count__47527 = G__47533;
      i__47528 = G__47534;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__47525);
      if (temp__4126__auto__) {
        var seq__47525__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__47525__$1)) {
          var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__47525__$1);
          var G__47535 = cljs.core.chunk_rest.call(null, seq__47525__$1);
          var G__47536 = c__4295__auto__;
          var G__47537 = cljs.core.count.call(null, c__4295__auto__);
          var G__47538 = 0;
          seq__47525 = G__47535;
          chunk__47526 = G__47536;
          count__47527 = G__47537;
          i__47528 = G__47538;
          continue;
        } else {
          var vec__47530 = cljs.core.first.call(null, seq__47525__$1);
          var key = cljs.core.nth.call(null, vec__47530, 0, null);
          var f = cljs.core.nth.call(null, vec__47530, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__47539 = cljs.core.next.call(null, seq__47525__$1);
          var G__47540 = null;
          var G__47541 = 0;
          var G__47542 = 0;
          seq__47525 = G__47539;
          chunk__47526 = G__47540;
          count__47527 = G__47541;
          i__47528 = G__47542;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__47546__delegate = function(x, p__47543) {
      var map__47545 = p__47543;
      var map__47545__$1 = cljs.core.seq_QMARK_.call(null, map__47545) ? cljs.core.apply.call(null, cljs.core.hash_map, map__47545) : map__47545;
      var validator = cljs.core.get.call(null, map__47545__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__47545__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__47546 = function(x, var_args) {
      var p__47543 = null;
      if (arguments.length > 1) {
        p__47543 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__47546__delegate.call(this, x, p__47543);
    };
    G__47546.cljs$lang$maxFixedArity = 1;
    G__47546.cljs$lang$applyTo = function(arglist__47547) {
      var x = cljs.core.first(arglist__47547);
      var p__47543 = cljs.core.rest(arglist__47547);
      return G__47546__delegate(x, p__47543);
    };
    G__47546.cljs$core$IFn$_invoke$arity$variadic = G__47546__delegate;
    return G__47546;
  }();
  atom = function(x, var_args) {
    var p__47543 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__47548__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__47548 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__47548__delegate.call(this, a, f, x, y, more);
    };
    G__47548.cljs$lang$maxFixedArity = 4;
    G__47548.cljs$lang$applyTo = function(arglist__47549) {
      var a = cljs.core.first(arglist__47549);
      arglist__47549 = cljs.core.next(arglist__47549);
      var f = cljs.core.first(arglist__47549);
      arglist__47549 = cljs.core.next(arglist__47549);
      var x = cljs.core.first(arglist__47549);
      arglist__47549 = cljs.core.next(arglist__47549);
      var y = cljs.core.first(arglist__47549);
      var more = cljs.core.rest(arglist__47549);
      return G__47548__delegate(a, f, x, y, more);
    };
    G__47548.cljs$core$IFn$_invoke$arity$variadic = G__47548__delegate;
    return G__47548;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__47550) {
    var iref = cljs.core.first(arglist__47550);
    arglist__47550 = cljs.core.next(arglist__47550);
    var f = cljs.core.first(arglist__47550);
    var args = cljs.core.rest(arglist__47550);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__47551) {
      var map__47552 = p__47551;
      var map__47552__$1 = cljs.core.seq_QMARK_.call(null, map__47552) ? cljs.core.apply.call(null, cljs.core.hash_map, map__47552) : map__47552;
      var curr_state = map__47552__$1;
      var done = cljs.core.get.call(null, map__47552__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj47554 = {};
  return obj47554;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__47556 = k;
    if (G__47556) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__47556.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__47556.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__47556);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__47556);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__47570 = x;
      if (G__47570) {
        var bit__4189__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3539__auto__ = bit__4189__auto__;
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return G__47570.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__47570.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__47570);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__47570);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj47572 = {};
              return obj47572;
            }();
            var seq__47573_47583 = cljs.core.seq.call(null, x);
            var chunk__47574_47584 = null;
            var count__47575_47585 = 0;
            var i__47576_47586 = 0;
            while (true) {
              if (i__47576_47586 < count__47575_47585) {
                var vec__47577_47587 = cljs.core._nth.call(null, chunk__47574_47584, i__47576_47586);
                var k_47588 = cljs.core.nth.call(null, vec__47577_47587, 0, null);
                var v_47589 = cljs.core.nth.call(null, vec__47577_47587, 1, null);
                m[cljs.core.key__GT_js.call(null, k_47588)] = clj__GT_js.call(null, v_47589);
                var G__47590 = seq__47573_47583;
                var G__47591 = chunk__47574_47584;
                var G__47592 = count__47575_47585;
                var G__47593 = i__47576_47586 + 1;
                seq__47573_47583 = G__47590;
                chunk__47574_47584 = G__47591;
                count__47575_47585 = G__47592;
                i__47576_47586 = G__47593;
                continue;
              } else {
                var temp__4126__auto___47594 = cljs.core.seq.call(null, seq__47573_47583);
                if (temp__4126__auto___47594) {
                  var seq__47573_47595__$1 = temp__4126__auto___47594;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__47573_47595__$1)) {
                    var c__4295__auto___47596 = cljs.core.chunk_first.call(null, seq__47573_47595__$1);
                    var G__47597 = cljs.core.chunk_rest.call(null, seq__47573_47595__$1);
                    var G__47598 = c__4295__auto___47596;
                    var G__47599 = cljs.core.count.call(null, c__4295__auto___47596);
                    var G__47600 = 0;
                    seq__47573_47583 = G__47597;
                    chunk__47574_47584 = G__47598;
                    count__47575_47585 = G__47599;
                    i__47576_47586 = G__47600;
                    continue;
                  } else {
                    var vec__47578_47601 = cljs.core.first.call(null, seq__47573_47595__$1);
                    var k_47602 = cljs.core.nth.call(null, vec__47578_47601, 0, null);
                    var v_47603 = cljs.core.nth.call(null, vec__47578_47601, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_47602)] = clj__GT_js.call(null, v_47603);
                    var G__47604 = cljs.core.next.call(null, seq__47573_47595__$1);
                    var G__47605 = null;
                    var G__47606 = 0;
                    var G__47607 = 0;
                    seq__47573_47583 = G__47604;
                    chunk__47574_47584 = G__47605;
                    count__47575_47585 = G__47606;
                    i__47576_47586 = G__47607;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__47579_47608 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__47580_47609 = null;
              var count__47581_47610 = 0;
              var i__47582_47611 = 0;
              while (true) {
                if (i__47582_47611 < count__47581_47610) {
                  var x_47612__$1 = cljs.core._nth.call(null, chunk__47580_47609, i__47582_47611);
                  arr.push(x_47612__$1);
                  var G__47613 = seq__47579_47608;
                  var G__47614 = chunk__47580_47609;
                  var G__47615 = count__47581_47610;
                  var G__47616 = i__47582_47611 + 1;
                  seq__47579_47608 = G__47613;
                  chunk__47580_47609 = G__47614;
                  count__47581_47610 = G__47615;
                  i__47582_47611 = G__47616;
                  continue;
                } else {
                  var temp__4126__auto___47617 = cljs.core.seq.call(null, seq__47579_47608);
                  if (temp__4126__auto___47617) {
                    var seq__47579_47618__$1 = temp__4126__auto___47617;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__47579_47618__$1)) {
                      var c__4295__auto___47619 = cljs.core.chunk_first.call(null, seq__47579_47618__$1);
                      var G__47620 = cljs.core.chunk_rest.call(null, seq__47579_47618__$1);
                      var G__47621 = c__4295__auto___47619;
                      var G__47622 = cljs.core.count.call(null, c__4295__auto___47619);
                      var G__47623 = 0;
                      seq__47579_47608 = G__47620;
                      chunk__47580_47609 = G__47621;
                      count__47581_47610 = G__47622;
                      i__47582_47611 = G__47623;
                      continue;
                    } else {
                      var x_47624__$1 = cljs.core.first.call(null, seq__47579_47618__$1);
                      arr.push(x_47624__$1);
                      var G__47625 = cljs.core.next.call(null, seq__47579_47618__$1);
                      var G__47626 = null;
                      var G__47627 = 0;
                      var G__47628 = 0;
                      seq__47579_47608 = G__47625;
                      chunk__47580_47609 = G__47626;
                      count__47581_47610 = G__47627;
                      i__47582_47611 = G__47628;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj47630 = {};
  return obj47630;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__47651__delegate = function(x, opts) {
      if (function() {
        var G__47641 = x;
        if (G__47641) {
          var bit__4189__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3539__auto__ = bit__4189__auto__;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return G__47641.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__47641.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__47641);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__47641);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__47642 = opts;
          var map__47642__$1 = cljs.core.seq_QMARK_.call(null, map__47642) ? cljs.core.apply.call(null, cljs.core.hash_map, map__47642) : map__47642;
          var keywordize_keys = cljs.core.get.call(null, map__47642__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__47642, map__47642__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4264__auto__ = function(map__47642, map__47642__$1, keywordize_keys, keyfn) {
                          return function iter__47647(s__47648) {
                            return new cljs.core.LazySeq(null, function(map__47642, map__47642__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__47648__$1 = s__47648;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__47648__$1);
                                  if (temp__4126__auto__) {
                                    var s__47648__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__47648__$2)) {
                                      var c__4262__auto__ = cljs.core.chunk_first.call(null, s__47648__$2);
                                      var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
                                      var b__47650 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
                                      if (function() {
                                        var i__47649 = 0;
                                        while (true) {
                                          if (i__47649 < size__4263__auto__) {
                                            var k = cljs.core._nth.call(null, c__4262__auto__, i__47649);
                                            cljs.core.chunk_append.call(null, b__47650, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__47652 = i__47649 + 1;
                                            i__47649 = G__47652;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__47650), iter__47647.call(null, cljs.core.chunk_rest.call(null, s__47648__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__47650), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__47648__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__47647.call(null, cljs.core.rest.call(null, s__47648__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__47642, map__47642__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__47642, map__47642__$1, keywordize_keys, keyfn);
                        return iter__4264__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__47642, map__47642__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__47651 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__47651__delegate.call(this, x, opts);
    };
    G__47651.cljs$lang$maxFixedArity = 1;
    G__47651.cljs$lang$applyTo = function(arglist__47653) {
      var x = cljs.core.first(arglist__47653);
      var opts = cljs.core.rest(arglist__47653);
      return G__47651__delegate(x, opts);
    };
    G__47651.cljs$core$IFn$_invoke$arity$variadic = G__47651__delegate;
    return G__47651;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__47654__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__47654 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__47654__delegate.call(this, args);
      };
      G__47654.cljs$lang$maxFixedArity = 0;
      G__47654.cljs$lang$applyTo = function(arglist__47655) {
        var args = cljs.core.seq(arglist__47655);
        return G__47654__delegate(args);
      };
      G__47654.cljs$core$IFn$_invoke$arity$variadic = G__47654__delegate;
      return G__47654;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__47656 = ret;
        f = G__47656;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__47657__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__47657 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__47657__delegate.call(this, f, args);
    };
    G__47657.cljs$lang$maxFixedArity = 1;
    G__47657.cljs$lang$applyTo = function(arglist__47658) {
      var f = cljs.core.first(arglist__47658);
      var args = cljs.core.rest(arglist__47658);
      return G__47657__delegate(f, args);
    };
    G__47657.cljs$core$IFn$_invoke$arity$variadic = G__47657__delegate;
    return G__47657;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__47659) {
    var f = cljs.core.first(arglist__47659);
    var args = cljs.core.rest(arglist__47659);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3539__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3539__auto__) {
      return or__3539__auto__;
    } else {
      var or__3539__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3539__auto____$1) {
        return or__3539__auto____$1;
      } else {
        var and__3527__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3527__auto__) {
          var and__3527__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3527__auto____$1) {
            var and__3527__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3527__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__47660 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__47661 = i + 1;
                  ret = G__47660;
                  i = G__47661;
                  continue;
                }
                break;
              }
            } else {
              return and__3527__auto____$2;
            }
          } else {
            return and__3527__auto____$1;
          }
        } else {
          return and__3527__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3539__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__47662_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__47662_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__47662_SHARP_), cljs.core.second.call(null, p1__47662_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__47663_SHARP_, p2__47664_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__47663_SHARP_, p2__47664_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3539__auto__ = cljs.core.truth_(function() {
    var and__3527__auto__ = xprefs;
    if (cljs.core.truth_(and__3527__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3527__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    var or__3539__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__47665 = cljs.core.rest.call(null, ps);
          ps = G__47665;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3539__auto____$1)) {
      return or__3539__auto____$1;
    } else {
      var or__3539__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__47666 = cljs.core.rest.call(null, ps);
            ps = G__47666;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3539__auto____$2)) {
        return or__3539__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3539__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__47669) {
    var vec__47670 = p__47669;
    var k = cljs.core.nth.call(null, vec__47670, 0, null);
    var _ = cljs.core.nth.call(null, vec__47670, 1, null);
    var e = vec__47670;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3539__auto__ = be == null;
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj47672 = {};
  return obj47672;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._reset[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._reset["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._add_method[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._add_method["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._remove_method[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._remove_method["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._prefer_method[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._get_method[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._get_method["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._methods[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._methods["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3527__auto__ = mf;
    if (and__3527__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4166__auto__ = mf == null ? null : mf;
    return function() {
      var or__3539__auto__ = cljs.core._prefers[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core._prefers["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__47674 = null;
  var G__47674__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__47674__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__47674__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__47674__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__47674__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__47674__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__47674__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__47674__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__47674__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__47674__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__47674__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__47674__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__47674__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__47674__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__47674__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__47674__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__47674__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__47674__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__47674__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__47674__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__47674__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__47674 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__47674__2.call(this, self__, a);
      case 3:
        return G__47674__3.call(this, self__, a, b);
      case 4:
        return G__47674__4.call(this, self__, a, b, c);
      case 5:
        return G__47674__5.call(this, self__, a, b, c, d);
      case 6:
        return G__47674__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__47674__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__47674__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__47674__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__47674__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__47674__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__47674__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__47674__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__47674__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__47674__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__47674__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__47674__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__47674__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__47674__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__47674__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__47674__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__47674__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__47674;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args47673) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args47673)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4109__auto__, writer__4110__auto__, opts__4111__auto__) {
  return cljs.core._write.call(null, writer__4110__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("clustermap.rtree");
goog.require("cljs.core");
clustermap.rtree.rtree_index = function rtree_index(js_index) {
  var rtree = new RTree(10);
  var keys = Object.keys(js_index);
  var features = [];
  var js_feature_coll = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), "FeatureCollection"], null));
  var _ = js_feature_coll["features"] = features;
  var seq__46589_46593 = cljs.core.seq.call(null, keys);
  var chunk__46590_46594 = null;
  var count__46591_46595 = 0;
  var i__46592_46596 = 0;
  while (true) {
    if (i__46592_46596 < count__46591_46595) {
      var k_46597 = cljs.core._nth.call(null, chunk__46590_46594, i__46592_46596);
      var obj_46598 = js_index[k_46597];
      var geom_46599 = obj_46598["geojson"];
      var feature_46600 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "Feature", new cljs.core.Keyword(null, "properties", "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), obj_46598["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), obj_46598["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
      1128032665), obj_46598["compact_name"]], null)], null));
      var __46601__$1 = feature_46600["geometry"] = geom_46599;
      features.push(feature_46600);
      var G__46602 = seq__46589_46593;
      var G__46603 = chunk__46590_46594;
      var G__46604 = count__46591_46595;
      var G__46605 = i__46592_46596 + 1;
      seq__46589_46593 = G__46602;
      chunk__46590_46594 = G__46603;
      count__46591_46595 = G__46604;
      i__46592_46596 = G__46605;
      continue;
    } else {
      var temp__4126__auto___46606 = cljs.core.seq.call(null, seq__46589_46593);
      if (temp__4126__auto___46606) {
        var seq__46589_46607__$1 = temp__4126__auto___46606;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46589_46607__$1)) {
          var c__4295__auto___46608 = cljs.core.chunk_first.call(null, seq__46589_46607__$1);
          var G__46609 = cljs.core.chunk_rest.call(null, seq__46589_46607__$1);
          var G__46610 = c__4295__auto___46608;
          var G__46611 = cljs.core.count.call(null, c__4295__auto___46608);
          var G__46612 = 0;
          seq__46589_46593 = G__46609;
          chunk__46590_46594 = G__46610;
          count__46591_46595 = G__46611;
          i__46592_46596 = G__46612;
          continue;
        } else {
          var k_46613 = cljs.core.first.call(null, seq__46589_46607__$1);
          var obj_46614 = js_index[k_46613];
          var geom_46615 = obj_46614["geojson"];
          var feature_46616 = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "Feature", new cljs.core.Keyword(null, "properties", "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), obj_46614["id"], new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), obj_46614["id"], new cljs.core.Keyword(null, "compact_name", "compact_name", 
          1128032665), obj_46614["compact_name"]], null)], null));
          var __46617__$1 = feature_46616["geometry"] = geom_46615;
          features.push(feature_46616);
          var G__46618 = cljs.core.next.call(null, seq__46589_46607__$1);
          var G__46619 = null;
          var G__46620 = 0;
          var G__46621 = 0;
          seq__46589_46593 = G__46618;
          chunk__46590_46594 = G__46619;
          count__46591_46595 = G__46620;
          i__46592_46596 = G__46621;
          continue;
        }
      } else {
      }
    }
    break;
  }
  rtree.geoJSON(js_feature_coll);
  return rtree;
};
clustermap.rtree.point_in_polygons = function point_in_polygons(js_index, x, y) {
  var hits = js_index.search(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), x, new cljs.core.Keyword(null, "y", "y", 1013904363), y, new cljs.core.Keyword(null, "w", "w", 1013904361), 0, new cljs.core.Keyword(null, "h", "h", 1013904346), 0], null)));
  return cljs.core.filter.call(null, function(hits) {
    return function(hit) {
      return gju.pointInPolygon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "Point", new cljs.core.Keyword(null, "coordinates", "coordinates", 2885823853), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null)], null)), hit.geometry);
    };
  }(hits), hits);
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && (!!document.documentMode && document.documentMode >= documentMode));
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", 
FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", 
SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  element.className = newClasses.join(" ");
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    element.className = classes.join(" ");
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  element.className = classes.join(" ");
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content);
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content);
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || href));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  this.disposed_ = false;
  if (goog.Disposable.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return!!this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    if (goog.Disposable.ENABLE_MONITORING) {
      if (this.disposed_ == undefined) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor");
      }
      var uid = goog.getUid(this);
      delete goog.Disposable.instances_[uid];
    }
    this.disposed_ = true;
    this.disposeInternal();
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if (!this.dependentDisposables_) {
    this.dependentDisposables_ = [];
  }
  this.dependentDisposables_.push(disposable);
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_);
  }
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.net.xpc.logger.fine("error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.net.xpc.logger.fine("transport connect called");
  if (!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.net.xpc.logger.finest("Inner peer reconnect triggered.");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && (message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect")) {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.net.xpc.logger.warning("got ack with wrong sequence");
      }
    } else {
      goog.net.xpc.logger.warning("received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery");
  } else {
    this.channel_.deliver_(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for (var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive();
    }
  } catch (e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if (!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.net.xpc.logger.severe("sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj50309 = {};
  return obj50309;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3527__auto__ = port;
    if (and__3527__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4166__auto__ = port == null ? null : port;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj50311 = {};
  return obj50311;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3527__auto__ = port;
    if (and__3527__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4166__auto__ = port == null ? null : port;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj50313 = {};
  return obj50313;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3527__auto__ = chan;
    if (and__3527__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4166__auto__ = chan == null ? null : chan;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj50315 = {};
  return obj50315;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3527__auto__ = h;
    if (and__3527__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4166__auto__ = h == null ? null : h;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3527__auto__ = h;
    if (and__3527__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4166__auto__ = h == null ? null : h;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj50317 = {};
  return obj50317;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3527__auto__ = b;
    if (and__3527__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4166__auto__ = b == null ? null : b;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3527__auto__ = b;
    if (and__3527__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4166__auto__ = b == null ? null : b;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3527__auto__ = b;
    if (and__3527__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4166__auto__ = b == null ? null : b;
    return function() {
      var or__3539__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj50319 = {};
  return obj50319;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__50320 = cnt + 1;
      cnt = G__50320;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4395__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4395__auto__) {
      var v_50321 = this$.pop();
      if (keep_QMARK_.call(null, v_50321)) {
        this$.unshift(v_50321);
      } else {
      }
      var G__50322 = x + 1;
      x = G__50322;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error("Assert failed: Can't add to a full buffer\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null))))));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_50323 = 0;
  while (true) {
    var m_50324 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_50324 == null) {
    } else {
      m_50324.call(null);
      if (count_50323 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__50325 = count_50323 + 1;
        count_50323 = G__50325;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3527__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3527__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t50329 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t50329 = function(val, box, meta50330) {
      this.val = val;
      this.box = box;
      this.meta50330 = meta50330;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t50329.cljs$lang$type = true;
    cljs.core.async.impl.channels.t50329.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t50329";
    cljs.core.async.impl.channels.t50329.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.channels/t50329");
    };
    cljs.core.async.impl.channels.t50329.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t50329.prototype.cljs$core$IMeta$_meta$arity$1 = function(_50331) {
      var self__ = this;
      var _50331__$1 = this;
      return self__.meta50330;
    };
    cljs.core.async.impl.channels.t50329.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_50331, meta50330__$1) {
      var self__ = this;
      var _50331__$1 = this;
      return new cljs.core.async.impl.channels.t50329(self__.val, self__.box, meta50330__$1);
    };
    cljs.core.async.impl.channels.__GT_t50329 = function __GT_t50329(val__$1, box__$1, meta50330) {
      return new cljs.core.async.impl.channels.t50329(val__$1, box__$1, meta50330);
    };
  }
  return new cljs.core.async.impl.channels.t50329(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4109__auto__, writer__4110__auto__, opts__4111__auto__) {
  return cljs.core._write.call(null, writer__4110__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_50332 = self__.takes.pop();
      if (taker_50332 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_50332)) {
          var take_cb_50333 = cljs.core.async.impl.protocols.commit.call(null, taker_50332);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_50333, taker_50332, this$__$1) {
            return function() {
              return take_cb_50333.call(null, null);
            };
          }(take_cb_50333, taker_50332, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null)))));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null)))));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t50256 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t50256 = function(f, fn_handler, meta50257) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta50257 = meta50257;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t50256.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t50256.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t50256";
    cljs.core.async.impl.ioc_helpers.t50256.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.ioc-helpers/t50256");
    };
    cljs.core.async.impl.ioc_helpers.t50256.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t50256.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t50256.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t50256.prototype.cljs$core$IMeta$_meta$arity$1 = function(_50258) {
      var self__ = this;
      var _50258__$1 = this;
      return self__.meta50257;
    };
    cljs.core.async.impl.ioc_helpers.t50256.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_50258, meta50257__$1) {
      var self__ = this;
      var _50258__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t50256(self__.f, self__.fn_handler, meta50257__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t50256 = function __GT_t50256(f__$1, fn_handler__$1, meta50257) {
      return new cljs.core.async.impl.ioc_helpers.t50256(f__$1, fn_handler__$1, meta50257);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t50256(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e50260) {
    if (e50260 instanceof Object) {
      var ex = e50260;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e50260;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_50263_50265 = state;
    statearr_50263_50265[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_50263_50265[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_50264_50266 = state;
    statearr_50264_50266[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_50264_50266[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_50269_50271 = state;
    statearr_50269_50271[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_50269_50271[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_50270_50272 = state;
    statearr_50270_50272[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_50270_50272[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__50273) {
    var map__50278 = p__50273;
    var map__50278__$1 = cljs.core.seq_QMARK_.call(null, map__50278) ? cljs.core.apply.call(null, cljs.core.hash_map, map__50278) : map__50278;
    var opts = map__50278__$1;
    var statearr_50279_50282 = state;
    statearr_50279_50282[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__50278, map__50278__$1, opts) {
      return function(val) {
        var statearr_50280_50283 = state;
        statearr_50280_50283[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__50278, map__50278__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_50281_50284 = state;
      statearr_50281_50284[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__50273 = null;
    if (arguments.length > 3) {
      p__50273 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__50273);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__50285) {
    var state = cljs.core.first(arglist__50285);
    arglist__50285 = cljs.core.next(arglist__50285);
    var cont_block = cljs.core.first(arglist__50285);
    arglist__50285 = cljs.core.next(arglist__50285);
    var ports = cljs.core.first(arglist__50285);
    var p__50273 = cljs.core.rest(arglist__50285);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__50273);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4125__auto__, k__4126__auto__) {
  var self__ = this;
  var this__4125__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4125__auto____$1, k__4126__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4127__auto__, k50287, else__4128__auto__) {
  var self__ = this;
  var this__4127__auto____$1 = this;
  var G__50289 = k50287 instanceof cljs.core.Keyword ? k50287.fqn : null;
  var caseval__50293;
  switch(G__50289) {
    case "prev":
      caseval__50293 = self__.prev;
      break;
    case "continue-block":
      caseval__50293 = self__.continue_block;
      break;
    case "finally-block":
      caseval__50293 = self__.finally_block;
      break;
    case "catch-exception":
      caseval__50293 = self__.catch_exception;
      break;
    case "catch-block":
      caseval__50293 = self__.catch_block;
      break;
    default:
      caseval__50293 = cljs.core.get.call(null, self__.__extmap, k50287, else__4128__auto__);
  }
  return caseval__50293;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4139__auto__, writer__4140__auto__, opts__4141__auto__) {
  var self__ = this;
  var this__4139__auto____$1 = this;
  var pr_pair__4142__auto__ = function(this__4139__auto____$1) {
    return function(keyval__4143__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4140__auto__, cljs.core.pr_writer, "", " ", "", opts__4141__auto__, keyval__4143__auto__);
    };
  }(this__4139__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4140__auto__, pr_pair__4142__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4141__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4123__auto__) {
  var self__ = this;
  var this__4123__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4119__auto__) {
  var self__ = this;
  var this__4119__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4129__auto__) {
  var self__ = this;
  var this__4129__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4120__auto__) {
  var self__ = this;
  var this__4120__auto____$1 = this;
  var h__3950__auto__ = self__.__hash;
  if (!(h__3950__auto__ == null)) {
    return h__3950__auto__;
  } else {
    var h__3950__auto____$1 = cljs.core.hash_imap.call(null, this__4120__auto____$1);
    self__.__hash = h__3950__auto____$1;
    return h__3950__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4121__auto__, other__4122__auto__) {
  var self__ = this;
  var this__4121__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = other__4122__auto__;
    if (cljs.core.truth_(and__3527__auto__)) {
      return this__4121__auto____$1.constructor === other__4122__auto__.constructor && cljs.core.equiv_map.call(null, this__4121__auto____$1, other__4122__auto__);
    } else {
      return and__3527__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4134__auto__, k__4135__auto__) {
  var self__ = this;
  var this__4134__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  null], null), null), k__4135__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4134__auto____$1), self__.__meta), k__4135__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4135__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4132__auto__, k__4133__auto__, G__50286) {
  var self__ = this;
  var this__4132__auto____$1 = this;
  var pred__50290 = cljs.core.keyword_identical_QMARK_;
  var expr__50291 = k__4133__auto__;
  if (cljs.core.truth_(pred__50290.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__50291))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__50286, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__50290.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__50291))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__50286, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__50290.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__50291))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__50286, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__50290.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__50291))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__50286, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__50290.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__50291))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__50286, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4133__auto__, G__50286), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4137__auto__) {
  var self__ = this;
  var this__4137__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4124__auto__, G__50286) {
  var self__ = this;
  var this__4124__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__50286, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4130__auto__, entry__4131__auto__) {
  var self__ = this;
  var this__4130__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4131__auto__)) {
    return cljs.core._assoc.call(null, this__4130__auto____$1, cljs.core._nth.call(null, entry__4131__auto__, 0), cljs.core._nth.call(null, entry__4131__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4130__auto____$1, entry__4131__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4159__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4159__auto__, writer__4160__auto__) {
  return cljs.core._write.call(null, writer__4160__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__50288) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__50288), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__50288), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__50288), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__50288), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__50288), null, cljs.core.dissoc.call(null, G__50288, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_50295 = state;
  statearr_50295[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_50295;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = exception;
      if (cljs.core.truth_(and__3527__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3527__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3527__auto__ = exception;
        if (cljs.core.truth_(and__3527__auto__)) {
          var and__3527__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3527__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3527__auto____$1;
          }
        } else {
          return and__3527__auto__;
        }
      }())) {
        var statearr_50301 = state;
        statearr_50301[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_50301[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_50301[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_50301[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_50301;
      } else {
        if (cljs.core.truth_(function() {
          var and__3527__auto__ = exception;
          if (cljs.core.truth_(and__3527__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3527__auto__;
          }
        }())) {
          var statearr_50302_50306 = state;
          statearr_50302_50306[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__50307 = state;
          state = G__50307;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3527__auto__ = exception;
            if (cljs.core.truth_(and__3527__auto__)) {
              var and__3527__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3527__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3527__auto____$1;
              }
            } else {
              return and__3527__auto__;
            }
          }())) {
            var statearr_50303 = state;
            statearr_50303[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_50303[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_50303;
          } else {
            if (cljs.core.truth_(function() {
              var and__3527__auto__ = cljs.core.not.call(null, exception);
              if (and__3527__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3527__auto__;
              }
            }())) {
              var statearr_50304 = state;
              statearr_50304[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_50304[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_50304;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_50305 = state;
                statearr_50305[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_50305[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_50305;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error("Assert failed: No matching clause\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, false)));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__50229 = level + 1;
        level = G__50229;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_50230 = 0;
    while (true) {
      if (i_50230 < arr.length) {
        arr[i_50230] = null;
        var G__50231 = i_50230 + 1;
        i_50230 = G__50231;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__50232 = x_SINGLEQUOTE_;
                x__$1 = G__50232;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__50233 = x__$1;
        var G__50234 = k;
        var G__50235 = level - 1;
        var G__50236 = update;
        x = G__50233;
        k = G__50234;
        level = G__50235;
        update = G__50236;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_50237 = self__.level + 1;
      while (true) {
        if (i_50237 <= new_level + 1) {
          update[i_50237] = self__.header;
          var G__50238 = i_50237 + 1;
          i_50237 = G__50238;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_50239 = 0;
    while (true) {
      if (i_50239 <= self__.level) {
        var links_50240 = update[i_50239].forward;
        if (links_50240[i_50239] === x__$1) {
          links_50240[i_50239] = x__$1.forward[i_50239];
          var G__50241 = i_50239 + 1;
          i_50239 = G__50241;
          continue;
        } else {
          var G__50242 = i_50239 + 1;
          i_50239 = G__50242;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__50243 = x_SINGLEQUOTE_;
              x__$1 = G__50243;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__50244 = nx;
        var G__50245 = level__$1 - 1;
        x = G__50244;
        level__$1 = G__50245;
        continue;
      } else {
        var G__50246 = x;
        var G__50247 = level__$1 - 1;
        x = G__50246;
        level__$1 = G__50247;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__50248 = x_SINGLEQUOTE_;
              x__$1 = G__50248;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__50249 = nx;
        var G__50250 = level__$1 - 1;
        x = G__50249;
        level__$1 = G__50250;
        continue;
      } else {
        var G__50251 = x;
        var G__50252 = level__$1 - 1;
        x = G__50251;
        level__$1 = G__50252;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3539__auto__ = cljs.core.truth_(function() {
    var and__3527__auto__ = me;
    if (cljs.core.truth_(and__3527__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3527__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3539__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3539__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t47678 !== "undefined") {
  } else {
    cljs.core.async.t47678 = function(f, fn_handler, meta47679) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta47679 = meta47679;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t47678.cljs$lang$type = true;
    cljs.core.async.t47678.cljs$lang$ctorStr = "cljs.core.async/t47678";
    cljs.core.async.t47678.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47678");
    };
    cljs.core.async.t47678.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t47678.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t47678.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t47678.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47680) {
      var self__ = this;
      var _47680__$1 = this;
      return self__.meta47679;
    };
    cljs.core.async.t47678.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47680, meta47679__$1) {
      var self__ = this;
      var _47680__$1 = this;
      return new cljs.core.async.t47678(self__.f, self__.fn_handler, meta47679__$1);
    };
    cljs.core.async.__GT_t47678 = function __GT_t47678(f__$1, fn_handler__$1, meta47679) {
      return new cljs.core.async.t47678(f__$1, fn_handler__$1, meta47679);
    };
  }
  return new cljs.core.async.t47678(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__47682 = buff;
  if (G__47682) {
    var bit__4189__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3539__auto__ = bit__4189__auto__;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return G__47682.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__47682.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__47682);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__47682);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error("Assert failed: \x3c! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_47683 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_47683);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_47683, ret) {
          return function() {
            return fn1.call(null, val_47683);
          };
        }(val_47683, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error("Assert failed: \x3e! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = ret;
      if (cljs.core.truth_(and__3527__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3527__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4395__auto___47684 = n;
  var x_47685 = 0;
  while (true) {
    if (x_47685 < n__4395__auto___47684) {
      a[x_47685] = 0;
      var G__47686 = x_47685 + 1;
      x_47685 = G__47686;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__47687 = i + 1;
      i = G__47687;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t47691 !== "undefined") {
  } else {
    cljs.core.async.t47691 = function(flag, alt_flag, meta47692) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta47692 = meta47692;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t47691.cljs$lang$type = true;
    cljs.core.async.t47691.cljs$lang$ctorStr = "cljs.core.async/t47691";
    cljs.core.async.t47691.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47691");
      };
    }(flag);
    cljs.core.async.t47691.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t47691.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t47691.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t47691.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_47693) {
        var self__ = this;
        var _47693__$1 = this;
        return self__.meta47692;
      };
    }(flag);
    cljs.core.async.t47691.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_47693, meta47692__$1) {
        var self__ = this;
        var _47693__$1 = this;
        return new cljs.core.async.t47691(self__.flag, self__.alt_flag, meta47692__$1);
      };
    }(flag);
    cljs.core.async.__GT_t47691 = function(flag) {
      return function __GT_t47691(flag__$1, alt_flag__$1, meta47692) {
        return new cljs.core.async.t47691(flag__$1, alt_flag__$1, meta47692);
      };
    }(flag);
  }
  return new cljs.core.async.t47691(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t47697 !== "undefined") {
  } else {
    cljs.core.async.t47697 = function(cb, flag, alt_handler, meta47698) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta47698 = meta47698;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t47697.cljs$lang$type = true;
    cljs.core.async.t47697.cljs$lang$ctorStr = "cljs.core.async/t47697";
    cljs.core.async.t47697.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47697");
    };
    cljs.core.async.t47697.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t47697.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t47697.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t47697.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47699) {
      var self__ = this;
      var _47699__$1 = this;
      return self__.meta47698;
    };
    cljs.core.async.t47697.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47699, meta47698__$1) {
      var self__ = this;
      var _47699__$1 = this;
      return new cljs.core.async.t47697(self__.cb, self__.flag, self__.alt_handler, meta47698__$1);
    };
    cljs.core.async.__GT_t47697 = function __GT_t47697(cb__$1, flag__$1, alt_handler__$1, meta47698) {
      return new cljs.core.async.t47697(cb__$1, flag__$1, alt_handler__$1, meta47698);
    };
  }
  return new cljs.core.async.t47697(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__47700_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__47700_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3539__auto__ = wport;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__47701 = i + 1;
          i = G__47701;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3539__auto__ = ret;
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4126__auto__ = function() {
        var and__3527__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3527__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3527__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__47702) {
    var map__47704 = p__47702;
    var map__47704__$1 = cljs.core.seq_QMARK_.call(null, map__47704) ? cljs.core.apply.call(null, cljs.core.hash_map, map__47704) : map__47704;
    var opts = map__47704__$1;
    if (null) {
      return null;
    } else {
      throw new Error("Assert failed: alts! used not in (go ...) block\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, null)));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__47702 = null;
    if (arguments.length > 1) {
      p__47702 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__47702);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__47705) {
    var ports = cljs.core.first(arglist__47705);
    var p__47702 = cljs.core.rest(arglist__47705);
    return alts_BANG___delegate(ports, p__47702);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t47713 !== "undefined") {
  } else {
    cljs.core.async.t47713 = function(ch, f, map_LT_, meta47714) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta47714 = meta47714;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t47713.cljs$lang$type = true;
    cljs.core.async.t47713.cljs$lang$ctorStr = "cljs.core.async/t47713";
    cljs.core.async.t47713.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47713");
    };
    cljs.core.async.t47713.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t47713.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t47713.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t47713.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t47716 !== "undefined") {
        } else {
          cljs.core.async.t47716 = function(fn1, _, meta47714, ch, f, map_LT_, meta47717) {
            this.fn1 = fn1;
            this._ = _;
            this.meta47714 = meta47714;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta47717 = meta47717;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t47716.cljs$lang$type = true;
          cljs.core.async.t47716.cljs$lang$ctorStr = "cljs.core.async/t47716";
          cljs.core.async.t47716.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
              return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47716");
            };
          }(___$1);
          cljs.core.async.t47716.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t47716.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t47716.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t47716.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__47706_SHARP_) {
                  return f1.call(null, p1__47706_SHARP_ == null ? null : self__.f.call(null, p1__47706_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t47716.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_47718) {
              var self__ = this;
              var _47718__$1 = this;
              return self__.meta47717;
            };
          }(___$1);
          cljs.core.async.t47716.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_47718, meta47717__$1) {
              var self__ = this;
              var _47718__$1 = this;
              return new cljs.core.async.t47716(self__.fn1, self__._, self__.meta47714, self__.ch, self__.f, self__.map_LT_, meta47717__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t47716 = function(___$1) {
            return function __GT_t47716(fn1__$1, ___$2, meta47714__$1, ch__$2, f__$2, map_LT___$2, meta47717) {
              return new cljs.core.async.t47716(fn1__$1, ___$2, meta47714__$1, ch__$2, f__$2, map_LT___$2, meta47717);
            };
          }(___$1);
        }
        return new cljs.core.async.t47716(fn1, ___$1, self__.meta47714, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3527__auto__ = ret;
        if (cljs.core.truth_(and__3527__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3527__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t47713.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t47713.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t47713.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47715) {
      var self__ = this;
      var _47715__$1 = this;
      return self__.meta47714;
    };
    cljs.core.async.t47713.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47715, meta47714__$1) {
      var self__ = this;
      var _47715__$1 = this;
      return new cljs.core.async.t47713(self__.ch, self__.f, self__.map_LT_, meta47714__$1);
    };
    cljs.core.async.__GT_t47713 = function __GT_t47713(ch__$1, f__$1, map_LT___$1, meta47714) {
      return new cljs.core.async.t47713(ch__$1, f__$1, map_LT___$1, meta47714);
    };
  }
  return new cljs.core.async.t47713(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t47722 !== "undefined") {
  } else {
    cljs.core.async.t47722 = function(ch, f, map_GT_, meta47723) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta47723 = meta47723;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t47722.cljs$lang$type = true;
    cljs.core.async.t47722.cljs$lang$ctorStr = "cljs.core.async/t47722";
    cljs.core.async.t47722.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47722");
    };
    cljs.core.async.t47722.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t47722.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t47722.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t47722.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t47722.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t47722.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t47722.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47724) {
      var self__ = this;
      var _47724__$1 = this;
      return self__.meta47723;
    };
    cljs.core.async.t47722.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47724, meta47723__$1) {
      var self__ = this;
      var _47724__$1 = this;
      return new cljs.core.async.t47722(self__.ch, self__.f, self__.map_GT_, meta47723__$1);
    };
    cljs.core.async.__GT_t47722 = function __GT_t47722(ch__$1, f__$1, map_GT___$1, meta47723) {
      return new cljs.core.async.t47722(ch__$1, f__$1, map_GT___$1, meta47723);
    };
  }
  return new cljs.core.async.t47722(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t47728 !== "undefined") {
  } else {
    cljs.core.async.t47728 = function(ch, p, filter_GT_, meta47729) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta47729 = meta47729;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t47728.cljs$lang$type = true;
    cljs.core.async.t47728.cljs$lang$ctorStr = "cljs.core.async/t47728";
    cljs.core.async.t47728.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t47728");
    };
    cljs.core.async.t47728.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t47728.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t47728.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t47728.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t47728.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t47728.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t47728.prototype.cljs$core$IMeta$_meta$arity$1 = function(_47730) {
      var self__ = this;
      var _47730__$1 = this;
      return self__.meta47729;
    };
    cljs.core.async.t47728.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_47730, meta47729__$1) {
      var self__ = this;
      var _47730__$1 = this;
      return new cljs.core.async.t47728(self__.ch, self__.p, self__.filter_GT_, meta47729__$1);
    };
    cljs.core.async.__GT_t47728 = function __GT_t47728(ch__$1, p__$1, filter_GT___$1, meta47729) {
      return new cljs.core.async.t47728(ch__$1, p__$1, filter_GT___$1, meta47729);
    };
  }
  return new cljs.core.async.t47728(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5689__auto___47813 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___47813, out) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___47813, out) {
            return function(state_47792) {
              var state_val_47793 = state_47792[1];
              if (state_val_47793 === 7) {
                var inst_47788 = state_47792[2];
                var state_47792__$1 = state_47792;
                var statearr_47794_47814 = state_47792__$1;
                statearr_47794_47814[2] = inst_47788;
                statearr_47794_47814[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_47793 === 1) {
                  var state_47792__$1 = state_47792;
                  var statearr_47795_47815 = state_47792__$1;
                  statearr_47795_47815[2] = null;
                  statearr_47795_47815[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_47793 === 4) {
                    var inst_47774 = state_47792[7];
                    var inst_47774__$1 = state_47792[2];
                    var inst_47775 = inst_47774__$1 == null;
                    var state_47792__$1 = function() {
                      var statearr_47796 = state_47792;
                      statearr_47796[7] = inst_47774__$1;
                      return statearr_47796;
                    }();
                    if (cljs.core.truth_(inst_47775)) {
                      var statearr_47797_47816 = state_47792__$1;
                      statearr_47797_47816[1] = 5;
                    } else {
                      var statearr_47798_47817 = state_47792__$1;
                      statearr_47798_47817[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_47793 === 6) {
                      var inst_47774 = state_47792[7];
                      var inst_47779 = p.call(null, inst_47774);
                      var state_47792__$1 = state_47792;
                      if (cljs.core.truth_(inst_47779)) {
                        var statearr_47799_47818 = state_47792__$1;
                        statearr_47799_47818[1] = 8;
                      } else {
                        var statearr_47800_47819 = state_47792__$1;
                        statearr_47800_47819[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_47793 === 3) {
                        var inst_47790 = state_47792[2];
                        var state_47792__$1 = state_47792;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_47792__$1, inst_47790);
                      } else {
                        if (state_val_47793 === 2) {
                          var state_47792__$1 = state_47792;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47792__$1, 4, ch);
                        } else {
                          if (state_val_47793 === 11) {
                            var inst_47782 = state_47792[2];
                            var state_47792__$1 = state_47792;
                            var statearr_47801_47820 = state_47792__$1;
                            statearr_47801_47820[2] = inst_47782;
                            statearr_47801_47820[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_47793 === 9) {
                              var state_47792__$1 = state_47792;
                              var statearr_47802_47821 = state_47792__$1;
                              statearr_47802_47821[2] = null;
                              statearr_47802_47821[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_47793 === 5) {
                                var inst_47777 = cljs.core.async.close_BANG_.call(null, out);
                                var state_47792__$1 = state_47792;
                                var statearr_47803_47822 = state_47792__$1;
                                statearr_47803_47822[2] = inst_47777;
                                statearr_47803_47822[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_47793 === 10) {
                                  var inst_47785 = state_47792[2];
                                  var state_47792__$1 = function() {
                                    var statearr_47804 = state_47792;
                                    statearr_47804[8] = inst_47785;
                                    return statearr_47804;
                                  }();
                                  var statearr_47805_47823 = state_47792__$1;
                                  statearr_47805_47823[2] = null;
                                  statearr_47805_47823[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_47793 === 8) {
                                    var inst_47774 = state_47792[7];
                                    var state_47792__$1 = state_47792;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_47792__$1, 11, out, inst_47774);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___47813, out);
          return function(switch__5674__auto__, c__5689__auto___47813, out) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_47809 = [null, null, null, null, null, null, null, null, null];
                statearr_47809[0] = state_machine__5675__auto__;
                statearr_47809[1] = 1;
                return statearr_47809;
              };
              var state_machine__5675__auto____1 = function(state_47792) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_47792);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e47810) {
                      if (e47810 instanceof Object) {
                        var ex__5678__auto__ = e47810;
                        var statearr_47811_47824 = state_47792;
                        statearr_47811_47824[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_47792);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e47810;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__47825 = state_47792;
                    state_47792 = G__47825;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_47792) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_47792);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___47813, out);
        }();
        var state__5691__auto__ = function() {
          var statearr_47812 = f__5690__auto__.call(null);
          statearr_47812[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___47813;
          return statearr_47812;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___47813, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_47977) {
            var state_val_47978 = state_47977[1];
            if (state_val_47978 === 7) {
              var inst_47973 = state_47977[2];
              var state_47977__$1 = state_47977;
              var statearr_47979_48016 = state_47977__$1;
              statearr_47979_48016[2] = inst_47973;
              statearr_47979_48016[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_47978 === 20) {
                var inst_47948 = state_47977[7];
                var inst_47959 = state_47977[2];
                var inst_47960 = cljs.core.next.call(null, inst_47948);
                var inst_47934 = inst_47960;
                var inst_47935 = null;
                var inst_47936 = 0;
                var inst_47937 = 0;
                var state_47977__$1 = function() {
                  var statearr_47980 = state_47977;
                  statearr_47980[8] = inst_47935;
                  statearr_47980[9] = inst_47937;
                  statearr_47980[10] = inst_47934;
                  statearr_47980[11] = inst_47959;
                  statearr_47980[12] = inst_47936;
                  return statearr_47980;
                }();
                var statearr_47981_48017 = state_47977__$1;
                statearr_47981_48017[2] = null;
                statearr_47981_48017[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_47978 === 1) {
                  var state_47977__$1 = state_47977;
                  var statearr_47982_48018 = state_47977__$1;
                  statearr_47982_48018[2] = null;
                  statearr_47982_48018[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_47978 === 4) {
                    var inst_47923 = state_47977[13];
                    var inst_47923__$1 = state_47977[2];
                    var inst_47924 = inst_47923__$1 == null;
                    var state_47977__$1 = function() {
                      var statearr_47986 = state_47977;
                      statearr_47986[13] = inst_47923__$1;
                      return statearr_47986;
                    }();
                    if (cljs.core.truth_(inst_47924)) {
                      var statearr_47987_48019 = state_47977__$1;
                      statearr_47987_48019[1] = 5;
                    } else {
                      var statearr_47988_48020 = state_47977__$1;
                      statearr_47988_48020[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_47978 === 15) {
                      var state_47977__$1 = state_47977;
                      var statearr_47989_48021 = state_47977__$1;
                      statearr_47989_48021[2] = null;
                      statearr_47989_48021[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_47978 === 13) {
                        var inst_47935 = state_47977[8];
                        var inst_47937 = state_47977[9];
                        var inst_47934 = state_47977[10];
                        var inst_47936 = state_47977[12];
                        var inst_47944 = state_47977[2];
                        var inst_47945 = inst_47937 + 1;
                        var tmp47983 = inst_47935;
                        var tmp47984 = inst_47934;
                        var tmp47985 = inst_47936;
                        var inst_47934__$1 = tmp47984;
                        var inst_47935__$1 = tmp47983;
                        var inst_47936__$1 = tmp47985;
                        var inst_47937__$1 = inst_47945;
                        var state_47977__$1 = function() {
                          var statearr_47990 = state_47977;
                          statearr_47990[8] = inst_47935__$1;
                          statearr_47990[9] = inst_47937__$1;
                          statearr_47990[14] = inst_47944;
                          statearr_47990[10] = inst_47934__$1;
                          statearr_47990[12] = inst_47936__$1;
                          return statearr_47990;
                        }();
                        var statearr_47991_48022 = state_47977__$1;
                        statearr_47991_48022[2] = null;
                        statearr_47991_48022[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_47978 === 6) {
                          var inst_47923 = state_47977[13];
                          var inst_47928 = f.call(null, inst_47923);
                          var inst_47933 = cljs.core.seq.call(null, inst_47928);
                          var inst_47934 = inst_47933;
                          var inst_47935 = null;
                          var inst_47936 = 0;
                          var inst_47937 = 0;
                          var state_47977__$1 = function() {
                            var statearr_47992 = state_47977;
                            statearr_47992[8] = inst_47935;
                            statearr_47992[9] = inst_47937;
                            statearr_47992[10] = inst_47934;
                            statearr_47992[12] = inst_47936;
                            return statearr_47992;
                          }();
                          var statearr_47993_48023 = state_47977__$1;
                          statearr_47993_48023[2] = null;
                          statearr_47993_48023[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_47978 === 17) {
                            var inst_47948 = state_47977[7];
                            var inst_47952 = cljs.core.chunk_first.call(null, inst_47948);
                            var inst_47953 = cljs.core.chunk_rest.call(null, inst_47948);
                            var inst_47954 = cljs.core.count.call(null, inst_47952);
                            var inst_47934 = inst_47953;
                            var inst_47935 = inst_47952;
                            var inst_47936 = inst_47954;
                            var inst_47937 = 0;
                            var state_47977__$1 = function() {
                              var statearr_47994 = state_47977;
                              statearr_47994[8] = inst_47935;
                              statearr_47994[9] = inst_47937;
                              statearr_47994[10] = inst_47934;
                              statearr_47994[12] = inst_47936;
                              return statearr_47994;
                            }();
                            var statearr_47995_48024 = state_47977__$1;
                            statearr_47995_48024[2] = null;
                            statearr_47995_48024[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_47978 === 3) {
                              var inst_47975 = state_47977[2];
                              var state_47977__$1 = state_47977;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_47977__$1, inst_47975);
                            } else {
                              if (state_val_47978 === 12) {
                                var inst_47968 = state_47977[2];
                                var state_47977__$1 = state_47977;
                                var statearr_47996_48025 = state_47977__$1;
                                statearr_47996_48025[2] = inst_47968;
                                statearr_47996_48025[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_47978 === 2) {
                                  var state_47977__$1 = state_47977;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_47977__$1, 4, in$);
                                } else {
                                  if (state_val_47978 === 19) {
                                    var inst_47963 = state_47977[2];
                                    var state_47977__$1 = state_47977;
                                    var statearr_47997_48026 = state_47977__$1;
                                    statearr_47997_48026[2] = inst_47963;
                                    statearr_47997_48026[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_47978 === 11) {
                                      var inst_47934 = state_47977[10];
                                      var inst_47948 = state_47977[7];
                                      var inst_47948__$1 = cljs.core.seq.call(null, inst_47934);
                                      var state_47977__$1 = function() {
                                        var statearr_47998 = state_47977;
                                        statearr_47998[7] = inst_47948__$1;
                                        return statearr_47998;
                                      }();
                                      if (inst_47948__$1) {
                                        var statearr_47999_48027 = state_47977__$1;
                                        statearr_47999_48027[1] = 14;
                                      } else {
                                        var statearr_48000_48028 = state_47977__$1;
                                        statearr_48000_48028[1] = 15;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_47978 === 9) {
                                        var inst_47970 = state_47977[2];
                                        var state_47977__$1 = function() {
                                          var statearr_48001 = state_47977;
                                          statearr_48001[15] = inst_47970;
                                          return statearr_48001;
                                        }();
                                        var statearr_48002_48029 = state_47977__$1;
                                        statearr_48002_48029[2] = null;
                                        statearr_48002_48029[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_47978 === 5) {
                                          var inst_47926 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_47977__$1 = state_47977;
                                          var statearr_48003_48030 = state_47977__$1;
                                          statearr_48003_48030[2] = inst_47926;
                                          statearr_48003_48030[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_47978 === 14) {
                                            var inst_47948 = state_47977[7];
                                            var inst_47950 = cljs.core.chunked_seq_QMARK_.call(null, inst_47948);
                                            var state_47977__$1 = state_47977;
                                            if (inst_47950) {
                                              var statearr_48004_48031 = state_47977__$1;
                                              statearr_48004_48031[1] = 17;
                                            } else {
                                              var statearr_48005_48032 = state_47977__$1;
                                              statearr_48005_48032[1] = 18;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_47978 === 16) {
                                              var inst_47966 = state_47977[2];
                                              var state_47977__$1 = state_47977;
                                              var statearr_48006_48033 = state_47977__$1;
                                              statearr_48006_48033[2] = inst_47966;
                                              statearr_48006_48033[1] = 12;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_47978 === 10) {
                                                var inst_47935 = state_47977[8];
                                                var inst_47937 = state_47977[9];
                                                var inst_47942 = cljs.core._nth.call(null, inst_47935, inst_47937);
                                                var state_47977__$1 = state_47977;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_47977__$1, 13, out, inst_47942);
                                              } else {
                                                if (state_val_47978 === 18) {
                                                  var inst_47948 = state_47977[7];
                                                  var inst_47957 = cljs.core.first.call(null, inst_47948);
                                                  var state_47977__$1 = state_47977;
                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_47977__$1, 20, out, inst_47957);
                                                } else {
                                                  if (state_val_47978 === 8) {
                                                    var inst_47937 = state_47977[9];
                                                    var inst_47936 = state_47977[12];
                                                    var inst_47939 = inst_47937 < inst_47936;
                                                    var inst_47940 = inst_47939;
                                                    var state_47977__$1 = state_47977;
                                                    if (cljs.core.truth_(inst_47940)) {
                                                      var statearr_48007_48034 = state_47977__$1;
                                                      statearr_48007_48034[1] = 10;
                                                    } else {
                                                      var statearr_48008_48035 = state_47977__$1;
                                                      statearr_48008_48035[1] = 11;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_48012 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_48012[0] = state_machine__5675__auto__;
              statearr_48012[1] = 1;
              return statearr_48012;
            };
            var state_machine__5675__auto____1 = function(state_47977) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_47977);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e48013) {
                    if (e48013 instanceof Object) {
                      var ex__5678__auto__ = e48013;
                      var statearr_48014_48036 = state_47977;
                      statearr_48014_48036[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_47977);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e48013;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__48037 = state_47977;
                  state_47977 = G__48037;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_47977) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_47977);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_48015 = f__5690__auto__.call(null);
        statearr_48015[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_48015;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5689__auto___48118 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___48118) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___48118) {
            return function(state_48097) {
              var state_val_48098 = state_48097[1];
              if (state_val_48098 === 7) {
                var inst_48093 = state_48097[2];
                var state_48097__$1 = state_48097;
                var statearr_48099_48119 = state_48097__$1;
                statearr_48099_48119[2] = inst_48093;
                statearr_48099_48119[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_48098 === 1) {
                  var state_48097__$1 = state_48097;
                  var statearr_48100_48120 = state_48097__$1;
                  statearr_48100_48120[2] = null;
                  statearr_48100_48120[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_48098 === 4) {
                    var inst_48080 = state_48097[7];
                    var inst_48080__$1 = state_48097[2];
                    var inst_48081 = inst_48080__$1 == null;
                    var state_48097__$1 = function() {
                      var statearr_48101 = state_48097;
                      statearr_48101[7] = inst_48080__$1;
                      return statearr_48101;
                    }();
                    if (cljs.core.truth_(inst_48081)) {
                      var statearr_48102_48121 = state_48097__$1;
                      statearr_48102_48121[1] = 5;
                    } else {
                      var statearr_48103_48122 = state_48097__$1;
                      statearr_48103_48122[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_48098 === 6) {
                      var inst_48080 = state_48097[7];
                      var state_48097__$1 = state_48097;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_48097__$1, 11, to, inst_48080);
                    } else {
                      if (state_val_48098 === 3) {
                        var inst_48095 = state_48097[2];
                        var state_48097__$1 = state_48097;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_48097__$1, inst_48095);
                      } else {
                        if (state_val_48098 === 2) {
                          var state_48097__$1 = state_48097;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_48097__$1, 4, from);
                        } else {
                          if (state_val_48098 === 11) {
                            var inst_48090 = state_48097[2];
                            var state_48097__$1 = function() {
                              var statearr_48104 = state_48097;
                              statearr_48104[8] = inst_48090;
                              return statearr_48104;
                            }();
                            var statearr_48105_48123 = state_48097__$1;
                            statearr_48105_48123[2] = null;
                            statearr_48105_48123[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_48098 === 9) {
                              var state_48097__$1 = state_48097;
                              var statearr_48106_48124 = state_48097__$1;
                              statearr_48106_48124[2] = null;
                              statearr_48106_48124[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_48098 === 5) {
                                var state_48097__$1 = state_48097;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_48107_48125 = state_48097__$1;
                                  statearr_48107_48125[1] = 8;
                                } else {
                                  var statearr_48108_48126 = state_48097__$1;
                                  statearr_48108_48126[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_48098 === 10) {
                                  var inst_48087 = state_48097[2];
                                  var state_48097__$1 = state_48097;
                                  var statearr_48109_48127 = state_48097__$1;
                                  statearr_48109_48127[2] = inst_48087;
                                  statearr_48109_48127[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_48098 === 8) {
                                    var inst_48084 = cljs.core.async.close_BANG_.call(null, to);
                                    var state_48097__$1 = state_48097;
                                    var statearr_48110_48128 = state_48097__$1;
                                    statearr_48110_48128[2] = inst_48084;
                                    statearr_48110_48128[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___48118);
          return function(switch__5674__auto__, c__5689__auto___48118) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_48114 = [null, null, null, null, null, null, null, null, null];
                statearr_48114[0] = state_machine__5675__auto__;
                statearr_48114[1] = 1;
                return statearr_48114;
              };
              var state_machine__5675__auto____1 = function(state_48097) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_48097);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e48115) {
                      if (e48115 instanceof Object) {
                        var ex__5678__auto__ = e48115;
                        var statearr_48116_48129 = state_48097;
                        statearr_48116_48129[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48097);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e48115;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__48130 = state_48097;
                    state_48097 = G__48130;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_48097) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_48097);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___48118);
        }();
        var state__5691__auto__ = function() {
          var statearr_48117 = f__5690__auto__.call(null);
          statearr_48117[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___48118;
          return statearr_48117;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___48118));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5689__auto___48217 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___48217, tc, fc) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___48217, tc, fc) {
            return function(state_48195) {
              var state_val_48196 = state_48195[1];
              if (state_val_48196 === 7) {
                var inst_48191 = state_48195[2];
                var state_48195__$1 = state_48195;
                var statearr_48197_48218 = state_48195__$1;
                statearr_48197_48218[2] = inst_48191;
                statearr_48197_48218[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_48196 === 1) {
                  var state_48195__$1 = state_48195;
                  var statearr_48198_48219 = state_48195__$1;
                  statearr_48198_48219[2] = null;
                  statearr_48198_48219[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_48196 === 4) {
                    var inst_48176 = state_48195[7];
                    var inst_48176__$1 = state_48195[2];
                    var inst_48177 = inst_48176__$1 == null;
                    var state_48195__$1 = function() {
                      var statearr_48199 = state_48195;
                      statearr_48199[7] = inst_48176__$1;
                      return statearr_48199;
                    }();
                    if (cljs.core.truth_(inst_48177)) {
                      var statearr_48200_48220 = state_48195__$1;
                      statearr_48200_48220[1] = 5;
                    } else {
                      var statearr_48201_48221 = state_48195__$1;
                      statearr_48201_48221[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_48196 === 6) {
                      var inst_48176 = state_48195[7];
                      var inst_48182 = p.call(null, inst_48176);
                      var state_48195__$1 = state_48195;
                      if (cljs.core.truth_(inst_48182)) {
                        var statearr_48202_48222 = state_48195__$1;
                        statearr_48202_48222[1] = 9;
                      } else {
                        var statearr_48203_48223 = state_48195__$1;
                        statearr_48203_48223[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_48196 === 3) {
                        var inst_48193 = state_48195[2];
                        var state_48195__$1 = state_48195;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_48195__$1, inst_48193);
                      } else {
                        if (state_val_48196 === 2) {
                          var state_48195__$1 = state_48195;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_48195__$1, 4, ch);
                        } else {
                          if (state_val_48196 === 11) {
                            var inst_48176 = state_48195[7];
                            var inst_48186 = state_48195[2];
                            var state_48195__$1 = state_48195;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_48195__$1, 8, inst_48186, inst_48176);
                          } else {
                            if (state_val_48196 === 9) {
                              var state_48195__$1 = state_48195;
                              var statearr_48204_48224 = state_48195__$1;
                              statearr_48204_48224[2] = tc;
                              statearr_48204_48224[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_48196 === 5) {
                                var inst_48179 = cljs.core.async.close_BANG_.call(null, tc);
                                var inst_48180 = cljs.core.async.close_BANG_.call(null, fc);
                                var state_48195__$1 = function() {
                                  var statearr_48205 = state_48195;
                                  statearr_48205[8] = inst_48179;
                                  return statearr_48205;
                                }();
                                var statearr_48206_48225 = state_48195__$1;
                                statearr_48206_48225[2] = inst_48180;
                                statearr_48206_48225[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_48196 === 10) {
                                  var state_48195__$1 = state_48195;
                                  var statearr_48207_48226 = state_48195__$1;
                                  statearr_48207_48226[2] = fc;
                                  statearr_48207_48226[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_48196 === 8) {
                                    var inst_48188 = state_48195[2];
                                    var state_48195__$1 = function() {
                                      var statearr_48208 = state_48195;
                                      statearr_48208[9] = inst_48188;
                                      return statearr_48208;
                                    }();
                                    var statearr_48209_48227 = state_48195__$1;
                                    statearr_48209_48227[2] = null;
                                    statearr_48209_48227[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___48217, tc, fc);
          return function(switch__5674__auto__, c__5689__auto___48217, tc, fc) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_48213 = [null, null, null, null, null, null, null, null, null, null];
                statearr_48213[0] = state_machine__5675__auto__;
                statearr_48213[1] = 1;
                return statearr_48213;
              };
              var state_machine__5675__auto____1 = function(state_48195) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_48195);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e48214) {
                      if (e48214 instanceof Object) {
                        var ex__5678__auto__ = e48214;
                        var statearr_48215_48228 = state_48195;
                        statearr_48215_48228[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48195);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e48214;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__48229 = state_48195;
                    state_48195 = G__48229;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_48195) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_48195);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___48217, tc, fc);
        }();
        var state__5691__auto__ = function() {
          var statearr_48216 = f__5690__auto__.call(null);
          statearr_48216[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___48217;
          return statearr_48216;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___48217, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_48276) {
            var state_val_48277 = state_48276[1];
            if (state_val_48277 === 7) {
              var inst_48272 = state_48276[2];
              var state_48276__$1 = state_48276;
              var statearr_48278_48294 = state_48276__$1;
              statearr_48278_48294[2] = inst_48272;
              statearr_48278_48294[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_48277 === 6) {
                var inst_48265 = state_48276[7];
                var inst_48262 = state_48276[8];
                var inst_48269 = f.call(null, inst_48262, inst_48265);
                var inst_48262__$1 = inst_48269;
                var state_48276__$1 = function() {
                  var statearr_48279 = state_48276;
                  statearr_48279[8] = inst_48262__$1;
                  return statearr_48279;
                }();
                var statearr_48280_48295 = state_48276__$1;
                statearr_48280_48295[2] = null;
                statearr_48280_48295[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_48277 === 5) {
                  var inst_48262 = state_48276[8];
                  var state_48276__$1 = state_48276;
                  var statearr_48281_48296 = state_48276__$1;
                  statearr_48281_48296[2] = inst_48262;
                  statearr_48281_48296[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_48277 === 4) {
                    var inst_48265 = state_48276[7];
                    var inst_48265__$1 = state_48276[2];
                    var inst_48266 = inst_48265__$1 == null;
                    var state_48276__$1 = function() {
                      var statearr_48282 = state_48276;
                      statearr_48282[7] = inst_48265__$1;
                      return statearr_48282;
                    }();
                    if (cljs.core.truth_(inst_48266)) {
                      var statearr_48283_48297 = state_48276__$1;
                      statearr_48283_48297[1] = 5;
                    } else {
                      var statearr_48284_48298 = state_48276__$1;
                      statearr_48284_48298[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_48277 === 3) {
                      var inst_48274 = state_48276[2];
                      var state_48276__$1 = state_48276;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_48276__$1, inst_48274);
                    } else {
                      if (state_val_48277 === 2) {
                        var state_48276__$1 = state_48276;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_48276__$1, 4, ch);
                      } else {
                        if (state_val_48277 === 1) {
                          var inst_48262 = init;
                          var state_48276__$1 = function() {
                            var statearr_48285 = state_48276;
                            statearr_48285[8] = inst_48262;
                            return statearr_48285;
                          }();
                          var statearr_48286_48299 = state_48276__$1;
                          statearr_48286_48299[2] = null;
                          statearr_48286_48299[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_48290 = [null, null, null, null, null, null, null, null, null];
              statearr_48290[0] = state_machine__5675__auto__;
              statearr_48290[1] = 1;
              return statearr_48290;
            };
            var state_machine__5675__auto____1 = function(state_48276) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_48276);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e48291) {
                    if (e48291 instanceof Object) {
                      var ex__5678__auto__ = e48291;
                      var statearr_48292_48300 = state_48276;
                      statearr_48292_48300[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48276);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e48291;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__48301 = state_48276;
                  state_48276 = G__48301;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_48276) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_48276);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_48293 = f__5690__auto__.call(null);
        statearr_48293[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_48293;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto__) {
            return function(state_48363) {
              var state_val_48364 = state_48363[1];
              if (state_val_48364 === 7) {
                var inst_48344 = state_48363[7];
                var inst_48349 = state_48363[2];
                var inst_48350 = cljs.core.next.call(null, inst_48344);
                var inst_48344__$1 = inst_48350;
                var state_48363__$1 = function() {
                  var statearr_48365 = state_48363;
                  statearr_48365[7] = inst_48344__$1;
                  statearr_48365[8] = inst_48349;
                  return statearr_48365;
                }();
                var statearr_48366_48384 = state_48363__$1;
                statearr_48366_48384[2] = null;
                statearr_48366_48384[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_48364 === 1) {
                  var inst_48343 = cljs.core.seq.call(null, coll);
                  var inst_48344 = inst_48343;
                  var state_48363__$1 = function() {
                    var statearr_48367 = state_48363;
                    statearr_48367[7] = inst_48344;
                    return statearr_48367;
                  }();
                  var statearr_48368_48385 = state_48363__$1;
                  statearr_48368_48385[2] = null;
                  statearr_48368_48385[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_48364 === 4) {
                    var inst_48344 = state_48363[7];
                    var inst_48347 = cljs.core.first.call(null, inst_48344);
                    var state_48363__$1 = state_48363;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_48363__$1, 7, ch, inst_48347);
                  } else {
                    if (state_val_48364 === 6) {
                      var inst_48359 = state_48363[2];
                      var state_48363__$1 = state_48363;
                      var statearr_48369_48386 = state_48363__$1;
                      statearr_48369_48386[2] = inst_48359;
                      statearr_48369_48386[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_48364 === 3) {
                        var inst_48361 = state_48363[2];
                        var state_48363__$1 = state_48363;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_48363__$1, inst_48361);
                      } else {
                        if (state_val_48364 === 2) {
                          var inst_48344 = state_48363[7];
                          var state_48363__$1 = state_48363;
                          if (cljs.core.truth_(inst_48344)) {
                            var statearr_48370_48387 = state_48363__$1;
                            statearr_48370_48387[1] = 4;
                          } else {
                            var statearr_48371_48388 = state_48363__$1;
                            statearr_48371_48388[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_48364 === 9) {
                            var state_48363__$1 = state_48363;
                            var statearr_48372_48389 = state_48363__$1;
                            statearr_48372_48389[2] = null;
                            statearr_48372_48389[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_48364 === 5) {
                              var state_48363__$1 = state_48363;
                              if (cljs.core.truth_(close_QMARK_)) {
                                var statearr_48373_48390 = state_48363__$1;
                                statearr_48373_48390[1] = 8;
                              } else {
                                var statearr_48374_48391 = state_48363__$1;
                                statearr_48374_48391[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_48364 === 10) {
                                var inst_48357 = state_48363[2];
                                var state_48363__$1 = state_48363;
                                var statearr_48375_48392 = state_48363__$1;
                                statearr_48375_48392[2] = inst_48357;
                                statearr_48375_48392[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_48364 === 8) {
                                  var inst_48354 = cljs.core.async.close_BANG_.call(null, ch);
                                  var state_48363__$1 = state_48363;
                                  var statearr_48376_48393 = state_48363__$1;
                                  statearr_48376_48393[2] = inst_48354;
                                  statearr_48376_48393[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto__);
          return function(switch__5674__auto__, c__5689__auto__) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_48380 = [null, null, null, null, null, null, null, null, null];
                statearr_48380[0] = state_machine__5675__auto__;
                statearr_48380[1] = 1;
                return statearr_48380;
              };
              var state_machine__5675__auto____1 = function(state_48363) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_48363);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e48381) {
                      if (e48381 instanceof Object) {
                        var ex__5678__auto__ = e48381;
                        var statearr_48382_48394 = state_48363;
                        statearr_48382_48394[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48363);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e48381;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__48395 = state_48363;
                    state_48363 = G__48395;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_48363) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_48363);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto__);
        }();
        var state__5691__auto__ = function() {
          var statearr_48383 = f__5690__auto__.call(null);
          statearr_48383[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
          return statearr_48383;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto__));
    return c__5689__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj48397 = {};
  return obj48397;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3527__auto__ = _;
    if (and__3527__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4166__auto__ = _ == null ? null : _;
    return function() {
      var or__3539__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj48399 = {};
  return obj48399;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t48623 !== "undefined") {
    } else {
      cljs.core.async.t48623 = function(cs, ch, mult, meta48624) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta48624 = meta48624;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t48623.cljs$lang$type = true;
      cljs.core.async.t48623.cljs$lang$ctorStr = "cljs.core.async/t48623";
      cljs.core.async.t48623.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
          return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t48623");
        };
      }(cs);
      cljs.core.async.t48623.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t48623.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t48623.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t48623.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t48623.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t48623.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t48623.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_48625) {
          var self__ = this;
          var _48625__$1 = this;
          return self__.meta48624;
        };
      }(cs);
      cljs.core.async.t48623.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_48625, meta48624__$1) {
          var self__ = this;
          var _48625__$1 = this;
          return new cljs.core.async.t48623(self__.cs, self__.ch, self__.mult, meta48624__$1);
        };
      }(cs);
      cljs.core.async.__GT_t48623 = function(cs) {
        return function __GT_t48623(cs__$1, ch__$1, mult__$1, meta48624) {
          return new cljs.core.async.t48623(cs__$1, ch__$1, mult__$1, meta48624);
        };
      }(cs);
    }
    return new cljs.core.async.t48623(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5689__auto___48846 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___48846, cs, m, dchan, dctr, done) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto___48846, cs, m, dchan, dctr, done) {
          return function(state_48760) {
            var state_val_48761 = state_48760[1];
            if (state_val_48761 === 7) {
              var inst_48756 = state_48760[2];
              var state_48760__$1 = state_48760;
              var statearr_48762_48847 = state_48760__$1;
              statearr_48762_48847[2] = inst_48756;
              statearr_48762_48847[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_48761 === 20) {
                var inst_48657 = state_48760[7];
                var inst_48667 = cljs.core.first.call(null, inst_48657);
                var inst_48668 = cljs.core.nth.call(null, inst_48667, 0, null);
                var inst_48669 = cljs.core.nth.call(null, inst_48667, 1, null);
                var state_48760__$1 = function() {
                  var statearr_48763 = state_48760;
                  statearr_48763[8] = inst_48668;
                  return statearr_48763;
                }();
                if (cljs.core.truth_(inst_48669)) {
                  var statearr_48764_48848 = state_48760__$1;
                  statearr_48764_48848[1] = 22;
                } else {
                  var statearr_48765_48849 = state_48760__$1;
                  statearr_48765_48849[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_48761 === 27) {
                  var inst_48697 = state_48760[9];
                  var inst_48699 = state_48760[10];
                  var inst_48704 = cljs.core._nth.call(null, inst_48697, inst_48699);
                  var state_48760__$1 = function() {
                    var statearr_48766 = state_48760;
                    statearr_48766[11] = inst_48704;
                    return statearr_48766;
                  }();
                  var statearr_48767_48850 = state_48760__$1;
                  statearr_48767_48850[2] = null;
                  statearr_48767_48850[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_48761 === 1) {
                    var state_48760__$1 = state_48760;
                    var statearr_48768_48851 = state_48760__$1;
                    statearr_48768_48851[2] = null;
                    statearr_48768_48851[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_48761 === 24) {
                      var inst_48657 = state_48760[7];
                      var inst_48674 = state_48760[2];
                      var inst_48675 = cljs.core.next.call(null, inst_48657);
                      var inst_48637 = inst_48675;
                      var inst_48638 = null;
                      var inst_48639 = 0;
                      var inst_48640 = 0;
                      var state_48760__$1 = function() {
                        var statearr_48769 = state_48760;
                        statearr_48769[12] = inst_48674;
                        statearr_48769[13] = inst_48638;
                        statearr_48769[14] = inst_48640;
                        statearr_48769[15] = inst_48637;
                        statearr_48769[16] = inst_48639;
                        return statearr_48769;
                      }();
                      var statearr_48770_48852 = state_48760__$1;
                      statearr_48770_48852[2] = null;
                      statearr_48770_48852[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_48761 === 39) {
                        var inst_48717 = state_48760[17];
                        var inst_48735 = state_48760[2];
                        var inst_48736 = cljs.core.next.call(null, inst_48717);
                        var inst_48696 = inst_48736;
                        var inst_48697 = null;
                        var inst_48698 = 0;
                        var inst_48699 = 0;
                        var state_48760__$1 = function() {
                          var statearr_48774 = state_48760;
                          statearr_48774[18] = inst_48735;
                          statearr_48774[9] = inst_48697;
                          statearr_48774[10] = inst_48699;
                          statearr_48774[19] = inst_48698;
                          statearr_48774[20] = inst_48696;
                          return statearr_48774;
                        }();
                        var statearr_48775_48853 = state_48760__$1;
                        statearr_48775_48853[2] = null;
                        statearr_48775_48853[1] = 25;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_48761 === 4) {
                          var inst_48628 = state_48760[21];
                          var inst_48628__$1 = state_48760[2];
                          var inst_48629 = inst_48628__$1 == null;
                          var state_48760__$1 = function() {
                            var statearr_48776 = state_48760;
                            statearr_48776[21] = inst_48628__$1;
                            return statearr_48776;
                          }();
                          if (cljs.core.truth_(inst_48629)) {
                            var statearr_48777_48854 = state_48760__$1;
                            statearr_48777_48854[1] = 5;
                          } else {
                            var statearr_48778_48855 = state_48760__$1;
                            statearr_48778_48855[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_48761 === 15) {
                            var inst_48638 = state_48760[13];
                            var inst_48640 = state_48760[14];
                            var inst_48637 = state_48760[15];
                            var inst_48639 = state_48760[16];
                            var inst_48653 = state_48760[2];
                            var inst_48654 = inst_48640 + 1;
                            var tmp48771 = inst_48638;
                            var tmp48772 = inst_48637;
                            var tmp48773 = inst_48639;
                            var inst_48637__$1 = tmp48772;
                            var inst_48638__$1 = tmp48771;
                            var inst_48639__$1 = tmp48773;
                            var inst_48640__$1 = inst_48654;
                            var state_48760__$1 = function() {
                              var statearr_48779 = state_48760;
                              statearr_48779[13] = inst_48638__$1;
                              statearr_48779[14] = inst_48640__$1;
                              statearr_48779[15] = inst_48637__$1;
                              statearr_48779[22] = inst_48653;
                              statearr_48779[16] = inst_48639__$1;
                              return statearr_48779;
                            }();
                            var statearr_48780_48856 = state_48760__$1;
                            statearr_48780_48856[2] = null;
                            statearr_48780_48856[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_48761 === 21) {
                              var inst_48678 = state_48760[2];
                              var state_48760__$1 = state_48760;
                              var statearr_48781_48857 = state_48760__$1;
                              statearr_48781_48857[2] = inst_48678;
                              statearr_48781_48857[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_48761 === 31) {
                                var inst_48704 = state_48760[11];
                                var inst_48705 = state_48760[2];
                                var inst_48706 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_48707 = cljs.core.async.untap_STAR_.call(null, m, inst_48704);
                                var state_48760__$1 = function() {
                                  var statearr_48782 = state_48760;
                                  statearr_48782[23] = inst_48706;
                                  statearr_48782[24] = inst_48705;
                                  return statearr_48782;
                                }();
                                var statearr_48783_48858 = state_48760__$1;
                                statearr_48783_48858[2] = inst_48707;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48760__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_48761 === 32) {
                                  var inst_48628 = state_48760[21];
                                  var inst_48704 = state_48760[11];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_48760, 31, Object, null, 30);
                                  var inst_48711 = cljs.core.async.put_BANG_.call(null, inst_48704, inst_48628, done);
                                  var state_48760__$1 = state_48760;
                                  var statearr_48784_48859 = state_48760__$1;
                                  statearr_48784_48859[2] = inst_48711;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48760__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_48761 === 40) {
                                    var inst_48726 = state_48760[25];
                                    var inst_48727 = state_48760[2];
                                    var inst_48728 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_48729 = cljs.core.async.untap_STAR_.call(null, m, inst_48726);
                                    var state_48760__$1 = function() {
                                      var statearr_48785 = state_48760;
                                      statearr_48785[26] = inst_48727;
                                      statearr_48785[27] = inst_48728;
                                      return statearr_48785;
                                    }();
                                    var statearr_48786_48860 = state_48760__$1;
                                    statearr_48786_48860[2] = inst_48729;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48760__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_48761 === 33) {
                                      var inst_48717 = state_48760[17];
                                      var inst_48719 = cljs.core.chunked_seq_QMARK_.call(null, inst_48717);
                                      var state_48760__$1 = state_48760;
                                      if (inst_48719) {
                                        var statearr_48787_48861 = state_48760__$1;
                                        statearr_48787_48861[1] = 36;
                                      } else {
                                        var statearr_48788_48862 = state_48760__$1;
                                        statearr_48788_48862[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_48761 === 13) {
                                        var inst_48647 = state_48760[28];
                                        var inst_48650 = cljs.core.async.close_BANG_.call(null, inst_48647);
                                        var state_48760__$1 = state_48760;
                                        var statearr_48789_48863 = state_48760__$1;
                                        statearr_48789_48863[2] = inst_48650;
                                        statearr_48789_48863[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_48761 === 22) {
                                          var inst_48668 = state_48760[8];
                                          var inst_48671 = cljs.core.async.close_BANG_.call(null, inst_48668);
                                          var state_48760__$1 = state_48760;
                                          var statearr_48790_48864 = state_48760__$1;
                                          statearr_48790_48864[2] = inst_48671;
                                          statearr_48790_48864[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_48761 === 36) {
                                            var inst_48717 = state_48760[17];
                                            var inst_48721 = cljs.core.chunk_first.call(null, inst_48717);
                                            var inst_48722 = cljs.core.chunk_rest.call(null, inst_48717);
                                            var inst_48723 = cljs.core.count.call(null, inst_48721);
                                            var inst_48696 = inst_48722;
                                            var inst_48697 = inst_48721;
                                            var inst_48698 = inst_48723;
                                            var inst_48699 = 0;
                                            var state_48760__$1 = function() {
                                              var statearr_48791 = state_48760;
                                              statearr_48791[9] = inst_48697;
                                              statearr_48791[10] = inst_48699;
                                              statearr_48791[19] = inst_48698;
                                              statearr_48791[20] = inst_48696;
                                              return statearr_48791;
                                            }();
                                            var statearr_48792_48865 = state_48760__$1;
                                            statearr_48792_48865[2] = null;
                                            statearr_48792_48865[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_48761 === 41) {
                                              var inst_48628 = state_48760[21];
                                              var inst_48726 = state_48760[25];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_48760, 40, Object, null, 39);
                                              var inst_48733 = cljs.core.async.put_BANG_.call(null, inst_48726, inst_48628, done);
                                              var state_48760__$1 = state_48760;
                                              var statearr_48793_48866 = state_48760__$1;
                                              statearr_48793_48866[2] = inst_48733;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48760__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_48761 === 43) {
                                                var state_48760__$1 = state_48760;
                                                var statearr_48794_48867 = state_48760__$1;
                                                statearr_48794_48867[2] = null;
                                                statearr_48794_48867[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_48761 === 29) {
                                                  var inst_48744 = state_48760[2];
                                                  var state_48760__$1 = state_48760;
                                                  var statearr_48795_48868 = state_48760__$1;
                                                  statearr_48795_48868[2] = inst_48744;
                                                  statearr_48795_48868[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_48761 === 44) {
                                                    var inst_48753 = state_48760[2];
                                                    var state_48760__$1 = function() {
                                                      var statearr_48796 = state_48760;
                                                      statearr_48796[29] = inst_48753;
                                                      return statearr_48796;
                                                    }();
                                                    var statearr_48797_48869 = state_48760__$1;
                                                    statearr_48797_48869[2] = null;
                                                    statearr_48797_48869[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_48761 === 6) {
                                                      var inst_48688 = state_48760[30];
                                                      var inst_48687 = cljs.core.deref.call(null, cs);
                                                      var inst_48688__$1 = cljs.core.keys.call(null, inst_48687);
                                                      var inst_48689 = cljs.core.count.call(null, inst_48688__$1);
                                                      var inst_48690 = cljs.core.reset_BANG_.call(null, dctr, inst_48689);
                                                      var inst_48695 = cljs.core.seq.call(null, inst_48688__$1);
                                                      var inst_48696 = inst_48695;
                                                      var inst_48697 = null;
                                                      var inst_48698 = 0;
                                                      var inst_48699 = 0;
                                                      var state_48760__$1 = function() {
                                                        var statearr_48798 = state_48760;
                                                        statearr_48798[30] = inst_48688__$1;
                                                        statearr_48798[9] = inst_48697;
                                                        statearr_48798[10] = inst_48699;
                                                        statearr_48798[31] = inst_48690;
                                                        statearr_48798[19] = inst_48698;
                                                        statearr_48798[20] = inst_48696;
                                                        return statearr_48798;
                                                      }();
                                                      var statearr_48799_48870 = state_48760__$1;
                                                      statearr_48799_48870[2] = null;
                                                      statearr_48799_48870[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_48761 === 28) {
                                                        var inst_48696 = state_48760[20];
                                                        var inst_48717 = state_48760[17];
                                                        var inst_48717__$1 = cljs.core.seq.call(null, inst_48696);
                                                        var state_48760__$1 = function() {
                                                          var statearr_48800 = state_48760;
                                                          statearr_48800[17] = inst_48717__$1;
                                                          return statearr_48800;
                                                        }();
                                                        if (inst_48717__$1) {
                                                          var statearr_48801_48871 = state_48760__$1;
                                                          statearr_48801_48871[1] = 33;
                                                        } else {
                                                          var statearr_48802_48872 = state_48760__$1;
                                                          statearr_48802_48872[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_48761 === 25) {
                                                          var inst_48699 = state_48760[10];
                                                          var inst_48698 = state_48760[19];
                                                          var inst_48701 = inst_48699 < inst_48698;
                                                          var inst_48702 = inst_48701;
                                                          var state_48760__$1 = state_48760;
                                                          if (cljs.core.truth_(inst_48702)) {
                                                            var statearr_48803_48873 = state_48760__$1;
                                                            statearr_48803_48873[1] = 27;
                                                          } else {
                                                            var statearr_48804_48874 = state_48760__$1;
                                                            statearr_48804_48874[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_48761 === 34) {
                                                            var state_48760__$1 = state_48760;
                                                            var statearr_48805_48875 = state_48760__$1;
                                                            statearr_48805_48875[2] = null;
                                                            statearr_48805_48875[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_48761 === 17) {
                                                              var state_48760__$1 = state_48760;
                                                              var statearr_48806_48876 = state_48760__$1;
                                                              statearr_48806_48876[2] = null;
                                                              statearr_48806_48876[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_48761 === 3) {
                                                                var inst_48758 = state_48760[2];
                                                                var state_48760__$1 = state_48760;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_48760__$1, inst_48758);
                                                              } else {
                                                                if (state_val_48761 === 12) {
                                                                  var inst_48683 = state_48760[2];
                                                                  var state_48760__$1 = state_48760;
                                                                  var statearr_48807_48877 = state_48760__$1;
                                                                  statearr_48807_48877[2] = inst_48683;
                                                                  statearr_48807_48877[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_48761 === 2) {
                                                                    var state_48760__$1 = state_48760;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_48760__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_48761 === 23) {
                                                                      var state_48760__$1 = state_48760;
                                                                      var statearr_48808_48878 = state_48760__$1;
                                                                      statearr_48808_48878[2] = null;
                                                                      statearr_48808_48878[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_48761 === 35) {
                                                                        var inst_48742 = state_48760[2];
                                                                        var state_48760__$1 = state_48760;
                                                                        var statearr_48809_48879 = state_48760__$1;
                                                                        statearr_48809_48879[2] = inst_48742;
                                                                        statearr_48809_48879[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_48761 === 19) {
                                                                          var inst_48657 = state_48760[7];
                                                                          var inst_48661 = cljs.core.chunk_first.call(null, inst_48657);
                                                                          var inst_48662 = cljs.core.chunk_rest.call(null, inst_48657);
                                                                          var inst_48663 = cljs.core.count.call(null, inst_48661);
                                                                          var inst_48637 = inst_48662;
                                                                          var inst_48638 = inst_48661;
                                                                          var inst_48639 = inst_48663;
                                                                          var inst_48640 = 0;
                                                                          var state_48760__$1 = function() {
                                                                            var statearr_48810 = state_48760;
                                                                            statearr_48810[13] = inst_48638;
                                                                            statearr_48810[14] = inst_48640;
                                                                            statearr_48810[15] = inst_48637;
                                                                            statearr_48810[16] = inst_48639;
                                                                            return statearr_48810;
                                                                          }();
                                                                          var statearr_48811_48880 = state_48760__$1;
                                                                          statearr_48811_48880[2] = null;
                                                                          statearr_48811_48880[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_48761 === 11) {
                                                                            var inst_48657 = state_48760[7];
                                                                            var inst_48637 = state_48760[15];
                                                                            var inst_48657__$1 = cljs.core.seq.call(null, inst_48637);
                                                                            var state_48760__$1 = function() {
                                                                              var statearr_48812 = state_48760;
                                                                              statearr_48812[7] = inst_48657__$1;
                                                                              return statearr_48812;
                                                                            }();
                                                                            if (inst_48657__$1) {
                                                                              var statearr_48813_48881 = state_48760__$1;
                                                                              statearr_48813_48881[1] = 16;
                                                                            } else {
                                                                              var statearr_48814_48882 = state_48760__$1;
                                                                              statearr_48814_48882[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_48761 === 9) {
                                                                              var inst_48685 = state_48760[2];
                                                                              var state_48760__$1 = state_48760;
                                                                              var statearr_48815_48883 = state_48760__$1;
                                                                              statearr_48815_48883[2] = inst_48685;
                                                                              statearr_48815_48883[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_48761 === 5) {
                                                                                var inst_48635 = cljs.core.deref.call(null, cs);
                                                                                var inst_48636 = cljs.core.seq.call(null, inst_48635);
                                                                                var inst_48637 = inst_48636;
                                                                                var inst_48638 = null;
                                                                                var inst_48639 = 0;
                                                                                var inst_48640 = 0;
                                                                                var state_48760__$1 = function() {
                                                                                  var statearr_48816 = state_48760;
                                                                                  statearr_48816[13] = inst_48638;
                                                                                  statearr_48816[14] = inst_48640;
                                                                                  statearr_48816[15] = inst_48637;
                                                                                  statearr_48816[16] = inst_48639;
                                                                                  return statearr_48816;
                                                                                }();
                                                                                var statearr_48817_48884 = state_48760__$1;
                                                                                statearr_48817_48884[2] = null;
                                                                                statearr_48817_48884[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_48761 === 14) {
                                                                                  var state_48760__$1 = state_48760;
                                                                                  var statearr_48818_48885 = state_48760__$1;
                                                                                  statearr_48818_48885[2] = null;
                                                                                  statearr_48818_48885[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_48761 === 45) {
                                                                                    var inst_48750 = state_48760[2];
                                                                                    var state_48760__$1 = state_48760;
                                                                                    var statearr_48819_48886 = state_48760__$1;
                                                                                    statearr_48819_48886[2] = inst_48750;
                                                                                    statearr_48819_48886[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_48761 === 26) {
                                                                                      var inst_48688 = state_48760[30];
                                                                                      var inst_48746 = state_48760[2];
                                                                                      var inst_48747 = cljs.core.seq.call(null, inst_48688);
                                                                                      var state_48760__$1 = function() {
                                                                                        var statearr_48820 = state_48760;
                                                                                        statearr_48820[32] = inst_48746;
                                                                                        return statearr_48820;
                                                                                      }();
                                                                                      if (inst_48747) {
                                                                                        var statearr_48821_48887 = state_48760__$1;
                                                                                        statearr_48821_48887[1] = 42;
                                                                                      } else {
                                                                                        var statearr_48822_48888 = state_48760__$1;
                                                                                        statearr_48822_48888[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_48761 === 16) {
                                                                                        var inst_48657 = state_48760[7];
                                                                                        var inst_48659 = cljs.core.chunked_seq_QMARK_.call(null, inst_48657);
                                                                                        var state_48760__$1 = state_48760;
                                                                                        if (inst_48659) {
                                                                                          var statearr_48826_48889 = state_48760__$1;
                                                                                          statearr_48826_48889[1] = 19;
                                                                                        } else {
                                                                                          var statearr_48827_48890 = state_48760__$1;
                                                                                          statearr_48827_48890[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_48761 === 38) {
                                                                                          var inst_48739 = state_48760[2];
                                                                                          var state_48760__$1 = state_48760;
                                                                                          var statearr_48828_48891 = state_48760__$1;
                                                                                          statearr_48828_48891[2] = inst_48739;
                                                                                          statearr_48828_48891[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_48761 === 30) {
                                                                                            var inst_48697 = state_48760[9];
                                                                                            var inst_48699 = state_48760[10];
                                                                                            var inst_48698 = state_48760[19];
                                                                                            var inst_48696 = state_48760[20];
                                                                                            var inst_48713 = state_48760[2];
                                                                                            var inst_48714 = inst_48699 + 1;
                                                                                            var tmp48823 = inst_48697;
                                                                                            var tmp48824 = inst_48698;
                                                                                            var tmp48825 = inst_48696;
                                                                                            var inst_48696__$1 = tmp48825;
                                                                                            var inst_48697__$1 = tmp48823;
                                                                                            var inst_48698__$1 = tmp48824;
                                                                                            var inst_48699__$1 = inst_48714;
                                                                                            var state_48760__$1 = function() {
                                                                                              var statearr_48829 = state_48760;
                                                                                              statearr_48829[9] = inst_48697__$1;
                                                                                              statearr_48829[10] = inst_48699__$1;
                                                                                              statearr_48829[19] = inst_48698__$1;
                                                                                              statearr_48829[20] = inst_48696__$1;
                                                                                              statearr_48829[33] = inst_48713;
                                                                                              return statearr_48829;
                                                                                            }();
                                                                                            var statearr_48830_48892 = state_48760__$1;
                                                                                            statearr_48830_48892[2] = null;
                                                                                            statearr_48830_48892[1] = 25;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_48761 === 10) {
                                                                                              var inst_48638 = state_48760[13];
                                                                                              var inst_48640 = state_48760[14];
                                                                                              var inst_48646 = cljs.core._nth.call(null, inst_48638, inst_48640);
                                                                                              var inst_48647 = cljs.core.nth.call(null, inst_48646, 0, null);
                                                                                              var inst_48648 = cljs.core.nth.call(null, inst_48646, 1, null);
                                                                                              var state_48760__$1 = function() {
                                                                                                var statearr_48831 = state_48760;
                                                                                                statearr_48831[28] = inst_48647;
                                                                                                return statearr_48831;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_48648)) {
                                                                                                var statearr_48832_48893 = state_48760__$1;
                                                                                                statearr_48832_48893[1] = 13;
                                                                                              } else {
                                                                                                var statearr_48833_48894 = state_48760__$1;
                                                                                                statearr_48833_48894[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_48761 === 18) {
                                                                                                var inst_48681 = state_48760[2];
                                                                                                var state_48760__$1 = state_48760;
                                                                                                var statearr_48834_48895 = state_48760__$1;
                                                                                                statearr_48834_48895[2] = inst_48681;
                                                                                                statearr_48834_48895[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_48761 === 42) {
                                                                                                  var state_48760__$1 = state_48760;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_48760__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_48761 === 37) {
                                                                                                    var inst_48717 = state_48760[17];
                                                                                                    var inst_48726 = cljs.core.first.call(null, inst_48717);
                                                                                                    var state_48760__$1 = function() {
                                                                                                      var statearr_48835 = state_48760;
                                                                                                      statearr_48835[25] = inst_48726;
                                                                                                      return statearr_48835;
                                                                                                    }();
                                                                                                    var statearr_48836_48896 = state_48760__$1;
                                                                                                    statearr_48836_48896[2] = null;
                                                                                                    statearr_48836_48896[1] = 41;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                  } else {
                                                                                                    if (state_val_48761 === 8) {
                                                                                                      var inst_48640 = state_48760[14];
                                                                                                      var inst_48639 = state_48760[16];
                                                                                                      var inst_48642 = inst_48640 < inst_48639;
                                                                                                      var inst_48643 = inst_48642;
                                                                                                      var state_48760__$1 = state_48760;
                                                                                                      if (cljs.core.truth_(inst_48643)) {
                                                                                                        var statearr_48837_48897 = state_48760__$1;
                                                                                                        statearr_48837_48897[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_48838_48898 = state_48760__$1;
                                                                                                        statearr_48838_48898[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5689__auto___48846, cs, m, dchan, dctr, done);
        return function(switch__5674__auto__, c__5689__auto___48846, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_48842 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_48842[0] = state_machine__5675__auto__;
              statearr_48842[1] = 1;
              return statearr_48842;
            };
            var state_machine__5675__auto____1 = function(state_48760) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_48760);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e48843) {
                    if (e48843 instanceof Object) {
                      var ex__5678__auto__ = e48843;
                      var statearr_48844_48899 = state_48760;
                      statearr_48844_48899[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_48760);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e48843;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__48900 = state_48760;
                  state_48760 = G__48900;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_48760) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_48760);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto___48846, cs, m, dchan, dctr, done);
      }();
      var state__5691__auto__ = function() {
        var statearr_48845 = f__5690__auto__.call(null);
        statearr_48845[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___48846;
        return statearr_48845;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto___48846, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj48902 = {};
  return obj48902;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3527__auto__ = m;
    if (and__3527__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4166__auto__ = m == null ? null : m;
    return function() {
      var or__3539__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t49012 !== "undefined") {
    } else {
      cljs.core.async.t49012 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta49013) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta49013 = meta49013;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t49012.cljs$lang$type = true;
      cljs.core.async.t49012.cljs$lang$ctorStr = "cljs.core.async/t49012";
      cljs.core.async.t49012.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
          return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t49012");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t49012.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t49012.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_49014) {
          var self__ = this;
          var _49014__$1 = this;
          return self__.meta49013;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t49012.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_49014, meta49013__$1) {
          var self__ = this;
          var _49014__$1 = this;
          return new cljs.core.async.t49012(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta49013__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t49012 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t49012(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta49013) {
          return new cljs.core.async.t49012(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta49013);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t49012(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__5689__auto___49121 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___49121, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto___49121, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_49079) {
            var state_val_49080 = state_49079[1];
            if (state_val_49080 === 7) {
              var inst_49028 = state_49079[7];
              var inst_49033 = cljs.core.apply.call(null, cljs.core.hash_map, inst_49028);
              var state_49079__$1 = state_49079;
              var statearr_49081_49122 = state_49079__$1;
              statearr_49081_49122[2] = inst_49033;
              statearr_49081_49122[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_49080 === 20) {
                var inst_49043 = state_49079[8];
                var state_49079__$1 = state_49079;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_49079__$1, 23, out, inst_49043);
              } else {
                if (state_val_49080 === 1) {
                  var inst_49018 = state_49079[9];
                  var inst_49018__$1 = calc_state.call(null);
                  var inst_49019 = cljs.core.seq_QMARK_.call(null, inst_49018__$1);
                  var state_49079__$1 = function() {
                    var statearr_49082 = state_49079;
                    statearr_49082[9] = inst_49018__$1;
                    return statearr_49082;
                  }();
                  if (inst_49019) {
                    var statearr_49083_49123 = state_49079__$1;
                    statearr_49083_49123[1] = 2;
                  } else {
                    var statearr_49084_49124 = state_49079__$1;
                    statearr_49084_49124[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_49080 === 4) {
                    var inst_49018 = state_49079[9];
                    var inst_49024 = state_49079[2];
                    var inst_49025 = cljs.core.get.call(null, inst_49024, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                    var inst_49026 = cljs.core.get.call(null, inst_49024, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                    var inst_49027 = cljs.core.get.call(null, inst_49024, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                    var inst_49028 = inst_49018;
                    var state_49079__$1 = function() {
                      var statearr_49085 = state_49079;
                      statearr_49085[10] = inst_49026;
                      statearr_49085[11] = inst_49025;
                      statearr_49085[12] = inst_49027;
                      statearr_49085[7] = inst_49028;
                      return statearr_49085;
                    }();
                    var statearr_49086_49125 = state_49079__$1;
                    statearr_49086_49125[2] = null;
                    statearr_49086_49125[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_49080 === 15) {
                      var state_49079__$1 = state_49079;
                      var statearr_49087_49126 = state_49079__$1;
                      statearr_49087_49126[2] = null;
                      statearr_49087_49126[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_49080 === 21) {
                        var state_49079__$1 = state_49079;
                        var statearr_49088_49127 = state_49079__$1;
                        statearr_49088_49127[2] = null;
                        statearr_49088_49127[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_49080 === 13) {
                          var inst_49075 = state_49079[2];
                          var state_49079__$1 = state_49079;
                          var statearr_49089_49128 = state_49079__$1;
                          statearr_49089_49128[2] = inst_49075;
                          statearr_49089_49128[1] = 6;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_49080 === 22) {
                            var inst_49036 = state_49079[13];
                            var inst_49072 = state_49079[2];
                            var inst_49028 = inst_49036;
                            var state_49079__$1 = function() {
                              var statearr_49090 = state_49079;
                              statearr_49090[14] = inst_49072;
                              statearr_49090[7] = inst_49028;
                              return statearr_49090;
                            }();
                            var statearr_49091_49129 = state_49079__$1;
                            statearr_49091_49129[2] = null;
                            statearr_49091_49129[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_49080 === 6) {
                              var inst_49077 = state_49079[2];
                              var state_49079__$1 = state_49079;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49079__$1, inst_49077);
                            } else {
                              if (state_val_49080 === 17) {
                                var inst_49058 = state_49079[15];
                                var state_49079__$1 = state_49079;
                                var statearr_49092_49130 = state_49079__$1;
                                statearr_49092_49130[2] = inst_49058;
                                statearr_49092_49130[1] = 19;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_49080 === 3) {
                                  var inst_49018 = state_49079[9];
                                  var state_49079__$1 = state_49079;
                                  var statearr_49093_49131 = state_49079__$1;
                                  statearr_49093_49131[2] = inst_49018;
                                  statearr_49093_49131[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_49080 === 12) {
                                    var inst_49039 = state_49079[16];
                                    var inst_49044 = state_49079[17];
                                    var inst_49058 = state_49079[15];
                                    var inst_49058__$1 = inst_49039.call(null, inst_49044);
                                    var state_49079__$1 = function() {
                                      var statearr_49094 = state_49079;
                                      statearr_49094[15] = inst_49058__$1;
                                      return statearr_49094;
                                    }();
                                    if (cljs.core.truth_(inst_49058__$1)) {
                                      var statearr_49095_49132 = state_49079__$1;
                                      statearr_49095_49132[1] = 17;
                                    } else {
                                      var statearr_49096_49133 = state_49079__$1;
                                      statearr_49096_49133[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_49080 === 2) {
                                      var inst_49018 = state_49079[9];
                                      var inst_49021 = cljs.core.apply.call(null, cljs.core.hash_map, inst_49018);
                                      var state_49079__$1 = state_49079;
                                      var statearr_49097_49134 = state_49079__$1;
                                      statearr_49097_49134[2] = inst_49021;
                                      statearr_49097_49134[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_49080 === 23) {
                                        var inst_49069 = state_49079[2];
                                        var state_49079__$1 = state_49079;
                                        var statearr_49098_49135 = state_49079__$1;
                                        statearr_49098_49135[2] = inst_49069;
                                        statearr_49098_49135[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_49080 === 19) {
                                          var inst_49066 = state_49079[2];
                                          var state_49079__$1 = state_49079;
                                          if (cljs.core.truth_(inst_49066)) {
                                            var statearr_49099_49136 = state_49079__$1;
                                            statearr_49099_49136[1] = 20;
                                          } else {
                                            var statearr_49100_49137 = state_49079__$1;
                                            statearr_49100_49137[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_49080 === 11) {
                                            var inst_49043 = state_49079[8];
                                            var inst_49049 = inst_49043 == null;
                                            var state_49079__$1 = state_49079;
                                            if (cljs.core.truth_(inst_49049)) {
                                              var statearr_49101_49138 = state_49079__$1;
                                              statearr_49101_49138[1] = 14;
                                            } else {
                                              var statearr_49102_49139 = state_49079__$1;
                                              statearr_49102_49139[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_49080 === 9) {
                                              var inst_49036 = state_49079[13];
                                              var inst_49036__$1 = state_49079[2];
                                              var inst_49037 = cljs.core.get.call(null, inst_49036__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                                              var inst_49038 = cljs.core.get.call(null, inst_49036__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                                              var inst_49039 = cljs.core.get.call(null, inst_49036__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                                              var state_49079__$1 = function() {
                                                var statearr_49103 = state_49079;
                                                statearr_49103[16] = inst_49039;
                                                statearr_49103[13] = inst_49036__$1;
                                                statearr_49103[18] = inst_49038;
                                                return statearr_49103;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_49079__$1, 10, inst_49037);
                                            } else {
                                              if (state_val_49080 === 5) {
                                                var inst_49028 = state_49079[7];
                                                var inst_49031 = cljs.core.seq_QMARK_.call(null, inst_49028);
                                                var state_49079__$1 = state_49079;
                                                if (inst_49031) {
                                                  var statearr_49104_49140 = state_49079__$1;
                                                  statearr_49104_49140[1] = 7;
                                                } else {
                                                  var statearr_49105_49141 = state_49079__$1;
                                                  statearr_49105_49141[1] = 8;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_49080 === 14) {
                                                  var inst_49044 = state_49079[17];
                                                  var inst_49051 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_49044);
                                                  var state_49079__$1 = state_49079;
                                                  var statearr_49106_49142 = state_49079__$1;
                                                  statearr_49106_49142[2] = inst_49051;
                                                  statearr_49106_49142[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_49080 === 16) {
                                                    var inst_49054 = state_49079[2];
                                                    var inst_49055 = calc_state.call(null);
                                                    var inst_49028 = inst_49055;
                                                    var state_49079__$1 = function() {
                                                      var statearr_49107 = state_49079;
                                                      statearr_49107[19] = inst_49054;
                                                      statearr_49107[7] = inst_49028;
                                                      return statearr_49107;
                                                    }();
                                                    var statearr_49108_49143 = state_49079__$1;
                                                    statearr_49108_49143[2] = null;
                                                    statearr_49108_49143[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_49080 === 10) {
                                                      var inst_49044 = state_49079[17];
                                                      var inst_49043 = state_49079[8];
                                                      var inst_49042 = state_49079[2];
                                                      var inst_49043__$1 = cljs.core.nth.call(null, inst_49042, 0, null);
                                                      var inst_49044__$1 = cljs.core.nth.call(null, inst_49042, 1, null);
                                                      var inst_49045 = inst_49043__$1 == null;
                                                      var inst_49046 = cljs.core._EQ_.call(null, inst_49044__$1, change);
                                                      var inst_49047 = inst_49045 || inst_49046;
                                                      var state_49079__$1 = function() {
                                                        var statearr_49109 = state_49079;
                                                        statearr_49109[17] = inst_49044__$1;
                                                        statearr_49109[8] = inst_49043__$1;
                                                        return statearr_49109;
                                                      }();
                                                      if (cljs.core.truth_(inst_49047)) {
                                                        var statearr_49110_49144 = state_49079__$1;
                                                        statearr_49110_49144[1] = 11;
                                                      } else {
                                                        var statearr_49111_49145 = state_49079__$1;
                                                        statearr_49111_49145[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_49080 === 18) {
                                                        var inst_49039 = state_49079[16];
                                                        var inst_49044 = state_49079[17];
                                                        var inst_49038 = state_49079[18];
                                                        var inst_49061 = cljs.core.empty_QMARK_.call(null, inst_49039);
                                                        var inst_49062 = inst_49038.call(null, inst_49044);
                                                        var inst_49063 = cljs.core.not.call(null, inst_49062);
                                                        var inst_49064 = inst_49061 && inst_49063;
                                                        var state_49079__$1 = state_49079;
                                                        var statearr_49112_49146 = state_49079__$1;
                                                        statearr_49112_49146[2] = inst_49064;
                                                        statearr_49112_49146[1] = 19;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_49080 === 8) {
                                                          var inst_49028 = state_49079[7];
                                                          var state_49079__$1 = state_49079;
                                                          var statearr_49113_49147 = state_49079__$1;
                                                          statearr_49113_49147[2] = inst_49028;
                                                          statearr_49113_49147[1] = 9;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5689__auto___49121, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__5674__auto__, c__5689__auto___49121, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_49117 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_49117[0] = state_machine__5675__auto__;
              statearr_49117[1] = 1;
              return statearr_49117;
            };
            var state_machine__5675__auto____1 = function(state_49079) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_49079);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e49118) {
                    if (e49118 instanceof Object) {
                      var ex__5678__auto__ = e49118;
                      var statearr_49119_49148 = state_49079;
                      statearr_49119_49148[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49079);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e49118;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__49149 = state_49079;
                  state_49079 = G__49149;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_49079) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_49079);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto___49121, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__5691__auto__ = function() {
        var statearr_49120 = f__5690__auto__.call(null);
        statearr_49120[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___49121;
        return statearr_49120;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto___49121, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj49151 = {};
  return obj49151;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3527__auto__ = p;
    if (and__3527__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4166__auto__ = p == null ? null : p;
    return function() {
      var or__3539__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3527__auto__ = p;
    if (and__3527__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4166__auto__ = p == null ? null : p;
    return function() {
      var or__3539__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3527__auto__ = p;
      if (and__3527__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4166__auto__ = p == null ? null : p;
      return function() {
        var or__3539__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3527__auto__ = p;
      if (and__3527__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4166__auto__ = p == null ? null : p;
      return function() {
        var or__3539__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3539__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3539__auto__, mults) {
            return function(p1__49152_SHARP_) {
              if (cljs.core.truth_(p1__49152_SHARP_.call(null, topic))) {
                return p1__49152_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__49152_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3539__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t49277 !== "undefined") {
      } else {
        cljs.core.async.t49277 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta49278) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta49278 = meta49278;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t49277.cljs$lang$type = true;
        cljs.core.async.t49277.cljs$lang$ctorStr = "cljs.core.async/t49277";
        cljs.core.async.t49277.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
            return cljs.core._write.call(null, writer__4107__auto__, "cljs.core.async/t49277");
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t49277.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t49277.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_49279) {
            var self__ = this;
            var _49279__$1 = this;
            return self__.meta49278;
          };
        }(mults, ensure_mult);
        cljs.core.async.t49277.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_49279, meta49278__$1) {
            var self__ = this;
            var _49279__$1 = this;
            return new cljs.core.async.t49277(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta49278__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t49277 = function(mults, ensure_mult) {
          return function __GT_t49277(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta49278) {
            return new cljs.core.async.t49277(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta49278);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t49277(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__5689__auto___49401 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___49401, mults, ensure_mult, p) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___49401, mults, ensure_mult, p) {
            return function(state_49353) {
              var state_val_49354 = state_49353[1];
              if (state_val_49354 === 7) {
                var inst_49349 = state_49353[2];
                var state_49353__$1 = state_49353;
                var statearr_49355_49402 = state_49353__$1;
                statearr_49355_49402[2] = inst_49349;
                statearr_49355_49402[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_49354 === 20) {
                  var state_49353__$1 = state_49353;
                  var statearr_49356_49403 = state_49353__$1;
                  statearr_49356_49403[2] = null;
                  statearr_49356_49403[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_49354 === 1) {
                    var state_49353__$1 = state_49353;
                    var statearr_49357_49404 = state_49353__$1;
                    statearr_49357_49404[2] = null;
                    statearr_49357_49404[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_49354 === 24) {
                      var inst_49332 = state_49353[7];
                      var inst_49282 = state_49353[8];
                      var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_49353, 23, Object, null, 22);
                      var inst_49339 = cljs.core.async.muxch_STAR_.call(null, inst_49332);
                      var state_49353__$1 = state_49353;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_49353__$1, 25, inst_49339, inst_49282);
                    } else {
                      if (state_val_49354 === 4) {
                        var inst_49282 = state_49353[8];
                        var inst_49282__$1 = state_49353[2];
                        var inst_49283 = inst_49282__$1 == null;
                        var state_49353__$1 = function() {
                          var statearr_49358 = state_49353;
                          statearr_49358[8] = inst_49282__$1;
                          return statearr_49358;
                        }();
                        if (cljs.core.truth_(inst_49283)) {
                          var statearr_49359_49405 = state_49353__$1;
                          statearr_49359_49405[1] = 5;
                        } else {
                          var statearr_49360_49406 = state_49353__$1;
                          statearr_49360_49406[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_49354 === 15) {
                          var inst_49324 = state_49353[2];
                          var state_49353__$1 = state_49353;
                          var statearr_49361_49407 = state_49353__$1;
                          statearr_49361_49407[2] = inst_49324;
                          statearr_49361_49407[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_49354 === 21) {
                            var inst_49346 = state_49353[2];
                            var state_49353__$1 = function() {
                              var statearr_49362 = state_49353;
                              statearr_49362[9] = inst_49346;
                              return statearr_49362;
                            }();
                            var statearr_49363_49408 = state_49353__$1;
                            statearr_49363_49408[2] = null;
                            statearr_49363_49408[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_49354 === 13) {
                              var inst_49306 = state_49353[10];
                              var inst_49308 = cljs.core.chunked_seq_QMARK_.call(null, inst_49306);
                              var state_49353__$1 = state_49353;
                              if (inst_49308) {
                                var statearr_49364_49409 = state_49353__$1;
                                statearr_49364_49409[1] = 16;
                              } else {
                                var statearr_49365_49410 = state_49353__$1;
                                statearr_49365_49410[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_49354 === 22) {
                                var inst_49343 = state_49353[2];
                                var state_49353__$1 = state_49353;
                                var statearr_49366_49411 = state_49353__$1;
                                statearr_49366_49411[2] = inst_49343;
                                statearr_49366_49411[1] = 21;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_49354 === 6) {
                                  var inst_49330 = state_49353[11];
                                  var inst_49332 = state_49353[7];
                                  var inst_49282 = state_49353[8];
                                  var inst_49330__$1 = topic_fn.call(null, inst_49282);
                                  var inst_49331 = cljs.core.deref.call(null, mults);
                                  var inst_49332__$1 = cljs.core.get.call(null, inst_49331, inst_49330__$1);
                                  var state_49353__$1 = function() {
                                    var statearr_49367 = state_49353;
                                    statearr_49367[11] = inst_49330__$1;
                                    statearr_49367[7] = inst_49332__$1;
                                    return statearr_49367;
                                  }();
                                  if (cljs.core.truth_(inst_49332__$1)) {
                                    var statearr_49368_49412 = state_49353__$1;
                                    statearr_49368_49412[1] = 19;
                                  } else {
                                    var statearr_49369_49413 = state_49353__$1;
                                    statearr_49369_49413[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_49354 === 25) {
                                    var inst_49341 = state_49353[2];
                                    var state_49353__$1 = state_49353;
                                    var statearr_49370_49414 = state_49353__$1;
                                    statearr_49370_49414[2] = inst_49341;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49353__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_49354 === 17) {
                                      var inst_49306 = state_49353[10];
                                      var inst_49315 = cljs.core.first.call(null, inst_49306);
                                      var inst_49316 = cljs.core.async.muxch_STAR_.call(null, inst_49315);
                                      var inst_49317 = cljs.core.async.close_BANG_.call(null, inst_49316);
                                      var inst_49318 = cljs.core.next.call(null, inst_49306);
                                      var inst_49292 = inst_49318;
                                      var inst_49293 = null;
                                      var inst_49294 = 0;
                                      var inst_49295 = 0;
                                      var state_49353__$1 = function() {
                                        var statearr_49371 = state_49353;
                                        statearr_49371[12] = inst_49292;
                                        statearr_49371[13] = inst_49295;
                                        statearr_49371[14] = inst_49294;
                                        statearr_49371[15] = inst_49293;
                                        statearr_49371[16] = inst_49317;
                                        return statearr_49371;
                                      }();
                                      var statearr_49372_49415 = state_49353__$1;
                                      statearr_49372_49415[2] = null;
                                      statearr_49372_49415[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_49354 === 3) {
                                        var inst_49351 = state_49353[2];
                                        var state_49353__$1 = state_49353;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49353__$1, inst_49351);
                                      } else {
                                        if (state_val_49354 === 12) {
                                          var inst_49326 = state_49353[2];
                                          var state_49353__$1 = state_49353;
                                          var statearr_49373_49416 = state_49353__$1;
                                          statearr_49373_49416[2] = inst_49326;
                                          statearr_49373_49416[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_49354 === 2) {
                                            var state_49353__$1 = state_49353;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_49353__$1, 4, ch);
                                          } else {
                                            if (state_val_49354 === 23) {
                                              var inst_49330 = state_49353[11];
                                              var inst_49334 = state_49353[2];
                                              var inst_49335 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_49330);
                                              var state_49353__$1 = function() {
                                                var statearr_49374 = state_49353;
                                                statearr_49374[17] = inst_49334;
                                                return statearr_49374;
                                              }();
                                              var statearr_49375_49417 = state_49353__$1;
                                              statearr_49375_49417[2] = inst_49335;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49353__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_49354 === 19) {
                                                var state_49353__$1 = state_49353;
                                                var statearr_49376_49418 = state_49353__$1;
                                                statearr_49376_49418[2] = null;
                                                statearr_49376_49418[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_49354 === 11) {
                                                  var inst_49306 = state_49353[10];
                                                  var inst_49292 = state_49353[12];
                                                  var inst_49306__$1 = cljs.core.seq.call(null, inst_49292);
                                                  var state_49353__$1 = function() {
                                                    var statearr_49377 = state_49353;
                                                    statearr_49377[10] = inst_49306__$1;
                                                    return statearr_49377;
                                                  }();
                                                  if (inst_49306__$1) {
                                                    var statearr_49378_49419 = state_49353__$1;
                                                    statearr_49378_49419[1] = 13;
                                                  } else {
                                                    var statearr_49379_49420 = state_49353__$1;
                                                    statearr_49379_49420[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_49354 === 9) {
                                                    var inst_49328 = state_49353[2];
                                                    var state_49353__$1 = state_49353;
                                                    var statearr_49380_49421 = state_49353__$1;
                                                    statearr_49380_49421[2] = inst_49328;
                                                    statearr_49380_49421[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_49354 === 5) {
                                                      var inst_49289 = cljs.core.deref.call(null, mults);
                                                      var inst_49290 = cljs.core.vals.call(null, inst_49289);
                                                      var inst_49291 = cljs.core.seq.call(null, inst_49290);
                                                      var inst_49292 = inst_49291;
                                                      var inst_49293 = null;
                                                      var inst_49294 = 0;
                                                      var inst_49295 = 0;
                                                      var state_49353__$1 = function() {
                                                        var statearr_49381 = state_49353;
                                                        statearr_49381[12] = inst_49292;
                                                        statearr_49381[13] = inst_49295;
                                                        statearr_49381[14] = inst_49294;
                                                        statearr_49381[15] = inst_49293;
                                                        return statearr_49381;
                                                      }();
                                                      var statearr_49382_49422 = state_49353__$1;
                                                      statearr_49382_49422[2] = null;
                                                      statearr_49382_49422[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_49354 === 14) {
                                                        var state_49353__$1 = state_49353;
                                                        var statearr_49386_49423 = state_49353__$1;
                                                        statearr_49386_49423[2] = null;
                                                        statearr_49386_49423[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_49354 === 16) {
                                                          var inst_49306 = state_49353[10];
                                                          var inst_49310 = cljs.core.chunk_first.call(null, inst_49306);
                                                          var inst_49311 = cljs.core.chunk_rest.call(null, inst_49306);
                                                          var inst_49312 = cljs.core.count.call(null, inst_49310);
                                                          var inst_49292 = inst_49311;
                                                          var inst_49293 = inst_49310;
                                                          var inst_49294 = inst_49312;
                                                          var inst_49295 = 0;
                                                          var state_49353__$1 = function() {
                                                            var statearr_49387 = state_49353;
                                                            statearr_49387[12] = inst_49292;
                                                            statearr_49387[13] = inst_49295;
                                                            statearr_49387[14] = inst_49294;
                                                            statearr_49387[15] = inst_49293;
                                                            return statearr_49387;
                                                          }();
                                                          var statearr_49388_49424 = state_49353__$1;
                                                          statearr_49388_49424[2] = null;
                                                          statearr_49388_49424[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_49354 === 10) {
                                                            var inst_49292 = state_49353[12];
                                                            var inst_49295 = state_49353[13];
                                                            var inst_49294 = state_49353[14];
                                                            var inst_49293 = state_49353[15];
                                                            var inst_49300 = cljs.core._nth.call(null, inst_49293, inst_49295);
                                                            var inst_49301 = cljs.core.async.muxch_STAR_.call(null, inst_49300);
                                                            var inst_49302 = cljs.core.async.close_BANG_.call(null, inst_49301);
                                                            var inst_49303 = inst_49295 + 1;
                                                            var tmp49383 = inst_49292;
                                                            var tmp49384 = inst_49294;
                                                            var tmp49385 = inst_49293;
                                                            var inst_49292__$1 = tmp49383;
                                                            var inst_49293__$1 = tmp49385;
                                                            var inst_49294__$1 = tmp49384;
                                                            var inst_49295__$1 = inst_49303;
                                                            var state_49353__$1 = function() {
                                                              var statearr_49389 = state_49353;
                                                              statearr_49389[18] = inst_49302;
                                                              statearr_49389[12] = inst_49292__$1;
                                                              statearr_49389[13] = inst_49295__$1;
                                                              statearr_49389[14] = inst_49294__$1;
                                                              statearr_49389[15] = inst_49293__$1;
                                                              return statearr_49389;
                                                            }();
                                                            var statearr_49390_49425 = state_49353__$1;
                                                            statearr_49390_49425[2] = null;
                                                            statearr_49390_49425[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_49354 === 18) {
                                                              var inst_49321 = state_49353[2];
                                                              var state_49353__$1 = state_49353;
                                                              var statearr_49391_49426 = state_49353__$1;
                                                              statearr_49391_49426[2] = inst_49321;
                                                              statearr_49391_49426[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_49354 === 8) {
                                                                var inst_49295 = state_49353[13];
                                                                var inst_49294 = state_49353[14];
                                                                var inst_49297 = inst_49295 < inst_49294;
                                                                var inst_49298 = inst_49297;
                                                                var state_49353__$1 = state_49353;
                                                                if (cljs.core.truth_(inst_49298)) {
                                                                  var statearr_49392_49427 = state_49353__$1;
                                                                  statearr_49392_49427[1] = 10;
                                                                } else {
                                                                  var statearr_49393_49428 = state_49353__$1;
                                                                  statearr_49393_49428[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___49401, mults, ensure_mult, p);
          return function(switch__5674__auto__, c__5689__auto___49401, mults, ensure_mult, p) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_49397 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_49397[0] = state_machine__5675__auto__;
                statearr_49397[1] = 1;
                return statearr_49397;
              };
              var state_machine__5675__auto____1 = function(state_49353) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_49353);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e49398) {
                      if (e49398 instanceof Object) {
                        var ex__5678__auto__ = e49398;
                        var statearr_49399_49429 = state_49353;
                        statearr_49399_49429[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49353);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e49398;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__49430 = state_49353;
                    state_49353 = G__49430;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_49353) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_49353);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___49401, mults, ensure_mult, p);
        }();
        var state__5691__auto__ = function() {
          var statearr_49400 = f__5690__auto__.call(null);
          statearr_49400[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___49401;
          return statearr_49400;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___49401, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5689__auto___49567 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___49567, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___49567, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_49537) {
              var state_val_49538 = state_49537[1];
              if (state_val_49538 === 7) {
                var state_49537__$1 = state_49537;
                var statearr_49539_49568 = state_49537__$1;
                statearr_49539_49568[2] = null;
                statearr_49539_49568[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_49538 === 1) {
                  var state_49537__$1 = state_49537;
                  var statearr_49540_49569 = state_49537__$1;
                  statearr_49540_49569[2] = null;
                  statearr_49540_49569[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_49538 === 4) {
                    var inst_49501 = state_49537[7];
                    var inst_49503 = inst_49501 < cnt;
                    var state_49537__$1 = state_49537;
                    if (cljs.core.truth_(inst_49503)) {
                      var statearr_49541_49570 = state_49537__$1;
                      statearr_49541_49570[1] = 6;
                    } else {
                      var statearr_49542_49571 = state_49537__$1;
                      statearr_49542_49571[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_49538 === 15) {
                      var inst_49533 = state_49537[2];
                      var state_49537__$1 = state_49537;
                      var statearr_49543_49572 = state_49537__$1;
                      statearr_49543_49572[2] = inst_49533;
                      statearr_49543_49572[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_49538 === 13) {
                        var inst_49526 = cljs.core.async.close_BANG_.call(null, out);
                        var state_49537__$1 = state_49537;
                        var statearr_49544_49573 = state_49537__$1;
                        statearr_49544_49573[2] = inst_49526;
                        statearr_49544_49573[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_49538 === 6) {
                          var state_49537__$1 = state_49537;
                          var statearr_49545_49574 = state_49537__$1;
                          statearr_49545_49574[2] = null;
                          statearr_49545_49574[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_49538 === 3) {
                            var inst_49535 = state_49537[2];
                            var state_49537__$1 = state_49537;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49537__$1, inst_49535);
                          } else {
                            if (state_val_49538 === 12) {
                              var inst_49523 = state_49537[8];
                              var inst_49523__$1 = state_49537[2];
                              var inst_49524 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_49523__$1);
                              var state_49537__$1 = function() {
                                var statearr_49546 = state_49537;
                                statearr_49546[8] = inst_49523__$1;
                                return statearr_49546;
                              }();
                              if (cljs.core.truth_(inst_49524)) {
                                var statearr_49547_49575 = state_49537__$1;
                                statearr_49547_49575[1] = 13;
                              } else {
                                var statearr_49548_49576 = state_49537__$1;
                                statearr_49548_49576[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_49538 === 2) {
                                var inst_49500 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_49501 = 0;
                                var state_49537__$1 = function() {
                                  var statearr_49549 = state_49537;
                                  statearr_49549[7] = inst_49501;
                                  statearr_49549[9] = inst_49500;
                                  return statearr_49549;
                                }();
                                var statearr_49550_49577 = state_49537__$1;
                                statearr_49550_49577[2] = null;
                                statearr_49550_49577[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_49538 === 11) {
                                  var inst_49501 = state_49537[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_49537, 10, Object, null, 9);
                                  var inst_49510 = chs__$1.call(null, inst_49501);
                                  var inst_49511 = done.call(null, inst_49501);
                                  var inst_49512 = cljs.core.async.take_BANG_.call(null, inst_49510, inst_49511);
                                  var state_49537__$1 = state_49537;
                                  var statearr_49551_49578 = state_49537__$1;
                                  statearr_49551_49578[2] = inst_49512;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49537__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_49538 === 9) {
                                    var inst_49501 = state_49537[7];
                                    var inst_49514 = state_49537[2];
                                    var inst_49515 = inst_49501 + 1;
                                    var inst_49501__$1 = inst_49515;
                                    var state_49537__$1 = function() {
                                      var statearr_49552 = state_49537;
                                      statearr_49552[7] = inst_49501__$1;
                                      statearr_49552[10] = inst_49514;
                                      return statearr_49552;
                                    }();
                                    var statearr_49553_49579 = state_49537__$1;
                                    statearr_49553_49579[2] = null;
                                    statearr_49553_49579[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_49538 === 5) {
                                      var inst_49521 = state_49537[2];
                                      var state_49537__$1 = function() {
                                        var statearr_49554 = state_49537;
                                        statearr_49554[11] = inst_49521;
                                        return statearr_49554;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_49537__$1, 12, dchan);
                                    } else {
                                      if (state_val_49538 === 14) {
                                        var inst_49523 = state_49537[8];
                                        var inst_49528 = cljs.core.apply.call(null, f, inst_49523);
                                        var state_49537__$1 = state_49537;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_49537__$1, 16, out, inst_49528);
                                      } else {
                                        if (state_val_49538 === 16) {
                                          var inst_49530 = state_49537[2];
                                          var state_49537__$1 = function() {
                                            var statearr_49555 = state_49537;
                                            statearr_49555[12] = inst_49530;
                                            return statearr_49555;
                                          }();
                                          var statearr_49556_49580 = state_49537__$1;
                                          statearr_49556_49580[2] = null;
                                          statearr_49556_49580[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_49538 === 10) {
                                            var inst_49505 = state_49537[2];
                                            var inst_49506 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_49537__$1 = function() {
                                              var statearr_49557 = state_49537;
                                              statearr_49557[13] = inst_49505;
                                              return statearr_49557;
                                            }();
                                            var statearr_49558_49581 = state_49537__$1;
                                            statearr_49558_49581[2] = inst_49506;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49537__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_49538 === 8) {
                                              var inst_49519 = state_49537[2];
                                              var state_49537__$1 = state_49537;
                                              var statearr_49559_49582 = state_49537__$1;
                                              statearr_49559_49582[2] = inst_49519;
                                              statearr_49559_49582[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___49567, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__5674__auto__, c__5689__auto___49567, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_49563 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_49563[0] = state_machine__5675__auto__;
                statearr_49563[1] = 1;
                return statearr_49563;
              };
              var state_machine__5675__auto____1 = function(state_49537) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_49537);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e49564) {
                      if (e49564 instanceof Object) {
                        var ex__5678__auto__ = e49564;
                        var statearr_49565_49583 = state_49537;
                        statearr_49565_49583[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49537);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e49564;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__49584 = state_49537;
                    state_49537 = G__49584;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_49537) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_49537);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___49567, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__5691__auto__ = function() {
          var statearr_49566 = f__5690__auto__.call(null);
          statearr_49566[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___49567;
          return statearr_49566;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___49567, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5689__auto___49692 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___49692, out) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___49692, out) {
            return function(state_49668) {
              var state_val_49669 = state_49668[1];
              if (state_val_49669 === 7) {
                var inst_49647 = state_49668[7];
                var inst_49648 = state_49668[8];
                var inst_49647__$1 = state_49668[2];
                var inst_49648__$1 = cljs.core.nth.call(null, inst_49647__$1, 0, null);
                var inst_49649 = cljs.core.nth.call(null, inst_49647__$1, 1, null);
                var inst_49650 = inst_49648__$1 == null;
                var state_49668__$1 = function() {
                  var statearr_49670 = state_49668;
                  statearr_49670[7] = inst_49647__$1;
                  statearr_49670[9] = inst_49649;
                  statearr_49670[8] = inst_49648__$1;
                  return statearr_49670;
                }();
                if (cljs.core.truth_(inst_49650)) {
                  var statearr_49671_49693 = state_49668__$1;
                  statearr_49671_49693[1] = 8;
                } else {
                  var statearr_49672_49694 = state_49668__$1;
                  statearr_49672_49694[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_49669 === 1) {
                  var inst_49639 = cljs.core.vec.call(null, chs);
                  var inst_49640 = inst_49639;
                  var state_49668__$1 = function() {
                    var statearr_49673 = state_49668;
                    statearr_49673[10] = inst_49640;
                    return statearr_49673;
                  }();
                  var statearr_49674_49695 = state_49668__$1;
                  statearr_49674_49695[2] = null;
                  statearr_49674_49695[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_49669 === 4) {
                    var inst_49640 = state_49668[10];
                    var state_49668__$1 = state_49668;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_49668__$1, 7, inst_49640);
                  } else {
                    if (state_val_49669 === 6) {
                      var inst_49664 = state_49668[2];
                      var state_49668__$1 = state_49668;
                      var statearr_49675_49696 = state_49668__$1;
                      statearr_49675_49696[2] = inst_49664;
                      statearr_49675_49696[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_49669 === 3) {
                        var inst_49666 = state_49668[2];
                        var state_49668__$1 = state_49668;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49668__$1, inst_49666);
                      } else {
                        if (state_val_49669 === 2) {
                          var inst_49640 = state_49668[10];
                          var inst_49642 = cljs.core.count.call(null, inst_49640);
                          var inst_49643 = inst_49642 > 0;
                          var state_49668__$1 = state_49668;
                          if (cljs.core.truth_(inst_49643)) {
                            var statearr_49677_49697 = state_49668__$1;
                            statearr_49677_49697[1] = 4;
                          } else {
                            var statearr_49678_49698 = state_49668__$1;
                            statearr_49678_49698[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_49669 === 11) {
                            var inst_49640 = state_49668[10];
                            var inst_49657 = state_49668[2];
                            var tmp49676 = inst_49640;
                            var inst_49640__$1 = tmp49676;
                            var state_49668__$1 = function() {
                              var statearr_49679 = state_49668;
                              statearr_49679[11] = inst_49657;
                              statearr_49679[10] = inst_49640__$1;
                              return statearr_49679;
                            }();
                            var statearr_49680_49699 = state_49668__$1;
                            statearr_49680_49699[2] = null;
                            statearr_49680_49699[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_49669 === 9) {
                              var inst_49648 = state_49668[8];
                              var state_49668__$1 = state_49668;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_49668__$1, 11, out, inst_49648);
                            } else {
                              if (state_val_49669 === 5) {
                                var inst_49662 = cljs.core.async.close_BANG_.call(null, out);
                                var state_49668__$1 = state_49668;
                                var statearr_49681_49700 = state_49668__$1;
                                statearr_49681_49700[2] = inst_49662;
                                statearr_49681_49700[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_49669 === 10) {
                                  var inst_49660 = state_49668[2];
                                  var state_49668__$1 = state_49668;
                                  var statearr_49682_49701 = state_49668__$1;
                                  statearr_49682_49701[2] = inst_49660;
                                  statearr_49682_49701[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_49669 === 8) {
                                    var inst_49647 = state_49668[7];
                                    var inst_49640 = state_49668[10];
                                    var inst_49649 = state_49668[9];
                                    var inst_49648 = state_49668[8];
                                    var inst_49652 = function() {
                                      var c = inst_49649;
                                      var v = inst_49648;
                                      var vec__49645 = inst_49647;
                                      var cs = inst_49640;
                                      return function(c, v, vec__49645, cs, inst_49647, inst_49640, inst_49649, inst_49648, state_val_49669, c__5689__auto___49692, out) {
                                        return function(p1__49585_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__49585_SHARP_);
                                        };
                                      }(c, v, vec__49645, cs, inst_49647, inst_49640, inst_49649, inst_49648, state_val_49669, c__5689__auto___49692, out);
                                    }();
                                    var inst_49653 = cljs.core.filterv.call(null, inst_49652, inst_49640);
                                    var inst_49640__$1 = inst_49653;
                                    var state_49668__$1 = function() {
                                      var statearr_49683 = state_49668;
                                      statearr_49683[10] = inst_49640__$1;
                                      return statearr_49683;
                                    }();
                                    var statearr_49684_49702 = state_49668__$1;
                                    statearr_49684_49702[2] = null;
                                    statearr_49684_49702[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___49692, out);
          return function(switch__5674__auto__, c__5689__auto___49692, out) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_49688 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_49688[0] = state_machine__5675__auto__;
                statearr_49688[1] = 1;
                return statearr_49688;
              };
              var state_machine__5675__auto____1 = function(state_49668) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_49668);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e49689) {
                      if (e49689 instanceof Object) {
                        var ex__5678__auto__ = e49689;
                        var statearr_49690_49703 = state_49668;
                        statearr_49690_49703[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49668);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e49689;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__49704 = state_49668;
                    state_49668 = G__49704;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_49668) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_49668);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___49692, out);
        }();
        var state__5691__auto__ = function() {
          var statearr_49691 = f__5690__auto__.call(null);
          statearr_49691[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___49692;
          return statearr_49691;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___49692, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5689__auto___49797 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___49797, out) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___49797, out) {
            return function(state_49774) {
              var state_val_49775 = state_49774[1];
              if (state_val_49775 === 7) {
                var inst_49756 = state_49774[7];
                var inst_49756__$1 = state_49774[2];
                var inst_49757 = inst_49756__$1 == null;
                var inst_49758 = cljs.core.not.call(null, inst_49757);
                var state_49774__$1 = function() {
                  var statearr_49776 = state_49774;
                  statearr_49776[7] = inst_49756__$1;
                  return statearr_49776;
                }();
                if (inst_49758) {
                  var statearr_49777_49798 = state_49774__$1;
                  statearr_49777_49798[1] = 8;
                } else {
                  var statearr_49778_49799 = state_49774__$1;
                  statearr_49778_49799[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_49775 === 1) {
                  var inst_49751 = 0;
                  var state_49774__$1 = function() {
                    var statearr_49779 = state_49774;
                    statearr_49779[8] = inst_49751;
                    return statearr_49779;
                  }();
                  var statearr_49780_49800 = state_49774__$1;
                  statearr_49780_49800[2] = null;
                  statearr_49780_49800[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_49775 === 4) {
                    var state_49774__$1 = state_49774;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_49774__$1, 7, ch);
                  } else {
                    if (state_val_49775 === 6) {
                      var inst_49769 = state_49774[2];
                      var state_49774__$1 = state_49774;
                      var statearr_49781_49801 = state_49774__$1;
                      statearr_49781_49801[2] = inst_49769;
                      statearr_49781_49801[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_49775 === 3) {
                        var inst_49771 = state_49774[2];
                        var inst_49772 = cljs.core.async.close_BANG_.call(null, out);
                        var state_49774__$1 = function() {
                          var statearr_49782 = state_49774;
                          statearr_49782[9] = inst_49771;
                          return statearr_49782;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49774__$1, inst_49772);
                      } else {
                        if (state_val_49775 === 2) {
                          var inst_49751 = state_49774[8];
                          var inst_49753 = inst_49751 < n;
                          var state_49774__$1 = state_49774;
                          if (cljs.core.truth_(inst_49753)) {
                            var statearr_49783_49802 = state_49774__$1;
                            statearr_49783_49802[1] = 4;
                          } else {
                            var statearr_49784_49803 = state_49774__$1;
                            statearr_49784_49803[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_49775 === 11) {
                            var inst_49751 = state_49774[8];
                            var inst_49761 = state_49774[2];
                            var inst_49762 = inst_49751 + 1;
                            var inst_49751__$1 = inst_49762;
                            var state_49774__$1 = function() {
                              var statearr_49785 = state_49774;
                              statearr_49785[8] = inst_49751__$1;
                              statearr_49785[10] = inst_49761;
                              return statearr_49785;
                            }();
                            var statearr_49786_49804 = state_49774__$1;
                            statearr_49786_49804[2] = null;
                            statearr_49786_49804[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_49775 === 9) {
                              var state_49774__$1 = state_49774;
                              var statearr_49787_49805 = state_49774__$1;
                              statearr_49787_49805[2] = null;
                              statearr_49787_49805[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_49775 === 5) {
                                var state_49774__$1 = state_49774;
                                var statearr_49788_49806 = state_49774__$1;
                                statearr_49788_49806[2] = null;
                                statearr_49788_49806[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_49775 === 10) {
                                  var inst_49766 = state_49774[2];
                                  var state_49774__$1 = state_49774;
                                  var statearr_49789_49807 = state_49774__$1;
                                  statearr_49789_49807[2] = inst_49766;
                                  statearr_49789_49807[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_49775 === 8) {
                                    var inst_49756 = state_49774[7];
                                    var state_49774__$1 = state_49774;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_49774__$1, 11, out, inst_49756);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___49797, out);
          return function(switch__5674__auto__, c__5689__auto___49797, out) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_49793 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_49793[0] = state_machine__5675__auto__;
                statearr_49793[1] = 1;
                return statearr_49793;
              };
              var state_machine__5675__auto____1 = function(state_49774) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_49774);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e49794) {
                      if (e49794 instanceof Object) {
                        var ex__5678__auto__ = e49794;
                        var statearr_49795_49808 = state_49774;
                        statearr_49795_49808[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49774);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e49794;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__49809 = state_49774;
                    state_49774 = G__49809;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_49774) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_49774);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___49797, out);
        }();
        var state__5691__auto__ = function() {
          var statearr_49796 = f__5690__auto__.call(null);
          statearr_49796[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___49797;
          return statearr_49796;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___49797, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5689__auto___49906 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___49906, out) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___49906, out) {
            return function(state_49881) {
              var state_val_49882 = state_49881[1];
              if (state_val_49882 === 7) {
                var inst_49876 = state_49881[2];
                var state_49881__$1 = state_49881;
                var statearr_49883_49907 = state_49881__$1;
                statearr_49883_49907[2] = inst_49876;
                statearr_49883_49907[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_49882 === 1) {
                  var inst_49858 = null;
                  var state_49881__$1 = function() {
                    var statearr_49884 = state_49881;
                    statearr_49884[7] = inst_49858;
                    return statearr_49884;
                  }();
                  var statearr_49885_49908 = state_49881__$1;
                  statearr_49885_49908[2] = null;
                  statearr_49885_49908[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_49882 === 4) {
                    var inst_49861 = state_49881[8];
                    var inst_49861__$1 = state_49881[2];
                    var inst_49862 = inst_49861__$1 == null;
                    var inst_49863 = cljs.core.not.call(null, inst_49862);
                    var state_49881__$1 = function() {
                      var statearr_49886 = state_49881;
                      statearr_49886[8] = inst_49861__$1;
                      return statearr_49886;
                    }();
                    if (inst_49863) {
                      var statearr_49887_49909 = state_49881__$1;
                      statearr_49887_49909[1] = 5;
                    } else {
                      var statearr_49888_49910 = state_49881__$1;
                      statearr_49888_49910[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_49882 === 6) {
                      var state_49881__$1 = state_49881;
                      var statearr_49889_49911 = state_49881__$1;
                      statearr_49889_49911[2] = null;
                      statearr_49889_49911[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_49882 === 3) {
                        var inst_49878 = state_49881[2];
                        var inst_49879 = cljs.core.async.close_BANG_.call(null, out);
                        var state_49881__$1 = function() {
                          var statearr_49890 = state_49881;
                          statearr_49890[9] = inst_49878;
                          return statearr_49890;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_49881__$1, inst_49879);
                      } else {
                        if (state_val_49882 === 2) {
                          var state_49881__$1 = state_49881;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_49881__$1, 4, ch);
                        } else {
                          if (state_val_49882 === 11) {
                            var inst_49861 = state_49881[8];
                            var inst_49870 = state_49881[2];
                            var inst_49858 = inst_49861;
                            var state_49881__$1 = function() {
                              var statearr_49891 = state_49881;
                              statearr_49891[10] = inst_49870;
                              statearr_49891[7] = inst_49858;
                              return statearr_49891;
                            }();
                            var statearr_49892_49912 = state_49881__$1;
                            statearr_49892_49912[2] = null;
                            statearr_49892_49912[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_49882 === 9) {
                              var inst_49861 = state_49881[8];
                              var state_49881__$1 = state_49881;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_49881__$1, 11, out, inst_49861);
                            } else {
                              if (state_val_49882 === 5) {
                                var inst_49858 = state_49881[7];
                                var inst_49861 = state_49881[8];
                                var inst_49865 = cljs.core._EQ_.call(null, inst_49861, inst_49858);
                                var state_49881__$1 = state_49881;
                                if (inst_49865) {
                                  var statearr_49894_49913 = state_49881__$1;
                                  statearr_49894_49913[1] = 8;
                                } else {
                                  var statearr_49895_49914 = state_49881__$1;
                                  statearr_49895_49914[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_49882 === 10) {
                                  var inst_49873 = state_49881[2];
                                  var state_49881__$1 = state_49881;
                                  var statearr_49896_49915 = state_49881__$1;
                                  statearr_49896_49915[2] = inst_49873;
                                  statearr_49896_49915[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_49882 === 8) {
                                    var inst_49858 = state_49881[7];
                                    var tmp49893 = inst_49858;
                                    var inst_49858__$1 = tmp49893;
                                    var state_49881__$1 = function() {
                                      var statearr_49897 = state_49881;
                                      statearr_49897[7] = inst_49858__$1;
                                      return statearr_49897;
                                    }();
                                    var statearr_49898_49916 = state_49881__$1;
                                    statearr_49898_49916[2] = null;
                                    statearr_49898_49916[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___49906, out);
          return function(switch__5674__auto__, c__5689__auto___49906, out) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_49902 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_49902[0] = state_machine__5675__auto__;
                statearr_49902[1] = 1;
                return statearr_49902;
              };
              var state_machine__5675__auto____1 = function(state_49881) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_49881);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e49903) {
                      if (e49903 instanceof Object) {
                        var ex__5678__auto__ = e49903;
                        var statearr_49904_49917 = state_49881;
                        statearr_49904_49917[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_49881);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e49903;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__49918 = state_49881;
                    state_49881 = G__49918;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_49881) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_49881);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___49906, out);
        }();
        var state__5691__auto__ = function() {
          var statearr_49905 = f__5690__auto__.call(null);
          statearr_49905[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___49906;
          return statearr_49905;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___49906, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5689__auto___50053 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___50053, out) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___50053, out) {
            return function(state_50023) {
              var state_val_50024 = state_50023[1];
              if (state_val_50024 === 7) {
                var inst_50019 = state_50023[2];
                var state_50023__$1 = state_50023;
                var statearr_50025_50054 = state_50023__$1;
                statearr_50025_50054[2] = inst_50019;
                statearr_50025_50054[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_50024 === 1) {
                  var inst_49986 = new Array(n);
                  var inst_49987 = inst_49986;
                  var inst_49988 = 0;
                  var state_50023__$1 = function() {
                    var statearr_50026 = state_50023;
                    statearr_50026[7] = inst_49987;
                    statearr_50026[8] = inst_49988;
                    return statearr_50026;
                  }();
                  var statearr_50027_50055 = state_50023__$1;
                  statearr_50027_50055[2] = null;
                  statearr_50027_50055[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_50024 === 4) {
                    var inst_49991 = state_50023[9];
                    var inst_49991__$1 = state_50023[2];
                    var inst_49992 = inst_49991__$1 == null;
                    var inst_49993 = cljs.core.not.call(null, inst_49992);
                    var state_50023__$1 = function() {
                      var statearr_50028 = state_50023;
                      statearr_50028[9] = inst_49991__$1;
                      return statearr_50028;
                    }();
                    if (inst_49993) {
                      var statearr_50029_50056 = state_50023__$1;
                      statearr_50029_50056[1] = 5;
                    } else {
                      var statearr_50030_50057 = state_50023__$1;
                      statearr_50030_50057[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_50024 === 15) {
                      var inst_50013 = state_50023[2];
                      var state_50023__$1 = state_50023;
                      var statearr_50031_50058 = state_50023__$1;
                      statearr_50031_50058[2] = inst_50013;
                      statearr_50031_50058[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_50024 === 13) {
                        var state_50023__$1 = state_50023;
                        var statearr_50032_50059 = state_50023__$1;
                        statearr_50032_50059[2] = null;
                        statearr_50032_50059[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_50024 === 6) {
                          var inst_49988 = state_50023[8];
                          var inst_50009 = inst_49988 > 0;
                          var state_50023__$1 = state_50023;
                          if (cljs.core.truth_(inst_50009)) {
                            var statearr_50033_50060 = state_50023__$1;
                            statearr_50033_50060[1] = 12;
                          } else {
                            var statearr_50034_50061 = state_50023__$1;
                            statearr_50034_50061[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_50024 === 3) {
                            var inst_50021 = state_50023[2];
                            var state_50023__$1 = state_50023;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_50023__$1, inst_50021);
                          } else {
                            if (state_val_50024 === 12) {
                              var inst_49987 = state_50023[7];
                              var inst_50011 = cljs.core.vec.call(null, inst_49987);
                              var state_50023__$1 = state_50023;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_50023__$1, 15, out, inst_50011);
                            } else {
                              if (state_val_50024 === 2) {
                                var state_50023__$1 = state_50023;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_50023__$1, 4, ch);
                              } else {
                                if (state_val_50024 === 11) {
                                  var inst_50003 = state_50023[2];
                                  var inst_50004 = new Array(n);
                                  var inst_49987 = inst_50004;
                                  var inst_49988 = 0;
                                  var state_50023__$1 = function() {
                                    var statearr_50035 = state_50023;
                                    statearr_50035[7] = inst_49987;
                                    statearr_50035[10] = inst_50003;
                                    statearr_50035[8] = inst_49988;
                                    return statearr_50035;
                                  }();
                                  var statearr_50036_50062 = state_50023__$1;
                                  statearr_50036_50062[2] = null;
                                  statearr_50036_50062[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_50024 === 9) {
                                    var inst_49987 = state_50023[7];
                                    var inst_50001 = cljs.core.vec.call(null, inst_49987);
                                    var state_50023__$1 = state_50023;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_50023__$1, 11, out, inst_50001);
                                  } else {
                                    if (state_val_50024 === 5) {
                                      var inst_49991 = state_50023[9];
                                      var inst_49987 = state_50023[7];
                                      var inst_49996 = state_50023[11];
                                      var inst_49988 = state_50023[8];
                                      var inst_49995 = inst_49987[inst_49988] = inst_49991;
                                      var inst_49996__$1 = inst_49988 + 1;
                                      var inst_49997 = inst_49996__$1 < n;
                                      var state_50023__$1 = function() {
                                        var statearr_50037 = state_50023;
                                        statearr_50037[11] = inst_49996__$1;
                                        statearr_50037[12] = inst_49995;
                                        return statearr_50037;
                                      }();
                                      if (cljs.core.truth_(inst_49997)) {
                                        var statearr_50038_50063 = state_50023__$1;
                                        statearr_50038_50063[1] = 8;
                                      } else {
                                        var statearr_50039_50064 = state_50023__$1;
                                        statearr_50039_50064[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_50024 === 14) {
                                        var inst_50016 = state_50023[2];
                                        var inst_50017 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_50023__$1 = function() {
                                          var statearr_50041 = state_50023;
                                          statearr_50041[13] = inst_50016;
                                          return statearr_50041;
                                        }();
                                        var statearr_50042_50065 = state_50023__$1;
                                        statearr_50042_50065[2] = inst_50017;
                                        statearr_50042_50065[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_50024 === 10) {
                                          var inst_50007 = state_50023[2];
                                          var state_50023__$1 = state_50023;
                                          var statearr_50043_50066 = state_50023__$1;
                                          statearr_50043_50066[2] = inst_50007;
                                          statearr_50043_50066[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_50024 === 8) {
                                            var inst_49987 = state_50023[7];
                                            var inst_49996 = state_50023[11];
                                            var tmp50040 = inst_49987;
                                            var inst_49987__$1 = tmp50040;
                                            var inst_49988 = inst_49996;
                                            var state_50023__$1 = function() {
                                              var statearr_50044 = state_50023;
                                              statearr_50044[7] = inst_49987__$1;
                                              statearr_50044[8] = inst_49988;
                                              return statearr_50044;
                                            }();
                                            var statearr_50045_50067 = state_50023__$1;
                                            statearr_50045_50067[2] = null;
                                            statearr_50045_50067[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___50053, out);
          return function(switch__5674__auto__, c__5689__auto___50053, out) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_50049 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_50049[0] = state_machine__5675__auto__;
                statearr_50049[1] = 1;
                return statearr_50049;
              };
              var state_machine__5675__auto____1 = function(state_50023) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_50023);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e50050) {
                      if (e50050 instanceof Object) {
                        var ex__5678__auto__ = e50050;
                        var statearr_50051_50068 = state_50023;
                        statearr_50051_50068[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_50023);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e50050;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__50069 = state_50023;
                    state_50023 = G__50069;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_50023) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_50023);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___50053, out);
        }();
        var state__5691__auto__ = function() {
          var statearr_50052 = f__5690__auto__.call(null);
          statearr_50052[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___50053;
          return statearr_50052;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___50053, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5689__auto___50212 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___50212, out) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___50212, out) {
            return function(state_50182) {
              var state_val_50183 = state_50182[1];
              if (state_val_50183 === 7) {
                var inst_50178 = state_50182[2];
                var state_50182__$1 = state_50182;
                var statearr_50184_50213 = state_50182__$1;
                statearr_50184_50213[2] = inst_50178;
                statearr_50184_50213[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_50183 === 1) {
                  var inst_50141 = [];
                  var inst_50142 = inst_50141;
                  var inst_50143 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
                  var state_50182__$1 = function() {
                    var statearr_50185 = state_50182;
                    statearr_50185[7] = inst_50142;
                    statearr_50185[8] = inst_50143;
                    return statearr_50185;
                  }();
                  var statearr_50186_50214 = state_50182__$1;
                  statearr_50186_50214[2] = null;
                  statearr_50186_50214[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_50183 === 4) {
                    var inst_50146 = state_50182[9];
                    var inst_50146__$1 = state_50182[2];
                    var inst_50147 = inst_50146__$1 == null;
                    var inst_50148 = cljs.core.not.call(null, inst_50147);
                    var state_50182__$1 = function() {
                      var statearr_50187 = state_50182;
                      statearr_50187[9] = inst_50146__$1;
                      return statearr_50187;
                    }();
                    if (inst_50148) {
                      var statearr_50188_50215 = state_50182__$1;
                      statearr_50188_50215[1] = 5;
                    } else {
                      var statearr_50189_50216 = state_50182__$1;
                      statearr_50189_50216[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_50183 === 15) {
                      var inst_50172 = state_50182[2];
                      var state_50182__$1 = state_50182;
                      var statearr_50190_50217 = state_50182__$1;
                      statearr_50190_50217[2] = inst_50172;
                      statearr_50190_50217[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_50183 === 13) {
                        var state_50182__$1 = state_50182;
                        var statearr_50191_50218 = state_50182__$1;
                        statearr_50191_50218[2] = null;
                        statearr_50191_50218[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_50183 === 6) {
                          var inst_50142 = state_50182[7];
                          var inst_50167 = inst_50142.length;
                          var inst_50168 = inst_50167 > 0;
                          var state_50182__$1 = state_50182;
                          if (cljs.core.truth_(inst_50168)) {
                            var statearr_50192_50219 = state_50182__$1;
                            statearr_50192_50219[1] = 12;
                          } else {
                            var statearr_50193_50220 = state_50182__$1;
                            statearr_50193_50220[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_50183 === 3) {
                            var inst_50180 = state_50182[2];
                            var state_50182__$1 = state_50182;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_50182__$1, inst_50180);
                          } else {
                            if (state_val_50183 === 12) {
                              var inst_50142 = state_50182[7];
                              var inst_50170 = cljs.core.vec.call(null, inst_50142);
                              var state_50182__$1 = state_50182;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_50182__$1, 15, out, inst_50170);
                            } else {
                              if (state_val_50183 === 2) {
                                var state_50182__$1 = state_50182;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_50182__$1, 4, ch);
                              } else {
                                if (state_val_50183 === 11) {
                                  var inst_50146 = state_50182[9];
                                  var inst_50150 = state_50182[10];
                                  var inst_50160 = state_50182[2];
                                  var inst_50161 = [];
                                  var inst_50162 = inst_50161.push(inst_50146);
                                  var inst_50142 = inst_50161;
                                  var inst_50143 = inst_50150;
                                  var state_50182__$1 = function() {
                                    var statearr_50194 = state_50182;
                                    statearr_50194[7] = inst_50142;
                                    statearr_50194[8] = inst_50143;
                                    statearr_50194[11] = inst_50160;
                                    statearr_50194[12] = inst_50162;
                                    return statearr_50194;
                                  }();
                                  var statearr_50195_50221 = state_50182__$1;
                                  statearr_50195_50221[2] = null;
                                  statearr_50195_50221[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_50183 === 9) {
                                    var inst_50142 = state_50182[7];
                                    var inst_50158 = cljs.core.vec.call(null, inst_50142);
                                    var state_50182__$1 = state_50182;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_50182__$1, 11, out, inst_50158);
                                  } else {
                                    if (state_val_50183 === 5) {
                                      var inst_50146 = state_50182[9];
                                      var inst_50143 = state_50182[8];
                                      var inst_50150 = state_50182[10];
                                      var inst_50150__$1 = f.call(null, inst_50146);
                                      var inst_50151 = cljs.core._EQ_.call(null, inst_50150__$1, inst_50143);
                                      var inst_50152 = cljs.core.keyword_identical_QMARK_.call(null, inst_50143, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                                      var inst_50153 = inst_50151 || inst_50152;
                                      var state_50182__$1 = function() {
                                        var statearr_50196 = state_50182;
                                        statearr_50196[10] = inst_50150__$1;
                                        return statearr_50196;
                                      }();
                                      if (cljs.core.truth_(inst_50153)) {
                                        var statearr_50197_50222 = state_50182__$1;
                                        statearr_50197_50222[1] = 8;
                                      } else {
                                        var statearr_50198_50223 = state_50182__$1;
                                        statearr_50198_50223[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_50183 === 14) {
                                        var inst_50175 = state_50182[2];
                                        var inst_50176 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_50182__$1 = function() {
                                          var statearr_50200 = state_50182;
                                          statearr_50200[13] = inst_50175;
                                          return statearr_50200;
                                        }();
                                        var statearr_50201_50224 = state_50182__$1;
                                        statearr_50201_50224[2] = inst_50176;
                                        statearr_50201_50224[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_50183 === 10) {
                                          var inst_50165 = state_50182[2];
                                          var state_50182__$1 = state_50182;
                                          var statearr_50202_50225 = state_50182__$1;
                                          statearr_50202_50225[2] = inst_50165;
                                          statearr_50202_50225[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_50183 === 8) {
                                            var inst_50146 = state_50182[9];
                                            var inst_50142 = state_50182[7];
                                            var inst_50150 = state_50182[10];
                                            var inst_50155 = inst_50142.push(inst_50146);
                                            var tmp50199 = inst_50142;
                                            var inst_50142__$1 = tmp50199;
                                            var inst_50143 = inst_50150;
                                            var state_50182__$1 = function() {
                                              var statearr_50203 = state_50182;
                                              statearr_50203[14] = inst_50155;
                                              statearr_50203[7] = inst_50142__$1;
                                              statearr_50203[8] = inst_50143;
                                              return statearr_50203;
                                            }();
                                            var statearr_50204_50226 = state_50182__$1;
                                            statearr_50204_50226[2] = null;
                                            statearr_50204_50226[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___50212, out);
          return function(switch__5674__auto__, c__5689__auto___50212, out) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_50208 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_50208[0] = state_machine__5675__auto__;
                statearr_50208[1] = 1;
                return statearr_50208;
              };
              var state_machine__5675__auto____1 = function(state_50182) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_50182);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e50209) {
                      if (e50209 instanceof Object) {
                        var ex__5678__auto__ = e50209;
                        var statearr_50210_50227 = state_50182;
                        statearr_50210_50227[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_50182);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e50209;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__50228 = state_50182;
                    state_50182 = G__50228;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_50182) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_50182);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___50212, out);
        }();
        var state__5691__auto__ = function() {
          var statearr_50211 = f__5690__auto__.call(null);
          statearr_50211[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___50212;
          return statearr_50211;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___50212, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  } else {
    if (goog.isArray(type)) {
      for (var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
      }
      return null;
    } else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if (!(type in map)) {
        map[type] = {count_:0, remaining_:0};
      }
      map = map[type];
      if (!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++;
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if (!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++;
      } else {
        listenerArray = map[srcUid];
        for (var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if (listenerObj.removed) {
              break;
            }
            return listenerArray[i].key;
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if (!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = [];
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if (src.addEventListener) {
        if (src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture);
        }
      } else {
        src.attachEvent(goog.events.getOnString_(type), proxy);
      }
      return key;
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (!goog.events.listeners_[key]) {
    return false;
  }
  var listener = goog.events.listeners_[key];
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if (!noObj) {
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if ((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for (var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if ((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || [];
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if (!goog.events.listeners_[key]) {
    return true;
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray(object, sb);
        break;
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if (opt_scheme) {
    out.push(opt_scheme, ":");
  }
  if (opt_domain) {
    out.push("//");
    if (opt_userInfo) {
      out.push(opt_userInfo, "@");
    }
    out.push(opt_domain);
    if (opt_port) {
      out.push(":", opt_port);
    }
  }
  if (opt_path) {
    out.push(opt_path);
  }
  if (opt_queryData) {
    out.push("?", opt_queryData);
  }
  if (opt_fragment) {
    out.push("#", opt_fragment);
  }
  return out.join("");
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  if (method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__50334 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__50334;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__50338 = cljs.core._EQ_;
    var expr__50339 = limit;
    if (cljs.core.truth_(pred__50338.call(null, 1, expr__50339))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__50338.call(null, 2, expr__50339))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__50341 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__50342 = limit__$1 - 1;
            var G__50343 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__50341;
            limit__$1 = G__50342;
            parts = G__50343;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__50344 = index - 1;
        index = G__50344;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___50345 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___50345)) {
        var replacement_50346 = temp__4124__auto___50345;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_50346));
      } else {
        buffer.append(ch);
      }
      var G__50347 = index + 1;
      index = G__50347;
      continue;
    }
    break;
  }
};
goog.provide("clustermap.api");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIo");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.api.GET = function() {
  var GET__delegate = function(url, p__43385) {
    var map__43387 = p__43385;
    var map__43387__$1 = cljs.core.seq_QMARK_.call(null, map__43387) ? cljs.core.apply.call(null, cljs.core.hash_map, map__43387) : map__43387;
    var raw = cljs.core.get.call(null, map__43387__$1, new cljs.core.Keyword(null, "raw", "raw", 1014016922));
    var comm = cljs.core.async.chan.call(null, 1);
    goog.net.XhrIo.send(url, function(comm, map__43387, map__43387__$1, raw) {
      return function(event) {
        cljs.core.async.put_BANG_.call(null, comm, function(comm, map__43387, map__43387__$1, raw) {
          return function(d) {
            if (cljs.core.truth_(raw)) {
              return d;
            } else {
              return cljs.core.js__GT_clj.call(null, d, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
            }
          };
        }(comm, map__43387, map__43387__$1, raw).call(null, JSON.parse(event.target.getResponseText())["data"]));
        return cljs.core.async.close_BANG_.call(null, comm);
      };
    }(comm, map__43387, map__43387__$1, raw));
    return comm;
  };
  var GET = function(url, var_args) {
    var p__43385 = null;
    if (arguments.length > 1) {
      p__43385 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return GET__delegate.call(this, url, p__43385);
  };
  GET.cljs$lang$maxFixedArity = 1;
  GET.cljs$lang$applyTo = function(arglist__43388) {
    var url = cljs.core.first(arglist__43388);
    var p__43385 = cljs.core.rest(arglist__43388);
    return GET__delegate(url, p__43385);
  };
  GET.cljs$core$IFn$_invoke$arity$variadic = GET__delegate;
  return GET;
}();
clustermap.api.ordered_api_results = function ordered_api_results(ocomm, handler) {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_43521) {
            var state_val_43522 = state_43521[1];
            if (state_val_43522 === 7) {
              var inst_43479 = state_43521[7];
              var inst_43478 = state_43521[2];
              var inst_43479__$1 = cljs.core.nth.call(null, inst_43478, 0, null);
              var inst_43480 = cljs.core.nth.call(null, inst_43478, 1, null);
              var inst_43481 = cljs.core.sequential_QMARK_.call(null, inst_43479__$1);
              var state_43521__$1 = function() {
                var statearr_43523 = state_43521;
                statearr_43523[7] = inst_43479__$1;
                statearr_43523[8] = inst_43480;
                return statearr_43523;
              }();
              if (inst_43481) {
                var statearr_43524_43559 = state_43521__$1;
                statearr_43524_43559[1] = 8;
              } else {
                var statearr_43525_43560 = state_43521__$1;
                statearr_43525_43560[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_43522 === 20) {
                var inst_43479 = state_43521[7];
                var state_43521__$1 = state_43521;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43521__$1, 23, inst_43479);
              } else {
                if (state_val_43522 === 1) {
                  var state_43521__$1 = state_43521;
                  var statearr_43526_43561 = state_43521__$1;
                  statearr_43526_43561[2] = null;
                  statearr_43526_43561[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_43522 === 4) {
                    var state_43521__$1 = state_43521;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43521__$1, 7, ocomm);
                  } else {
                    if (state_val_43522 === 15) {
                      var inst_43501 = state_43521[2];
                      var state_43521__$1 = state_43521;
                      var statearr_43527_43562 = state_43521__$1;
                      statearr_43527_43562[2] = inst_43501;
                      statearr_43527_43562[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_43522 === 21) {
                        var state_43521__$1 = state_43521;
                        var statearr_43528_43563 = state_43521__$1;
                        statearr_43528_43563[2] = null;
                        statearr_43528_43563[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_43522 === 13) {
                          var inst_43484 = state_43521[9];
                          var state_43521__$1 = state_43521;
                          var statearr_43529_43564 = state_43521__$1;
                          statearr_43529_43564[2] = inst_43484;
                          statearr_43529_43564[1] = 15;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_43522 === 22) {
                            var inst_43510 = state_43521[2];
                            var state_43521__$1 = state_43521;
                            var statearr_43530_43565 = state_43521__$1;
                            statearr_43530_43565[2] = inst_43510;
                            statearr_43530_43565[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_43522 === 6) {
                              var inst_43517 = state_43521[2];
                              var state_43521__$1 = state_43521;
                              var statearr_43531_43566 = state_43521__$1;
                              statearr_43531_43566[2] = inst_43517;
                              statearr_43531_43566[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_43522 === 17) {
                                var state_43521__$1 = state_43521;
                                var statearr_43532_43567 = state_43521__$1;
                                statearr_43532_43567[2] = null;
                                statearr_43532_43567[1] = 18;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_43522 === 3) {
                                  var inst_43519 = state_43521[2];
                                  var state_43521__$1 = state_43521;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43521__$1, inst_43519);
                                } else {
                                  if (state_val_43522 === 12) {
                                    var inst_43503 = state_43521[2];
                                    var state_43521__$1 = state_43521;
                                    var statearr_43533_43568 = state_43521__$1;
                                    statearr_43533_43568[2] = inst_43503;
                                    statearr_43533_43568[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_43522 === 2) {
                                      var state_43521__$1 = state_43521;
                                      if (true) {
                                        var statearr_43534_43569 = state_43521__$1;
                                        statearr_43534_43569[1] = 4;
                                      } else {
                                        var statearr_43535_43570 = state_43521__$1;
                                        statearr_43535_43570[1] = 5;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_43522 === 23) {
                                        var inst_43507 = state_43521[2];
                                        var state_43521__$1 = state_43521;
                                        var statearr_43536_43571 = state_43521__$1;
                                        statearr_43536_43571[2] = inst_43507;
                                        statearr_43536_43571[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_43522 === 19) {
                                          var inst_43494 = state_43521[2];
                                          var state_43521__$1 = state_43521;
                                          var statearr_43537_43572 = state_43521__$1;
                                          statearr_43537_43572[2] = inst_43494;
                                          statearr_43537_43572[1] = 18;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_43522 === 11) {
                                            var inst_43483 = state_43521[10];
                                            var inst_43486 = cljs.core.empty_QMARK_.call(null, inst_43483);
                                            var state_43521__$1 = state_43521;
                                            if (inst_43486) {
                                              var statearr_43538_43573 = state_43521__$1;
                                              statearr_43538_43573[1] = 13;
                                            } else {
                                              var statearr_43539_43574 = state_43521__$1;
                                              statearr_43539_43574[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_43522 === 9) {
                                              var inst_43479 = state_43521[7];
                                              var state_43521__$1 = state_43521;
                                              if (cljs.core.truth_(inst_43479)) {
                                                var statearr_43540_43575 = state_43521__$1;
                                                statearr_43540_43575[1] = 20;
                                              } else {
                                                var statearr_43541_43576 = state_43521__$1;
                                                statearr_43541_43576[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_43522 === 5) {
                                                var state_43521__$1 = state_43521;
                                                var statearr_43542_43577 = state_43521__$1;
                                                statearr_43542_43577[2] = null;
                                                statearr_43542_43577[1] = 6;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_43522 === 14) {
                                                  var inst_43483 = state_43521[10];
                                                  var inst_43489 = cljs.core.rest.call(null, inst_43483);
                                                  var inst_43490 = cljs.core.first.call(null, inst_43483);
                                                  var state_43521__$1 = function() {
                                                    var statearr_43543 = state_43521;
                                                    statearr_43543[11] = inst_43489;
                                                    return statearr_43543;
                                                  }();
                                                  if (cljs.core.truth_(inst_43490)) {
                                                    var statearr_43544_43578 = state_43521__$1;
                                                    statearr_43544_43578[1] = 16;
                                                  } else {
                                                    var statearr_43545_43579 = state_43521__$1;
                                                    statearr_43545_43579[1] = 17;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_43522 === 16) {
                                                    var inst_43483 = state_43521[10];
                                                    var inst_43492 = cljs.core.first.call(null, inst_43483);
                                                    var state_43521__$1 = state_43521;
                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43521__$1, 19, inst_43492);
                                                  } else {
                                                    if (state_val_43522 === 10) {
                                                      var inst_43480 = state_43521[8];
                                                      var inst_43512 = state_43521[2];
                                                      var inst_43513 = cljs.core.apply.call(null, handler, inst_43512, inst_43480);
                                                      var state_43521__$1 = function() {
                                                        var statearr_43546 = state_43521;
                                                        statearr_43546[12] = inst_43513;
                                                        return statearr_43546;
                                                      }();
                                                      var statearr_43547_43580 = state_43521__$1;
                                                      statearr_43547_43580[2] = null;
                                                      statearr_43547_43580[1] = 2;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_43522 === 18) {
                                                        var inst_43489 = state_43521[11];
                                                        var inst_43484 = state_43521[9];
                                                        var inst_43497 = state_43521[2];
                                                        var inst_43498 = cljs.core.conj.call(null, inst_43484, inst_43497);
                                                        var inst_43483 = inst_43489;
                                                        var inst_43484__$1 = inst_43498;
                                                        var state_43521__$1 = function() {
                                                          var statearr_43548 = state_43521;
                                                          statearr_43548[10] = inst_43483;
                                                          statearr_43548[9] = inst_43484__$1;
                                                          return statearr_43548;
                                                        }();
                                                        var statearr_43549_43581 = state_43521__$1;
                                                        statearr_43549_43581[2] = null;
                                                        statearr_43549_43581[1] = 11;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_43522 === 8) {
                                                          var inst_43479 = state_43521[7];
                                                          var inst_43483 = inst_43479;
                                                          var inst_43484 = cljs.core.PersistentVector.EMPTY;
                                                          var state_43521__$1 = function() {
                                                            var statearr_43550 = state_43521;
                                                            statearr_43550[10] = inst_43483;
                                                            statearr_43550[9] = inst_43484;
                                                            return statearr_43550;
                                                          }();
                                                          var statearr_43551_43582 = state_43521__$1;
                                                          statearr_43551_43582[2] = null;
                                                          statearr_43551_43582[1] = 11;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_43555 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_43555[0] = state_machine__5675__auto__;
              statearr_43555[1] = 1;
              return statearr_43555;
            };
            var state_machine__5675__auto____1 = function(state_43521) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_43521);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e43556) {
                    if (e43556 instanceof Object) {
                      var ex__5678__auto__ = e43556;
                      var statearr_43557_43583 = state_43521;
                      statearr_43557_43583[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43521);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e43556;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__43584 = state_43521;
                  state_43521 = G__43584;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_43521) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_43521);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_43558 = f__5690__auto__.call(null);
        statearr_43558[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_43558;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
clustermap.api.ordered_api = function ordered_api(request_handler, result_handler) {
  var ocomm = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1));
  var _ = clustermap.api.ordered_api_results.call(null, ocomm, result_handler);
  return function(ocomm, _) {
    return function() {
      var G__43587__delegate = function(req_args) {
        var temp__4124__auto__ = cljs.core.apply.call(null, request_handler, req_args);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var r = temp__4124__auto__;
          var rseq = cljs.core.sequential_QMARK_.call(null, r) ? r : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
          var vec__43586 = rseq;
          var rcomm = cljs.core.nth.call(null, vec__43586, 0, null);
          var result_handler_args = cljs.core.nthnext.call(null, vec__43586, 1);
          return cljs.core.async.put_BANG_.call(null, ocomm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rcomm, result_handler_args], null));
        } else {
          return null;
        }
      };
      var G__43587 = function(var_args) {
        var req_args = null;
        if (arguments.length > 0) {
          req_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__43587__delegate.call(this, req_args);
      };
      G__43587.cljs$lang$maxFixedArity = 0;
      G__43587.cljs$lang$applyTo = function(arglist__43588) {
        var req_args = cljs.core.seq(arglist__43588);
        return G__43587__delegate(req_args);
      };
      G__43587.cljs$core$IFn$_invoke$arity$variadic = G__43587__delegate;
      return G__43587;
    }();
  }(ocomm, _);
};
clustermap.api.log_api = function() {
  var log_api__delegate = function(f, args) {
    var ch = cljs.core.apply.call(null, f, args);
    var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__, ch) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto__, ch) {
            return function(state_43606) {
              var state_val_43607 = state_43606[1];
              if (state_val_43607 === 2) {
                var inst_43603 = state_43606[2];
                var inst_43604 = console.log(inst_43603);
                var state_43606__$1 = state_43606;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_43606__$1, inst_43604);
              } else {
                if (state_val_43607 === 1) {
                  var state_43606__$1 = state_43606;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_43606__$1, 2, ch);
                } else {
                  return null;
                }
              }
            };
          }(c__5689__auto__, ch);
          return function(switch__5674__auto__, c__5689__auto__, ch) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_43611 = [null, null, null, null, null, null, null];
                statearr_43611[0] = state_machine__5675__auto__;
                statearr_43611[1] = 1;
                return statearr_43611;
              };
              var state_machine__5675__auto____1 = function(state_43606) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_43606);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e43612) {
                      if (e43612 instanceof Object) {
                        var ex__5678__auto__ = e43612;
                        var statearr_43613_43615 = state_43606;
                        statearr_43613_43615[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_43606);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e43612;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__43616 = state_43606;
                    state_43606 = G__43616;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_43606) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_43606);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto__, ch);
        }();
        var state__5691__auto__ = function() {
          var statearr_43614 = f__5690__auto__.call(null);
          statearr_43614[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
          return statearr_43614;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto__, ch));
    return c__5689__auto__;
  };
  var log_api = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return log_api__delegate.call(this, f, args);
  };
  log_api.cljs$lang$maxFixedArity = 1;
  log_api.cljs$lang$applyTo = function(arglist__43617) {
    var f = cljs.core.first(arglist__43617);
    var args = cljs.core.rest(arglist__43617);
    return log_api__delegate(f, args);
  };
  log_api.cljs$core$IFn$_invoke$arity$variadic = log_api__delegate;
  return log_api;
}();
clustermap.api.map_json_params = function map_json_params(m) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__43620) {
    var vec__43621 = p__43620;
    var k = cljs.core.nth.call(null, vec__43621, 0, null);
    var v = cljs.core.nth.call(null, vec__43621, 1, null);
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(JSON.stringify(cljs.core.clj__GT_js.call(null, v)));
  }, m));
};
clustermap.api.api_prefix = config.api.prefix;
clustermap.api.boundarylines = function() {
  var boundarylines__delegate = function(id, tolerance, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundarylines/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tolerance), opts);
  };
  var boundarylines = function(id, tolerance, var_args) {
    var opts = null;
    if (arguments.length > 2) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return boundarylines__delegate.call(this, id, tolerance, opts);
  };
  boundarylines.cljs$lang$maxFixedArity = 2;
  boundarylines.cljs$lang$applyTo = function(arglist__43622) {
    var id = cljs.core.first(arglist__43622);
    arglist__43622 = cljs.core.next(arglist__43622);
    var tolerance = cljs.core.first(arglist__43622);
    var opts = cljs.core.rest(arglist__43622);
    return boundarylines__delegate(id, tolerance, opts);
  };
  boundarylines.cljs$core$IFn$_invoke$arity$variadic = boundarylines__delegate;
  return boundarylines;
}();
clustermap.api.boundaryline_collection_index = function() {
  var boundaryline_collection_index__delegate = function(id, opts) {
    return cljs.core.apply.call(null, clustermap.api.GET, "/api/boundaryline-collection-index/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id), opts);
  };
  var boundaryline_collection_index = function(id, var_args) {
    var opts = null;
    if (arguments.length > 1) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return boundaryline_collection_index__delegate.call(this, id, opts);
  };
  boundaryline_collection_index.cljs$lang$maxFixedArity = 1;
  boundaryline_collection_index.cljs$lang$applyTo = function(arglist__43623) {
    var id = cljs.core.first(arglist__43623);
    var opts = cljs.core.rest(arglist__43623);
    return boundaryline_collection_index__delegate(id, opts);
  };
  boundaryline_collection_index.cljs$core$IFn$_invoke$arity$variadic = boundaryline_collection_index__delegate;
  return boundaryline_collection_index;
}();
clustermap.api.search = function search(q) {
  if (cljs.core.count.call(null, clojure.string.trim.call(null, q)) > 0) {
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/search?q\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(q));
  } else {
    return cljs.core.async.to_chan.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [{}], null));
  }
};
clustermap.api.constituency = function constituency(id) {
  return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/constituencies/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id));
};
clustermap.api.portfolio_company = function portfolio_company(id) {
  return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-companies/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id));
};
clustermap.api.portfolio_company_sites = function() {
  var portfolio_company_sites__delegate = function(p__43624) {
    var vec__43626 = p__43624;
    var type_ids = cljs.core.nth.call(null, vec__43626, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 100, new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", 2344676794), "desc"], null)], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-sites?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var portfolio_company_sites = function(var_args) {
    var p__43624 = null;
    if (arguments.length > 0) {
      p__43624 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_sites__delegate.call(this, p__43624);
  };
  portfolio_company_sites.cljs$lang$maxFixedArity = 0;
  portfolio_company_sites.cljs$lang$applyTo = function(arglist__43627) {
    var p__43624 = cljs.core.seq(arglist__43627);
    return portfolio_company_sites__delegate(p__43624);
  };
  portfolio_company_sites.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_sites__delegate;
  return portfolio_company_sites;
}();
clustermap.api.portfolio_company_sites_by_company = function() {
  var portfolio_company_sites_by_company__delegate = function(p__43628) {
    var vec__43630 = p__43628;
    var type_ids = cljs.core.nth.call(null, vec__43630, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 100, new cljs.core.Keyword(null, "sort", "sort", 1017440528), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "!latest_turnover", "!latest_turnover", 2344676794), "desc"], null)], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-sites-by-company?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var portfolio_company_sites_by_company = function(var_args) {
    var p__43628 = null;
    if (arguments.length > 0) {
      p__43628 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_sites_by_company__delegate.call(this, p__43628);
  };
  portfolio_company_sites_by_company.cljs$lang$maxFixedArity = 0;
  portfolio_company_sites_by_company.cljs$lang$applyTo = function(arglist__43631) {
    var p__43628 = cljs.core.seq(arglist__43631);
    return portfolio_company_sites_by_company__delegate(p__43628);
  };
  portfolio_company_sites_by_company.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_sites_by_company__delegate;
  return portfolio_company_sites_by_company;
}();
clustermap.api.portfolio_company_locations = function() {
  var portfolio_company_locations__delegate = function(p__43632) {
    var vec__43634 = p__43632;
    var type_ids = cljs.core.nth.call(null, vec__43634, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-locations?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var portfolio_company_locations = function(var_args) {
    var p__43632 = null;
    if (arguments.length > 0) {
      p__43632 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_locations__delegate.call(this, p__43632);
  };
  portfolio_company_locations.cljs$lang$maxFixedArity = 0;
  portfolio_company_locations.cljs$lang$applyTo = function(arglist__43635) {
    var p__43632 = cljs.core.seq(arglist__43635);
    return portfolio_company_locations__delegate(p__43632);
  };
  portfolio_company_locations.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_locations__delegate;
  return portfolio_company_locations;
}();
clustermap.api.portfolio_company_site_stats = function() {
  var portfolio_company_site_stats__delegate = function(p__43636) {
    var vec__43638 = p__43636;
    var type_ids = cljs.core.nth.call(null, vec__43638, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-site-stats?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var portfolio_company_site_stats = function(var_args) {
    var p__43636 = null;
    if (arguments.length > 0) {
      p__43636 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_site_stats__delegate.call(this, p__43636);
  };
  portfolio_company_site_stats.cljs$lang$maxFixedArity = 0;
  portfolio_company_site_stats.cljs$lang$applyTo = function(arglist__43639) {
    var p__43636 = cljs.core.seq(arglist__43639);
    return portfolio_company_site_stats__delegate(p__43636);
  };
  portfolio_company_site_stats.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_site_stats__delegate;
  return portfolio_company_site_stats;
}();
clustermap.api.portfolio_company_site_account_timelines = function() {
  var portfolio_company_site_account_timelines__delegate = function(p__43640) {
    var vec__43642 = p__43640;
    var type_ids = cljs.core.nth.call(null, vec__43642, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/portfolio-company-site-account-timelines?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var portfolio_company_site_account_timelines = function(var_args) {
    var p__43640 = null;
    if (arguments.length > 0) {
      p__43640 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return portfolio_company_site_account_timelines__delegate.call(this, p__43640);
  };
  portfolio_company_site_account_timelines.cljs$lang$maxFixedArity = 0;
  portfolio_company_site_account_timelines.cljs$lang$applyTo = function(arglist__43643) {
    var p__43640 = cljs.core.seq(arglist__43643);
    return portfolio_company_site_account_timelines__delegate(p__43640);
  };
  portfolio_company_site_account_timelines.cljs$core$IFn$_invoke$arity$variadic = portfolio_company_site_account_timelines__delegate;
  return portfolio_company_site_account_timelines;
}();
clustermap.api.investor_company = function investor_company(id) {
  return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investor-companies/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(id));
};
clustermap.api.investment_account_timelines = function() {
  var investment_account_timelines__delegate = function(p__43644) {
    var vec__43646 = p__43644;
    var type_ids = cljs.core.nth.call(null, vec__43646, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investment-account-timelines?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var investment_account_timelines = function(var_args) {
    var p__43644 = null;
    if (arguments.length > 0) {
      p__43644 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investment_account_timelines__delegate.call(this, p__43644);
  };
  investment_account_timelines.cljs$lang$maxFixedArity = 0;
  investment_account_timelines.cljs$lang$applyTo = function(arglist__43647) {
    var p__43644 = cljs.core.seq(arglist__43647);
    return investment_account_timelines__delegate(p__43644);
  };
  investment_account_timelines.cljs$core$IFn$_invoke$arity$variadic = investment_account_timelines__delegate;
  return investment_account_timelines;
}();
clustermap.api.investment_stats = function() {
  var investment_stats__delegate = function(p__43648) {
    var vec__43650 = p__43648;
    var type_ids = cljs.core.nth.call(null, vec__43650, 0, null);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investment-stats?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids)));
  };
  var investment_stats = function(var_args) {
    var p__43648 = null;
    if (arguments.length > 0) {
      p__43648 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investment_stats__delegate.call(this, p__43648);
  };
  investment_stats.cljs$lang$maxFixedArity = 0;
  investment_stats.cljs$lang$applyTo = function(arglist__43651) {
    var p__43648 = cljs.core.seq(arglist__43651);
    return investment_stats__delegate(p__43648);
  };
  investment_stats.cljs$core$IFn$_invoke$arity$variadic = investment_stats__delegate;
  return investment_stats;
}();
clustermap.api.investment_aggs = function() {
  var investment_aggs__delegate = function(p__43652) {
    var vec__43654 = p__43652;
    var type_ids = cljs.core.nth.call(null, vec__43654, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 50, new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451), "desc"], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investment-aggs?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var investment_aggs = function(var_args) {
    var p__43652 = null;
    if (arguments.length > 0) {
      p__43652 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investment_aggs__delegate.call(this, p__43652);
  };
  investment_aggs.cljs$lang$maxFixedArity = 0;
  investment_aggs.cljs$lang$applyTo = function(arglist__43655) {
    var p__43652 = cljs.core.seq(arglist__43655);
    return investment_aggs__delegate(p__43652);
  };
  investment_aggs.cljs$core$IFn$_invoke$arity$variadic = investment_aggs__delegate;
  return investment_aggs;
}();
clustermap.api.investments = function() {
  var investments__delegate = function(p__43656) {
    var vec__43658 = p__43656;
    var type_ids = cljs.core.nth.call(null, vec__43658, 0, null);
    var type_ids__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), 50, new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 828306139), "asc"], null), new cljs.core.PersistentArrayMap(null, 1, 
    [new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 4755885871), "asc"], null)], null)], null), type_ids);
    return clustermap.api.GET.call(null, "/api/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.api_prefix) + "/investments?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clustermap.api.map_json_params.call(null, type_ids__$1)));
  };
  var investments = function(var_args) {
    var p__43656 = null;
    if (arguments.length > 0) {
      p__43656 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return investments__delegate.call(this, p__43656);
  };
  investments.cljs$lang$maxFixedArity = 0;
  investments.cljs$lang$applyTo = function(arglist__43659) {
    var p__43656 = cljs.core.seq(arglist__43659);
    return investments__delegate(p__43656);
  };
  investments.cljs$core$IFn$_invoke$arity$variadic = investments__delegate;
  return investments;
}();
goog.provide("clustermap.boundarylines");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.api");
goog.require("clustermap.api");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.boundarylines.zoom_tolerances = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [7, 0.01], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [9, 0.002], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 3E-4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, 0], null)], null);
clustermap.boundarylines.ideal_tolerance = function ideal_tolerance(zoom) {
  var or__3539__auto__ = cljs.core.some.call(null, function(p__45617) {
    var vec__45618 = p__45617;
    var z = cljs.core.nth.call(null, vec__45618, 0, null);
    var t = cljs.core.nth.call(null, vec__45618, 1, null);
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = z;
      if (cljs.core.truth_(and__3527__auto__)) {
        return zoom <= z;
      } else {
        return and__3527__auto__;
      }
    }())) {
      return t;
    } else {
      return null;
    }
  }, clustermap.boundarylines.zoom_tolerances);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return 0;
  }
};
clustermap.boundarylines.best_available_tolerance = function best_available_tolerance(zoom, available_tolerances) {
  var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
  var coarser = cljs.core.reverse.call(null, cljs.core.filter.call(null, function(i_tol) {
    return function(t) {
      return t > i_tol;
    };
  }(i_tol), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances)));
  var finer = cljs.core.filter.call(null, function(i_tol, coarser) {
    return function(t) {
      return t < i_tol;
    };
  }(i_tol, coarser), cljs.core.map.call(null, cljs.core.last, clustermap.boundarylines.zoom_tolerances));
  var avail_set = cljs.core.set.call(null, available_tolerances);
  var or__3539__auto__ = cljs.core.get.call(null, avail_set, i_tol);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    var or__3539__auto____$1 = cljs.core.some.call(null, avail_set, finer);
    if (cljs.core.truth_(or__3539__auto____$1)) {
      return or__3539__auto____$1;
    } else {
      return cljs.core.some.call(null, avail_set, coarser);
    }
  }
};
clustermap.boundarylines.fetch_boundaryline = function fetch_boundaryline(app_state, korks, boundaryline_id, tolerance) {
  var comm = clustermap.api.boundarylines.call(null, boundaryline_id, tolerance, new cljs.core.Keyword(null, "raw", "raw", 1014016922), true);
  var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var path = cljs.core.concat.call(null, use_korks, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id, tolerance], null));
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__, comm, use_korks, path) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__, comm, use_korks, path) {
          return function(state_45638) {
            var state_val_45639 = state_45638[1];
            if (state_val_45639 === 2) {
              var inst_45634 = state_45638[2];
              var inst_45635 = function() {
                var bl = inst_45634;
                return function(bl, inst_45634, state_val_45639, c__5689__auto__, comm, use_korks, path) {
                  return function(old) {
                    return bl;
                  };
                }(bl, inst_45634, state_val_45639, c__5689__auto__, comm, use_korks, path);
              }();
              var inst_45636 = cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, path, inst_45635);
              var state_45638__$1 = state_45638;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45638__$1, inst_45636);
            } else {
              if (state_val_45639 === 1) {
                var state_45638__$1 = state_45638;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45638__$1, 2, comm);
              } else {
                return null;
              }
            }
          };
        }(c__5689__auto__, comm, use_korks, path);
        return function(switch__5674__auto__, c__5689__auto__, comm, use_korks, path) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_45643 = [null, null, null, null, null, null, null];
              statearr_45643[0] = state_machine__5675__auto__;
              statearr_45643[1] = 1;
              return statearr_45643;
            };
            var state_machine__5675__auto____1 = function(state_45638) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_45638);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e45644) {
                    if (e45644 instanceof Object) {
                      var ex__5678__auto__ = e45644;
                      var statearr_45645_45647 = state_45638;
                      statearr_45645_45647[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45638);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45644;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45648 = state_45638;
                  state_45638 = G__45648;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_45638) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_45638);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__, comm, use_korks, path);
      }();
      var state__5691__auto__ = function() {
        var statearr_45646 = f__5690__auto__.call(null);
        statearr_45646[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_45646;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__, comm, use_korks, path));
  return c__5689__auto__;
};
clustermap.boundarylines.get_or_fetch_best_boundaryline = function() {
  var get_or_fetch_best_boundaryline__delegate = function(app_state, korks, boundaryline_id, zoom, p__45649) {
    var map__45651 = p__45649;
    var map__45651__$1 = cljs.core.seq_QMARK_.call(null, map__45651) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45651) : map__45651;
    var min_zoom = cljs.core.get.call(null, map__45651__$1, new cljs.core.Keyword(null, "min-zoom", "min-zoom", 3894785504));
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = min_zoom;
      if (cljs.core.truth_(and__3527__auto__)) {
        return zoom <= min_zoom;
      } else {
        return and__3527__auto__;
      }
    }())) {
      return null;
    } else {
      var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
      var boundarylines = cljs.core.get_in.call(null, cljs.core.deref.call(null, app_state), use_korks);
      var bl_versions = cljs.core.get.call(null, boundarylines, boundaryline_id);
      var i_tol = clustermap.boundarylines.ideal_tolerance.call(null, zoom);
      var use_tol = clustermap.boundarylines.best_available_tolerance.call(null, zoom, cljs.core.keys.call(null, bl_versions));
      var use_bl = cljs.core.get_in.call(null, boundarylines, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [boundaryline_id, use_tol], null));
      if (cljs.core.not_EQ_.call(null, i_tol, use_tol)) {
        clustermap.boundarylines.fetch_boundaryline.call(null, app_state, korks, boundaryline_id, i_tol);
      } else {
      }
      if (cljs.core.truth_(use_bl)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [use_tol, use_bl], null);
      } else {
        return null;
      }
    }
  };
  var get_or_fetch_best_boundaryline = function(app_state, korks, boundaryline_id, zoom, var_args) {
    var p__45649 = null;
    if (arguments.length > 4) {
      p__45649 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
    }
    return get_or_fetch_best_boundaryline__delegate.call(this, app_state, korks, boundaryline_id, zoom, p__45649);
  };
  get_or_fetch_best_boundaryline.cljs$lang$maxFixedArity = 4;
  get_or_fetch_best_boundaryline.cljs$lang$applyTo = function(arglist__45652) {
    var app_state = cljs.core.first(arglist__45652);
    arglist__45652 = cljs.core.next(arglist__45652);
    var korks = cljs.core.first(arglist__45652);
    arglist__45652 = cljs.core.next(arglist__45652);
    var boundaryline_id = cljs.core.first(arglist__45652);
    arglist__45652 = cljs.core.next(arglist__45652);
    var zoom = cljs.core.first(arglist__45652);
    var p__45649 = cljs.core.rest(arglist__45652);
    return get_or_fetch_best_boundaryline__delegate(app_state, korks, boundaryline_id, zoom, p__45649);
  };
  get_or_fetch_best_boundaryline.cljs$core$IFn$_invoke$arity$variadic = get_or_fetch_best_boundaryline__delegate;
  return get_or_fetch_best_boundaryline;
}();
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return;
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.safeDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (opt_key) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CancelledError");
goog.provide("goog.async.Deferred.UnhandledError");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_canceller, opt_defaultScope) {
  this.chain_ = [];
  this.canceller_ = opt_canceller;
  this.defaultScope_ = opt_defaultScope || null;
};
goog.async.Deferred.prototype.fired_ = false;
goog.async.Deferred.prototype.hadError_ = false;
goog.async.Deferred.prototype.result_;
goog.async.Deferred.prototype.paused_ = 0;
goog.async.Deferred.prototype.silentlyCancelled_ = false;
goog.async.Deferred.prototype.chained_ = false;
goog.async.Deferred.prototype.unhandledExceptionTimeoutId_;
goog.async.Deferred.prototype.parent_;
goog.async.Deferred.prototype.branches_ = 0;
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.canceller_) {
      this.canceller_.call(this.defaultScope_, this);
    } else {
      this.silentlyCancelled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CancelledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.pause_ = function() {
  this.paused_++;
};
goog.async.Deferred.prototype.unpause_ = function() {
  this.paused_--;
  if (this.paused_ == 0 && this.hasFired()) {
    this.fire_();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.resback_(isSuccess, res);
  this.unpause_();
};
goog.async.Deferred.prototype.resback_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCancelled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCancelled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(result) {
  this.check_();
  this.assertNotDeferred_(result);
  this.resback_(true, result);
};
goog.async.Deferred.prototype.errback = function(result) {
  this.check_();
  this.assertNotDeferred_(result);
  this.resback_(false, result);
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "Deferred instances can only be chained if they are the result of a " + "callback");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.chained_, "Chained Deferreds can not be re-used");
  this.chain_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.chain_, function(chainRow) {
    return goog.isFunction(chainRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledExceptionTimeoutId_ && (this.hasFired() && this.hasErrback_())) {
    goog.global.clearTimeout(this.unhandledExceptionTimeoutId_);
    delete this.unhandledExceptionTimeoutId_;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isChained = false;
  while (this.chain_.length && this.paused_ == 0) {
    var chainEntry = this.chain_.shift();
    var callback = chainEntry[0];
    var errback = chainEntry[1];
    var scope = chainEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (res instanceof goog.async.Deferred) {
          isChained = true;
          this.pause_();
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isChained && this.paused_) {
    res.addCallbacks(goog.bind(this.continue_, this, true), goog.bind(this.continue_, this, false));
    res.chained_ = true;
  }
  if (unhandledException) {
    this.unhandledExceptionTimeoutId_ = goog.global.setTimeout(function() {
      throw new goog.async.Deferred.UnhandledError((res));
    }, 0);
  }
};
goog.async.Deferred.succeed = function(res) {
  var d = new goog.async.Deferred;
  d.callback(res);
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.cancelled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Already called";
goog.async.Deferred.CancelledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CancelledError, goog.debug.Error);
goog.async.Deferred.CancelledError.prototype.message = "Deferred was cancelled";
goog.async.Deferred.UnhandledError = function(cause) {
  goog.debug.Error.call(this);
  this.cause = cause;
  this.message = "Unhandled Error in Deferred: " + (cause.message || "[No message]");
};
goog.inherits(goog.async.Deferred.UnhandledError, goog.debug.Error);
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && (!this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_)) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '\x3ciframe onload\x3d"this.xpcOnload()"\x3e\x3c/iframe\x3e';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.net.xpc.logger.info("NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if (channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && (!staleChannel.isConnected() && (service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)))) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true;
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.net.xpc.logger.info("Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && (this.couldPeerVersionBe_(2) && protocolVersion == 2)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || (this.channel_.isConnected() || this.isDisposed())) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if (!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.net.xpc.logger.warning("Peer window had no postMessage " + "function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.net.xpc.logger.fine("send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.net.xpc.logger.warning("Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_);
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || (goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage)) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  if (!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[goog.net.xpc.CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
  }
  if (this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.net.xpc.logger.info("createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnce(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.net.xpc.logger.info("continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (opt_delay) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.safeDeliver = function(serviceName, payload, opt_origin) {
  this.deliver_(serviceName, payload, opt_origin);
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || (goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]);
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels_) {
    goog.dispose(goog.net.xpc.channels_[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
goog.require("goog.events");
clojure.browser.event.EventType = function() {
  var obj51259 = {};
  return obj51259;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.clojure$browser$event$EventType$event_types$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__51260) {
      var vec__51261 = p__51260;
      var k = cljs.core.nth.call(null, vec__51261, 0, null);
      var v = cljs.core.nth.call(null, vec__51261, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__51262) {
      var vec__51263 = p__51262;
      var k = cljs.core.nth.call(null, vec__51263, 0, null);
      var v = cljs.core.nth.call(null, vec__51263, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.XhrIo");
goog.require("goog.net.EventType");
goog.require("goog.json");
goog.require("goog.json");
goog.require("goog.net.EventType");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
goog.require("goog.net.xpc.CfgFields");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__51264) {
  var vec__51265 = p__51264;
  var k = cljs.core.nth.call(null, vec__51265, 0, null);
  var v = cljs.core.nth.call(null, vec__51265, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj51267 = {};
  return obj51267;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.connect[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.connect[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.connect[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.connect[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = clojure.browser.net.close[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = clojure.browser.net.close["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__51268) {
      var vec__51269 = p__51268;
      var k = cljs.core.nth.call(null, vec__51269, 0, null);
      var v = cljs.core.nth.call(null, vec__51269, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__51270) {
  var vec__51271 = p__51270;
  var k = cljs.core.nth.call(null, vec__51271, 0, null);
  var v = cljs.core.nth.call(null, vec__51271, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj51273 = {};
  return obj51273;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__51279) {
      var vec__51280 = p__51279;
      var k = cljs.core.nth.call(null, vec__51280, 0, null);
      var v = cljs.core.nth.call(null, vec__51280, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__51281 = sum;
        G__51281[field] = v;
        return G__51281;
      } else {
        return sum;
      }
    }, function() {
      var obj51283 = {};
      return obj51283;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__4124__auto__ = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1120839199), cljs.core.pr_str.call(null, data));
  } else {
    return null;
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "success", "success", 3441701749), new cljs.core.Keyword(null, "value", "value", 1125876963), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(eval(block))], null);
    } catch (e51257) {
      var e = e51257;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "exception", "exception", 2495529921), new cljs.core.Keyword(null, "value", "value", 1125876963), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", 3069736751), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], null);
    }
  }();
  return cljs.core.pr_str.call(null, result);
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0);
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0);
  };
  var send_print__3 = function(url, data, n) {
    var conn = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", 1110689146), function(conn) {
      return function(_) {
        if (n < 10) {
          return send_print.call(null, url, data, n + 1);
        } else {
          return console.log("Could not send " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(data) + " after " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " attempts.");
        }
      };
    }(conn));
    return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0);
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  send_print.cljs$core$IFn$_invoke$arity$2 = send_print__2;
  send_print.cljs$core$IFn$_invoke$arity$3 = send_print__3;
  return send_print;
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), t, new cljs.core.Keyword(null, "content", "content", 1965434859), data, new cljs.core.Keyword(null, "order", "order", 1119910592), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], null));
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__4124__auto__ = clojure.browser.net.xpc_connection.call(null);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var repl_connection = temp__4124__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 3441701749), function(connection, repl_connection, temp__4124__auto__) {
      return function(e) {
        return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", 2953437843), e.currentTarget.getResponseText(cljs.core.List.EMPTY));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 3729280372), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "result", "result", 4374444943), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1120839199), function(connection, repl_connection, temp__4124__auto__) {
      return function(data) {
        return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "print", "print", 1120839199), data));
      };
    }(connection, repl_connection, temp__4124__auto__));
    clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null));
    return setTimeout(function(connection, repl_connection, temp__4124__auto__) {
      return function() {
        return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "ready", "ready", 1122290965), "ready"));
      };
    }(connection, repl_connection, temp__4124__auto__), 50);
  } else {
    return alert("No 'xpc' param provided to child iframe.");
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection = clojure.browser.net.xpc_connection.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "peer_uri", "peer_uri", 1083496577), repl_server_url], null));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", 2953437843), function(repl_connection) {
    return function(js) {
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 3729280372), clojure.browser.repl.evaluate_javascript.call(null, repl_connection, js));
    };
  }(repl_connection));
  return clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(repl_connection) {
    return function(iframe) {
      return iframe.style.display = "none";
    };
  }(repl_connection));
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var a = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__50348) {
    var opts__9392__auto__ = cljs.core.first(arglist__50348);
    var children__9393__auto__ = cljs.core.rest(arglist__50348);
    return a__delegate(opts__9392__auto__, children__9393__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var abbr = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__50349) {
    var opts__9392__auto__ = cljs.core.first(arglist__50349);
    var children__9393__auto__ = cljs.core.rest(arglist__50349);
    return abbr__delegate(opts__9392__auto__, children__9393__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var address = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__50350) {
    var opts__9392__auto__ = cljs.core.first(arglist__50350);
    var children__9393__auto__ = cljs.core.rest(arglist__50350);
    return address__delegate(opts__9392__auto__, children__9393__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var area = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__50351) {
    var opts__9392__auto__ = cljs.core.first(arglist__50351);
    var children__9393__auto__ = cljs.core.rest(arglist__50351);
    return area__delegate(opts__9392__auto__, children__9393__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var article = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__50352) {
    var opts__9392__auto__ = cljs.core.first(arglist__50352);
    var children__9393__auto__ = cljs.core.rest(arglist__50352);
    return article__delegate(opts__9392__auto__, children__9393__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var aside = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__50353) {
    var opts__9392__auto__ = cljs.core.first(arglist__50353);
    var children__9393__auto__ = cljs.core.rest(arglist__50353);
    return aside__delegate(opts__9392__auto__, children__9393__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var audio = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__50354) {
    var opts__9392__auto__ = cljs.core.first(arglist__50354);
    var children__9393__auto__ = cljs.core.rest(arglist__50354);
    return audio__delegate(opts__9392__auto__, children__9393__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var b = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__50355) {
    var opts__9392__auto__ = cljs.core.first(arglist__50355);
    var children__9393__auto__ = cljs.core.rest(arglist__50355);
    return b__delegate(opts__9392__auto__, children__9393__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var base = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__50356) {
    var opts__9392__auto__ = cljs.core.first(arglist__50356);
    var children__9393__auto__ = cljs.core.rest(arglist__50356);
    return base__delegate(opts__9392__auto__, children__9393__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var bdi = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__50357) {
    var opts__9392__auto__ = cljs.core.first(arglist__50357);
    var children__9393__auto__ = cljs.core.rest(arglist__50357);
    return bdi__delegate(opts__9392__auto__, children__9393__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var bdo = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__50358) {
    var opts__9392__auto__ = cljs.core.first(arglist__50358);
    var children__9393__auto__ = cljs.core.rest(arglist__50358);
    return bdo__delegate(opts__9392__auto__, children__9393__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var big = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__50359) {
    var opts__9392__auto__ = cljs.core.first(arglist__50359);
    var children__9393__auto__ = cljs.core.rest(arglist__50359);
    return big__delegate(opts__9392__auto__, children__9393__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var blockquote = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__50360) {
    var opts__9392__auto__ = cljs.core.first(arglist__50360);
    var children__9393__auto__ = cljs.core.rest(arglist__50360);
    return blockquote__delegate(opts__9392__auto__, children__9393__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var body = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__50361) {
    var opts__9392__auto__ = cljs.core.first(arglist__50361);
    var children__9393__auto__ = cljs.core.rest(arglist__50361);
    return body__delegate(opts__9392__auto__, children__9393__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var br = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__50362) {
    var opts__9392__auto__ = cljs.core.first(arglist__50362);
    var children__9393__auto__ = cljs.core.rest(arglist__50362);
    return br__delegate(opts__9392__auto__, children__9393__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var button = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__50363) {
    var opts__9392__auto__ = cljs.core.first(arglist__50363);
    var children__9393__auto__ = cljs.core.rest(arglist__50363);
    return button__delegate(opts__9392__auto__, children__9393__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var canvas = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__50364) {
    var opts__9392__auto__ = cljs.core.first(arglist__50364);
    var children__9393__auto__ = cljs.core.rest(arglist__50364);
    return canvas__delegate(opts__9392__auto__, children__9393__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var caption = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__50365) {
    var opts__9392__auto__ = cljs.core.first(arglist__50365);
    var children__9393__auto__ = cljs.core.rest(arglist__50365);
    return caption__delegate(opts__9392__auto__, children__9393__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var cite = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__50366) {
    var opts__9392__auto__ = cljs.core.first(arglist__50366);
    var children__9393__auto__ = cljs.core.rest(arglist__50366);
    return cite__delegate(opts__9392__auto__, children__9393__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var code = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__50367) {
    var opts__9392__auto__ = cljs.core.first(arglist__50367);
    var children__9393__auto__ = cljs.core.rest(arglist__50367);
    return code__delegate(opts__9392__auto__, children__9393__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var col = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__50368) {
    var opts__9392__auto__ = cljs.core.first(arglist__50368);
    var children__9393__auto__ = cljs.core.rest(arglist__50368);
    return col__delegate(opts__9392__auto__, children__9393__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var colgroup = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__50369) {
    var opts__9392__auto__ = cljs.core.first(arglist__50369);
    var children__9393__auto__ = cljs.core.rest(arglist__50369);
    return colgroup__delegate(opts__9392__auto__, children__9393__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var data = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__50370) {
    var opts__9392__auto__ = cljs.core.first(arglist__50370);
    var children__9393__auto__ = cljs.core.rest(arglist__50370);
    return data__delegate(opts__9392__auto__, children__9393__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var datalist = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__50371) {
    var opts__9392__auto__ = cljs.core.first(arglist__50371);
    var children__9393__auto__ = cljs.core.rest(arglist__50371);
    return datalist__delegate(opts__9392__auto__, children__9393__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var dd = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__50372) {
    var opts__9392__auto__ = cljs.core.first(arglist__50372);
    var children__9393__auto__ = cljs.core.rest(arglist__50372);
    return dd__delegate(opts__9392__auto__, children__9393__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var del = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__50373) {
    var opts__9392__auto__ = cljs.core.first(arglist__50373);
    var children__9393__auto__ = cljs.core.rest(arglist__50373);
    return del__delegate(opts__9392__auto__, children__9393__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var dfn = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__50374) {
    var opts__9392__auto__ = cljs.core.first(arglist__50374);
    var children__9393__auto__ = cljs.core.rest(arglist__50374);
    return dfn__delegate(opts__9392__auto__, children__9393__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var div = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__50375) {
    var opts__9392__auto__ = cljs.core.first(arglist__50375);
    var children__9393__auto__ = cljs.core.rest(arglist__50375);
    return div__delegate(opts__9392__auto__, children__9393__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var dl = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__50376) {
    var opts__9392__auto__ = cljs.core.first(arglist__50376);
    var children__9393__auto__ = cljs.core.rest(arglist__50376);
    return dl__delegate(opts__9392__auto__, children__9393__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var dt = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__50377) {
    var opts__9392__auto__ = cljs.core.first(arglist__50377);
    var children__9393__auto__ = cljs.core.rest(arglist__50377);
    return dt__delegate(opts__9392__auto__, children__9393__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var em = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__50378) {
    var opts__9392__auto__ = cljs.core.first(arglist__50378);
    var children__9393__auto__ = cljs.core.rest(arglist__50378);
    return em__delegate(opts__9392__auto__, children__9393__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var embed = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__50379) {
    var opts__9392__auto__ = cljs.core.first(arglist__50379);
    var children__9393__auto__ = cljs.core.rest(arglist__50379);
    return embed__delegate(opts__9392__auto__, children__9393__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var fieldset = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__50380) {
    var opts__9392__auto__ = cljs.core.first(arglist__50380);
    var children__9393__auto__ = cljs.core.rest(arglist__50380);
    return fieldset__delegate(opts__9392__auto__, children__9393__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var figcaption = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__50381) {
    var opts__9392__auto__ = cljs.core.first(arglist__50381);
    var children__9393__auto__ = cljs.core.rest(arglist__50381);
    return figcaption__delegate(opts__9392__auto__, children__9393__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var figure = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__50382) {
    var opts__9392__auto__ = cljs.core.first(arglist__50382);
    var children__9393__auto__ = cljs.core.rest(arglist__50382);
    return figure__delegate(opts__9392__auto__, children__9393__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var footer = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__50383) {
    var opts__9392__auto__ = cljs.core.first(arglist__50383);
    var children__9393__auto__ = cljs.core.rest(arglist__50383);
    return footer__delegate(opts__9392__auto__, children__9393__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var form = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__50384) {
    var opts__9392__auto__ = cljs.core.first(arglist__50384);
    var children__9393__auto__ = cljs.core.rest(arglist__50384);
    return form__delegate(opts__9392__auto__, children__9393__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var h1 = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__50385) {
    var opts__9392__auto__ = cljs.core.first(arglist__50385);
    var children__9393__auto__ = cljs.core.rest(arglist__50385);
    return h1__delegate(opts__9392__auto__, children__9393__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var h2 = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__50386) {
    var opts__9392__auto__ = cljs.core.first(arglist__50386);
    var children__9393__auto__ = cljs.core.rest(arglist__50386);
    return h2__delegate(opts__9392__auto__, children__9393__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var h3 = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__50387) {
    var opts__9392__auto__ = cljs.core.first(arglist__50387);
    var children__9393__auto__ = cljs.core.rest(arglist__50387);
    return h3__delegate(opts__9392__auto__, children__9393__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var h4 = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__50388) {
    var opts__9392__auto__ = cljs.core.first(arglist__50388);
    var children__9393__auto__ = cljs.core.rest(arglist__50388);
    return h4__delegate(opts__9392__auto__, children__9393__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var h5 = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__50389) {
    var opts__9392__auto__ = cljs.core.first(arglist__50389);
    var children__9393__auto__ = cljs.core.rest(arglist__50389);
    return h5__delegate(opts__9392__auto__, children__9393__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var h6 = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__50390) {
    var opts__9392__auto__ = cljs.core.first(arglist__50390);
    var children__9393__auto__ = cljs.core.rest(arglist__50390);
    return h6__delegate(opts__9392__auto__, children__9393__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var head = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__50391) {
    var opts__9392__auto__ = cljs.core.first(arglist__50391);
    var children__9393__auto__ = cljs.core.rest(arglist__50391);
    return head__delegate(opts__9392__auto__, children__9393__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var header = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__50392) {
    var opts__9392__auto__ = cljs.core.first(arglist__50392);
    var children__9393__auto__ = cljs.core.rest(arglist__50392);
    return header__delegate(opts__9392__auto__, children__9393__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var hr = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__50393) {
    var opts__9392__auto__ = cljs.core.first(arglist__50393);
    var children__9393__auto__ = cljs.core.rest(arglist__50393);
    return hr__delegate(opts__9392__auto__, children__9393__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var html = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__50394) {
    var opts__9392__auto__ = cljs.core.first(arglist__50394);
    var children__9393__auto__ = cljs.core.rest(arglist__50394);
    return html__delegate(opts__9392__auto__, children__9393__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var i = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__50395) {
    var opts__9392__auto__ = cljs.core.first(arglist__50395);
    var children__9393__auto__ = cljs.core.rest(arglist__50395);
    return i__delegate(opts__9392__auto__, children__9393__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var iframe = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__50396) {
    var opts__9392__auto__ = cljs.core.first(arglist__50396);
    var children__9393__auto__ = cljs.core.rest(arglist__50396);
    return iframe__delegate(opts__9392__auto__, children__9393__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var img = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__50397) {
    var opts__9392__auto__ = cljs.core.first(arglist__50397);
    var children__9393__auto__ = cljs.core.rest(arglist__50397);
    return img__delegate(opts__9392__auto__, children__9393__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var ins = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__50398) {
    var opts__9392__auto__ = cljs.core.first(arglist__50398);
    var children__9393__auto__ = cljs.core.rest(arglist__50398);
    return ins__delegate(opts__9392__auto__, children__9393__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var kbd = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__50399) {
    var opts__9392__auto__ = cljs.core.first(arglist__50399);
    var children__9393__auto__ = cljs.core.rest(arglist__50399);
    return kbd__delegate(opts__9392__auto__, children__9393__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var keygen = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__50400) {
    var opts__9392__auto__ = cljs.core.first(arglist__50400);
    var children__9393__auto__ = cljs.core.rest(arglist__50400);
    return keygen__delegate(opts__9392__auto__, children__9393__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var label = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__50401) {
    var opts__9392__auto__ = cljs.core.first(arglist__50401);
    var children__9393__auto__ = cljs.core.rest(arglist__50401);
    return label__delegate(opts__9392__auto__, children__9393__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var legend = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__50402) {
    var opts__9392__auto__ = cljs.core.first(arglist__50402);
    var children__9393__auto__ = cljs.core.rest(arglist__50402);
    return legend__delegate(opts__9392__auto__, children__9393__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var li = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__50403) {
    var opts__9392__auto__ = cljs.core.first(arglist__50403);
    var children__9393__auto__ = cljs.core.rest(arglist__50403);
    return li__delegate(opts__9392__auto__, children__9393__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var link = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__50404) {
    var opts__9392__auto__ = cljs.core.first(arglist__50404);
    var children__9393__auto__ = cljs.core.rest(arglist__50404);
    return link__delegate(opts__9392__auto__, children__9393__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var main = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__50405) {
    var opts__9392__auto__ = cljs.core.first(arglist__50405);
    var children__9393__auto__ = cljs.core.rest(arglist__50405);
    return main__delegate(opts__9392__auto__, children__9393__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var map = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__50406) {
    var opts__9392__auto__ = cljs.core.first(arglist__50406);
    var children__9393__auto__ = cljs.core.rest(arglist__50406);
    return map__delegate(opts__9392__auto__, children__9393__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var mark = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__50407) {
    var opts__9392__auto__ = cljs.core.first(arglist__50407);
    var children__9393__auto__ = cljs.core.rest(arglist__50407);
    return mark__delegate(opts__9392__auto__, children__9393__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var menu = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__50408) {
    var opts__9392__auto__ = cljs.core.first(arglist__50408);
    var children__9393__auto__ = cljs.core.rest(arglist__50408);
    return menu__delegate(opts__9392__auto__, children__9393__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var menuitem = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__50409) {
    var opts__9392__auto__ = cljs.core.first(arglist__50409);
    var children__9393__auto__ = cljs.core.rest(arglist__50409);
    return menuitem__delegate(opts__9392__auto__, children__9393__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var meta = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__50410) {
    var opts__9392__auto__ = cljs.core.first(arglist__50410);
    var children__9393__auto__ = cljs.core.rest(arglist__50410);
    return meta__delegate(opts__9392__auto__, children__9393__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var meter = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__50411) {
    var opts__9392__auto__ = cljs.core.first(arglist__50411);
    var children__9393__auto__ = cljs.core.rest(arglist__50411);
    return meter__delegate(opts__9392__auto__, children__9393__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var nav = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__50412) {
    var opts__9392__auto__ = cljs.core.first(arglist__50412);
    var children__9393__auto__ = cljs.core.rest(arglist__50412);
    return nav__delegate(opts__9392__auto__, children__9393__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var noscript = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__50413) {
    var opts__9392__auto__ = cljs.core.first(arglist__50413);
    var children__9393__auto__ = cljs.core.rest(arglist__50413);
    return noscript__delegate(opts__9392__auto__, children__9393__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var object = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__50414) {
    var opts__9392__auto__ = cljs.core.first(arglist__50414);
    var children__9393__auto__ = cljs.core.rest(arglist__50414);
    return object__delegate(opts__9392__auto__, children__9393__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var ol = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__50415) {
    var opts__9392__auto__ = cljs.core.first(arglist__50415);
    var children__9393__auto__ = cljs.core.rest(arglist__50415);
    return ol__delegate(opts__9392__auto__, children__9393__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var optgroup = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__50416) {
    var opts__9392__auto__ = cljs.core.first(arglist__50416);
    var children__9393__auto__ = cljs.core.rest(arglist__50416);
    return optgroup__delegate(opts__9392__auto__, children__9393__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var output = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__50417) {
    var opts__9392__auto__ = cljs.core.first(arglist__50417);
    var children__9393__auto__ = cljs.core.rest(arglist__50417);
    return output__delegate(opts__9392__auto__, children__9393__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var p = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__50418) {
    var opts__9392__auto__ = cljs.core.first(arglist__50418);
    var children__9393__auto__ = cljs.core.rest(arglist__50418);
    return p__delegate(opts__9392__auto__, children__9393__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var param = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__50419) {
    var opts__9392__auto__ = cljs.core.first(arglist__50419);
    var children__9393__auto__ = cljs.core.rest(arglist__50419);
    return param__delegate(opts__9392__auto__, children__9393__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var pre = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__50420) {
    var opts__9392__auto__ = cljs.core.first(arglist__50420);
    var children__9393__auto__ = cljs.core.rest(arglist__50420);
    return pre__delegate(opts__9392__auto__, children__9393__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var progress = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__50421) {
    var opts__9392__auto__ = cljs.core.first(arglist__50421);
    var children__9393__auto__ = cljs.core.rest(arglist__50421);
    return progress__delegate(opts__9392__auto__, children__9393__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var q = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__50422) {
    var opts__9392__auto__ = cljs.core.first(arglist__50422);
    var children__9393__auto__ = cljs.core.rest(arglist__50422);
    return q__delegate(opts__9392__auto__, children__9393__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var rp = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__50423) {
    var opts__9392__auto__ = cljs.core.first(arglist__50423);
    var children__9393__auto__ = cljs.core.rest(arglist__50423);
    return rp__delegate(opts__9392__auto__, children__9393__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var rt = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__50424) {
    var opts__9392__auto__ = cljs.core.first(arglist__50424);
    var children__9393__auto__ = cljs.core.rest(arglist__50424);
    return rt__delegate(opts__9392__auto__, children__9393__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var ruby = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__50425) {
    var opts__9392__auto__ = cljs.core.first(arglist__50425);
    var children__9393__auto__ = cljs.core.rest(arglist__50425);
    return ruby__delegate(opts__9392__auto__, children__9393__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var s = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__50426) {
    var opts__9392__auto__ = cljs.core.first(arglist__50426);
    var children__9393__auto__ = cljs.core.rest(arglist__50426);
    return s__delegate(opts__9392__auto__, children__9393__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var samp = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__50427) {
    var opts__9392__auto__ = cljs.core.first(arglist__50427);
    var children__9393__auto__ = cljs.core.rest(arglist__50427);
    return samp__delegate(opts__9392__auto__, children__9393__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var script = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__50428) {
    var opts__9392__auto__ = cljs.core.first(arglist__50428);
    var children__9393__auto__ = cljs.core.rest(arglist__50428);
    return script__delegate(opts__9392__auto__, children__9393__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var section = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__50429) {
    var opts__9392__auto__ = cljs.core.first(arglist__50429);
    var children__9393__auto__ = cljs.core.rest(arglist__50429);
    return section__delegate(opts__9392__auto__, children__9393__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var select = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__50430) {
    var opts__9392__auto__ = cljs.core.first(arglist__50430);
    var children__9393__auto__ = cljs.core.rest(arglist__50430);
    return select__delegate(opts__9392__auto__, children__9393__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var small = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__50431) {
    var opts__9392__auto__ = cljs.core.first(arglist__50431);
    var children__9393__auto__ = cljs.core.rest(arglist__50431);
    return small__delegate(opts__9392__auto__, children__9393__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var source = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__50432) {
    var opts__9392__auto__ = cljs.core.first(arglist__50432);
    var children__9393__auto__ = cljs.core.rest(arglist__50432);
    return source__delegate(opts__9392__auto__, children__9393__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var span = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__50433) {
    var opts__9392__auto__ = cljs.core.first(arglist__50433);
    var children__9393__auto__ = cljs.core.rest(arglist__50433);
    return span__delegate(opts__9392__auto__, children__9393__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var strong = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__50434) {
    var opts__9392__auto__ = cljs.core.first(arglist__50434);
    var children__9393__auto__ = cljs.core.rest(arglist__50434);
    return strong__delegate(opts__9392__auto__, children__9393__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var style = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__50435) {
    var opts__9392__auto__ = cljs.core.first(arglist__50435);
    var children__9393__auto__ = cljs.core.rest(arglist__50435);
    return style__delegate(opts__9392__auto__, children__9393__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var sub = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__50436) {
    var opts__9392__auto__ = cljs.core.first(arglist__50436);
    var children__9393__auto__ = cljs.core.rest(arglist__50436);
    return sub__delegate(opts__9392__auto__, children__9393__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var summary = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__50437) {
    var opts__9392__auto__ = cljs.core.first(arglist__50437);
    var children__9393__auto__ = cljs.core.rest(arglist__50437);
    return summary__delegate(opts__9392__auto__, children__9393__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var sup = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__50438) {
    var opts__9392__auto__ = cljs.core.first(arglist__50438);
    var children__9393__auto__ = cljs.core.rest(arglist__50438);
    return sup__delegate(opts__9392__auto__, children__9393__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var table = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__50439) {
    var opts__9392__auto__ = cljs.core.first(arglist__50439);
    var children__9393__auto__ = cljs.core.rest(arglist__50439);
    return table__delegate(opts__9392__auto__, children__9393__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var tbody = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__50440) {
    var opts__9392__auto__ = cljs.core.first(arglist__50440);
    var children__9393__auto__ = cljs.core.rest(arglist__50440);
    return tbody__delegate(opts__9392__auto__, children__9393__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var td = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__50441) {
    var opts__9392__auto__ = cljs.core.first(arglist__50441);
    var children__9393__auto__ = cljs.core.rest(arglist__50441);
    return td__delegate(opts__9392__auto__, children__9393__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var tfoot = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__50442) {
    var opts__9392__auto__ = cljs.core.first(arglist__50442);
    var children__9393__auto__ = cljs.core.rest(arglist__50442);
    return tfoot__delegate(opts__9392__auto__, children__9393__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var th = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__50443) {
    var opts__9392__auto__ = cljs.core.first(arglist__50443);
    var children__9393__auto__ = cljs.core.rest(arglist__50443);
    return th__delegate(opts__9392__auto__, children__9393__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var thead = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__50444) {
    var opts__9392__auto__ = cljs.core.first(arglist__50444);
    var children__9393__auto__ = cljs.core.rest(arglist__50444);
    return thead__delegate(opts__9392__auto__, children__9393__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var time = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__50445) {
    var opts__9392__auto__ = cljs.core.first(arglist__50445);
    var children__9393__auto__ = cljs.core.rest(arglist__50445);
    return time__delegate(opts__9392__auto__, children__9393__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var title = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__50446) {
    var opts__9392__auto__ = cljs.core.first(arglist__50446);
    var children__9393__auto__ = cljs.core.rest(arglist__50446);
    return title__delegate(opts__9392__auto__, children__9393__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var tr = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__50447) {
    var opts__9392__auto__ = cljs.core.first(arglist__50447);
    var children__9393__auto__ = cljs.core.rest(arglist__50447);
    return tr__delegate(opts__9392__auto__, children__9393__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var track = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__50448) {
    var opts__9392__auto__ = cljs.core.first(arglist__50448);
    var children__9393__auto__ = cljs.core.rest(arglist__50448);
    return track__delegate(opts__9392__auto__, children__9393__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var u = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__50449) {
    var opts__9392__auto__ = cljs.core.first(arglist__50449);
    var children__9393__auto__ = cljs.core.rest(arglist__50449);
    return u__delegate(opts__9392__auto__, children__9393__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var ul = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__50450) {
    var opts__9392__auto__ = cljs.core.first(arglist__50450);
    var children__9393__auto__ = cljs.core.rest(arglist__50450);
    return ul__delegate(opts__9392__auto__, children__9393__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var var$ = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__50451) {
    var opts__9392__auto__ = cljs.core.first(arglist__50451);
    var children__9393__auto__ = cljs.core.rest(arglist__50451);
    return var$__delegate(opts__9392__auto__, children__9393__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var video = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__50452) {
    var opts__9392__auto__ = cljs.core.first(arglist__50452);
    var children__9393__auto__ = cljs.core.rest(arglist__50452);
    return video__delegate(opts__9392__auto__, children__9393__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var wbr = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__50453) {
    var opts__9392__auto__ = cljs.core.first(arglist__50453);
    var children__9393__auto__ = cljs.core.rest(arglist__50453);
    return wbr__delegate(opts__9392__auto__, children__9393__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var circle = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__50454) {
    var opts__9392__auto__ = cljs.core.first(arglist__50454);
    var children__9393__auto__ = cljs.core.rest(arglist__50454);
    return circle__delegate(opts__9392__auto__, children__9393__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var ellipse = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__50455) {
    var opts__9392__auto__ = cljs.core.first(arglist__50455);
    var children__9393__auto__ = cljs.core.rest(arglist__50455);
    return ellipse__delegate(opts__9392__auto__, children__9393__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var g = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__50456) {
    var opts__9392__auto__ = cljs.core.first(arglist__50456);
    var children__9393__auto__ = cljs.core.rest(arglist__50456);
    return g__delegate(opts__9392__auto__, children__9393__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var line = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__50457) {
    var opts__9392__auto__ = cljs.core.first(arglist__50457);
    var children__9393__auto__ = cljs.core.rest(arglist__50457);
    return line__delegate(opts__9392__auto__, children__9393__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var path = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__50458) {
    var opts__9392__auto__ = cljs.core.first(arglist__50458);
    var children__9393__auto__ = cljs.core.rest(arglist__50458);
    return path__delegate(opts__9392__auto__, children__9393__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var polyline = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__50459) {
    var opts__9392__auto__ = cljs.core.first(arglist__50459);
    var children__9393__auto__ = cljs.core.rest(arglist__50459);
    return polyline__delegate(opts__9392__auto__, children__9393__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var rect = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__50460) {
    var opts__9392__auto__ = cljs.core.first(arglist__50460);
    var children__9393__auto__ = cljs.core.rest(arglist__50460);
    return rect__delegate(opts__9392__auto__, children__9393__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var svg = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__50461) {
    var opts__9392__auto__ = cljs.core.first(arglist__50461);
    var children__9393__auto__ = cljs.core.rest(arglist__50461);
    return svg__delegate(opts__9392__auto__, children__9393__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var text = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__50462) {
    var opts__9392__auto__ = cljs.core.first(arglist__50462);
    var children__9393__auto__ = cljs.core.rest(arglist__50462);
    return text__delegate(opts__9392__auto__, children__9393__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var defs = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__50463) {
    var opts__9392__auto__ = cljs.core.first(arglist__50463);
    var children__9393__auto__ = cljs.core.rest(arglist__50463);
    return defs__delegate(opts__9392__auto__, children__9393__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var linearGradient = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__50464) {
    var opts__9392__auto__ = cljs.core.first(arglist__50464);
    var children__9393__auto__ = cljs.core.rest(arglist__50464);
    return linearGradient__delegate(opts__9392__auto__, children__9393__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var polygon = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__50465) {
    var opts__9392__auto__ = cljs.core.first(arglist__50465);
    var children__9393__auto__ = cljs.core.rest(arglist__50465);
    return polygon__delegate(opts__9392__auto__, children__9393__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var radialGradient = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__50466) {
    var opts__9392__auto__ = cljs.core.first(arglist__50466);
    var children__9393__auto__ = cljs.core.rest(arglist__50466);
    return radialGradient__delegate(opts__9392__auto__, children__9393__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__9392__auto__, children__9393__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9392__auto__, children__9393__auto__)));
  };
  var stop = function(opts__9392__auto__, var_args) {
    var children__9393__auto__ = null;
    if (arguments.length > 1) {
      children__9393__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__9392__auto__, children__9393__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__50467) {
    var opts__9392__auto__ = cljs.core.first(arglist__50467);
    var children__9393__auto__ = cljs.core.rest(arglist__50467);
    return stop__delegate(opts__9392__auto__, children__9393__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = input;
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.baseUrl_ = this.window_.location.href.split("#")[0];
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = iframe;
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.HAS_ONHASHCHANGE = goog.userAgent.IE && goog.userAgent.isDocumentMode(8) || (goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.2") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("532.1"));
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentMode(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.HAS_ONHASHCHANGE && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!goog.userAgent.IE || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.HAS_ONHASHCHANGE) {
        if (goog.userAgent.IE) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = this.baseUrl_;
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || (hasHash || token)) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || (width == "" || replacement.length >= width)) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clustermap.formats.number");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
clustermap.formats.number.round_decimal = function round_decimal(n, dec_places) {
  if (cljs.core.truth_(dec_places)) {
    return Math.round(n * Math.pow(10, dec_places)) / Math.pow(10, dec_places);
  } else {
    return n;
  }
};
clustermap.formats.number.prefix_sign = function prefix_sign(n_str, n, plus_QMARK_) {
  if (n < 0) {
    return "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
  } else {
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = plus_QMARK_;
      if (cljs.core.truth_(and__3527__auto__)) {
        return n > 0;
      } else {
        return and__3527__auto__;
      }
    }())) {
      return "+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n_str);
    } else {
      if (true) {
        return n_str;
      } else {
        return null;
      }
    }
  }
};
clustermap.formats.number.split_thousands = function split_thousands(n_str) {
  return clojure.string.join.call(null, ",", cljs.core.map.call(null, function(p1__46491_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.str, p1__46491_SHARP_);
  }, cljs.core.reverse.call(null, cljs.core.map.call(null, cljs.core.reverse, cljs.core.partition.call(null, 3, 3, cljs.core.PersistentVector.EMPTY, cljs.core.reverse.call(null, n_str))))));
};
clustermap.formats.number.eng_notation = function() {
  var eng_notation__delegate = function(n, p__46492) {
    var map__46497 = p__46492;
    var map__46497__$1 = cljs.core.seq_QMARK_.call(null, map__46497) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46497) : map__46497;
    var sf = cljs.core.get.call(null, map__46497__$1, new cljs.core.Keyword(null, "sf", "sf", 1013907909));
    if (cljs.core.truth_(n)) {
      var sign = n > 0 ? 1 : cljs.core._EQ_.call(null, n, 0) ? 0 : n < 0 ? -1 : null;
      var abs_n = Math.abs(n);
      var vec__46498 = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(abs_n)).split(".");
      var i = cljs.core.nth.call(null, vec__46498, 0, null);
      var d = cljs.core.nth.call(null, vec__46498, 1, null);
      var exp = abs_n >= 1 ? 3 * ((cljs.core.count.call(null, i) - 1) / 3 | 0) : abs_n > 0 ? -3 * ((3 + cljs.core.count.call(null, cljs.core.take_while.call(null, function(sign, abs_n, vec__46498, i, d, map__46497, map__46497__$1, sf) {
        return function(c) {
          return cljs.core._EQ_.call(null, c, "0");
        };
      }(sign, abs_n, vec__46498, i, d, map__46497, map__46497__$1, sf), d))) / 3 | 0) : true ? 0 : null;
      var usig = abs_n * Math.pow(10, -1 * exp);
      var vec__46499 = cljs.core.truth_(sf) ? ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(usig)).split(".") : null;
      var usig_i = cljs.core.nth.call(null, vec__46499, 0, null);
      var usig_d = cljs.core.nth.call(null, vec__46499, 1, null);
      var sigmult = cljs.core.truth_(function() {
        var and__3527__auto__ = sf;
        if (cljs.core.truth_(and__3527__auto__)) {
          return usig > 0;
        } else {
          return and__3527__auto__;
        }
      }()) ? Math.pow(10, cljs.core.count.call(null, usig_i) - sf) : null;
      var round_usig_str = cljs.core.truth_(sigmult) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sigmult * Math.round(usig / sigmult)) : null;
      var vec__46500 = cljs.core.truth_(round_usig_str) ? round_usig_str.split(".") : null;
      var round_usig_i = cljs.core.nth.call(null, vec__46500, 0, null);
      var round_usig_d = cljs.core.nth.call(null, vec__46500, 1, null);
      var trunc_usig_str = cljs.core.truth_(round_usig_str) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.filter.call(null, cljs.core.identity, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, sf, round_usig_i), cljs.core.repeat.call(null, cljs.core.count.call(null, round_usig_i) - sf, "0"), cljs.core.count.call(null, round_usig_d) > 0 ? new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".", cljs.core.take.call(null, sf - cljs.core.count.call(null, round_usig_i), round_usig_d)], null) : null], null))))) : null;
      var trunc_usig = cljs.core.truth_(trunc_usig_str) ? parseFloat(trunc_usig_str) : null;
      var sig = sign * function() {
        var or__3539__auto__ = trunc_usig;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return usig;
        }
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sig, exp], null);
    } else {
      return null;
    }
  };
  var eng_notation = function(n, var_args) {
    var p__46492 = null;
    if (arguments.length > 1) {
      p__46492 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return eng_notation__delegate.call(this, n, p__46492);
  };
  eng_notation.cljs$lang$maxFixedArity = 1;
  eng_notation.cljs$lang$applyTo = function(arglist__46501) {
    var n = cljs.core.first(arglist__46501);
    var p__46492 = cljs.core.rest(arglist__46501);
    return eng_notation__delegate(n, p__46492);
  };
  eng_notation.cljs$core$IFn$_invoke$arity$variadic = eng_notation__delegate;
  return eng_notation;
}();
clustermap.formats.number.readable = function() {
  var readable__delegate = function(n, p__46502) {
    var map__46505 = p__46502;
    var map__46505__$1 = cljs.core.seq_QMARK_.call(null, map__46505) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46505) : map__46505;
    var default$ = cljs.core.get.call(null, map__46505__$1, new cljs.core.Keyword(null, "default", "default", 2558708147));
    var plus_QMARK_ = cljs.core.get.call(null, map__46505__$1, new cljs.core.Keyword(null, "plus?", "plus?", 1120672087));
    var dec = cljs.core.get.call(null, map__46505__$1, new cljs.core.Keyword(null, "dec", "dec", 1014003572));
    if (cljs.core.truth_(n)) {
      var abs_n = Math.abs(n);
      var round_n = clustermap.formats.number.round_decimal.call(null, abs_n, dec);
      var round_n_str = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(round_n);
      var vec__46506 = clojure.string.split.call(null, round_n_str, /\./);
      var i_str = cljs.core.nth.call(null, vec__46506, 0, null);
      var d_str = cljs.core.nth.call(null, vec__46506, 1, null);
      var t_str = clustermap.formats.number.split_thousands.call(null, i_str);
      var t_dec_str = clojure.string.join.call(null, ".", cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t_str, d_str], null)));
      return clustermap.formats.number.prefix_sign.call(null, t_dec_str, n, plus_QMARK_);
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__46502 = null;
    if (arguments.length > 1) {
      p__46502 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__46502);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__46507) {
    var n = cljs.core.first(arglist__46507);
    var p__46502 = cljs.core.rest(arglist__46507);
    return readable__delegate(n, p__46502);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.number.fnum = clustermap.formats.number.readable;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__51071_SHARP_) {
      return max === p1__51071_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__51072__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__51072 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__51072__delegate.call(this, s1, s2, sets);
    };
    G__51072.cljs$lang$maxFixedArity = 2;
    G__51072.cljs$lang$applyTo = function(arglist__51073) {
      var s1 = cljs.core.first(arglist__51073);
      arglist__51073 = cljs.core.next(arglist__51073);
      var s2 = cljs.core.first(arglist__51073);
      var sets = cljs.core.rest(arglist__51073);
      return G__51072__delegate(s1, s2, sets);
    };
    G__51072.cljs$core$IFn$_invoke$arity$variadic = G__51072__delegate;
    return G__51072;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__51075 = s2;
        var G__51076 = s1;
        s1 = G__51075;
        s2 = G__51076;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__51077__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__51074_SHARP_) {
        return-cljs.core.count.call(null, p1__51074_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__51077 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__51077__delegate.call(this, s1, s2, sets);
    };
    G__51077.cljs$lang$maxFixedArity = 2;
    G__51077.cljs$lang$applyTo = function(arglist__51078) {
      var s1 = cljs.core.first(arglist__51078);
      arglist__51078 = cljs.core.next(arglist__51078);
      var s2 = cljs.core.first(arglist__51078);
      var sets = cljs.core.rest(arglist__51078);
      return G__51077__delegate(s1, s2, sets);
    };
    G__51077.cljs$core$IFn$_invoke$arity$variadic = G__51077__delegate;
    return G__51077;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__51079__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__51079 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__51079__delegate.call(this, s1, s2, sets);
    };
    G__51079.cljs$lang$maxFixedArity = 2;
    G__51079.cljs$lang$applyTo = function(arglist__51080) {
      var s1 = cljs.core.first(arglist__51080);
      arglist__51080 = cljs.core.next(arglist__51080);
      var s2 = cljs.core.first(arglist__51080);
      var sets = cljs.core.rest(arglist__51080);
      return G__51079__delegate(s1, s2, sets);
    };
    G__51079.cljs$core$IFn$_invoke$arity$variadic = G__51079__delegate;
    return G__51079;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__51081_SHARP_) {
    return cljs.core.select_keys.call(null, p1__51081_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__51084) {
    var vec__51085 = p__51084;
    var old = cljs.core.nth.call(null, vec__51085, 0, null);
    var new$ = cljs.core.nth.call(null, vec__51085, 1, null);
    if (cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old);
    } else {
      return m;
    }
  }, map, kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__51086_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__51086_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__51089) {
    var vec__51090 = p__51089;
    var k = cljs.core.nth.call(null, vec__51090, 0, null);
    var v = cljs.core.nth.call(null, vec__51090, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__51097 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__51097, 0, null);
      var s = cljs.core.nth.call(null, vec__51097, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__51097, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__51097, r, s, idx) {
              return function(p1__51091_SHARP_, p2__51092_SHARP_) {
                return cljs.core.conj.call(null, p1__51091_SHARP_, cljs.core.merge.call(null, p2__51092_SHARP_, x));
              };
            }(found, ks, vec__51097, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__51097, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__51098 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__51098, 0, null);
    var s = cljs.core.nth.call(null, vec__51098, 1, null);
    var k = cljs.core.nth.call(null, vec__51098, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__51098, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__51098, r, s, k, idx) {
            return function(p1__51093_SHARP_, p2__51094_SHARP_) {
              return cljs.core.conj.call(null, p1__51093_SHARP_, cljs.core.merge.call(null, p2__51094_SHARP_, x));
            };
          }(found, vec__51098, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__51098, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__51099_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__51099_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__51100_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__51100_SHARP_);
  }, set2);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
  var obj50878 = {};
  return obj50878;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = sablono.util.to_str[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = sablono.util.to_str["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj50880 = {};
  return obj50880;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = sablono.util.to_uri[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = sablono.util.to_uri["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__50881) {
    var xs = cljs.core.seq(arglist__50881);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camel_case = function camel_case(k) {
  if (cljs.core.truth_(k)) {
    var vec__50883 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__50883, 0, null);
    var words = cljs.core.nthnext.call(null, vec__50883, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || (cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word))) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  var dom_attrs = cljs.core.merge.call(null, cljs.core.zipmap.call(null, cljs.core.keys.call(null, attrs), cljs.core.map.call(null, sablono.util.camel_case, cljs.core.keys.call(null, attrs))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.Keyword(null, "className", "className", 1004015509), new cljs.core.Keyword(null, "for", "for", 1014005819), new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112)], null));
  return clojure.set.rename_keys.call(null, attrs, dom_attrs);
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var v = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.empty_QMARK_.call(null, v)) {
      return cljs.core.dissoc.call(null, m__$1, k);
    } else {
      return m__$1;
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__50884_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__50884_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__50884_SHARP_], null);
      } else {
        if (cljs.core.sequential_QMARK_.call(null, p1__50884_SHARP_)) {
          return p1__50884_SHARP_;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__50884_SHARP_], null);
          } else {
            return null;
          }
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", 1108647146), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__50885) {
    var maps = cljs.core.seq(arglist__50885);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.strip_css = function strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.util.match_tag = function match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__50889 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, "Can't match CSS tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.Keyword(null, "default", "default", 2558708147) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, 
  matches)], null) : null;
  var tag_name = cljs.core.nth.call(null, vec__50889, 0, null);
  var names = cljs.core.nth.call(null, vec__50889, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, cljs.core.first.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__50889, tag_name, names) {
    return function(p1__50886_SHARP_) {
      return cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__50886_SHARP_));
    };
  }(matches, vec__50889, tag_name, names), names))), cljs.core.vec.call(null, cljs.core.map.call(null, sablono.util.strip_css, cljs.core.filter.call(null, function(matches, vec__50889, tag_name, names) {
    return function(p1__50887_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__50887_SHARP_));
    };
  }(matches, vec__50889, tag_name, names), names)))], null);
};
sablono.util.normalize_element = function normalize_element(p__50890) {
  var vec__50893 = p__50890;
  var tag = cljs.core.nth.call(null, vec__50893, 0, null);
  var content = cljs.core.nthnext.call(null, vec__50893, 1);
  if (!(tag instanceof cljs.core.Keyword || (tag instanceof cljs.core.Symbol || typeof tag === "string"))) {
    throw cljs.core.ex_info.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid element name.", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag, new cljs.core.Keyword(null, "content", "content", 1965434859), content], null));
  } else {
  }
  var vec__50894 = sablono.util.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__50894, 0, null);
  var id = cljs.core.nth.call(null, vec__50894, 1, null);
  var class$ = cljs.core.nth.call(null, vec__50894, 2, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "class", "class", 1108647146), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", "React.DOM." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)));
};
sablono.util.react_fn = function react_fn(tag) {
  var dom_fn = sablono.util.react_symbol.call(null, tag);
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), null, new cljs.core.Keyword(null, "input", "input", 1114262332), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return dom_fn;
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, "\\s+" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, attr)) + "\\s*\x3d\\s*['\"][^\"']+['\"]");
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3539__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
  } else {
    var base = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util._STAR_base_url_STAR_);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(base) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj50874 = {};
  return obj50874;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "displayName":display_name});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input, "Input");
sablono.interpreter.option = sablono.interpreter.wrap_form_element.call(null, React.DOM.option, "Option");
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea, "Textarea");
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4124__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dom_fn__$1 = temp__4124__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "input", "input", 1114262332), sablono.interpreter.input, new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, "Unsupported HTML tag: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, tag)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = class$ instanceof Array ? clojure.string.join.call(null, " ", class$) : class$;
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, class$__$1))) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__50876 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__50876, 0, null);
  var attrs = cljs.core.nth.call(null, vec__50876, 1, null);
  var content = cljs.core.nth.call(null, vec__50876, 2, null);
  return sablono.interpreter.dom_fn.call(null, tag).call(null, sablono.interpreter.attributes.call(null, attrs), cljs.core.sequential_QMARK_.call(null, content) && cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, content)) ? sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)) : cljs.core.truth_(content) ? sablono.interpreter.interpret.call(null, content) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? null : null);
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return outer.call(null, form);
      } else {
        return null;
      }
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__50765) {
    var vec__50766 = p__50765;
    var k = cljs.core.nth.call(null, vec__50766, 0, null);
    var v = cljs.core.nth.call(null, vec__50766, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__50769) {
    var vec__50770 = p__50769;
    var k = cljs.core.nth.call(null, vec__50770, 0, null);
    var v = cljs.core.nth.call(null, vec__50770, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__50773__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__50772 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__50772, 0, null);
        var body = cljs.core.nthnext.call(null, vec__50772, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__50773 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__50773__delegate.call(this, args);
    };
    G__50773.cljs$lang$maxFixedArity = 0;
    G__50773.cljs$lang$applyTo = function(arglist__50774) {
      var args = cljs.core.seq(arglist__50774);
      return G__50773__delegate(args);
    };
    G__50773.cljs$core$IFn$_invoke$arity$variadic = G__50773__delegate;
    return G__50773;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4264__auto__ = function iter__50779(s__50780) {
    return new cljs.core.LazySeq(null, function() {
      var s__50780__$1 = s__50780;
      while (true) {
        var temp__4126__auto__ = cljs.core.seq.call(null, s__50780__$1);
        if (temp__4126__auto__) {
          var s__50780__$2 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__50780__$2)) {
            var c__4262__auto__ = cljs.core.chunk_first.call(null, s__50780__$2);
            var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
            var b__50782 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
            if (function() {
              var i__50781 = 0;
              while (true) {
                if (i__50781 < size__4263__auto__) {
                  var args = cljs.core._nth.call(null, c__4262__auto__, i__50781);
                  cljs.core.chunk_append.call(null, b__50782, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", -1682549128, null), args)));
                  var G__50783 = i__50781 + 1;
                  i__50781 = G__50783;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50782), iter__50779.call(null, cljs.core.chunk_rest.call(null, s__50780__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50782), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__50780__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", -1682549128, null), args)), iter__50779.call(null, cljs.core.rest.call(null, s__50780__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4264__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  return React.renderComponentToString(component);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4264__auto__ = function iter__50788(s__50789) {
      return new cljs.core.LazySeq(null, function() {
        var s__50789__$1 = s__50789;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__50789__$1);
          if (temp__4126__auto__) {
            var s__50789__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__50789__$2)) {
              var c__4262__auto__ = cljs.core.chunk_first.call(null, s__50789__$2);
              var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
              var b__50791 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
              if (function() {
                var i__50790 = 0;
                while (true) {
                  if (i__50790 < size__4263__auto__) {
                    var style = cljs.core._nth.call(null, c__4262__auto__, i__50790);
                    cljs.core.chunk_append.call(null, b__50791, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "text/css", new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1014017035), "stylesheet"], null)], null));
                    var G__50792 = i__50790 + 1;
                    i__50790 = G__50792;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50791), iter__50788.call(null, cljs.core.chunk_rest.call(null, s__50789__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50791), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__50789__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "text/css", new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1014017035), "stylesheet"], null)], null), iter__50788.call(null, 
              cljs.core.rest.call(null, s__50789__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4264__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__50793) {
    var styles = cljs.core.seq(arglist__50793);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.9.0.js");
};
sablono.core.link_to50794 = function() {
  var link_to50794__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to50794 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to50794__delegate.call(this, url, content);
  };
  link_to50794.cljs$lang$maxFixedArity = 1;
  link_to50794.cljs$lang$applyTo = function(arglist__50795) {
    var url = cljs.core.first(arglist__50795);
    var content = cljs.core.rest(arglist__50795);
    return link_to50794__delegate(url, content);
  };
  link_to50794.cljs$core$IFn$_invoke$arity$variadic = link_to50794__delegate;
  return link_to50794;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to50794);
sablono.core.mail_to50796 = function() {
  var mail_to50796__delegate = function(e_mail, p__50797) {
    var vec__50799 = p__50797;
    var content = cljs.core.nth.call(null, vec__50799, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 1017115293), "mailto:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_mail)], null), function() {
      var or__3539__auto__ = content;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to50796 = function(e_mail, var_args) {
    var p__50797 = null;
    if (arguments.length > 1) {
      p__50797 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to50796__delegate.call(this, e_mail, p__50797);
  };
  mail_to50796.cljs$lang$maxFixedArity = 1;
  mail_to50796.cljs$lang$applyTo = function(arglist__50800) {
    var e_mail = cljs.core.first(arglist__50800);
    var p__50797 = cljs.core.rest(arglist__50800);
    return mail_to50796__delegate(e_mail, p__50797);
  };
  mail_to50796.cljs$core$IFn$_invoke$arity$variadic = mail_to50796__delegate;
  return mail_to50796;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to50796);
sablono.core.unordered_list50801 = function unordered_list50801(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", 1013907977), function() {
    var iter__4264__auto__ = function iter__50806(s__50807) {
      return new cljs.core.LazySeq(null, function() {
        var s__50807__$1 = s__50807;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__50807__$1);
          if (temp__4126__auto__) {
            var s__50807__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__50807__$2)) {
              var c__4262__auto__ = cljs.core.chunk_first.call(null, s__50807__$2);
              var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
              var b__50809 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
              if (function() {
                var i__50808 = 0;
                while (true) {
                  if (i__50808 < size__4263__auto__) {
                    var x = cljs.core._nth.call(null, c__4262__auto__, i__50808);
                    cljs.core.chunk_append.call(null, b__50809, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null));
                    var G__50810 = i__50808 + 1;
                    i__50808 = G__50810;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50809), iter__50806.call(null, cljs.core.chunk_rest.call(null, s__50807__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50809), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__50807__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null), iter__50806.call(null, cljs.core.rest.call(null, s__50807__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4264__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list50801);
sablono.core.ordered_list50811 = function ordered_list50811(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 1013907791), function() {
    var iter__4264__auto__ = function iter__50816(s__50817) {
      return new cljs.core.LazySeq(null, function() {
        var s__50817__$1 = s__50817;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__50817__$1);
          if (temp__4126__auto__) {
            var s__50817__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__50817__$2)) {
              var c__4262__auto__ = cljs.core.chunk_first.call(null, s__50817__$2);
              var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
              var b__50819 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
              if (function() {
                var i__50818 = 0;
                while (true) {
                  if (i__50818 < size__4263__auto__) {
                    var x = cljs.core._nth.call(null, c__4262__auto__, i__50818);
                    cljs.core.chunk_append.call(null, b__50819, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null));
                    var G__50820 = i__50818 + 1;
                    i__50818 = G__50820;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50819), iter__50816.call(null, cljs.core.chunk_rest.call(null, s__50817__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50819), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__50817__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null), iter__50816.call(null, cljs.core.rest.call(null, s__50817__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4264__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list50811);
sablono.core.image50821 = function() {
  var image50821 = null;
  var image50821__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", 1014018390), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image50821__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 1014018390), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", 1014000923), alt], null)], null);
  };
  image50821 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image50821__1.call(this, src);
      case 2:
        return image50821__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image50821.cljs$core$IFn$_invoke$arity$1 = image50821__1;
  image50821.cljs$core$IFn$_invoke$arity$2 = image50821__2;
  return image50821;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image50821);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__50822_SHARP_, p2__50823_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__50822_SHARP_) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__50823_SHARP_) + "]";
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__50824_SHARP_, p2__50825_SHARP_) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__50824_SHARP_) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__50825_SHARP_);
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), type, new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 1125876963), 
  value], null)], null);
};
sablono.core.color_field50826 = function() {
  var color_field50826 = null;
  var color_field50826__1 = function(name__10089__auto__) {
    return color_field50826.call(null, name__10089__auto__, null);
  };
  var color_field50826__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "color", "color", -1545688804, null)), name__10089__auto__, value__10090__auto__);
  };
  color_field50826 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return color_field50826__1.call(this, name__10089__auto__);
      case 2:
        return color_field50826__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  color_field50826.cljs$core$IFn$_invoke$arity$1 = color_field50826__1;
  color_field50826.cljs$core$IFn$_invoke$arity$2 = color_field50826__2;
  return color_field50826;
}();
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field50826);
sablono.core.date_field50827 = function() {
  var date_field50827 = null;
  var date_field50827__1 = function(name__10089__auto__) {
    return date_field50827.call(null, name__10089__auto__, null);
  };
  var date_field50827__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "date", "date", -1637455513, null)), name__10089__auto__, value__10090__auto__);
  };
  date_field50827 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return date_field50827__1.call(this, name__10089__auto__);
      case 2:
        return date_field50827__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_field50827.cljs$core$IFn$_invoke$arity$1 = date_field50827__1;
  date_field50827.cljs$core$IFn$_invoke$arity$2 = date_field50827__2;
  return date_field50827;
}();
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field50827);
sablono.core.datetime_field50828 = function() {
  var datetime_field50828 = null;
  var datetime_field50828__1 = function(name__10089__auto__) {
    return datetime_field50828.call(null, name__10089__auto__, null);
  };
  var datetime_field50828__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime", "datetime", 153171252, null)), name__10089__auto__, value__10090__auto__);
  };
  datetime_field50828 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_field50828__1.call(this, name__10089__auto__);
      case 2:
        return datetime_field50828__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_field50828.cljs$core$IFn$_invoke$arity$1 = datetime_field50828__1;
  datetime_field50828.cljs$core$IFn$_invoke$arity$2 = datetime_field50828__2;
  return datetime_field50828;
}();
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field50828);
sablono.core.datetime_local_field50829 = function() {
  var datetime_local_field50829 = null;
  var datetime_local_field50829__1 = function(name__10089__auto__) {
    return datetime_local_field50829.call(null, name__10089__auto__, null);
  };
  var datetime_local_field50829__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "datetime-local", "datetime-local", 1631019090, null)), name__10089__auto__, value__10090__auto__);
  };
  datetime_local_field50829 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return datetime_local_field50829__1.call(this, name__10089__auto__);
      case 2:
        return datetime_local_field50829__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  datetime_local_field50829.cljs$core$IFn$_invoke$arity$1 = datetime_local_field50829__1;
  datetime_local_field50829.cljs$core$IFn$_invoke$arity$2 = datetime_local_field50829__2;
  return datetime_local_field50829;
}();
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field50829);
sablono.core.email_field50830 = function() {
  var email_field50830 = null;
  var email_field50830__1 = function(name__10089__auto__) {
    return email_field50830.call(null, name__10089__auto__, null);
  };
  var email_field50830__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "email", "email", -1543912107, null)), name__10089__auto__, value__10090__auto__);
  };
  email_field50830 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return email_field50830__1.call(this, name__10089__auto__);
      case 2:
        return email_field50830__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field50830.cljs$core$IFn$_invoke$arity$1 = email_field50830__1;
  email_field50830.cljs$core$IFn$_invoke$arity$2 = email_field50830__2;
  return email_field50830;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field50830);
sablono.core.file_field50831 = function() {
  var file_field50831 = null;
  var file_field50831__1 = function(name__10089__auto__) {
    return file_field50831.call(null, name__10089__auto__, null);
  };
  var file_field50831__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "file", "file", -1637388491, null)), name__10089__auto__, value__10090__auto__);
  };
  file_field50831 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return file_field50831__1.call(this, name__10089__auto__);
      case 2:
        return file_field50831__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  file_field50831.cljs$core$IFn$_invoke$arity$1 = file_field50831__1;
  file_field50831.cljs$core$IFn$_invoke$arity$2 = file_field50831__2;
  return file_field50831;
}();
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field50831);
sablono.core.hidden_field50832 = function() {
  var hidden_field50832 = null;
  var hidden_field50832__1 = function(name__10089__auto__) {
    return hidden_field50832.call(null, name__10089__auto__, null);
  };
  var hidden_field50832__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "hidden", "hidden", 1436948323, null)), name__10089__auto__, value__10090__auto__);
  };
  hidden_field50832 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return hidden_field50832__1.call(this, name__10089__auto__);
      case 2:
        return hidden_field50832__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field50832.cljs$core$IFn$_invoke$arity$1 = hidden_field50832__1;
  hidden_field50832.cljs$core$IFn$_invoke$arity$2 = hidden_field50832__2;
  return hidden_field50832;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field50832);
sablono.core.month_field50833 = function() {
  var month_field50833 = null;
  var month_field50833__1 = function(name__10089__auto__) {
    return month_field50833.call(null, name__10089__auto__, null);
  };
  var month_field50833__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "month", "month", -1536451527, null)), name__10089__auto__, value__10090__auto__);
  };
  month_field50833 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return month_field50833__1.call(this, name__10089__auto__);
      case 2:
        return month_field50833__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  month_field50833.cljs$core$IFn$_invoke$arity$1 = month_field50833__1;
  month_field50833.cljs$core$IFn$_invoke$arity$2 = month_field50833__2;
  return month_field50833;
}();
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field50833);
sablono.core.number_field50834 = function() {
  var number_field50834 = null;
  var number_field50834__1 = function(name__10089__auto__) {
    return number_field50834.call(null, name__10089__auto__, null);
  };
  var number_field50834__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "number", "number", 1620071682, null)), name__10089__auto__, value__10090__auto__);
  };
  number_field50834 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return number_field50834__1.call(this, name__10089__auto__);
      case 2:
        return number_field50834__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_field50834.cljs$core$IFn$_invoke$arity$1 = number_field50834__1;
  number_field50834.cljs$core$IFn$_invoke$arity$2 = number_field50834__2;
  return number_field50834;
}();
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field50834);
sablono.core.password_field50835 = function() {
  var password_field50835 = null;
  var password_field50835__1 = function(name__10089__auto__) {
    return password_field50835.call(null, name__10089__auto__, null);
  };
  var password_field50835__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "password", "password", -423545772, null)), name__10089__auto__, value__10090__auto__);
  };
  password_field50835 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return password_field50835__1.call(this, name__10089__auto__);
      case 2:
        return password_field50835__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field50835.cljs$core$IFn$_invoke$arity$1 = password_field50835__1;
  password_field50835.cljs$core$IFn$_invoke$arity$2 = password_field50835__2;
  return password_field50835;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field50835);
sablono.core.range_field50836 = function() {
  var range_field50836 = null;
  var range_field50836__1 = function(name__10089__auto__) {
    return range_field50836.call(null, name__10089__auto__, null);
  };
  var range_field50836__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "range", "range", -1532251402, null)), name__10089__auto__, value__10090__auto__);
  };
  range_field50836 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return range_field50836__1.call(this, name__10089__auto__);
      case 2:
        return range_field50836__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range_field50836.cljs$core$IFn$_invoke$arity$1 = range_field50836__1;
  range_field50836.cljs$core$IFn$_invoke$arity$2 = range_field50836__2;
  return range_field50836;
}();
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field50836);
sablono.core.search_field50837 = function() {
  var search_field50837 = null;
  var search_field50837__1 = function(name__10089__auto__) {
    return search_field50837.call(null, name__10089__auto__, null);
  };
  var search_field50837__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "search", "search", 1748098913, null)), name__10089__auto__, value__10090__auto__);
  };
  search_field50837 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return search_field50837__1.call(this, name__10089__auto__);
      case 2:
        return search_field50837__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  search_field50837.cljs$core$IFn$_invoke$arity$1 = search_field50837__1;
  search_field50837.cljs$core$IFn$_invoke$arity$2 = search_field50837__2;
  return search_field50837;
}();
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field50837);
sablono.core.tel_field50838 = function() {
  var tel_field50838 = null;
  var tel_field50838__1 = function(name__10089__auto__) {
    return tel_field50838.call(null, name__10089__auto__, null);
  };
  var tel_field50838__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "tel", "tel", -1640416812, null)), name__10089__auto__, value__10090__auto__);
  };
  tel_field50838 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return tel_field50838__1.call(this, name__10089__auto__);
      case 2:
        return tel_field50838__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tel_field50838.cljs$core$IFn$_invoke$arity$1 = tel_field50838__1;
  tel_field50838.cljs$core$IFn$_invoke$arity$2 = tel_field50838__2;
  return tel_field50838;
}();
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field50838);
sablono.core.text_field50839 = function() {
  var text_field50839 = null;
  var text_field50839__1 = function(name__10089__auto__) {
    return text_field50839.call(null, name__10089__auto__, null);
  };
  var text_field50839__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "text", "text", -1636974874, null)), name__10089__auto__, value__10090__auto__);
  };
  text_field50839 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return text_field50839__1.call(this, name__10089__auto__);
      case 2:
        return text_field50839__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field50839.cljs$core$IFn$_invoke$arity$1 = text_field50839__1;
  text_field50839.cljs$core$IFn$_invoke$arity$2 = text_field50839__2;
  return text_field50839;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field50839);
sablono.core.time_field50840 = function() {
  var time_field50840 = null;
  var time_field50840__1 = function(name__10089__auto__) {
    return time_field50840.call(null, name__10089__auto__, null);
  };
  var time_field50840__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "time", "time", -1636971386, null)), name__10089__auto__, value__10090__auto__);
  };
  time_field50840 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return time_field50840__1.call(this, name__10089__auto__);
      case 2:
        return time_field50840__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_field50840.cljs$core$IFn$_invoke$arity$1 = time_field50840__1;
  time_field50840.cljs$core$IFn$_invoke$arity$2 = time_field50840__2;
  return time_field50840;
}();
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field50840);
sablono.core.url_field50841 = function() {
  var url_field50841 = null;
  var url_field50841__1 = function(name__10089__auto__) {
    return url_field50841.call(null, name__10089__auto__, null);
  };
  var url_field50841__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "url", "url", -1640415448, null)), name__10089__auto__, value__10090__auto__);
  };
  url_field50841 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return url_field50841__1.call(this, name__10089__auto__);
      case 2:
        return url_field50841__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  url_field50841.cljs$core$IFn$_invoke$arity$1 = url_field50841__1;
  url_field50841.cljs$core$IFn$_invoke$arity$2 = url_field50841__2;
  return url_field50841;
}();
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field50841);
sablono.core.week_field50842 = function() {
  var week_field50842 = null;
  var week_field50842__1 = function(name__10089__auto__) {
    return week_field50842.call(null, name__10089__auto__, null);
  };
  var week_field50842__2 = function(name__10089__auto__, value__10090__auto__) {
    return sablono.core.input_field_STAR_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol(null, "week", "week", -1636886099, null)), name__10089__auto__, value__10090__auto__);
  };
  week_field50842 = function(name__10089__auto__, value__10090__auto__) {
    switch(arguments.length) {
      case 1:
        return week_field50842__1.call(this, name__10089__auto__);
      case 2:
        return week_field50842__2.call(this, name__10089__auto__, value__10090__auto__);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  week_field50842.cljs$core$IFn$_invoke$arity$1 = week_field50842__1;
  week_field50842.cljs$core$IFn$_invoke$arity$2 = week_field50842__2;
  return week_field50842;
}();
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field50842);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box50843 = function() {
  var check_box50843 = null;
  var check_box50843__1 = function(name) {
    return check_box50843.call(null, name, null);
  };
  var check_box50843__2 = function(name, checked_QMARK_) {
    return check_box50843.call(null, name, checked_QMARK_, "true");
  };
  var check_box50843__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), "checkbox", new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    1125876963), value, new cljs.core.Keyword(null, "checked", "checked", 1756218137), checked_QMARK_], null)], null);
  };
  check_box50843 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box50843__1.call(this, name);
      case 2:
        return check_box50843__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box50843__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box50843.cljs$core$IFn$_invoke$arity$1 = check_box50843__1;
  check_box50843.cljs$core$IFn$_invoke$arity$2 = check_box50843__2;
  check_box50843.cljs$core$IFn$_invoke$arity$3 = check_box50843__3;
  return check_box50843;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box50843);
sablono.core.radio_button50844 = function() {
  var radio_button50844 = null;
  var radio_button50844__1 = function(group) {
    return radio_button50844.call(null, group, null);
  };
  var radio_button50844__2 = function(group, checked_QMARK_) {
    return radio_button50844.call(null, group, checked_QMARK_, "true");
  };
  var radio_button50844__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), "radio", new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, 
    group)) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sablono.util.as_str.call(null, value))), new cljs.core.Keyword(null, "value", "value", 1125876963), value, new cljs.core.Keyword(null, "checked", "checked", 1756218137), checked_QMARK_], null)], null);
  };
  radio_button50844 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button50844__1.call(this, group);
      case 2:
        return radio_button50844__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button50844__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button50844.cljs$core$IFn$_invoke$arity$1 = radio_button50844__1;
  radio_button50844.cljs$core$IFn$_invoke$arity$2 = radio_button50844__2;
  radio_button50844.cljs$core$IFn$_invoke$arity$3 = radio_button50844__3;
  return radio_button50844;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button50844);
sablono.core.select_options50845 = function() {
  var select_options50845 = null;
  var select_options50845__1 = function(coll) {
    return select_options50845.call(null, coll, null);
  };
  var select_options50845__2 = function(coll, selected) {
    var iter__4264__auto__ = function iter__50854(s__50855) {
      return new cljs.core.LazySeq(null, function() {
        var s__50855__$1 = s__50855;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__50855__$1);
          if (temp__4126__auto__) {
            var s__50855__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__50855__$2)) {
              var c__4262__auto__ = cljs.core.chunk_first.call(null, s__50855__$2);
              var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
              var b__50857 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
              if (function() {
                var i__50856 = 0;
                while (true) {
                  if (i__50856 < size__4263__auto__) {
                    var x = cljs.core._nth.call(null, c__4262__auto__, i__50856);
                    cljs.core.chunk_append.call(null, b__50857, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__50860 = x;
                      var text = cljs.core.nth.call(null, vec__50860, 0, null);
                      var val = cljs.core.nth.call(null, vec__50860, 1, null);
                      var disabled_QMARK_ = cljs.core.nth.call(null, vec__50860, 2, null);
                      var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1116631654), text], null), select_options50845.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), val, new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", 1284845038), disabled_QMARK___$1], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__50862 = i__50856 + 1;
                    i__50856 = G__50862;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50857), iter__50854.call(null, cljs.core.chunk_rest.call(null, s__50855__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__50857), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__50855__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__50861 = x;
                var text = cljs.core.nth.call(null, vec__50861, 0, null);
                var val = cljs.core.nth.call(null, vec__50861, 1, null);
                var disabled_QMARK_ = cljs.core.nth.call(null, vec__50861, 2, null);
                var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1116631654), text], null), select_options50845.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "value", "value", 1125876963), val, new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, val, selected), new cljs.core.Keyword(null, "disabled", "disabled", 1284845038), disabled_QMARK___$1], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__50854.call(null, cljs.core.rest.call(null, s__50855__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4264__auto__.call(null, coll);
  };
  select_options50845 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options50845__1.call(this, coll);
      case 2:
        return select_options50845__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options50845.cljs$core$IFn$_invoke$arity$1 = select_options50845__1;
  select_options50845.cljs$core$IFn$_invoke$arity$2 = select_options50845__2;
  return select_options50845;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options50845);
sablono.core.drop_down50863 = function() {
  var drop_down50863 = null;
  var drop_down50863__2 = function(name, options) {
    return drop_down50863.call(null, name, options, null);
  };
  var drop_down50863__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down50863 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down50863__2.call(this, name, options);
      case 3:
        return drop_down50863__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down50863.cljs$core$IFn$_invoke$arity$2 = drop_down50863__2;
  drop_down50863.cljs$core$IFn$_invoke$arity$3 = drop_down50863__3;
  return drop_down50863;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down50863);
sablono.core.text_area50864 = function() {
  var text_area50864 = null;
  var text_area50864__1 = function(name) {
    return text_area50864.call(null, name, null);
  };
  var text_area50864__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 1125876963), value], null)], null);
  };
  text_area50864 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area50864__1.call(this, name);
      case 2:
        return text_area50864__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area50864.cljs$core$IFn$_invoke$arity$1 = text_area50864__1;
  text_area50864.cljs$core$IFn$_invoke$arity$2 = text_area50864__2;
  return text_area50864;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area50864);
sablono.core.label50865 = function label50865(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1116631654), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label50865);
sablono.core.submit_button50866 = function submit_button50866(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "submit", new cljs.core.Keyword(null, "value", "value", 1125876963), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button50866);
sablono.core.reset_button50867 = function reset_button50867(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "reset", new cljs.core.Keyword(null, "value", "value", 1125876963), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button50867);
sablono.core.form_to50868 = function() {
  var form_to50868__delegate = function(p__50869, body) {
    var vec__50871 = p__50869;
    var method = cljs.core.nth.call(null, vec__50871, 0, null);
    var action = cljs.core.nth.call(null, vec__50871, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1014006472), null, new cljs.core.Keyword(null, "post", "post", 1017351186), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 4231316563), method_str, new cljs.core.Keyword(null, "action", "action", 3885920680), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), "POST", new cljs.core.Keyword(null, "action", "action", 3885920680), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to50868 = function(p__50869, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to50868__delegate.call(this, p__50869, body);
  };
  form_to50868.cljs$lang$maxFixedArity = 1;
  form_to50868.cljs$lang$applyTo = function(arglist__50872) {
    var p__50869 = cljs.core.first(arglist__50872);
    var body = cljs.core.rest(arglist__50872);
    return form_to50868__delegate(p__50869, body);
  };
  form_to50868.cljs$core$IFn$_invoke$arity$variadic = form_to50868__delegate;
  return form_to50868;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to50868);
goog.provide("clustermap.components.table");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("cljs.core.async");
clustermap.components.table.order_col = function order_col(comm, collection, view_update_key, title, col) {
  var current_order = (new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(collection);
  var current_order__$1 = cljs.core.sequential_QMARK_.call(null, current_order) ? cljs.core.first.call(null, current_order) : current_order;
  var current_order_key = cljs.core.first.call(null, cljs.core.keys.call(null, current_order__$1));
  var current_order_dir = cljs.core.first.call(null, cljs.core.vals.call(null, current_order__$1));
  return React.DOM.a({"href":"#", "onClick":function(current_order, current_order__$1, current_order_key, current_order_dir) {
    return function(e) {
      e.preventDefault();
      var pred__46408 = cljs.core._EQ_;
      var expr__46409 = current_order_dir;
      if (cljs.core.truth_(pred__46408.call(null, "asc", expr__46409))) {
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "desc", "desc", 1016984067)], true, false)], null)], null));
      } else {
        if (cljs.core.truth_(pred__46408.call(null, "desc", expr__46409))) {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "asc", "asc", 1014001123)], true, false)], null)], null));
        } else {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.PersistentArrayMap.fromArray([col, new cljs.core.Keyword(null, "desc", "desc", 1016984067)], true, false)], null)], null));
        }
      }
    };
  }(current_order, current_order__$1, current_order_key, current_order_dir)}, sablono.interpreter.interpret.call(null, title), cljs.core._EQ_.call(null, current_order_key, col) ? sablono.interpreter.interpret.call(null, function() {
    var pred__46411 = cljs.core._EQ_;
    var expr__46412 = current_order_dir;
    if (cljs.core.truth_(pred__46411.call(null, "asc", expr__46412))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-asc", "i.icon-asc", 3872166516)], null);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-desc", "i.icon-desc", 3720765330)], null);
    }
  }()) : null);
};
clustermap.components.table.paginate = function paginate(comm, p__46414, view_update_key) {
  var map__46427 = p__46414;
  var map__46427__$1 = cljs.core.seq_QMARK_.call(null, map__46427) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46427) : map__46427;
  var collection = map__46427__$1;
  var size = cljs.core.get.call(null, map__46427__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var from = cljs.core.get.call(null, map__46427__$1, new cljs.core.Keyword(null, "from", "from", 1017056028));
  var count = cljs.core.get.call(null, map__46427__$1, new cljs.core.Keyword(null, "count", "count", 1108755585));
  var attrs46428 = from > 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 4619949513), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "onClick", "onClick", 3956969051), function(map__46427, 
  map__46427__$1, collection, size, from, count) {
    return function(e) {
      e.preventDefault();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "from", "from", 1017056028), function() {
        var x__3846__auto__ = from - size;
        var y__3847__auto__ = 0;
        return x__3846__auto__ > y__3847__auto__ ? x__3846__auto__ : y__3847__auto__;
      }()], null)], null));
    };
  }(map__46427, map__46427__$1, collection, size, from, count)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-arrow-left", "i.icon-arrow-left", 2307990796)], null)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.prev", "span.prev", 4619949513), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "i.icon-arrow-left", "i.icon-arrow-left", 2307990796)], null)], null);
  return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs46428) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["paginate"], null)], null), attrs46428)) : {"className":"paginate"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
  attrs46428) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var attrs46429 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var x__3853__auto__ = from + size;
      var y__3854__auto__ = count;
      return x__3853__auto__ < y__3854__auto__ ? x__3853__auto__ : y__3854__auto__;
    }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(count);
    return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs46429) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs46429)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
    attrs46429) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46429)], null)));
  }(), from + size < count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs46428, map__46427, map__46427__$1, collection, size, from, count) {
    return function(e) {
      e.preventDefault();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "from", "from", 1017056028), from + size], null)], null));
    };
  }(attrs46428, map__46427, map__46427__$1, collection, size, from, count)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46428), function() {
    var attrs46430 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(from + 1) + "-" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var x__3853__auto__ = from + size;
      var y__3854__auto__ = count;
      return x__3853__auto__ < y__3854__auto__ ? x__3853__auto__ : y__3854__auto__;
    }()) + " of " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(count);
    return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs46430) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["page"], null)], null), attrs46430)) : {"className":"page"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
    attrs46430) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46430)], null)));
  }(), from + size < count ? React.DOM.span({"className":"next"}, React.DOM.a({"href":"#", "onClick":function(attrs46428, map__46427, map__46427__$1, collection, size, from, count) {
    return function(e) {
      e.preventDefault();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_update_key, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "from", "from", 1017056028), from + size], null)], null));
    };
  }(attrs46428, map__46427, map__46427__$1, collection, size, from, count)}, React.DOM.i({"className":"icon-arrow-right"}))) : React.DOM.span({"className":"next"}, React.DOM.i({"className":"icon-arrow-right"}))], null)));
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj50469 = {};
  return obj50469;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.display_name[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.display_name["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj50471 = {};
  return obj50471;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.init_state[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.init_state["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj50473 = {};
  return obj50473;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.should_update[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.should_update["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj50475 = {};
  return obj50475;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.will_mount[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.will_mount["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj50477 = {};
  return obj50477;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.did_mount[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.did_mount["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj50479 = {};
  return obj50479;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.will_unmount[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.will_unmount["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj50481 = {};
  return obj50481;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.will_update[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.will_update["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj50483 = {};
  return obj50483;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.did_update[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.did_update["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj50485 = {};
  return obj50485;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.will_receive_props[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.will_receive_props["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj50487 = {};
  return obj50487;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.render[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.render["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj50489 = {};
  return obj50489;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core.render_state[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core.render_state["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj50491 = {};
  return obj50491;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj50493 = {};
  return obj50493;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = om.core._get_state[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._get_state["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = om.core._get_state[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._get_state["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj50495 = {};
  return obj50495;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = om.core._get_render_state[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._get_render_state["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = om.core._get_render_state[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._get_render_state["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj50497 = {};
  return obj50497;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___2 = function(this$, val) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$2(this$, val);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val);
    }
  };
  var _set_state_BANG___3 = function(this$, ks, val) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, ks, val);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val);
    }
  };
  _set_state_BANG_ = function(this$, ks, val) {
    switch(arguments.length) {
      case 2:
        return _set_state_BANG___2.call(this, this$, ks);
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = _set_state_BANG___2;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj50499 = {};
  return obj50499;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core._get_queue[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._get_queue["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj50501 = {};
  return obj50501;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = om.core._value[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._value["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj50503 = {};
  return obj50503;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3527__auto__ = cursor;
    if (and__3527__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4166__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3539__auto__ = om.core._path[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._path["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3527__auto__ = cursor;
    if (and__3527__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4166__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3539__auto__ = om.core._state[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._state["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj50505 = {};
  return obj50505;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3527__auto__ = value;
      if (and__3527__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4166__auto__ = value == null ? null : value;
      return function() {
        var or__3539__auto__ = om.core._to_cursor[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._to_cursor["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3527__auto__ = value;
      if (and__3527__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4166__auto__ = value == null ? null : value;
      return function() {
        var or__3539__auto__ = om.core._to_cursor[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = om.core._to_cursor["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj50507 = {};
  return obj50507;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3527__auto__ = cursor;
    if (and__3527__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4166__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3539__auto__ = om.core._derive[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._derive["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj50509 = {};
  return obj50509;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3527__auto__ = cursor;
    if (and__3527__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4166__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3539__auto__ = om.core._transact_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj50511 = {};
  return obj50511;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = om.core._listen_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3527__auto__ = x;
    if (and__3527__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4166__auto__ = x == null ? null : x;
    return function() {
      var or__3539__auto__ = om.core._notify_BANG_[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__50513 = state;
    if (G__50513) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50513.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__50513.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__50513);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__50513);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__50515 = x;
  if (G__50515) {
    var bit__4189__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3539__auto__ = bit__4189__auto__;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return G__50515.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__50515.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__50515);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__50515);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_50517 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50517;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__50519 = state;
    G__50519["__om_prev_state"] = state["__om_state"];
    G__50519["__om_state"] = pending_state;
    G__50519["__om_pending_state"] = null;
    return G__50519;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3539__auto__ = props;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3539__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", 4103164189), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 4147620643), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 2122862542), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 3193956709), new cljs.core.Keyword(null, "render", "render", 4374279432), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 2086388618), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 3877103209), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 2087784617), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", 3257856604)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__50520 = c;
    if (G__50520) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50520.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__50520.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__50520);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__50520);
    }
  }()) {
    var state_50547 = this$.state;
    var _STAR_read_enabled_STAR_50521_50548 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3539__auto__ = state_50547["__om_prev_state"];
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return state_50547["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50521_50548;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__50522 = c;
    if (G__50522) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50522.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__50522.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__50522);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__50522);
    }
  }()) {
    var _STAR_read_enabled_STAR_50523 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50523;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__50524 = c;
    if (G__50524) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50524.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__50524.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__50524);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__50524);
    }
  }()) {
    var _STAR_read_enabled_STAR_50525 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50525;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_50526 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__50527 = c;
      if (G__50527) {
        var bit__4189__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3539__auto__ = bit__4189__auto__;
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return G__50527.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__50527.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__50527);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__50527);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, props["__om_cursor"]), om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50526;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_50528 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__50529 = c;
      if (G__50529) {
        var bit__4189__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3539__auto__ = bit__4189__auto__;
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return G__50529.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__50529.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__50529);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__50529);
      }
    }()) {
      var _STAR_parent_STAR_50530 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_50531 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_50532 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_50532;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_50531;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_50530;
      }
    } else {
      if (function() {
        var G__50533 = c;
        if (G__50533) {
          var bit__4189__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3539__auto__ = bit__4189__auto__;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return G__50533.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__50533.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__50533);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__50533);
        }
      }()) {
        var _STAR_parent_STAR_50534 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_50535 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_50536 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_50536;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_50535;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_50534;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50528;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_50549 = om.core.children.call(null, this$);
  if (function() {
    var G__50537 = c_50549;
    if (G__50537) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50537.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__50537.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__50537);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__50537);
    }
  }()) {
    var state_50550 = this$.state;
    var _STAR_read_enabled_STAR_50538_50551 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_50549, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50538_50551;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3539__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)), function() {
    var G__50539 = c;
    if (G__50539) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50539.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__50539.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__50539);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__50539);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_50540 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50540;
    }
  }() : null), "__om_id":function() {
    var or__3539__auto__ = id;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__50541 = c;
    if (G__50541) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50541.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__50541.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__50541);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__50541);
    }
  }()) {
    var _STAR_read_enabled_STAR_50542 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50542;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__50543 = c;
    if (G__50543) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50543.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__50543.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__50543);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__50543);
    }
  }()) {
    var _STAR_read_enabled_STAR_50544 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50544;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_50552 = om.core.children.call(null, this$);
  if (function() {
    var G__50545 = c_50552;
    if (G__50545) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50545.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__50545.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__50545);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__50545);
    }
  }()) {
    var _STAR_read_enabled_STAR_50546_50553 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_50552);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50546_50553;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x50557 = obj;
  x50557.om$core$IGetState$ = true;
  x50557.om$core$IGetState$_get_state$arity$1 = function(x50557) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3539__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x50557);
  x50557.om$core$IGetState$_get_state$arity$2 = function(x50557) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x50557);
  x50557.om$core$IGetRenderState$ = true;
  x50557.om$core$IGetRenderState$_get_render_state$arity$1 = function(x50557) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x50557);
  x50557.om$core$IGetRenderState$_get_render_state$arity$2 = function(x50557) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x50557);
  x50557.om$core$ISetState$ = true;
  x50557.om$core$ISetState$_set_state_BANG_$arity$2 = function(x50557) {
    return function(this$, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_50558 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (app_state == null) {
          return null;
        } else {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50558;
      }
    };
  }(x50557);
  x50557.om$core$ISetState$_set_state_BANG_$arity$3 = function(x50557) {
    return function(this$, ks, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_50559 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (app_state == null) {
          return null;
        } else {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50559;
      }
    };
  }(x50557);
  return x50557;
};
om.core.Pure = React.createClass(om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods)));
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__50561) {
          var vec__50562 = p__50561;
          var k = cljs.core.nth.call(null, vec__50562, 0, null);
          var v = cljs.core.nth.call(null, vec__50562, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__50563 = null;
  var G__50563__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__50563__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__50563 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50563__2.call(this, self__, k);
      case 3:
        return G__50563__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__50563;
}();
om.core.MapCursor.prototype.apply = function(self__, args50560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args50560)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__50565 = null;
  var G__50565__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__50565__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__50565 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50565__2.call(this, self__, k);
      case 3:
        return G__50565__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__50565;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args50564) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args50564)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x50567 = cljs.core.clone.call(null, val);
  x50567.cljs$core$IEquiv$ = true;
  x50567.cljs$core$IEquiv$_equiv$arity$2 = function(x50567) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x50567);
  x50567.om$core$ITransact$ = true;
  x50567.om$core$ITransact$_transact_BANG_$arity$4 = function(x50567) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x50567);
  x50567.om$core$ICursor$ = true;
  x50567.om$core$ICursor$_path$arity$1 = function(x50567) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x50567);
  x50567.om$core$ICursor$_state$arity$1 = function(x50567) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x50567);
  x50567.cljs$core$IDeref$ = true;
  x50567.cljs$core$IDeref$_deref$arity$1 = function(x50567) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x50567);
  return x50567;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__50570 = val;
        if (G__50570) {
          var bit__4189__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3539__auto__ = bit__4189__auto__;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return G__50570.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__50570.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__50570);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__50570);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__50571 = val;
              if (G__50571) {
                var bit__4189__auto__ = G__50571.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4189__auto__ || G__50571.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__50571.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__50571);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__50571);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__50576 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__50577 = null;
  var count__50578 = 0;
  var i__50579 = 0;
  while (true) {
    if (i__50579 < count__50578) {
      var f = cljs.core._nth.call(null, chunk__50577, i__50579);
      f.call(null);
      var G__50580 = seq__50576;
      var G__50581 = chunk__50577;
      var G__50582 = count__50578;
      var G__50583 = i__50579 + 1;
      seq__50576 = G__50580;
      chunk__50577 = G__50581;
      count__50578 = G__50582;
      i__50579 = G__50583;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__50576);
      if (temp__4126__auto__) {
        var seq__50576__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__50576__$1)) {
          var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__50576__$1);
          var G__50584 = cljs.core.chunk_rest.call(null, seq__50576__$1);
          var G__50585 = c__4295__auto__;
          var G__50586 = cljs.core.count.call(null, c__4295__auto__);
          var G__50587 = 0;
          seq__50576 = G__50584;
          chunk__50577 = G__50585;
          count__50578 = G__50586;
          i__50579 = G__50587;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__50576__$1);
          f.call(null);
          var G__50588 = cljs.core.next.call(null, seq__50576__$1);
          var G__50589 = null;
          var G__50590 = 0;
          var G__50591 = 0;
          seq__50576 = G__50588;
          chunk__50577 = G__50589;
          count__50578 = G__50590;
          i__50579 = G__50591;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword(null, "key", "key", 1014010321), null, new cljs.core.Keyword(null, "init-state", "init-state", 
  4479067398), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, 
      "m", "m", -1640531418, null)))));
    }
    if (m == null) {
      var shared = function() {
        var or__3539__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3539__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__9426__auto__ = ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_50596 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50596;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__9426__auto__.constructor = goog.getUid(f);
      return pure__9426__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__50597 = m;
        var map__50597__$1 = cljs.core.seq_QMARK_.call(null, map__50597) ? cljs.core.apply.call(null, cljs.core.hash_map, map__50597) : map__50597;
        var opts = cljs.core.get.call(null, map__50597__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__50597__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__50597__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__50597__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
          var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var i = temp__4124__auto__;
            return dataf.call(null, cursor, i);
          } else {
            return dataf.call(null, cursor);
          }
        }() : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3539__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3539__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__9426__auto__ = ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__50597, map__50597__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_50598 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50598;
            }
          };
        }(map__50597, map__50597__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__50597, map__50597__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_50599 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50599;
            }
          };
        }(map__50597, map__50597__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
        pure__9426__auto__.constructor = goog.getUid(f);
        return pure__9426__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_50601 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_50601;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__50610 = state;
    if (G__50610) {
      var bit__4189__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3539__auto__ = bit__4189__auto__;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return G__50610.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__50610.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__50610);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__50610);
    }
  }()) {
  } else {
    var listeners_50618 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_50619 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x50611_50620 = state;
    x50611_50620.om$core$IRenderQueue$ = true;
    x50611_50620.om$core$IRenderQueue$_get_queue$arity$1 = function(x50611_50620, listeners_50618, render_queue_50619) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_50619);
      };
    }(x50611_50620, listeners_50618, render_queue_50619);
    x50611_50620.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x50611_50620, listeners_50618, render_queue_50619) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_50619), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_50619, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x50611_50620, listeners_50618, render_queue_50619);
    x50611_50620.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x50611_50620, listeners_50618, render_queue_50619) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_50619, cljs.core.empty);
      };
    }(x50611_50620, listeners_50618, render_queue_50619);
    x50611_50620.om$core$INotify$ = true;
    x50611_50620.om$core$INotify$_listen_BANG_$arity$3 = function(x50611_50620, listeners_50618, render_queue_50619) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_50618, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x50611_50620, listeners_50618, render_queue_50619);
    x50611_50620.om$core$INotify$_unlisten_BANG_$arity$2 = function(x50611_50620, listeners_50618, render_queue_50619) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_50618, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x50611_50620, listeners_50618, render_queue_50619);
    x50611_50620.om$core$INotify$_notify_BANG_$arity$3 = function(x50611_50620, listeners_50618, render_queue_50619) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        if (tx_listen == null) {
        } else {
          var seq__50612_50621 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_50618));
          var chunk__50613_50622 = null;
          var count__50614_50623 = 0;
          var i__50615_50624 = 0;
          while (true) {
            if (i__50615_50624 < count__50614_50623) {
              var vec__50616_50625 = cljs.core._nth.call(null, chunk__50613_50622, i__50615_50624);
              var __50626 = cljs.core.nth.call(null, vec__50616_50625, 0, null);
              var f_50627 = cljs.core.nth.call(null, vec__50616_50625, 1, null);
              f_50627.call(null, tx_data, root_cursor);
              var G__50628 = seq__50612_50621;
              var G__50629 = chunk__50613_50622;
              var G__50630 = count__50614_50623;
              var G__50631 = i__50615_50624 + 1;
              seq__50612_50621 = G__50628;
              chunk__50613_50622 = G__50629;
              count__50614_50623 = G__50630;
              i__50615_50624 = G__50631;
              continue;
            } else {
              var temp__4126__auto___50632 = cljs.core.seq.call(null, seq__50612_50621);
              if (temp__4126__auto___50632) {
                var seq__50612_50633__$1 = temp__4126__auto___50632;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__50612_50633__$1)) {
                  var c__4295__auto___50634 = cljs.core.chunk_first.call(null, seq__50612_50633__$1);
                  var G__50635 = cljs.core.chunk_rest.call(null, seq__50612_50633__$1);
                  var G__50636 = c__4295__auto___50634;
                  var G__50637 = cljs.core.count.call(null, c__4295__auto___50634);
                  var G__50638 = 0;
                  seq__50612_50621 = G__50635;
                  chunk__50613_50622 = G__50636;
                  count__50614_50623 = G__50637;
                  i__50615_50624 = G__50638;
                  continue;
                } else {
                  var vec__50617_50639 = cljs.core.first.call(null, seq__50612_50633__$1);
                  var __50640 = cljs.core.nth.call(null, vec__50617_50639, 0, null);
                  var f_50641 = cljs.core.nth.call(null, vec__50617_50639, 1, null);
                  f_50641.call(null, tx_data, root_cursor);
                  var G__50642 = cljs.core.next.call(null, seq__50612_50633__$1);
                  var G__50643 = null;
                  var G__50644 = 0;
                  var G__50645 = 0;
                  seq__50612_50621 = G__50642;
                  chunk__50613_50622 = G__50643;
                  count__50614_50623 = G__50644;
                  i__50615_50624 = G__50645;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        }
        return this$__$1;
      };
    }(x50611_50620, listeners_50618, render_queue_50619);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__50646) {
  var map__50661 = p__50646;
  var map__50661__$1 = cljs.core.seq_QMARK_.call(null, map__50661) ? cljs.core.apply.call(null, cljs.core.hash_map, map__50661) : map__50661;
  var options = map__50661__$1;
  var instrument = cljs.core.get.call(null, map__50661__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__50661__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__50661__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var target = cljs.core.get.call(null, map__50661__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null))))));
  }
  var roots_SINGLEQUOTE__50675 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__50675, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__50675, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__50662 = value;
    if (G__50662) {
      var bit__4189__auto__ = G__50662.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4189__auto__ || G__50662.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__50662.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__50662);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__50662);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(watch_key, state, state__$1, m, map__50661, map__50661__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_50669 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_50670 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_50670;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_50669;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__50671_50676 = cljs.core.seq.call(null, queue);
        var chunk__50672_50677 = null;
        var count__50673_50678 = 0;
        var i__50674_50679 = 0;
        while (true) {
          if (i__50674_50679 < count__50673_50678) {
            var c_50680 = cljs.core._nth.call(null, chunk__50672_50677, i__50674_50679);
            if (cljs.core.truth_(c_50680.isMounted())) {
              c_50680.forceUpdate();
            } else {
            }
            var G__50681 = seq__50671_50676;
            var G__50682 = chunk__50672_50677;
            var G__50683 = count__50673_50678;
            var G__50684 = i__50674_50679 + 1;
            seq__50671_50676 = G__50681;
            chunk__50672_50677 = G__50682;
            count__50673_50678 = G__50683;
            i__50674_50679 = G__50684;
            continue;
          } else {
            var temp__4126__auto___50685 = cljs.core.seq.call(null, seq__50671_50676);
            if (temp__4126__auto___50685) {
              var seq__50671_50686__$1 = temp__4126__auto___50685;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__50671_50686__$1)) {
                var c__4295__auto___50687 = cljs.core.chunk_first.call(null, seq__50671_50686__$1);
                var G__50688 = cljs.core.chunk_rest.call(null, seq__50671_50686__$1);
                var G__50689 = c__4295__auto___50687;
                var G__50690 = cljs.core.count.call(null, c__4295__auto___50687);
                var G__50691 = 0;
                seq__50671_50676 = G__50688;
                chunk__50672_50677 = G__50689;
                count__50673_50678 = G__50690;
                i__50674_50679 = G__50691;
                continue;
              } else {
                var c_50692 = cljs.core.first.call(null, seq__50671_50686__$1);
                if (cljs.core.truth_(c_50692.isMounted())) {
                  c_50692.forceUpdate();
                } else {
                }
                var G__50693 = cljs.core.next.call(null, seq__50671_50686__$1);
                var G__50694 = null;
                var G__50695 = 0;
                var G__50696 = 0;
                seq__50671_50676 = G__50693;
                chunk__50672_50677 = G__50694;
                count__50673_50678 = G__50695;
                i__50674_50679 = G__50696;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__50661, map__50661__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__50661, map__50661__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__50661, map__50661__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__50661, map__50661__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__50661, map__50661__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("clustermap.formats.time");
goog.require("cljs.core");
clustermap.formats.time.get_year = function get_year(t) {
  var G__46513 = t;
  var G__46513__$1 = G__46513 == null ? null : new Date(G__46513);
  var G__46513__$2 = G__46513__$1 == null ? null : G__46513__$1.getYear();
  var G__46513__$3 = G__46513__$2 == null ? null : G__46513__$2 + 1900;
  return G__46513__$3;
};
goog.provide("clustermap.formats.money");
goog.require("cljs.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
clustermap.formats.money.money_suffixes = new cljs.core.PersistentArrayMap(null, 5, [0, "", 3, "k", 6, "m", 9, "bn", 12, "tn"], null);
clustermap.formats.money.money_suffix = function money_suffix(exp) {
  var or__3539__auto__ = clustermap.formats.money.money_suffixes.call(null, exp);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return "x10^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(exp);
  }
};
clustermap.formats.money.readable = function() {
  var readable__delegate = function(n, p__46485) {
    var map__46488 = p__46485;
    var map__46488__$1 = cljs.core.seq_QMARK_.call(null, map__46488) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46488) : map__46488;
    var default$ = cljs.core.get.call(null, map__46488__$1, new cljs.core.Keyword(null, "default", "default", 2558708147));
    var plus_QMARK_ = cljs.core.get.call(null, map__46488__$1, new cljs.core.Keyword(null, "plus?", "plus?", 1120672087));
    var curr = cljs.core.get.call(null, map__46488__$1, new cljs.core.Keyword(null, "curr", "curr", 1016969636), "\u00a3");
    var sf = cljs.core.get.call(null, map__46488__$1, new cljs.core.Keyword(null, "sf", "sf", 1013907909));
    if (cljs.core.truth_(n)) {
      var vec__46489 = clustermap.formats.number.eng_notation.call(null, n, new cljs.core.Keyword(null, "sf", "sf", 1013907909), sf);
      var sig = cljs.core.nth.call(null, vec__46489, 0, null);
      var exp = cljs.core.nth.call(null, vec__46489, 1, null);
      var abs_sig = Math.abs(sig);
      var suffix = clustermap.formats.money.money_suffix.call(null, exp);
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
        var and__3527__auto__ = plus_QMARK_;
        if (cljs.core.truth_(and__3527__auto__)) {
          return sig > 0;
        } else {
          return and__3527__auto__;
        }
      }()) ? "+" : sig < 0 ? "-" : null, curr, abs_sig, suffix], null)));
    } else {
      return default$;
    }
  };
  var readable = function(n, var_args) {
    var p__46485 = null;
    if (arguments.length > 1) {
      p__46485 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return readable__delegate.call(this, n, p__46485);
  };
  readable.cljs$lang$maxFixedArity = 1;
  readable.cljs$lang$applyTo = function(arglist__46490) {
    var n = cljs.core.first(arglist__46490);
    var p__46485 = cljs.core.rest(arglist__46490);
    return readable__delegate(n, p__46485);
  };
  readable.cljs$core$IFn$_invoke$arity$variadic = readable__delegate;
  return readable;
}();
clustermap.formats.money.fmoney = clustermap.formats.money.readable;
goog.provide("clustermap.components.full_report.company_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_list.render_many_links = function render_many_links(link_fn, owner_path, type, objs) {
  var first_obj = cljs.core.first.call(null, objs);
  var next_objs = cljs.core.next.call(null, objs);
  if (next_objs) {
    var attrs45662 = link_fn.call(null, type, first_obj);
    return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs45662) ? sablono.interpreter.attributes.call(null, attrs45662) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45662) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
    attrs45662), React.DOM.a({"href":owner_path}, "\u00a0(more...)")], null)));
  } else {
    return link_fn.call(null, type, first_obj);
  }
};
clustermap.components.full_report.company_list.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        if (true) {
          return null;
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.full_report.company_list.portfolio_company = function portfolio_company(company, owner, p__45671) {
  var map__45684 = p__45671;
  var map__45684__$1 = cljs.core.seq_QMARK_.call(null, map__45684) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45684) : map__45684;
  var opts = map__45684__$1;
  var path_fn = cljs.core.get.call(null, map__45684__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var link_fn = cljs.core.get.call(null, map__45684__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), company);
  if (typeof clustermap.components.full_report.company_list.t45685 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t45685 = function(company_path, link_fn, path_fn, opts, map__45684, p__45671, owner, company, portfolio_company, meta45686) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__45684 = map__45684;
      this.p__45671 = p__45671;
      this.owner = owner;
      this.company = company;
      this.portfolio_company = portfolio_company;
      this.meta45686 = meta45686;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t45685.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t45685.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t45685";
    clustermap.components.full_report.company_list.t45685.cljs$lang$ctorPrWriter = function(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report.company-list/t45685");
      };
    }(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t45685.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t45685.prototype.om$core$IRender$render$arity$1 = function(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs45688 = self__.link_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), self__.company);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45688) ? sablono.interpreter.attributes.call(null, attrs45688) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45688) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45688)], null)));
        }(), function() {
          var attrs45689 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), (new cljs.core.Keyword(null, "investor_companies", "investor_companies", 1928918630)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45689) ? sablono.interpreter.attributes.call(null, attrs45689) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45689) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45689)], null)));
        }(), function() {
          var attrs45690 = clustermap.components.full_report.company_list.render_many_links.call(null, self__.link_fn, self__.company_path, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), function() {
            var G__45695 = self__.company;
            var G__45695__$1 = G__45695 == null ? null : (new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847)).cljs$core$IFn$_invoke$arity$1(G__45695);
            var G__45695__$2 = G__45695__$1 == null ? null : cljs.core.filter.call(null, function(G__45695, G__45695__$1, this__9410__auto____$1, company_path, map__45684, map__45684__$1, opts, path_fn, link_fn) {
              return function(bl) {
                return cljs.core._EQ_.call(null, "uk_constituencies", (new cljs.core.Keyword(null, "collection_id", "collection_id", 4487629262)).cljs$core$IFn$_invoke$arity$1(bl));
              };
            }(G__45695, G__45695__$1, this__9410__auto____$1, company_path, map__45684, map__45684__$1, opts, path_fn, link_fn), G__45695__$1);
            return G__45695__$2;
          }());
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45690) ? sablono.interpreter.attributes.call(null, attrs45690) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45690) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45690)], null)));
        }(), function() {
          var attrs45691 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45691) ? sablono.interpreter.attributes.call(null, attrs45691) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45691) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3539__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45691), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3539__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }(), function() {
          var attrs45692 = clustermap.components.full_report.company_list.pos_neg.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)).cljs$core$IFn$_invoke$arity$1(self__.company));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45692) ? sablono.interpreter.attributes.call(null, attrs45692) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45692) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45692)], null)));
        }(), function() {
          var attrs45693 = clustermap.formats.money.fmoney.call(null, (new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45693) ? sablono.interpreter.attributes.call(null, attrs45693) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45693) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45693)], null)));
        }(), function() {
          var attrs45694 = clustermap.formats.number.fnum.call(null, (new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 905794408)).cljs$core$IFn$_invoke$arity$1(self__.company), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45694) ? sablono.interpreter.attributes.call(null, attrs45694) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45694) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3539__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45694), React.DOM.small(null, "\u00a0(", sablono.interpreter.interpret.call(null, function() {
            var or__3539__auto__ = clustermap.formats.time.get_year.call(null, (new cljs.core.Keyword(null, "latest_accounts_date", "latest_accounts_date", 2789706017)).cljs$core$IFn$_invoke$arity$1(self__.company));
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return "no info";
            }
          }()), ")")], null)));
        }());
      };
    }(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t45685.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn) {
      return function(_45687) {
        var self__ = this;
        var _45687__$1 = this;
        return self__.meta45686;
      };
    }(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.t45685.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn) {
      return function(_45687, meta45686__$1) {
        var self__ = this;
        var _45687__$1 = this;
        return new clustermap.components.full_report.company_list.t45685(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__45684, self__.p__45671, self__.owner, self__.company, self__.portfolio_company, meta45686__$1);
      };
    }(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_list.__GT_t45685 = function(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn) {
      return function __GT_t45685(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__45684__$2, p__45671__$1, owner__$1, company__$1, portfolio_company__$1, meta45686) {
        return new clustermap.components.full_report.company_list.t45685(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__45684__$2, p__45671__$1, owner__$1, company__$1, portfolio_company__$1, meta45686);
      };
    }(company_path, map__45684, map__45684__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_list.t45685(company_path, link_fn, path_fn, opts, map__45684__$1, p__45671, owner, company, portfolio_company, null);
};
clustermap.components.full_report.company_list.company_list = function company_list(companies, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  if (typeof clustermap.components.full_report.company_list.t45716 !== "undefined") {
  } else {
    clustermap.components.full_report.company_list.t45716 = function(comm, opts, owner, companies, company_list, meta45717) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.companies = companies;
      this.company_list = company_list;
      this.meta45717 = meta45717;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_list.t45716.cljs$lang$type = true;
    clustermap.components.full_report.company_list.t45716.cljs$lang$ctorStr = "clustermap.components.full-report.company-list/t45716";
    clustermap.components.full_report.company_list.t45716.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report.company-list/t45716");
      };
    }(comm);
    clustermap.components.full_report.company_list.t45716.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_list.t45716.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        var attrs45719 = clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs45719) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs45719)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs45719) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs45720 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1017277949));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45720) ? sablono.interpreter.attributes.call(null, attrs45720) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45720) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45720)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs45725 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45725) ? sablono.interpreter.attributes.call(null, attrs45725) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45725) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45725)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)))), function() {
          var attrs45726 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 905794408));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45726) ? sablono.interpreter.attributes.call(null, attrs45726) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45726) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45726)], null)));
        }())), function() {
          var attrs45727 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "company_no", "company_no", 4461198389), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs45727) ? sablono.interpreter.attributes.call(null, attrs45727) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45727) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45727)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45719), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, 
        React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs45728 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Investor-backed company", new cljs.core.Keyword(null, "name", "name", 1017277949));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45728) ? sablono.interpreter.attributes.call(null, attrs45728) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45728) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45728)], null)));
        }(), React.DOM.th(null, "Investor"), React.DOM.th(null, "Constituency"), function() {
          var attrs45733 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Revenue", new cljs.core.Keyword(null, "latest_turnover", "latest_turnover", 2012435451));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45733) ? sablono.interpreter.attributes.call(null, attrs45733) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45733) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45733)], null)));
        }(), React.DOM.th({"colSpan":"2"}, sablono.interpreter.interpret.call(null, clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Rev. change", new cljs.core.Keyword(null, "latest_turnover_delta", "latest_turnover_delta", 4599982068)))), function() {
          var attrs45734 = clustermap.components.table.order_col.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), "Employees", new cljs.core.Keyword(null, "latest_employee_count", "latest_employee_count", 905794408));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45734) ? sablono.interpreter.attributes.call(null, attrs45734) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45734) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45734)], null)));
        }())), function() {
          var attrs45735 = om.core.build_all.call(null, clustermap.components.full_report.company_list.portfolio_company, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.companies), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "company_no", "company_no", 4461198389), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs45735) ? sablono.interpreter.attributes.call(null, attrs45735) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45735) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45735)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.companies, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_list.t45716.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_45718) {
        var self__ = this;
        var _45718__$1 = this;
        return self__.meta45717;
      };
    }(comm);
    clustermap.components.full_report.company_list.t45716.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_45718, meta45717__$1) {
        var self__ = this;
        var _45718__$1 = this;
        return new clustermap.components.full_report.company_list.t45716(self__.comm, self__.opts, self__.owner, self__.companies, self__.company_list, meta45717__$1);
      };
    }(comm);
    clustermap.components.full_report.company_list.__GT_t45716 = function(comm) {
      return function __GT_t45716(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta45717) {
        return new clustermap.components.full_report.company_list.t45716(comm__$1, opts__$1, owner__$1, companies__$1, company_list__$1, meta45717);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_list.t45716(comm, opts, owner, companies, company_list, null);
};
goog.provide("clustermap.components.full_report.company_site_list");
goog.require("cljs.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.table");
goog.require("clustermap.components.table");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.time");
goog.require("clustermap.formats.money");
clustermap.components.full_report.company_site_list.investment = function investment(investment__$1, owner, p__45736) {
  var map__45745 = p__45736;
  var map__45745__$1 = cljs.core.seq_QMARK_.call(null, map__45745) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45745) : map__45745;
  var opts = map__45745__$1;
  var path_fn = cljs.core.get.call(null, map__45745__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var link_fn = cljs.core.get.call(null, map__45745__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
  var company_path = path_fn.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), investment__$1);
  if (typeof clustermap.components.full_report.company_site_list.t45746 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t45746 = function(company_path, link_fn, path_fn, opts, map__45745, p__45736, owner, investment, meta45747) {
      this.company_path = company_path;
      this.link_fn = link_fn;
      this.path_fn = path_fn;
      this.opts = opts;
      this.map__45745 = map__45745;
      this.p__45736 = p__45736;
      this.owner = owner;
      this.investment = investment;
      this.meta45747 = meta45747;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t45746.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t45746.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t45746";
    clustermap.components.full_report.company_site_list.t45746.cljs$lang$ctorPrWriter = function(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report.company-site-list/t45746");
      };
    }(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t45746.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t45746.prototype.om$core$IRender$render$arity$1 = function(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.tr(null, function() {
          var attrs45749 = (new cljs.core.Keyword(null, "portfolio_company_name", "portfolio_company_name", 4225526294)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45749) ? sablono.interpreter.attributes.call(null, attrs45749) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45749) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45749)], null)));
        }(), function() {
          var attrs45750 = (new cljs.core.Keyword(null, "portfolio_company_site_postcode", "portfolio_company_site_postcode", 4491774974)).cljs$core$IFn$_invoke$arity$1(self__.investment);
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45750) ? sablono.interpreter.attributes.call(null, attrs45750) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45750) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45750)], null)));
        }(), function() {
          var attrs45751 = self__.link_fn.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593), (new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "name", "name", 1017277949), (new cljs.core.Keyword(null, "investor_company_name", 
          "investor_company_name", 4797549766)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45751) ? sablono.interpreter.attributes.call(null, attrs45751) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45751) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45751)], null)));
        }(), function() {
          var attrs45752 = self__.link_fn.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), (new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)).cljs$core$IFn$_invoke$arity$1(self__.investment), new cljs.core.Keyword(null, "compact_name", "compact_name", 1128032665), (new cljs.core.Keyword(null, "boundaryline_compact_name", 
          "boundaryline_compact_name", 3478315290)).cljs$core$IFn$_invoke$arity$1(self__.investment)], null));
          return cljs.core.apply.call(null, React.DOM.td, cljs.core.map_QMARK_.call(null, attrs45752) ? sablono.interpreter.attributes.call(null, attrs45752) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45752) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45752)], null)));
        }());
      };
    }(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t45746.prototype.cljs$core$IMeta$_meta$arity$1 = function(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn) {
      return function(_45748) {
        var self__ = this;
        var _45748__$1 = this;
        return self__.meta45747;
      };
    }(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.t45746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn) {
      return function(_45748, meta45747__$1) {
        var self__ = this;
        var _45748__$1 = this;
        return new clustermap.components.full_report.company_site_list.t45746(self__.company_path, self__.link_fn, self__.path_fn, self__.opts, self__.map__45745, self__.p__45736, self__.owner, self__.investment, meta45747__$1);
      };
    }(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn);
    clustermap.components.full_report.company_site_list.__GT_t45746 = function(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn) {
      return function __GT_t45746(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__45745__$2, p__45736__$1, owner__$1, investment__$2, meta45747) {
        return new clustermap.components.full_report.company_site_list.t45746(company_path__$1, link_fn__$1, path_fn__$1, opts__$1, map__45745__$2, p__45736__$1, owner__$1, investment__$2, meta45747);
      };
    }(company_path, map__45745, map__45745__$1, opts, path_fn, link_fn);
  }
  return new clustermap.components.full_report.company_site_list.t45746(company_path, link_fn, path_fn, opts, map__45745__$1, p__45736, owner, investment__$1, null);
};
clustermap.components.full_report.company_site_list.company_site_list = function company_site_list(investments, owner, opts) {
  var comm = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  if (typeof clustermap.components.full_report.company_site_list.t45767 !== "undefined") {
  } else {
    clustermap.components.full_report.company_site_list.t45767 = function(comm, opts, owner, investments, company_site_list, meta45768) {
      this.comm = comm;
      this.opts = opts;
      this.owner = owner;
      this.investments = investments;
      this.company_site_list = company_site_list;
      this.meta45768 = meta45768;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.company_site_list.t45767.cljs$lang$type = true;
    clustermap.components.full_report.company_site_list.t45767.cljs$lang$ctorStr = "clustermap.components.full-report.company-site-list/t45767";
    clustermap.components.full_report.company_site_list.t45767.cljs$lang$ctorPrWriter = function(comm) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report.company-site-list/t45767");
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t45767.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.company_site_list.t45767.prototype.om$core$IRender$render$arity$1 = function(comm) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        var attrs45770 = clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs45770) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-list"], null)], null), attrs45770)) : {"className":"full-report-list"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
        cljs.core.map_QMARK_.call(null, attrs45770) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, React.DOM.tr(null, function() {
          var attrs45771 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 4778718111));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45771) ? sablono.interpreter.attributes.call(null, attrs45771) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45771) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45771)], null)));
        }(), function() {
          var attrs45772 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 2409284575));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45772) ? sablono.interpreter.attributes.call(null, attrs45772) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45772) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45772)], null)));
        }(), function() {
          var attrs45773 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 4755885871));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45773) ? sablono.interpreter.attributes.call(null, attrs45773) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45773) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45773)], null)));
        }(), function() {
          var attrs45774 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 828306139));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45774) ? sablono.interpreter.attributes.call(null, attrs45774) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45774) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45774)], null)));
        }())), function() {
          var attrs45775 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "investment_uid", "investment_uid", 1858762838), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs45775) ? sablono.interpreter.attributes.call(null, attrs45775) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45775) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45775)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912)))], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45770), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table"}, React.DOM.thead(null, 
        React.DOM.tr(null, function() {
          var attrs45776 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor-backed Company", new cljs.core.Keyword(null, "!portfolio_company_name_na", "!portfolio_company_name_na", 4778718111));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45776) ? sablono.interpreter.attributes.call(null, attrs45776) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45776) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45776)], null)));
        }(), function() {
          var attrs45777 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Postcode", new cljs.core.Keyword(null, "?portfolio_company_site_postcode", "?portfolio_company_site_postcode", 2409284575));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45777) ? sablono.interpreter.attributes.call(null, attrs45777) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45777) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45777)], null)));
        }(), function() {
          var attrs45778 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Investor", new cljs.core.Keyword(null, "?investor_company_name_na", "?investor_company_name_na", 4755885871));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45778) ? sablono.interpreter.attributes.call(null, attrs45778) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45778) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45778)], null)));
        }(), function() {
          var attrs45779 = clustermap.components.table.order_col.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912), "Constituency", new cljs.core.Keyword(null, "?boundaryline_compact_name_na", "?boundaryline_compact_name_na", 828306139));
          return cljs.core.apply.call(null, React.DOM.th, cljs.core.map_QMARK_.call(null, attrs45779) ? sablono.interpreter.attributes.call(null, attrs45779) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45779) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45779)], null)));
        }())), function() {
          var attrs45780 = om.core.build_all.call(null, clustermap.components.full_report.company_site_list.investment, (new cljs.core.Keyword(null, "records", "records", 2096501172)).cljs$core$IFn$_invoke$arity$1(self__.investments), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "investment_uid", "investment_uid", 1858762838), new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null));
          return cljs.core.apply.call(null, React.DOM.tbody, cljs.core.map_QMARK_.call(null, attrs45780) ? sablono.interpreter.attributes.call(null, attrs45780) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45780) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45780)], null)));
        }())), sablono.interpreter.interpret.call(null, clustermap.components.table.paginate.call(null, self__.comm, self__.investments, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 4277131912)))], null)));
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t45767.prototype.cljs$core$IMeta$_meta$arity$1 = function(comm) {
      return function(_45769) {
        var self__ = this;
        var _45769__$1 = this;
        return self__.meta45768;
      };
    }(comm);
    clustermap.components.full_report.company_site_list.t45767.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(comm) {
      return function(_45769, meta45768__$1) {
        var self__ = this;
        var _45769__$1 = this;
        return new clustermap.components.full_report.company_site_list.t45767(self__.comm, self__.opts, self__.owner, self__.investments, self__.company_site_list, meta45768__$1);
      };
    }(comm);
    clustermap.components.full_report.company_site_list.__GT_t45767 = function(comm) {
      return function __GT_t45767(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta45768) {
        return new clustermap.components.full_report.company_site_list.t45767(comm__$1, opts__$1, owner__$1, investments__$1, company_site_list__$1, meta45768);
      };
    }(comm);
  }
  return new clustermap.components.full_report.company_site_list.t45767(comm, opts, owner, investments, company_site_list, null);
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", 1014023049);
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", 1014023049));
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_51060 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_51060;
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name)) + '\x3d"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.escape_html.call(null, value)) + '"';
};
hiccups.runtime.render_attribute = function render_attribute(p__51061) {
  var vec__51063 = p__51061;
  var name = cljs.core.nth.call(null, vec__51063, 0, null);
  var value = cljs.core.nth.call(null, vec__51063, 1, null);
  if (value === true) {
    if (hiccups.runtime.xml_mode_QMARK_.call(null)) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.as_str.call(null, name));
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return hiccups.runtime.xml_attribute.call(null, name, value);
      } else {
        return null;
      }
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function normalize_element(p__51064) {
  var vec__51067 = p__51064;
  var tag = cljs.core.nth.call(null, vec__51067, 0, null);
  var content = cljs.core.nthnext.call(null, vec__51067, 1);
  if (!(tag instanceof cljs.core.Keyword || (tag instanceof cljs.core.Symbol || typeof tag === "string"))) {
    throw "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + " is not a valid tag name";
  } else {
  }
  var vec__51068 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__51068, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__51068, 1, null);
  var id = cljs.core.nth.call(null, vec__51068, 2, null);
  var class$ = cljs.core.nth.call(null, vec__51068, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__51070 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__51070, 0, null);
  var attrs = cljs.core.nth.call(null, vec__51070, 1, null);
  var content = cljs.core.nth.call(null, vec__51070, 2, null);
  if (cljs.core.truth_(function() {
    var or__3539__auto__ = content;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, content)) + "\x3c/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "\x3e";
  } else {
    return "\x3c" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, attrs)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.end_tag.call(null));
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return hiccups.runtime.as_str.call(null, x);
      } else {
        return null;
      }
    }
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj50957 = {};
  return obj50957;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3527__auto__ = reader;
    if (and__3527__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4166__auto__ = reader == null ? null : reader;
    return function() {
      var or__3539__auto__ = cljs.reader.read_char[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.reader.read_char["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3527__auto__ = reader;
    if (and__3527__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4166__auto__ = reader == null ? null : reader;
    return function() {
      var or__3539__auto__ = cljs.reader.unread[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.reader.unread["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
  return cljs.core._write.call(null, writer__4107__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3539__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__50958) {
    var rdr = cljs.core.first(arglist__50958);
    var msg = cljs.core.rest(arglist__50958);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3527__auto__ = !(ch === "#");
  if (and__3527__auto__) {
    var and__3527__auto____$1 = !(ch === "'");
    if (and__3527__auto____$1) {
      var and__3527__auto____$2 = !(ch === ":");
      if (and__3527__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3527__auto____$2;
      }
    } else {
      return and__3527__auto____$1;
    }
  } else {
    return and__3527__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__50959 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__50960 = cljs.reader.read_char.call(null, rdr);
      sb = G__50959;
      ch = G__50960;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var zero = groups[2];
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : new cljs.core.Keyword(null, "else", "else", 1017020587) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__50961 = cljs.reader.read_char.call(null, rdr);
      ch = G__50961;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__50962 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__50962;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__50963 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__50963;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3539__auto__ = ch == null;
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3539__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__50964 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__50965 = cljs.reader.read_char.call(null, reader);
      buffer = G__50964;
      ch = G__50965;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__50966 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__50967 = cljs.reader.read_char.call(null, reader);
        buffer = G__50966;
        ch = G__50967;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__50968 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__50969 = cljs.reader.read_char.call(null, reader);
            buffer = G__50968;
            ch = G__50969;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__50971 = o;
    if (G__50971) {
      var bit__4189__auto__ = G__50971.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4189__auto__ || G__50971.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__50971.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__50971);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__50971);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__50972 = reader;
        var G__50973 = eof_is_error;
        var G__50974 = sentinel;
        var G__50975 = is_recursive;
        reader = G__50972;
        eof_is_error = G__50973;
        sentinel = G__50974;
        is_recursive = G__50975;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__50976 = cljs.reader.read_comment.call(null, reader, ch);
          var G__50977 = eof_is_error;
          var G__50978 = sentinel;
          var G__50979 = is_recursive;
          reader = G__50976;
          eof_is_error = G__50977;
          sentinel = G__50978;
          is_recursive = G__50979;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__50980 = reader;
              var G__50981 = eof_is_error;
              var G__50982 = sentinel;
              var G__50983 = is_recursive;
              reader = G__50980;
              eof_is_error = G__50981;
              sentinel = G__50982;
              is_recursive = G__50983;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__50984 = b.append("0");
            b = G__50984;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg) + " Failed:  " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(low) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + "\x3c\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(high));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__50986 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__50986, 0, null);
  var years = cljs.core.nth.call(null, vec__50986, 1, null);
  var months = cljs.core.nth.call(null, vec__50986, 2, null);
  var days = cljs.core.nth.call(null, vec__50986, 3, null);
  var hours = cljs.core.nth.call(null, vec__50986, 4, null);
  var minutes = cljs.core.nth.call(null, vec__50986, 5, null);
  var seconds = cljs.core.nth.call(null, vec__50986, 6, null);
  var fraction = cljs.core.nth.call(null, vec__50986, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__50986, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__50986, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__50986, 10, null);
  var v = vec__50986;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3539__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__50988 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__50988, 0, null);
    var months = cljs.core.nth.call(null, vec__50988, 1, null);
    var days = cljs.core.nth.call(null, vec__50988, 2, null);
    var hours = cljs.core.nth.call(null, vec__50988, 3, null);
    var minutes = cljs.core.nth.call(null, vec__50988, 4, null);
    var seconds = cljs.core.nth.call(null, vec__50988, 5, null);
    var ms = cljs.core.nth.call(null, vec__50988, 6, null);
    var offset = cljs.core.nth.call(null, vec__50988, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, "Unrecognized date/time syntax: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__51001_51013 = cljs.core.seq.call(null, form);
    var chunk__51002_51014 = null;
    var count__51003_51015 = 0;
    var i__51004_51016 = 0;
    while (true) {
      if (i__51004_51016 < count__51003_51015) {
        var x_51017 = cljs.core._nth.call(null, chunk__51002_51014, i__51004_51016);
        arr.push(x_51017);
        var G__51018 = seq__51001_51013;
        var G__51019 = chunk__51002_51014;
        var G__51020 = count__51003_51015;
        var G__51021 = i__51004_51016 + 1;
        seq__51001_51013 = G__51018;
        chunk__51002_51014 = G__51019;
        count__51003_51015 = G__51020;
        i__51004_51016 = G__51021;
        continue;
      } else {
        var temp__4126__auto___51022 = cljs.core.seq.call(null, seq__51001_51013);
        if (temp__4126__auto___51022) {
          var seq__51001_51023__$1 = temp__4126__auto___51022;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51001_51023__$1)) {
            var c__4295__auto___51024 = cljs.core.chunk_first.call(null, seq__51001_51023__$1);
            var G__51025 = cljs.core.chunk_rest.call(null, seq__51001_51023__$1);
            var G__51026 = c__4295__auto___51024;
            var G__51027 = cljs.core.count.call(null, c__4295__auto___51024);
            var G__51028 = 0;
            seq__51001_51013 = G__51025;
            chunk__51002_51014 = G__51026;
            count__51003_51015 = G__51027;
            i__51004_51016 = G__51028;
            continue;
          } else {
            var x_51029 = cljs.core.first.call(null, seq__51001_51023__$1);
            arr.push(x_51029);
            var G__51030 = cljs.core.next.call(null, seq__51001_51023__$1);
            var G__51031 = null;
            var G__51032 = 0;
            var G__51033 = 0;
            seq__51001_51013 = G__51030;
            chunk__51002_51014 = G__51031;
            count__51003_51015 = G__51032;
            i__51004_51016 = G__51033;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj51006 = {};
        return obj51006;
      }();
      var seq__51007_51034 = cljs.core.seq.call(null, form);
      var chunk__51008_51035 = null;
      var count__51009_51036 = 0;
      var i__51010_51037 = 0;
      while (true) {
        if (i__51010_51037 < count__51009_51036) {
          var vec__51011_51038 = cljs.core._nth.call(null, chunk__51008_51035, i__51010_51037);
          var k_51039 = cljs.core.nth.call(null, vec__51011_51038, 0, null);
          var v_51040 = cljs.core.nth.call(null, vec__51011_51038, 1, null);
          obj[cljs.core.name.call(null, k_51039)] = v_51040;
          var G__51041 = seq__51007_51034;
          var G__51042 = chunk__51008_51035;
          var G__51043 = count__51009_51036;
          var G__51044 = i__51010_51037 + 1;
          seq__51007_51034 = G__51041;
          chunk__51008_51035 = G__51042;
          count__51009_51036 = G__51043;
          i__51010_51037 = G__51044;
          continue;
        } else {
          var temp__4126__auto___51045 = cljs.core.seq.call(null, seq__51007_51034);
          if (temp__4126__auto___51045) {
            var seq__51007_51046__$1 = temp__4126__auto___51045;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__51007_51046__$1)) {
              var c__4295__auto___51047 = cljs.core.chunk_first.call(null, seq__51007_51046__$1);
              var G__51048 = cljs.core.chunk_rest.call(null, seq__51007_51046__$1);
              var G__51049 = c__4295__auto___51047;
              var G__51050 = cljs.core.count.call(null, c__4295__auto___51047);
              var G__51051 = 0;
              seq__51007_51034 = G__51048;
              chunk__51008_51035 = G__51049;
              count__51009_51036 = G__51050;
              i__51010_51037 = G__51051;
              continue;
            } else {
              var vec__51012_51052 = cljs.core.first.call(null, seq__51007_51046__$1);
              var k_51053 = cljs.core.nth.call(null, vec__51012_51052, 0, null);
              var v_51054 = cljs.core.nth.call(null, vec__51012_51052, 1, null);
              obj[cljs.core.name.call(null, k_51053)] = v_51054;
              var G__51055 = cljs.core.next.call(null, seq__51007_51046__$1);
              var G__51056 = null;
              var G__51057 = 0;
              var G__51058 = 0;
              seq__51007_51034 = G__51055;
              chunk__51008_51035 = G__51056;
              count__51009_51036 = G__51057;
              i__51010_51037 = G__51058;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, "JS literal expects a vector or map containing only string or unqualified keyword keys");
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag);
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup;
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if (typeof sel === "string") {
    return sel;
  } else {
    if (cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__4124__auto__ = jayq.core.crate_meta.call(null, sel);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var cm = temp__4124__auto__;
        return "[crateGroup\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cm) + "]";
      } else {
        return sel;
      }
    } else {
      if (sel instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, sel);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return sel;
        } else {
          return null;
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $ = null;
  var $__1 = function(sel) {
    return jQuery(jayq.core.__GT_selector.call(null, sel));
  };
  var $__2 = function(sel, context) {
    return jQuery(jayq.core.__GT_selector.call(null, sel), context);
  };
  $ = function(sel, context) {
    switch(arguments.length) {
      case 1:
        return $__1.call(this, sel);
      case 2:
        return $__2.call(this, sel, context);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  $.cljs$core$IFn$_invoke$arity$1 = $__1;
  $.cljs$core$IFn$_invoke$arity$2 = $__2;
  return $;
}();
jQuery.prototype.cljs$core$IFn$ = true;
jQuery.prototype.call = function() {
  var G__50896 = null;
  var G__50896__2 = function(self__, k) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__50896__3 = function(self__, k, not_found) {
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__50896 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__50896__2.call(this, self__, k);
      case 3:
        return G__50896__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__50896;
}();
jQuery.prototype.apply = function(self__, args50895) {
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args50895)));
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
jQuery.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f);
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f, start);
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var this$__$1 = this;
  var or__3539__auto__ = this$__$1.slice(k, k + 1);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, not_found);
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    return null;
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var this$__$1 = this;
  if (n < cljs.core.count.call(null, this$__$1)) {
    return this$__$1.slice(n, n + 1);
  } else {
    if (void 0 === not_found) {
      return null;
    } else {
      return not_found;
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.length;
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.get(0);
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.count.call(null, this$__$1) > 1) {
    return this$__$1.slice(1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this$__$1 = this;
  if (cljs.core.truth_(this$__$1.get(0))) {
    return this$__$1;
  } else {
    return null;
  }
};
jayq.core.anim = function anim($elem, props, dur) {
  return $elem.animate(cljs.core.clj__GT_js.call(null, props), dur);
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text();
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt);
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text.cljs$core$IFn$_invoke$arity$1 = text__1;
  text.cljs$core$IFn$_invoke$arity$2 = text__2;
  return text;
}();
jayq.core.css = function() {
  var css = null;
  var css__2 = function($elem, opts) {
    return $elem.css(cljs.core.clj__GT_js.call(null, opts));
  };
  var css__3 = function($elem, p, v) {
    return $elem.css(cljs.core.name.call(null, p), v);
  };
  css = function($elem, p, v) {
    switch(arguments.length) {
      case 2:
        return css__2.call(this, $elem, p);
      case 3:
        return css__3.call(this, $elem, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  css.cljs$core$IFn$_invoke$arity$2 = css__2;
  css.cljs$core$IFn$_invoke$arity$3 = css__3;
  return css;
}();
jayq.core.attr = function() {
  var attr = null;
  var attr__2 = function($elem, x) {
    return $elem.attr(cljs.core.clj__GT_js.call(null, x));
  };
  var attr__3 = function($elem, n, v) {
    return $elem.attr(cljs.core.name.call(null, n), v);
  };
  attr = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return attr__2.call(this, $elem, n);
      case 3:
        return attr__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  attr.cljs$core$IFn$_invoke$arity$2 = attr__2;
  attr.cljs$core$IFn$_invoke$arity$3 = attr__3;
  return attr;
}();
jayq.core.prop = function() {
  var prop = null;
  var prop__2 = function($elem, x) {
    return $elem.prop(cljs.core.clj__GT_js.call(null, x));
  };
  var prop__3 = function($elem, n, v) {
    return $elem.prop(cljs.core.name.call(null, n), v);
  };
  prop = function($elem, n, v) {
    switch(arguments.length) {
      case 2:
        return prop__2.call(this, $elem, n);
      case 3:
        return prop__3.call(this, $elem, n, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prop.cljs$core$IFn$_invoke$arity$2 = prop__2;
  prop.cljs$core$IFn$_invoke$arity$3 = prop__3;
  return prop;
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a));
};
jayq.core.remove_prop = function remove_prop($elem, a) {
  return $elem.removeProp(cljs.core.name.call(null, a));
};
jayq.core.data = function() {
  var data = null;
  var data__1 = function($elem) {
    return $elem.data();
  };
  var data__2 = function($elem, k) {
    return $elem.data(cljs.core.clj__GT_js.call(null, k));
  };
  var data__3 = function($elem, k, v) {
    return $elem.data(cljs.core.name.call(null, k), cljs.core.clj__GT_js.call(null, v));
  };
  data = function($elem, k, v) {
    switch(arguments.length) {
      case 1:
        return data__1.call(this, $elem);
      case 2:
        return data__2.call(this, $elem, k);
      case 3:
        return data__3.call(this, $elem, k, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  data.cljs$core$IFn$_invoke$arity$1 = data__1;
  data.cljs$core$IFn$_invoke$arity$2 = data__2;
  data.cljs$core$IFn$_invoke$arity$3 = data__3;
  return data;
}();
jayq.core.add_class = function add_class($elem, cl) {
  return $elem.addClass(cljs.core.name.call(null, cl));
};
jayq.core.remove_class = function remove_class($elem, cl) {
  return $elem.removeClass(cljs.core.name.call(null, cl));
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  return $elem.toggleClass(cljs.core.name.call(null, cl));
};
jayq.core.has_class = function has_class($elem, cl) {
  return $elem.hasClass(cljs.core.name.call(null, cl));
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector));
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content);
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content);
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content);
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content);
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target));
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target));
};
jayq.core.replace_with = function replace_with($elem, content) {
  return $elem.replaceWith(content);
};
jayq.core.remove = function remove($elem) {
  return $elem.remove();
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__50897) {
    var vec__50899 = p__50897;
    var speed = cljs.core.nth.call(null, vec__50899, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50899, 1, null);
    return $elem.hide(speed, on_finish);
  };
  var hide = function($elem, var_args) {
    var p__50897 = null;
    if (arguments.length > 1) {
      p__50897 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hide__delegate.call(this, $elem, p__50897);
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__50900) {
    var $elem = cljs.core.first(arglist__50900);
    var p__50897 = cljs.core.rest(arglist__50900);
    return hide__delegate($elem, p__50897);
  };
  hide.cljs$core$IFn$_invoke$arity$variadic = hide__delegate;
  return hide;
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__50901) {
    var vec__50903 = p__50901;
    var speed = cljs.core.nth.call(null, vec__50903, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50903, 1, null);
    return $elem.show(speed, on_finish);
  };
  var show = function($elem, var_args) {
    var p__50901 = null;
    if (arguments.length > 1) {
      p__50901 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return show__delegate.call(this, $elem, p__50901);
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__50904) {
    var $elem = cljs.core.first(arglist__50904);
    var p__50901 = cljs.core.rest(arglist__50904);
    return show__delegate($elem, p__50901);
  };
  show.cljs$core$IFn$_invoke$arity$variadic = show__delegate;
  return show;
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__50905) {
    var vec__50907 = p__50905;
    var speed = cljs.core.nth.call(null, vec__50907, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50907, 1, null);
    return $elem.toggle(speed, on_finish);
  };
  var toggle = function($elem, var_args) {
    var p__50905 = null;
    if (arguments.length > 1) {
      p__50905 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return toggle__delegate.call(this, $elem, p__50905);
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__50908) {
    var $elem = cljs.core.first(arglist__50908);
    var p__50905 = cljs.core.rest(arglist__50908);
    return toggle__delegate($elem, p__50905);
  };
  toggle.cljs$core$IFn$_invoke$arity$variadic = toggle__delegate;
  return toggle;
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__50909) {
    var vec__50911 = p__50909;
    var speed = cljs.core.nth.call(null, vec__50911, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50911, 1, null);
    return $elem.fadeOut(speed, on_finish);
  };
  var fade_out = function($elem, var_args) {
    var p__50909 = null;
    if (arguments.length > 1) {
      p__50909 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_out__delegate.call(this, $elem, p__50909);
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__50912) {
    var $elem = cljs.core.first(arglist__50912);
    var p__50909 = cljs.core.rest(arglist__50912);
    return fade_out__delegate($elem, p__50909);
  };
  fade_out.cljs$core$IFn$_invoke$arity$variadic = fade_out__delegate;
  return fade_out;
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__50913) {
    var vec__50915 = p__50913;
    var speed = cljs.core.nth.call(null, vec__50915, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50915, 1, null);
    return $elem.fadeIn(speed, on_finish);
  };
  var fade_in = function($elem, var_args) {
    var p__50913 = null;
    if (arguments.length > 1) {
      p__50913 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fade_in__delegate.call(this, $elem, p__50913);
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__50916) {
    var $elem = cljs.core.first(arglist__50916);
    var p__50913 = cljs.core.rest(arglist__50916);
    return fade_in__delegate($elem, p__50913);
  };
  fade_in.cljs$core$IFn$_invoke$arity$variadic = fade_in__delegate;
  return fade_in;
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__50917) {
    var vec__50919 = p__50917;
    var speed = cljs.core.nth.call(null, vec__50919, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50919, 1, null);
    return $elem.slideUp(speed, on_finish);
  };
  var slide_up = function($elem, var_args) {
    var p__50917 = null;
    if (arguments.length > 1) {
      p__50917 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_up__delegate.call(this, $elem, p__50917);
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__50920) {
    var $elem = cljs.core.first(arglist__50920);
    var p__50917 = cljs.core.rest(arglist__50920);
    return slide_up__delegate($elem, p__50917);
  };
  slide_up.cljs$core$IFn$_invoke$arity$variadic = slide_up__delegate;
  return slide_up;
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__50921) {
    var vec__50923 = p__50921;
    var speed = cljs.core.nth.call(null, vec__50923, 0, null);
    var on_finish = cljs.core.nth.call(null, vec__50923, 1, null);
    return $elem.slideDown(speed, on_finish);
  };
  var slide_down = function($elem, var_args) {
    var p__50921 = null;
    if (arguments.length > 1) {
      p__50921 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return slide_down__delegate.call(this, $elem, p__50921);
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__50924) {
    var $elem = cljs.core.first(arglist__50924);
    var p__50921 = cljs.core.rest(arglist__50924);
    return slide_down__delegate($elem, p__50921);
  };
  slide_down.cljs$core$IFn$_invoke$arity$variadic = slide_down__delegate;
  return slide_down;
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings();
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector));
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  siblings.cljs$core$IFn$_invoke$arity$1 = siblings__1;
  siblings.cljs$core$IFn$_invoke$arity$2 = siblings__2;
  return siblings;
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent();
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents();
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector));
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil();
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents_until.cljs$core$IFn$_invoke$arity$1 = parents_until__1;
  parents_until.cljs$core$IFn$_invoke$arity$2 = parents_until__2;
  parents_until.cljs$core$IFn$_invoke$arity$3 = parents_until__3;
  return parents_until;
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children();
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector));
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  children.cljs$core$IFn$_invoke$arity$1 = children__1;
  children.cljs$core$IFn$_invoke$arity$2 = children__2;
  return children;
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next();
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector));
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next.cljs$core$IFn$_invoke$arity$1 = next__1;
  next.cljs$core$IFn$_invoke$arity$2 = next__2;
  return next;
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev();
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector));
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev.cljs$core$IFn$_invoke$arity$1 = prev__1;
  prev.cljs$core$IFn$_invoke$arity$2 = prev__2;
  return prev;
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll();
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector));
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_all.cljs$core$IFn$_invoke$arity$1 = next_all__1;
  next_all.cljs$core$IFn$_invoke$arity$2 = next_all__2;
  return next_all;
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll();
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector));
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_all.cljs$core$IFn$_invoke$arity$1 = prev_all__1;
  prev_all.cljs$core$IFn$_invoke$arity$2 = prev_all__2;
  return prev_all;
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil();
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  next_until.cljs$core$IFn$_invoke$arity$1 = next_until__1;
  next_until.cljs$core$IFn$_invoke$arity$2 = next_until__2;
  next_until.cljs$core$IFn$_invoke$arity$3 = next_until__3;
  return next_until;
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil();
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector));
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr));
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prev_until.cljs$core$IFn$_invoke$arity$1 = prev_until__1;
  prev_until.cljs$core$IFn$_invoke$arity$2 = prev_until__2;
  prev_until.cljs$core$IFn$_invoke$arity$3 = prev_until__3;
  return prev_until;
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector));
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__50925) {
    var vec__50927 = p__50925;
    var context = cljs.core.nth.call(null, vec__50927, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context);
  };
  var closest = function($elem, selector, var_args) {
    var p__50925 = null;
    if (arguments.length > 2) {
      p__50925 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return closest__delegate.call(this, $elem, selector, p__50925);
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__50928) {
    var $elem = cljs.core.first(arglist__50928);
    arglist__50928 = cljs.core.next(arglist__50928);
    var selector = cljs.core.first(arglist__50928);
    var p__50925 = cljs.core.rest(arglist__50928);
    return closest__delegate($elem, selector, p__50925);
  };
  closest.cljs$core$IFn$_invoke$arity$variadic = closest__delegate;
  return closest;
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone();
};
jayq.core.html = function() {
  var html = null;
  var html__1 = function($elem) {
    return $elem.html();
  };
  var html__2 = function($elem, v) {
    return $elem.html(v);
  };
  html = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return html__1.call(this, $elem);
      case 2:
        return html__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  html.cljs$core$IFn$_invoke$arity$1 = html__1;
  html.cljs$core$IFn$_invoke$arity$2 = html__2;
  return html;
}();
jayq.core.inner = jayq.core.html;
jayq.core.empty = function empty($elem) {
  return $elem.empty();
};
jayq.core.val = function() {
  var val = null;
  var val__1 = function($elem) {
    return $elem.val();
  };
  var val__2 = function($elem, v) {
    return $elem.val(v);
  };
  val = function($elem, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, $elem);
      case 2:
        return val__2.call(this, $elem, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  val.cljs$core$IFn$_invoke$arity$1 = val__1;
  val.cljs$core$IFn$_invoke$arity$2 = val__2;
  return val;
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize();
};
jayq.core.queue = function() {
  var queue = null;
  var queue__1 = function($elem) {
    return $elem.queue();
  };
  var queue__2 = function($elem, x) {
    return $elem.queue(x);
  };
  var queue__3 = function($elem, x, y) {
    return $elem.queue(x, y);
  };
  queue = function($elem, x, y) {
    switch(arguments.length) {
      case 1:
        return queue__1.call(this, $elem);
      case 2:
        return queue__2.call(this, $elem, x);
      case 3:
        return queue__3.call(this, $elem, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  queue.cljs$core$IFn$_invoke$arity$1 = queue__1;
  queue.cljs$core$IFn$_invoke$arity$2 = queue__2;
  queue.cljs$core$IFn$_invoke$arity$3 = queue__3;
  return queue;
}();
jayq.core.dequeue = function() {
  var dequeue = null;
  var dequeue__1 = function($elem) {
    return $elem.dequeue();
  };
  var dequeue__2 = function($elem, queue_name) {
    return $elem.dequeue(queue_name);
  };
  dequeue = function($elem, queue_name) {
    switch(arguments.length) {
      case 1:
        return dequeue__1.call(this, $elem);
      case 2:
        return dequeue__2.call(this, $elem, queue_name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dequeue.cljs$core$IFn$_invoke$arity$1 = dequeue__1;
  dequeue.cljs$core$IFn$_invoke$arity$2 = dequeue__2;
  return dequeue;
}();
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func);
};
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
};
jQuery.ajaxSetup(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "accepts", "accepts", 4131250141), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "edn", "edn", 1014004513), "application/edn, text/edn", new cljs.core.Keyword(null, "clojure", "clojure", 1880188502), "application/clojure, text/clojure"], null), new cljs.core.Keyword(null, "contents", "contents", 4741549708), new cljs.core.PersistentArrayMap(null, 1, ["clojure", 
/edn|clojure/], null), new cljs.core.Keyword(null, "converters", "converters", 3057163845), new cljs.core.PersistentArrayMap(null, 2, ["text edn", jayq.core.mimetype_converter, "text clojure", jayq.core.mimetype_converter], null)], null)));
jayq.core.clj_content_type_QMARK_ = function clj_content_type_QMARK_(x) {
  return cljs.core.re_find.call(null, /^(text|application)\/(clojure|edn)/, x);
};
jayq.core.__GT_content_type = function __GT_content_type(ct) {
  if (typeof ct === "string") {
    return ct;
  } else {
    if (ct instanceof cljs.core.Keyword) {
      return cljs.core.subs.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ct), 1);
    } else {
      return null;
    }
  }
};
jayq.core.preprocess_request = function preprocess_request(p__50931) {
  var map__50933 = p__50931;
  var map__50933__$1 = cljs.core.seq_QMARK_.call(null, map__50933) ? cljs.core.apply.call(null, cljs.core.hash_map, map__50933) : map__50933;
  var request = map__50933__$1;
  var contentType = cljs.core.get.call(null, map__50933__$1, new cljs.core.Keyword(null, "contentType", "contentType", 624772805));
  var data = cljs.core.get.call(null, map__50933__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
  var ct = jayq.core.__GT_content_type.call(null, contentType);
  return function(ct, map__50933, map__50933__$1, request, contentType, data) {
    return function(p1__50930_SHARP_) {
      if (cljs.core.truth_(jayq.core.clj_content_type_QMARK_.call(null, ct))) {
        return cljs.core.assoc.call(null, p1__50930_SHARP_, new cljs.core.Keyword(null, "data", "data", 1016980252), cljs.core.pr_str.call(null, data));
      } else {
        return p1__50930_SHARP_;
      }
    };
  }(ct, map__50933, map__50933__$1, request, contentType, data).call(null, function(ct, map__50933, map__50933__$1, request, contentType, data) {
    return function(p1__50929_SHARP_) {
      if (cljs.core.truth_(ct)) {
        return cljs.core.assoc.call(null, p1__50929_SHARP_, new cljs.core.Keyword(null, "contentType", "contentType", 624772805), ct);
      } else {
        return p1__50929_SHARP_;
      }
    };
  }(ct, map__50933, map__50933__$1, request, contentType, data).call(null, request));
};
jayq.core.__GT_ajax_settings = function __GT_ajax_settings(request) {
  return cljs.core.clj__GT_js.call(null, jayq.core.preprocess_request.call(null, request));
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.core.__GT_ajax_settings.call(null, settings));
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.core.__GT_ajax_settings.call(null, settings));
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ajax.cljs$core$IFn$_invoke$arity$1 = ajax__1;
  ajax.cljs$core$IFn$_invoke$arity$2 = ajax__2;
  return ajax;
}();
jayq.core.xhr = function xhr(p__50934, content, callback) {
  var vec__50936 = p__50934;
  var method = cljs.core.nth.call(null, vec__50936, 0, null);
  var uri = cljs.core.nth.call(null, vec__50936, 1, null);
  var params = cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), clojure.string.upper_case.call(null, cljs.core.name.call(null, method)), new cljs.core.Keyword(null, "data", "data", 1016980252), cljs.core.clj__GT_js.call(null, content), new cljs.core.Keyword(null, "success", "success", 3441701749), callback], null));
  return jQuery.ajax(uri, params);
};
jayq.core.read = function read($elem) {
  return cljs.reader.read_string.call(null, jayq.core.html.call(null, $elem));
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func);
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__50937) {
    var vec__50939 = p__50937;
    var func = cljs.core.nth.call(null, vec__50939, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func);
  };
  var unbind = function($elem, ev, var_args) {
    var p__50937 = null;
    if (arguments.length > 2) {
      p__50937 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return unbind__delegate.call(this, $elem, ev, p__50937);
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__50940) {
    var $elem = cljs.core.first(arglist__50940);
    arglist__50940 = cljs.core.next(arglist__50940);
    var ev = cljs.core.first(arglist__50940);
    var p__50937 = cljs.core.rest(arglist__50940);
    return unbind__delegate($elem, ev, p__50937);
  };
  unbind.cljs$core$IFn$_invoke$arity$variadic = unbind__delegate;
  return unbind;
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev));
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func);
};
jayq.core.__GT_event = function __GT_event(e) {
  if (cljs.core.coll_QMARK_.call(null, e)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e));
  } else {
    return cljs.core.clj__GT_js.call(null, e);
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__50941) {
    var vec__50943 = p__50941;
    var sel = cljs.core.nth.call(null, vec__50943, 0, null);
    var data = cljs.core.nth.call(null, vec__50943, 1, null);
    var handler = cljs.core.nth.call(null, vec__50943, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var on = function($elem, events, var_args) {
    var p__50941 = null;
    if (arguments.length > 2) {
      p__50941 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return on__delegate.call(this, $elem, events, p__50941);
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__50944) {
    var $elem = cljs.core.first(arglist__50944);
    arglist__50944 = cljs.core.next(arglist__50944);
    var events = cljs.core.first(arglist__50944);
    var p__50941 = cljs.core.rest(arglist__50944);
    return on__delegate($elem, events, p__50941);
  };
  on.cljs$core$IFn$_invoke$arity$variadic = on__delegate;
  return on;
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__50945) {
    var vec__50947 = p__50945;
    var sel = cljs.core.nth.call(null, vec__50947, 0, null);
    var data = cljs.core.nth.call(null, vec__50947, 1, null);
    var handler = cljs.core.nth.call(null, vec__50947, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), data, handler);
  };
  var one = function($elem, events, var_args) {
    var p__50945 = null;
    if (arguments.length > 2) {
      p__50945 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return one__delegate.call(this, $elem, events, p__50945);
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__50948) {
    var $elem = cljs.core.first(arglist__50948);
    arglist__50948 = cljs.core.next(arglist__50948);
    var events = cljs.core.first(arglist__50948);
    var p__50945 = cljs.core.rest(arglist__50948);
    return one__delegate($elem, events, p__50945);
  };
  one.cljs$core$IFn$_invoke$arity$variadic = one__delegate;
  return one;
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__50949) {
    var vec__50951 = p__50949;
    var sel = cljs.core.nth.call(null, vec__50951, 0, null);
    var handler = cljs.core.nth.call(null, vec__50951, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel), handler);
  };
  var off = function($elem, events, var_args) {
    var p__50949 = null;
    if (arguments.length > 2) {
      p__50949 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return off__delegate.call(this, $elem, events, p__50949);
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__50952) {
    var $elem = cljs.core.first(arglist__50952);
    arglist__50952 = cljs.core.next(arglist__50952);
    var events = cljs.core.first(arglist__50952);
    var p__50949 = cljs.core.rest(arglist__50952);
    return off__delegate($elem, events, p__50949);
  };
  off.cljs$core$IFn$_invoke$arity$variadic = off__delegate;
  return off;
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault();
};
jayq.core.height = function() {
  var height = null;
  var height__1 = function($elem) {
    return $elem.height();
  };
  var height__2 = function($elem, x) {
    return $elem.height(x);
  };
  height = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return height__1.call(this, $elem);
      case 2:
        return height__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  height.cljs$core$IFn$_invoke$arity$1 = height__1;
  height.cljs$core$IFn$_invoke$arity$2 = height__2;
  return height;
}();
jayq.core.width = function() {
  var width = null;
  var width__1 = function($elem) {
    return $elem.width();
  };
  var width__2 = function($elem, x) {
    return $elem.width(x);
  };
  width = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return width__1.call(this, $elem);
      case 2:
        return width__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  width.cljs$core$IFn$_invoke$arity$1 = width__1;
  width.cljs$core$IFn$_invoke$arity$2 = width__2;
  return width;
}();
jayq.core.inner_height = function inner_height($elem) {
  return $elem.innerHeight();
};
jayq.core.inner_width = function inner_width($elem) {
  return $elem.innerWidth();
};
jayq.core.outer_height = function outer_height($elem) {
  return $elem.outerHeight();
};
jayq.core.outer_width = function outer_width($elem) {
  return $elem.outerWidth();
};
jayq.core.offset = function() {
  var offset = null;
  var offset__1 = function($elem) {
    return cljs.core.js__GT_clj.call(null, $elem.offset(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
  };
  var offset__2 = function($elem, coords) {
    return cljs.core.clj__GT_js.call(null, coords).offset();
  };
  offset = function($elem, coords) {
    switch(arguments.length) {
      case 1:
        return offset__1.call(this, $elem);
      case 2:
        return offset__2.call(this, $elem, coords);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  offset.cljs$core$IFn$_invoke$arity$1 = offset__1;
  offset.cljs$core$IFn$_invoke$arity$2 = offset__2;
  return offset;
}();
jayq.core.offset_parent = function offset_parent($elem) {
  return $elem.offsetParent();
};
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
};
jayq.core.scroll_left = function() {
  var scroll_left = null;
  var scroll_left__1 = function($elem) {
    return $elem.scrollLeft();
  };
  var scroll_left__2 = function($elem, x) {
    return $elem.scrollLeft(x);
  };
  scroll_left = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_left__1.call(this, $elem);
      case 2:
        return scroll_left__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_left.cljs$core$IFn$_invoke$arity$1 = scroll_left__1;
  scroll_left.cljs$core$IFn$_invoke$arity$2 = scroll_left__2;
  return scroll_left;
}();
jayq.core.scroll_top = function() {
  var scroll_top = null;
  var scroll_top__1 = function($elem) {
    return $elem.scrollTop();
  };
  var scroll_top__2 = function($elem, x) {
    return $elem.scrollTop(x);
  };
  scroll_top = function($elem, x) {
    switch(arguments.length) {
      case 1:
        return scroll_top__1.call(this, $elem);
      case 2:
        return scroll_top__2.call(this, $elem, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scroll_top.cljs$core$IFn$_invoke$arity$1 = scroll_top__1;
  scroll_top.cljs$core$IFn$_invoke$arity$2 = scroll_top__2;
  return scroll_top;
}();
jayq.core.$deferred = jQuery.Deferred;
jayq.core.$when = jQuery.when;
jayq.core.then = function() {
  var then = null;
  var then__3 = function(deferred, done_fn, fail_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn));
  };
  var then__4 = function(deferred, done_fn, fail_fn, progress_fn) {
    return deferred.then(cljs.core.clj__GT_js.call(null, done_fn), cljs.core.clj__GT_js.call(null, fail_fn), cljs.core.clj__GT_js.call(null, progress_fn));
  };
  then = function(deferred, done_fn, fail_fn, progress_fn) {
    switch(arguments.length) {
      case 3:
        return then__3.call(this, deferred, done_fn, fail_fn);
      case 4:
        return then__4.call(this, deferred, done_fn, fail_fn, progress_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  then.cljs$core$IFn$_invoke$arity$3 = then__3;
  then.cljs$core$IFn$_invoke$arity$4 = then__4;
  return then;
}();
jayq.core.done = function() {
  var done__delegate = function(deferred, fns_args) {
    return deferred.done.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var done = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return done__delegate.call(this, deferred, fns_args);
  };
  done.cljs$lang$maxFixedArity = 1;
  done.cljs$lang$applyTo = function(arglist__50953) {
    var deferred = cljs.core.first(arglist__50953);
    var fns_args = cljs.core.rest(arglist__50953);
    return done__delegate(deferred, fns_args);
  };
  done.cljs$core$IFn$_invoke$arity$variadic = done__delegate;
  return done;
}();
jayq.core.fail = function() {
  var fail__delegate = function(deferred, fns_args) {
    return deferred.fail.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var fail = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fail__delegate.call(this, deferred, fns_args);
  };
  fail.cljs$lang$maxFixedArity = 1;
  fail.cljs$lang$applyTo = function(arglist__50954) {
    var deferred = cljs.core.first(arglist__50954);
    var fns_args = cljs.core.rest(arglist__50954);
    return fail__delegate(deferred, fns_args);
  };
  fail.cljs$core$IFn$_invoke$arity$variadic = fail__delegate;
  return fail;
}();
jayq.core.progress = function progress(deferred, fns_args) {
  return deferred.progress(cljs.core.clj__GT_js.call(null, fns_args));
};
jayq.core.promise = function() {
  var promise = null;
  var promise__1 = function(deferred) {
    return deferred.promise();
  };
  var promise__2 = function(deferred, type) {
    return deferred.promise(type);
  };
  var promise__3 = function(deferred, type, target) {
    return deferred.promise(type, target);
  };
  promise = function(deferred, type, target) {
    switch(arguments.length) {
      case 1:
        return promise__1.call(this, deferred);
      case 2:
        return promise__2.call(this, deferred, type);
      case 3:
        return promise__3.call(this, deferred, type, target);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  promise.cljs$core$IFn$_invoke$arity$1 = promise__1;
  promise.cljs$core$IFn$_invoke$arity$2 = promise__2;
  promise.cljs$core$IFn$_invoke$arity$3 = promise__3;
  return promise;
}();
jayq.core.always = function() {
  var always__delegate = function(deferred, fns_args) {
    return deferred.always.apply(deferred, cljs.core.clj__GT_js.call(null, fns_args));
  };
  var always = function(deferred, var_args) {
    var fns_args = null;
    if (arguments.length > 1) {
      fns_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return always__delegate.call(this, deferred, fns_args);
  };
  always.cljs$lang$maxFixedArity = 1;
  always.cljs$lang$applyTo = function(arglist__50955) {
    var deferred = cljs.core.first(arglist__50955);
    var fns_args = cljs.core.rest(arglist__50955);
    return always__delegate(deferred, fns_args);
  };
  always.cljs$core$IFn$_invoke$arity$variadic = always__delegate;
  return always;
}();
jayq.core.reject = function reject(deferred, args) {
  return deferred.reject(args);
};
jayq.core.reject_with = function reject_with(deferred, context, args) {
  return deferred.rejectWith(context, args);
};
jayq.core.notify = function notify(deferred, args) {
  return deferred.notify(args);
};
jayq.core.notify_with = function notify_with(deferred, context, args) {
  return deferred.notifyWith(context, args);
};
jayq.core.resolve = function resolve(deferred, args) {
  return deferred.resolve(args);
};
jayq.core.resolve_with = function resolve_with(deferred, context, args) {
  return deferred.resolveWith(context, args);
};
jayq.core.pipe = function() {
  var pipe = null;
  var pipe__2 = function(deferred, done_filter) {
    return deferred.pipe(done_filter);
  };
  var pipe__3 = function(deferred, done_filter, fail_filter) {
    return deferred.pipe(done_filter, fail_filter);
  };
  var pipe__4 = function(deferred, done_filter, fail_filter, progress_filter) {
    return deferred.pipe(done_filter, fail_filter, progress_filter);
  };
  pipe = function(deferred, done_filter, fail_filter, progress_filter) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, deferred, done_filter);
      case 3:
        return pipe__3.call(this, deferred, done_filter, fail_filter);
      case 4:
        return pipe__4.call(this, deferred, done_filter, fail_filter, progress_filter);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  pipe.cljs$core$IFn$_invoke$arity$4 = pipe__4;
  return pipe;
}();
jayq.core.state = function state(deferred) {
  return cljs.core.keyword.call(null, deferred.state());
};
jayq.core.deferred_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", 4374474914), jayq.core.$when, new cljs.core.Keyword(null, "bind", "bind", 1016928175), function(x, f) {
  var dfd = jayq.core.$deferred.call(null);
  jayq.core.done.call(null, x, function(dfd) {
    return function(v) {
      return jayq.core.done.call(null, f.call(null, v), cljs.core.partial.call(null, jayq.core.resolve, dfd));
    };
  }(dfd));
  return jayq.core.promise.call(null, dfd);
}, new cljs.core.Keyword(null, "zero", "zero", 1017639450), cljs.core.identity], null);
jayq.core.ajax_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "return", "return", 4374474914), cljs.core.identity, new cljs.core.Keyword(null, "bind", "bind", 1016928175), function(x, f) {
  return jayq.core.done.call(null, jayq.core.ajax.call(null, x), f);
}, new cljs.core.Keyword(null, "zero", "zero", 1017639450), cljs.core.identity], null);
goog.provide("clustermap.components.timeline_chart");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.formats.number");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("om.dom");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("jayq.core");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
goog.require("hiccups.runtime");
clustermap.components.timeline_chart.create_chart = function create_chart(data, node, p__46445) {
  var map__46447 = p__46445;
  var map__46447__$1 = cljs.core.seq_QMARK_.call(null, map__46447) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46447) : map__46447;
  var opts = map__46447__$1;
  var y1_title = cljs.core.get.call(null, map__46447__$1, new cljs.core.Keyword(null, "y1-title", "y1-title", 3377247893));
  var y0_title = cljs.core.get.call(null, map__46447__$1, new cljs.core.Keyword(null, "y0-title", "y0-title", 2489744212));
  var x_labels = cljs.core.map.call(null, new cljs.core.Keyword(null, "date", "date", 1016980256), data);
  var stats = cljs.core.map.call(null, new cljs.core.Keyword(null, "stats", "stats", 1123661841), data);
  var y_median = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function(p1__46439_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__46439_SHARP_, 0);
    };
  }(x_labels, stats, map__46447, map__46447__$1, opts, y1_title, y0_title), function(x_labels, stats, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function(p1__46440_SHARP_) {
      return cljs.core.get_in.call(null, p1__46440_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", 1123661841), new cljs.core.Keyword(null, "median", "median", 4230840444)], null));
    };
  }(x_labels, stats, map__46447, map__46447__$1, opts, y1_title, y0_title)), data);
  var y_mean = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function(p1__46441_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__46441_SHARP_, 0);
    };
  }(x_labels, stats, y_median, map__46447, map__46447__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function(p1__46442_SHARP_) {
      return cljs.core.get_in.call(null, p1__46442_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", 1123661841), new cljs.core.Keyword(null, "mean", "mean", 1017251639)], null));
    };
  }(x_labels, stats, y_median, map__46447, map__46447__$1, opts, y1_title, y0_title)), data);
  var y_total = cljs.core.map.call(null, cljs.core.comp.call(null, function(x_labels, stats, y_median, y_mean, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function(p1__46443_SHARP_) {
      return clustermap.formats.number.round_decimal.call(null, p1__46443_SHARP_, 0);
    };
  }(x_labels, stats, y_median, y_mean, map__46447, map__46447__$1, opts, y1_title, y0_title), function(x_labels, stats, y_median, y_mean, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function(p1__46444_SHARP_) {
      return cljs.core.get_in.call(null, p1__46444_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "stats", "stats", 1123661841), new cljs.core.Keyword(null, "total", "total", 1124454070)], null));
    };
  }(x_labels, stats, y_median, y_mean, map__46447, map__46447__$1, opts, y1_title, y0_title)), data);
  return jayq.core.$.call(null, node).highcharts(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "chart", "chart", 1108527952), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", 1127031096), null, new cljs.core.Keyword(null, "height", "height", 4087841945), 300], null), new cljs.core.Keyword(null, "title", "title", 1124275658), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", 
  "text", 1017460895), null], null), new cljs.core.Keyword(null, "xAxis", "xAxis", 1126781867), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "categories", "categories", 2310420878), x_labels, new cljs.core.Keyword(null, "labels", "labels", 4198454129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "rotation", "rotation", 973603568), 270], null)], null), new cljs.core.Keyword(null, "yAxis", "yAxis", 1127705388), new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 1124275658), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", 1017460895), y0_title], null), new cljs.core.Keyword(null, "min", "min", 1014012356), 0, new cljs.core.Keyword(null, "labels", "labels", 4198454129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "formatter", "formatter", 2825495612), function(x_labels, 
  stats, y_median, y_mean, y_total, map__46447, map__46447__$1, opts, y1_title, y0_title) {
    return function() {
      var this$ = this;
      return clustermap.formats.money.readable.call(null, this$.value, new cljs.core.Keyword(null, "curr", "curr", 1016969636), "");
    };
  }(x_labels, stats, y_median, y_mean, y_total, map__46447, map__46447__$1, opts, y1_title, y0_title)], null)], null)], null), new cljs.core.Keyword(null, "series", "series", 4403032553), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(y0_title), new cljs.core.Keyword(null, "type", "type", 1017479852), "line", 
  new cljs.core.Keyword(null, "yAxis", "yAxis", 1127705388), 0, new cljs.core.Keyword(null, "data", "data", 1016980252), y_total], null)], null)], null)));
};
clustermap.components.timeline_chart.timeline_chart = function timeline_chart(data, owner, p__46448) {
  var map__46453 = p__46448;
  var map__46453__$1 = cljs.core.seq_QMARK_.call(null, map__46453) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46453) : map__46453;
  var opts = map__46453__$1;
  var id = cljs.core.get.call(null, map__46453__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  if (typeof clustermap.components.timeline_chart.t46454 !== "undefined") {
  } else {
    clustermap.components.timeline_chart.t46454 = function(id, opts, map__46453, p__46448, owner, data, timeline_chart, meta46455) {
      this.id = id;
      this.opts = opts;
      this.map__46453 = map__46453;
      this.p__46448 = p__46448;
      this.owner = owner;
      this.data = data;
      this.timeline_chart = timeline_chart;
      this.meta46455 = meta46455;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.timeline_chart.t46454.cljs$lang$type = true;
    clustermap.components.timeline_chart.t46454.cljs$lang$ctorStr = "clustermap.components.timeline-chart/t46454";
    clustermap.components.timeline_chart.t46454.cljs$lang$ctorPrWriter = function(map__46453, map__46453__$1, opts, id) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.timeline-chart/t46454");
      };
    }(map__46453, map__46453__$1, opts, id);
    clustermap.components.timeline_chart.t46454.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.timeline_chart.t46454.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__46453, map__46453__$1, opts, id) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        return clustermap.components.timeline_chart.create_chart.call(null, self__.data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
      };
    }(map__46453, map__46453__$1, opts, id);
    clustermap.components.timeline_chart.t46454.prototype.om$core$IDidMount$ = true;
    clustermap.components.timeline_chart.t46454.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__46453, map__46453__$1, opts, id) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        clustermap.components.timeline_chart.create_chart.call(null, self__.data, om.core.get_node.call(null, self__.owner, "chart"), self__.opts);
        return jayq.core.$.call(null, document).on("clustermap-change-view", function(node, this$__$1, map__46453, map__46453__$1, opts, id) {
          return function(e) {
            var chart = jayq.core.$.call(null, om.core.get_node.call(null, self__.owner, "chart"));
            if (cljs.core.truth_(chart.is(":visible"))) {
              return chart.highcharts().reflow();
            } else {
              return null;
            }
          };
        }(node, this$__$1, map__46453, map__46453__$1, opts, id));
      };
    }(map__46453, map__46453__$1, opts, id);
    clustermap.components.timeline_chart.t46454.prototype.om$core$IRender$ = true;
    clustermap.components.timeline_chart.t46454.prototype.om$core$IRender$render$arity$1 = function(map__46453, map__46453__$1, opts, id) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"timeline-chart", "id":self__.id, "ref":"chart"});
      };
    }(map__46453, map__46453__$1, opts, id);
    clustermap.components.timeline_chart.t46454.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46453, map__46453__$1, opts, id) {
      return function(_46456) {
        var self__ = this;
        var _46456__$1 = this;
        return self__.meta46455;
      };
    }(map__46453, map__46453__$1, opts, id);
    clustermap.components.timeline_chart.t46454.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46453, map__46453__$1, opts, id) {
      return function(_46456, meta46455__$1) {
        var self__ = this;
        var _46456__$1 = this;
        return new clustermap.components.timeline_chart.t46454(self__.id, self__.opts, self__.map__46453, self__.p__46448, self__.owner, self__.data, self__.timeline_chart, meta46455__$1);
      };
    }(map__46453, map__46453__$1, opts, id);
    clustermap.components.timeline_chart.__GT_t46454 = function(map__46453, map__46453__$1, opts, id) {
      return function __GT_t46454(id__$1, opts__$1, map__46453__$2, p__46448__$1, owner__$1, data__$1, timeline_chart__$1, meta46455) {
        return new clustermap.components.timeline_chart.t46454(id__$1, opts__$1, map__46453__$2, p__46448__$1, owner__$1, data__$1, timeline_chart__$1, meta46455);
      };
    }(map__46453, map__46453__$1, opts, id);
  }
  return new clustermap.components.timeline_chart.t46454(id, opts, map__46453__$1, p__46448, owner, data, timeline_chart, null);
};
goog.provide("clustermap.components.full_report.charts");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.components.timeline_chart");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("clustermap.components.timeline_chart");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.full_report.charts.charts = function charts(data, owner) {
  if (typeof clustermap.components.full_report.charts.t45657 !== "undefined") {
  } else {
    clustermap.components.full_report.charts.t45657 = function(owner, data, charts, meta45658) {
      this.owner = owner;
      this.data = data;
      this.charts = charts;
      this.meta45658 = meta45658;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.charts.t45657.cljs$lang$type = true;
    clustermap.components.full_report.charts.t45657.cljs$lang$ctorStr = "clustermap.components.full-report.charts/t45657";
    clustermap.components.full_report.charts.t45657.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
      return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report.charts/t45657");
    };
    clustermap.components.full_report.charts.t45657.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.charts.t45657.prototype.om$core$IRender$render$arity$1 = function(this__9410__auto__) {
      var self__ = this;
      var this__9410__auto____$1 = this;
      var attrs45660 = function() {
        var temp__4124__auto__ = (new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 1845704779)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var timelines = temp__4124__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.grid", "div.grid", 1323787765), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 2686480467), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell.charts", "div.tbl-cell.charts", 2527561447), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl", "div.tbl", 2686480467), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-row", "div.tbl-row", 1065043552), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.tbl-cell", "div.tbl-cell", 2598766144), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Keyword(null, "div.box.box-first", "div.box.box-first", 2223624352), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "header", "header", 4087600639), "Revenue"], null), om.core.build.call(null, clustermap.components.timeline_chart.timeline_chart, (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(timelines), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
          "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), "turnover-timeline-chart", new cljs.core.Keyword(null, "y0-title", "y0-title", 2489744212), "Revenue", new cljs.core.Keyword(null, "y1-title", "y1-title", 3377247893), "# Filings"], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "turnover-timeline-chart"], null))], null)], null)], null)], null)], null)], null)], null);
        } else {
          return null;
        }
      }();
      return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs45660) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["full-report-charts"], null)], null), attrs45660)) : {"className":"full-report-charts"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, 
      cljs.core.map_QMARK_.call(null, attrs45660) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45660)], null)));
    };
    clustermap.components.full_report.charts.t45657.prototype.cljs$core$IMeta$_meta$arity$1 = function(_45659) {
      var self__ = this;
      var _45659__$1 = this;
      return self__.meta45658;
    };
    clustermap.components.full_report.charts.t45657.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_45659, meta45658__$1) {
      var self__ = this;
      var _45659__$1 = this;
      return new clustermap.components.full_report.charts.t45657(self__.owner, self__.data, self__.charts, meta45658__$1);
    };
    clustermap.components.full_report.charts.__GT_t45657 = function __GT_t45657(owner__$1, data__$1, charts__$1, meta45658) {
      return new clustermap.components.full_report.charts.t45657(owner__$1, data__$1, charts__$1, meta45658);
    };
  }
  return new clustermap.components.full_report.charts.t45657(owner, data, charts, null);
};
goog.provide("clustermap.components.full_report.overview");
goog.require("cljs.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
clustermap.components.full_report.overview.describe_selection = function describe_selection(p__45781) {
  var map__45786 = p__45781;
  var map__45786__$1 = cljs.core.seq_QMARK_.call(null, map__45786) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45786) : map__45786;
  var value = cljs.core.get.call(null, map__45786__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  var type = cljs.core.get.call(null, map__45786__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var pred__45787 = cljs.core._EQ_;
  var expr__45788 = type;
  if (cljs.core.truth_(pred__45787.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__45788))) {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
    1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean for the selected Portfolio Company"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
  } else {
    if (cljs.core.truth_(pred__45787.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__45788))) {
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals for the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "name", "name", 1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over the Portfolio Companies of the selected Investor"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
    } else {
      if (cljs.core.truth_(pred__45787.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__45788))) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals for the selected Constituency"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over the Portfolio Companies with sites in the selected Constituency"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
      } else {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Total", new cljs.core.Keyword(null, "description", "description", 3584325486), "Totals over all Portfolio Companies"], null), new cljs.core.Keyword(null, "averages", "averages", 2913851752), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 
        1017277949), "Mean", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all Portfolio Companies"], null), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "Benchmark", new cljs.core.Keyword(null, "description", "description", 3584325486), "Mean over all UK Companies"], null)], null);
      }
    }
  }
};
clustermap.components.full_report.overview.overview_data = function overview_data(p__45790) {
  var map__45816 = p__45790;
  var map__45816__$1 = cljs.core.seq_QMARK_.call(null, map__45816) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45816) : map__45816;
  var selection_investment_stats = cljs.core.get.call(null, map__45816__$1, new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", 4568560312));
  var selection = cljs.core.get.call(null, map__45816__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  var all_investment_stats = cljs.core.get.call(null, map__45816__$1, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 2486056771));
  var sel_descrs = clustermap.components.full_report.overview.describe_selection.call(null, selection);
  var site_stats = function() {
    var or__3539__auto__ = selection_investment_stats;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return all_investment_stats;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "selection", "selection", 3592905982)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066), new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190), new cljs.core.Keyword(null, "turnover", "turnover", 
  1148922435), new cljs.core.Keyword(null, "investor-companies", "investor-companies", 3164659288), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1087385677), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 
  2180417185)], [clustermap.formats.number.fnum.call(null, function() {
    var G__45817 = site_stats;
    var G__45817__$1 = G__45817 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__45817);
    var G__45817__$2 = G__45817__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45817__$1);
    return G__45817__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__45818 = site_stats;
    var G__45818__$1 = G__45818 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 621528264)).cljs$core$IFn$_invoke$arity$1(G__45818);
    return G__45818__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__45819 = site_stats;
    var G__45819__$1 = G__45819 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__45819);
    var G__45819__$2 = G__45819__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45819__$1);
    return G__45819__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__45820 = site_stats;
    var G__45820__$1 = G__45820 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", 2333064920)).cljs$core$IFn$_invoke$arity$1(G__45820);
    return G__45820__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__45821 = site_stats;
    var G__45821__$1 = G__45821 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__45821);
    var G__45821__$2 = G__45821__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45821__$1);
    return G__45821__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__45822 = site_stats;
    var G__45822__$1 = G__45822 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__45822);
    var G__45822__$2 = G__45822__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45822__$1);
    return G__45822__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__45823 = site_stats;
    var G__45823__$1 = G__45823 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 1780206472)).cljs$core$IFn$_invoke$arity$1(G__45823);
    return G__45823__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__45824 = site_stats;
    var G__45824__$1 = G__45824 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__45824);
    var G__45824__$2 = G__45824__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45824__$1);
    return G__45824__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__45825 = site_stats;
    var G__45825__$1 = G__45825 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__45825);
    var G__45825__$2 = G__45825__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45825__$1);
    return G__45825__$2;
  }()])), new cljs.core.Keyword(null, "averages", "averages", 2913851752), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "averages", "averages", 2913851752)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066), new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190), new cljs.core.Keyword(null, "turnover", "turnover", 1148922435), new cljs.core.Keyword(null, "investor-companies", 
  "investor-companies", 3164659288), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1087385677), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 2180417185)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__45826 = site_stats;
    var G__45826__$1 = G__45826 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__45826);
    var G__45826__$2 = G__45826__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45826__$1);
    return G__45826__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__45827 = site_stats;
    var G__45827__$1 = G__45827 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__45827);
    var G__45827__$2 = G__45827__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45827__$1);
    return G__45827__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), "\u00a0", clustermap.formats.number.fnum.call(null, function() {
    var G__45828 = site_stats;
    var G__45828__$1 = G__45828 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__45828);
    var G__45828__$2 = G__45828__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45828__$1);
    return G__45828__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__45829 = site_stats;
    var G__45829__$1 = G__45829 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__45829);
    var G__45829__$2 = G__45829__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45829__$1);
    return G__45829__$2;
  }(), "\u00a0", clustermap.formats.money.fmoney.call(null, function() {
    var G__45830 = site_stats;
    var G__45830__$1 = G__45830 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__45830);
    var G__45830__$2 = G__45830__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45830__$1);
    return G__45830__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__45831 = site_stats;
    var G__45831__$1 = G__45831 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__45831);
    var G__45831__$2 = G__45831__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45831__$1);
    return G__45831__$2;
  }()])), new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015)).cljs$core$IFn$_invoke$arity$1(sel_descrs), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066), new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190), new cljs.core.Keyword(null, "turnover", "turnover", 1148922435), new cljs.core.Keyword(null, 
  "investor-companies", "investor-companies", 3164659288), new cljs.core.Keyword(null, "employee-count-delta", "employee-count-delta", 1087385677), new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922), new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512), new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430), new cljs.core.Keyword(null, "employee-count-delta-val", "employee-count-delta-val", 2180417185)], [clustermap.formats.number.fnum.call(null, 
  function() {
    var G__45832 = all_investment_stats;
    var G__45832__$1 = G__45832 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__45832);
    var G__45832__$2 = G__45832__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45832__$1);
    return G__45832__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__45833 = all_investment_stats;
    var G__45833__$1 = G__45833 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 621528264)).cljs$core$IFn$_invoke$arity$1(G__45833);
    return G__45833__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__45834 = all_investment_stats;
    var G__45834__$1 = G__45834 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__45834);
    var G__45834__$2 = G__45834__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45834__$1);
    return G__45834__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__45835 = all_investment_stats;
    var G__45835__$1 = G__45835 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", 2333064920)).cljs$core$IFn$_invoke$arity$1(G__45835);
    return G__45835__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.number.fnum.call(null, function() {
    var G__45836 = all_investment_stats;
    var G__45836__$1 = G__45836 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__45836);
    var G__45836__$2 = G__45836__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45836__$1);
    return G__45836__$2;
  }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__45837 = all_investment_stats;
    var G__45837__$1 = G__45837 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__45837);
    var G__45837__$2 = G__45837__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__45837__$1);
    return G__45837__$2;
  }(), clustermap.formats.number.fnum.call(null, function() {
    var G__45838 = all_investment_stats;
    var G__45838__$1 = G__45838 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 1780206472)).cljs$core$IFn$_invoke$arity$1(G__45838);
    return G__45838__$1;
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), clustermap.formats.money.fmoney.call(null, function() {
    var G__45839 = all_investment_stats;
    var G__45839__$1 = G__45839 == null ? null : (new cljs.core.Keyword(null, "turnover_delta", "turnover_delta", 1941841980)).cljs$core$IFn$_invoke$arity$1(G__45839);
    var G__45839__$2 = G__45839__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45839__$1);
    return G__45839__$2;
  }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-"), function() {
    var G__45840 = all_investment_stats;
    var G__45840__$1 = G__45840 == null ? null : (new cljs.core.Keyword(null, "employee_count_delta", "employee_count_delta", 4678011881)).cljs$core$IFn$_invoke$arity$1(G__45840);
    var G__45840__$2 = G__45840__$1 == null ? null : (new cljs.core.Keyword(null, "mean", "mean", 1017251639)).cljs$core$IFn$_invoke$arity$1(G__45840__$1);
    return G__45840__$2;
  }()]))], null);
};
clustermap.components.full_report.overview.pos_neg = function pos_neg(value) {
  if (value == null) {
    return null;
  } else {
    if (value > 0) {
      return React.DOM.i({"className":"icon-positive"});
    } else {
      if (value < 0) {
        return React.DOM.i({"className":"icon-negative"});
      } else {
        if (true) {
          return null;
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.full_report.overview.overview = function overview(data) {
  var map__45864 = clustermap.components.full_report.overview.overview_data.call(null, data);
  var map__45864__$1 = cljs.core.seq_QMARK_.call(null, map__45864) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45864) : map__45864;
  var benchmark = cljs.core.get.call(null, map__45864__$1, new cljs.core.Keyword(null, "benchmark", "benchmark", 1682044015));
  var averages = cljs.core.get.call(null, map__45864__$1, new cljs.core.Keyword(null, "averages", "averages", 2913851752));
  var selection = cljs.core.get.call(null, map__45864__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  if (typeof clustermap.components.full_report.overview.t45865 !== "undefined") {
  } else {
    clustermap.components.full_report.overview.t45865 = function(selection, averages, benchmark, map__45864, data, overview, meta45866) {
      this.selection = selection;
      this.averages = averages;
      this.benchmark = benchmark;
      this.map__45864 = map__45864;
      this.data = data;
      this.overview = overview;
      this.meta45866 = meta45866;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.overview.t45865.cljs$lang$type = true;
    clustermap.components.full_report.overview.t45865.cljs$lang$ctorStr = "clustermap.components.full-report.overview/t45865";
    clustermap.components.full_report.overview.t45865.cljs$lang$ctorPrWriter = function(map__45864, map__45864__$1, benchmark, averages, selection) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report.overview/t45865");
      };
    }(map__45864, map__45864__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t45865.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.overview.t45865.prototype.om$core$IRender$render$arity$1 = function(map__45864, map__45864__$1, benchmark, averages, selection) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.div({"className":"full-report-overview"}, React.DOM.h4(null, "Overview of latest filings", React.DOM.small(null, "\u00a0(may span years : see table below for details)")), React.DOM.div({"className":"table-responsive"}, React.DOM.table({"className":"table-stats"}, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, "\u00a0"), React.DOM.th(null, "Investor-backed companies"), React.DOM.th(null, "Investors"), React.DOM.th(null, "Constituencies"), React.DOM.th(null, "Revenue"), 
        React.DOM.th({"colSpan":"2"}, "Rev. change"), React.DOM.th(null, "Employees"))), React.DOM.tbody(null, React.DOM.tr(null, React.DOM.th(null, React.DOM.i({"className":"icon-info", "data-toggle":"tooltip", "data-container":"body", "title":self__.selection.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486))}), sablono.interpreter.interpret.call(null, self__.selection.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949)))), React.DOM.td(null, function() {
          var attrs45872 = (new cljs.core.Keyword(null, "portfolio-companies", "portfolio-companies", 1133429512)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45872) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45872)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45872) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45872)], null)));
        }()), React.DOM.td(null, function() {
          var attrs45873 = (new cljs.core.Keyword(null, "investor-companies", "investor-companies", 3164659288)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45873) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45873)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45873) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45873)], null)));
        }()), React.DOM.td(null, function() {
          var attrs45874 = (new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45874) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45874)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45874) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45874)], null)));
        }()), React.DOM.td(null, function() {
          var attrs45875 = (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45875) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45875)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45875) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45875)], null)));
        }()), React.DOM.td(null, function() {
          var attrs45876 = clustermap.components.full_report.overview.pos_neg.call(null, (new cljs.core.Keyword(null, "turnover-delta-val", "turnover-delta-val", 1709233922)).cljs$core$IFn$_invoke$arity$1(self__.selection));
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45876) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45876)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45876) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45876)], null)));
        }()), React.DOM.td(null, function() {
          var attrs45877 = (new cljs.core.Keyword(null, "turnover-delta", "turnover-delta", 510384430)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45877) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45877)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45877) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45877)], null)));
        }()), React.DOM.td(null, function() {
          var attrs45878 = (new cljs.core.Keyword(null, "employee-count", "employee-count", 1111164066)).cljs$core$IFn$_invoke$arity$1(self__.selection);
          return cljs.core.apply.call(null, React.DOM.span, cljs.core.map_QMARK_.call(null, attrs45878) ? sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["selection"], null)], null), attrs45878)) : {"className":"selection"}, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, 
          attrs45878) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45878)], null)));
        }()))))));
      };
    }(map__45864, map__45864__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t45865.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__45864, map__45864__$1, benchmark, averages, selection) {
      return function(_45867) {
        var self__ = this;
        var _45867__$1 = this;
        return self__.meta45866;
      };
    }(map__45864, map__45864__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.t45865.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__45864, map__45864__$1, benchmark, averages, selection) {
      return function(_45867, meta45866__$1) {
        var self__ = this;
        var _45867__$1 = this;
        return new clustermap.components.full_report.overview.t45865(self__.selection, self__.averages, self__.benchmark, self__.map__45864, self__.data, self__.overview, meta45866__$1);
      };
    }(map__45864, map__45864__$1, benchmark, averages, selection);
    clustermap.components.full_report.overview.__GT_t45865 = function(map__45864, map__45864__$1, benchmark, averages, selection) {
      return function __GT_t45865(selection__$1, averages__$1, benchmark__$1, map__45864__$2, data__$1, overview__$1, meta45866) {
        return new clustermap.components.full_report.overview.t45865(selection__$1, averages__$1, benchmark__$1, map__45864__$2, data__$1, overview__$1, meta45866);
      };
    }(map__45864, map__45864__$1, benchmark, averages, selection);
  }
  return new clustermap.components.full_report.overview.t45865(selection, averages, benchmark, map__45864__$1, data, overview, null);
};
goog.provide("clustermap.components.full_report");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.company_list");
goog.require("clustermap.components.full_report.charts");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("sablono.core");
goog.require("clustermap.components.full_report.charts");
goog.require("jayq.core");
goog.require("clustermap.components.full_report.overview");
goog.require("clustermap.components.full_report.overview");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.components.full_report.company_site_list");
goog.require("clustermap.components.full_report.company_list");
clustermap.components.full_report.single_company_selection_QMARK_ = function single_company_selection_QMARK_(selector) {
  return cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, selector)) && cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), function() {
    var G__45882 = selector;
    var G__45882__$1 = G__45882 == null ? null : cljs.core.keys.call(null, G__45882);
    var G__45882__$2 = G__45882__$1 == null ? null : cljs.core.first.call(null, G__45882__$1);
    return G__45882__$2;
  }());
};
clustermap.components.full_report.full_report_component = function full_report_component(p__45883, owner) {
  var map__45890 = p__45883;
  var map__45890__$1 = cljs.core.seq_QMARK_.call(null, map__45890) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45890) : map__45890;
  var data = map__45890__$1;
  var all_portfolio_companies_summary = cljs.core.get.call(null, map__45890__$1, new cljs.core.Keyword(null, "all-portfolio-companies-summary", "all-portfolio-companies-summary", 3049476533));
  var selection = cljs.core.get.call(null, map__45890__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  var selector = cljs.core.get.call(null, map__45890__$1, new cljs.core.Keyword(null, "selector", "selector", 2205476689));
  var map__45891 = om.core.get_shared.call(null, owner);
  var map__45891__$1 = cljs.core.seq_QMARK_.call(null, map__45891) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45891) : map__45891;
  var link_fn = cljs.core.get.call(null, map__45891__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
  var path_fn = cljs.core.get.call(null, map__45891__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__45891__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", 1116886791));
  var link_fn__$1 = cljs.core.partial.call(null, link_fn, new cljs.core.Keyword(null, "lists", "lists", 1116886791));
  if (typeof clustermap.components.full_report.t45892 !== "undefined") {
  } else {
    clustermap.components.full_report.t45892 = function(selection, p__45883, owner, path_fn, data, selector, map__45890, link_fn, map__45891, full_report_component, comm, all_portfolio_companies_summary, meta45893) {
      this.selection = selection;
      this.p__45883 = p__45883;
      this.owner = owner;
      this.path_fn = path_fn;
      this.data = data;
      this.selector = selector;
      this.map__45890 = map__45890;
      this.link_fn = link_fn;
      this.map__45891 = map__45891;
      this.full_report_component = full_report_component;
      this.comm = comm;
      this.all_portfolio_companies_summary = all_portfolio_companies_summary;
      this.meta45893 = meta45893;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.full_report.t45892.cljs$lang$type = true;
    clustermap.components.full_report.t45892.cljs$lang$ctorStr = "clustermap.components.full-report/t45892";
    clustermap.components.full_report.t45892.cljs$lang$ctorPrWriter = function(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.full-report/t45892");
      };
    }(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t45892.prototype.om$core$IDidUpdate$ = true;
    clustermap.components.full_report.t45892.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$, prev_props, prev_state) {
        var self__ = this;
        var this$__$1 = this;
        var root_node = om.core.get_node.call(null, self__.owner);
        jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).data("bs.tooltip", false);
        return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']", root_node).tooltip();
      };
    }(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t45892.prototype.om$core$IRender$ = true;
    clustermap.components.full_report.t45892.prototype.om$core$IRender$render$arity$1 = function(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var attrs45895 = om.core.build.call(null, clustermap.components.full_report.overview.overview, self__.data, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "overview"], null));
        return cljs.core.apply.call(null, React.DOM.div, cljs.core.map_QMARK_.call(null, attrs45895) ? sablono.interpreter.attributes.call(null, attrs45895) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs45895) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments-by-company"], null)) : null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs45895), sablono.interpreter.interpret.call(null, om.core.build.call(null, clustermap.components.full_report.charts.charts, self__.data, new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "details"], null))), clustermap.components.full_report.single_company_selection_QMARK_.call(null, self__.selector) ? sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investments", "selection-investments", 
        2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, clustermap.components.full_report.company_site_list.company_site_list, (new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, 
        new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments"], null)) : null) : sablono.interpreter.interpret.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? om.core.build.call(null, 
        clustermap.components.full_report.company_list.company_list, (new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), self__.link_fn, 
        new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), "selection-investments-by-company"], null)) : null)], null)));
      };
    }(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t45892.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_45894) {
        var self__ = this;
        var _45894__$1 = this;
        return self__.meta45893;
      };
    }(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.t45892.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function(_45894, meta45893__$1) {
        var self__ = this;
        var _45894__$1 = this;
        return new clustermap.components.full_report.t45892(self__.selection, self__.p__45883, self__.owner, self__.path_fn, self__.data, self__.selector, self__.map__45890, self__.link_fn, self__.map__45891, self__.full_report_component, self__.comm, self__.all_portfolio_companies_summary, meta45893__$1);
      };
    }(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector);
    clustermap.components.full_report.__GT_t45892 = function(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector) {
      return function __GT_t45892(selection__$1, p__45883__$1, owner__$1, path_fn__$2, data__$1, selector__$1, map__45890__$2, link_fn__$2, map__45891__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, meta45893) {
        return new clustermap.components.full_report.t45892(selection__$1, p__45883__$1, owner__$1, path_fn__$2, data__$1, selector__$1, map__45890__$2, link_fn__$2, map__45891__$2, full_report_component__$1, comm__$1, all_portfolio_companies_summary__$1, meta45893);
      };
    }(map__45891, map__45891__$1, link_fn, path_fn, comm, path_fn__$1, link_fn__$1, map__45890, map__45890__$1, data, all_portfolio_companies_summary, selection, selector);
  }
  return new clustermap.components.full_report.t45892(selection, p__45883, owner, path_fn__$1, data, selector, map__45890__$1, link_fn__$1, map__45891__$1, full_report_component, comm, all_portfolio_companies_summary, null);
};
clustermap.components.full_report.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.full_report.full_report_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id), new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared], null));
};
goog.provide("clustermap.ganalytics");
goog.require("cljs.core");
clustermap.ganalytics.send_pageview = function send_pageview(path) {
  var ua_code = function() {
    var G__46515 = window;
    var G__46515__$1 = G__46515 == null ? null : G__46515.config;
    var G__46515__$2 = G__46515__$1 == null ? null : G__46515__$1.ua;
    var G__46515__$3 = G__46515__$2 == null ? null : G__46515__$2.code;
    return G__46515__$3;
  }();
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = window.ga;
    if (cljs.core.truth_(and__3527__auto__)) {
      return ua_code;
    } else {
      return and__3527__auto__;
    }
  }())) {
    return ga("send", "pageview", path);
  } else {
    return null;
  }
};
goog.provide("clustermap.om");
goog.require("cljs.core");
clustermap.om.burrow = function burrow(component_fn, korks) {
  var use_korks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return function(use_korks) {
    return function() {
      var G__46583__delegate = function(args) {
        return cljs.core.apply.call(null, component_fn, cljs.core.get_in.call(null, cljs.core.first.call(null, args), use_korks), cljs.core.rest.call(null, args));
      };
      var G__46583 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__46583__delegate.call(this, args);
      };
      G__46583.cljs$lang$maxFixedArity = 0;
      G__46583.cljs$lang$applyTo = function(arglist__46584) {
        var args = cljs.core.seq(arglist__46584);
        return G__46583__delegate(args);
      };
      G__46583.cljs$core$IFn$_invoke$arity$variadic = G__46583__delegate;
      return G__46583;
    }();
  }(use_korks);
};
goog.provide("clustermap.model");
goog.require("cljs.core");
clustermap.model.extract_id = function extract_id(type, obj) {
  var pred__46519 = cljs.core._EQ_;
  var expr__46520 = type;
  if (cljs.core.truth_(pred__46519.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__46520))) {
    return(new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)).cljs$core$IFn$_invoke$arity$1(obj);
  } else {
    if (cljs.core.truth_(pred__46519.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__46520))) {
      return(new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)).cljs$core$IFn$_invoke$arity$1(obj);
    } else {
      if (cljs.core.truth_(pred__46519.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__46520))) {
        return(new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)).cljs$core$IFn$_invoke$arity$1(obj);
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__46520));
      }
    }
  }
};
goog.provide("clustermap.routes");
goog.require("cljs.core");
goog.require("sablono.core");
goog.require("sablono.core");
clustermap.routes.type_name_keys = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.Keyword(null, "compact_name", "compact_name", 1128032665)], 
null);
clustermap.routes.name_for = function name_for(type, obj) {
  return cljs.core.get.call(null, obj, cljs.core.get.call(null, clustermap.routes.type_name_keys, type));
};
clustermap.routes.portfolio_company_path = function portfolio_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/portfolio-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.investor_company_path = function investor_company_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/investor-company/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.constituency_path = function constituency_path(view_id, obj) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id)) + "/constituency/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)).cljs$core$IFn$_invoke$arity$1(obj));
};
clustermap.routes.no_selection_path = function no_selection_path(view_id, _) {
  return "#/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view_id));
};
clustermap.routes.type_paths = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), clustermap.routes.portfolio_company_path, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), clustermap.routes.investor_company_path, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), clustermap.routes.constituency_path, null, clustermap.routes.no_selection_path], null);
clustermap.routes.path_for = function path_for(view_id, type, obj) {
  return cljs.core.apply.call(null, cljs.core.get.call(null, clustermap.routes.type_paths, type), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [view_id, obj], null));
};
clustermap.routes.link_for = function link_for(view_id, type, obj) {
  return React.DOM.a({"href":clustermap.routes.path_for.call(null, view_id, type, obj)}, sablono.interpreter.interpret.call(null, clustermap.routes.name_for.call(null, type, obj)));
};
goog.provide("clustermap.components.search");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("jayq.core");
goog.require("clustermap.model");
goog.require("sablono.core");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.model");
goog.require("jayq.core");
goog.require("clustermap.routes");
goog.require("om.core");
goog.require("om.core");
clustermap.components.search.ESCAPE_KEY = 27;
clustermap.components.search.ENTER_KEY = 13;
clustermap.components.search.LEFT_ARROW = 37;
clustermap.components.search.UP_ARROW = 38;
clustermap.components.search.RIGHT_ARROW = 39;
clustermap.components.search.DOWN_ARROW = 40;
clustermap.components.search.search_result_link = function search_result_link(p__46300, owner, p__46301) {
  var map__46310 = p__46300;
  var map__46310__$1 = cljs.core.seq_QMARK_.call(null, map__46310) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46310) : map__46310;
  var search_result = map__46310__$1;
  var type = cljs.core.get.call(null, map__46310__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var name = cljs.core.get.call(null, map__46310__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
  var map__46311 = p__46301;
  var map__46311__$1 = cljs.core.seq_QMARK_.call(null, map__46311) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46311) : map__46311;
  var opts = map__46311__$1;
  var path_fn = cljs.core.get.call(null, map__46311__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__46311__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  if (typeof clustermap.components.search.t46312 !== "undefined") {
  } else {
    clustermap.components.search.t46312 = function(map__46310, owner, path_fn, search_result_link, map__46311, name, comm, search_result, p__46301, type, p__46300, opts, meta46313) {
      this.map__46310 = map__46310;
      this.owner = owner;
      this.path_fn = path_fn;
      this.search_result_link = search_result_link;
      this.map__46311 = map__46311;
      this.name = name;
      this.comm = comm;
      this.search_result = search_result;
      this.p__46301 = p__46301;
      this.type = type;
      this.p__46300 = p__46300;
      this.opts = opts;
      this.meta46313 = meta46313;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t46312.cljs$lang$type = true;
    clustermap.components.search.t46312.cljs$lang$ctorStr = "clustermap.components.search/t46312";
    clustermap.components.search.t46312.cljs$lang$ctorPrWriter = function(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.search/t46312");
      };
    }(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm);
    clustermap.components.search.t46312.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t46312.prototype.om$core$IRenderState$render_state$arity$2 = function(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm) {
      return function(this$, p__46315) {
        var self__ = this;
        var map__46316 = p__46315;
        var map__46316__$1 = cljs.core.seq_QMARK_.call(null, map__46316) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46316) : map__46316;
        var state = map__46316__$1;
        var selected = cljs.core.get.call(null, map__46316__$1, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
        var this$__$1 = this;
        var path = self__.path_fn.call(null, self__.type, self__.search_result);
        return React.DOM.li({"className":cljs.core.truth_(selected) ? "selected" : null}, React.DOM.a({"href":path, "ref":"link", "onClick":function(path, this$__$1, map__46316, map__46316__$1, state, selected, map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm) {
          return function(e) {
            var l = om.core.get_node.call(null, self__.owner, "link");
            var G__46317 = l;
            var G__46317__$1 = G__46317 == null ? null : jayq.core.$.call(null, G__46317);
            var G__46317__$2 = G__46317__$1 == null ? null : G__46317__$1.parents(".search-component");
            var G__46317__$3 = G__46317__$2 == null ? null : G__46317__$2.toggle();
            return G__46317__$3;
          };
        }(path, this$__$1, map__46316, map__46316__$1, state, selected, map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm)}, sablono.interpreter.interpret.call(null, self__.name)));
      };
    }(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm);
    clustermap.components.search.t46312.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm) {
      return function(_46314) {
        var self__ = this;
        var _46314__$1 = this;
        return self__.meta46313;
      };
    }(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm);
    clustermap.components.search.t46312.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm) {
      return function(_46314, meta46313__$1) {
        var self__ = this;
        var _46314__$1 = this;
        return new clustermap.components.search.t46312(self__.map__46310, self__.owner, self__.path_fn, self__.search_result_link, self__.map__46311, self__.name, self__.comm, self__.search_result, self__.p__46301, self__.type, self__.p__46300, self__.opts, meta46313__$1);
      };
    }(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm);
    clustermap.components.search.__GT_t46312 = function(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm) {
      return function __GT_t46312(map__46310__$2, owner__$1, path_fn__$1, search_result_link__$1, map__46311__$2, name__$1, comm__$1, search_result__$1, p__46301__$1, type__$1, p__46300__$1, opts__$1, meta46313) {
        return new clustermap.components.search.t46312(map__46310__$2, owner__$1, path_fn__$1, search_result_link__$1, map__46311__$2, name__$1, comm__$1, search_result__$1, p__46301__$1, type__$1, p__46300__$1, opts__$1, meta46313);
      };
    }(map__46310, map__46310__$1, search_result, type, name, map__46311, map__46311__$1, opts, path_fn, comm);
  }
  return new clustermap.components.search.t46312(map__46310__$1, owner, path_fn, search_result_link, map__46311__$1, name, comm, search_result, p__46301, type, p__46300, opts, null);
};
clustermap.components.search.nth_search_result = function nth_search_result(p__46318, n) {
  var map__46320 = p__46318;
  var map__46320__$1 = cljs.core.seq_QMARK_.call(null, map__46320) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46320) : map__46320;
  var investor_companies = cljs.core.get.call(null, map__46320__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 1928918630));
  var portfolio_companies = cljs.core.get.call(null, map__46320__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 4192656150));
  var constituencies = cljs.core.get.call(null, map__46320__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190));
  var cons = function() {
    var or__3539__auto__ = constituencies;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var pcs = function() {
    var or__3539__auto__ = portfolio_companies;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  var invs = function() {
    var or__3539__auto__ = investor_companies;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return cljs.core.PersistentVector.EMPTY;
    }
  }();
  if (n < cljs.core.count.call(null, cons)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), cljs.core.get.call(null, constituencies, n)], null);
  } else {
    if (n < cljs.core.count.call(null, cons) + cljs.core.count.call(null, pcs)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), cljs.core.get.call(null, pcs, n - cljs.core.count.call(null, cons))], null);
    } else {
      if (true) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), cljs.core.get.call(null, invs, n - cljs.core.count.call(null, cons) - cljs.core.count.call(null, pcs))], null);
      } else {
        return null;
      }
    }
  }
};
clustermap.components.search.key_down = function key_down(e, search_results, owner, comm) {
  var pred__46327 = cljs.core._EQ__EQ_;
  var expr__46328 = e.keyCode;
  if (cljs.core.truth_(pred__46327.call(null, clustermap.components.search.ESCAPE_KEY, expr__46328))) {
    var G__46330 = om.core.get_node.call(null, owner, "search-component");
    var G__46330__$1 = G__46330 == null ? null : jayq.core.$.call(null, G__46330);
    var G__46330__$2 = G__46330__$1 == null ? null : G__46330__$1.toggle();
    return G__46330__$2;
  } else {
    if (cljs.core.truth_(pred__46327.call(null, clustermap.components.search.ENTER_KEY, expr__46328))) {
      var vec__46331 = clustermap.components.search.nth_search_result.call(null, cljs.core.deref.call(null, search_results), function() {
        var or__3539__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109));
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return 0;
        }
      }());
      var type = cljs.core.nth.call(null, vec__46331, 0, null);
      var res = cljs.core.nth.call(null, vec__46331, 1, null);
      var G__46332_46333 = om.core.get_node.call(null, owner, "search-component");
      var G__46332_46334__$1 = G__46332_46333 == null ? null : jayq.core.$.call(null, G__46332_46333);
      var G__46332_46335__$2 = G__46332_46334__$1 == null ? null : G__46332_46334__$1.toggle();
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, clustermap.model.extract_id.call(null, type, res)], null)], null));
    } else {
      if (cljs.core.truth_(pred__46327.call(null, clustermap.components.search.UP_ARROW, expr__46328))) {
        return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109), function() {
          var or__3539__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109));
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return 0;
          }
        }() - 1);
      } else {
        if (cljs.core.truth_(pred__46327.call(null, clustermap.components.search.DOWN_ARROW, expr__46328))) {
          return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109), function() {
            var or__3539__auto__ = om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109));
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return 0;
            }
          }() + 1);
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.search.search_component = function search_component(p__46336, owner) {
  var map__46368 = p__46336;
  var map__46368__$1 = cljs.core.seq_QMARK_.call(null, map__46368) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46368) : map__46368;
  var map__46369 = cljs.core.get.call(null, map__46368__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  var map__46369__$1 = cljs.core.seq_QMARK_.call(null, map__46369) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46369) : map__46369;
  var selection_type = cljs.core.get.call(null, map__46369__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var selection_value = cljs.core.get.call(null, map__46369__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  var view = cljs.core.get.call(null, map__46368__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  var search_results = cljs.core.get.call(null, map__46368__$1, new cljs.core.Keyword(null, "search-results", "search-results", 1025331267));
  var map__46370 = om.core.get_shared.call(null, owner);
  var map__46370__$1 = cljs.core.seq_QMARK_.call(null, map__46370) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46370) : map__46370;
  var path_fn = cljs.core.get.call(null, map__46370__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__46370__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, view);
  var map__46371 = search_results;
  var map__46371__$1 = cljs.core.seq_QMARK_.call(null, map__46371) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46371) : map__46371;
  var investor_companies = cljs.core.get.call(null, map__46371__$1, new cljs.core.Keyword(null, "investor_companies", "investor_companies", 1928918630));
  var portfolio_companies = cljs.core.get.call(null, map__46371__$1, new cljs.core.Keyword(null, "portfolio_companies", "portfolio_companies", 4192656150));
  var constituencies = cljs.core.get.call(null, map__46371__$1, new cljs.core.Keyword(null, "constituencies", "constituencies", 2756015190));
  if (typeof clustermap.components.search.t46372 !== "undefined") {
  } else {
    clustermap.components.search.t46372 = function(map__46368, search_results, search_component, owner, path_fn, view, portfolio_companies, map__46369, map__46371, constituencies, investor_companies, map__46370, selection_value, comm, p__46336, selection_type, meta46373) {
      this.map__46368 = map__46368;
      this.search_results = search_results;
      this.search_component = search_component;
      this.owner = owner;
      this.path_fn = path_fn;
      this.view = view;
      this.portfolio_companies = portfolio_companies;
      this.map__46369 = map__46369;
      this.map__46371 = map__46371;
      this.constituencies = constituencies;
      this.investor_companies = investor_companies;
      this.map__46370 = map__46370;
      this.selection_value = selection_value;
      this.comm = comm;
      this.p__46336 = p__46336;
      this.selection_type = selection_type;
      this.meta46373 = meta46373;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.search.t46372.cljs$lang$type = true;
    clustermap.components.search.t46372.cljs$lang$ctorStr = "clustermap.components.search/t46372";
    clustermap.components.search.t46372.cljs$lang$ctorPrWriter = function(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.search/t46372");
      };
    }(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t46372.prototype.om$core$IRenderState$ = true;
    clustermap.components.search.t46372.prototype.om$core$IRenderState$render_state$arity$2 = function(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
      return function(this$, state) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"ref":"search-component", "className":"search-component", "id":"search", "onKeyDown":function(this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return clustermap.components.search.key_down.call(null, e, self__.search_results, self__.owner, self__.comm);
          };
        }(this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results)}, React.DOM.div({"className":"tbl"}, React.DOM.div({"className":"tbl-cell", "style":{"width":"100%"}}, sablono.interpreter.input.call(null, {"ref":"search-field", "type":"text", "placeholder":"Search", "onChange":function(this$__$1, 
        map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 4402534682), e.target.value], null));
          };
        }(this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results)})), React.DOM.div({"className":"tbl-cell", "style":{"width":"34"}}, React.DOM.button({"type":"reset", "onClick":function(this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, 
        portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
          return function(e) {
            cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search", "search", 4402534682), ""], null));
            return om.core.get_node.call(null, self__.owner, "search-field").value = "";
          };
        }(this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results)}, "\u00d7"))), sablono.interpreter.interpret.call(null, cljs.core.truth_(function() {
          var or__3539__auto__ = cljs.core.not_empty.call(null, self__.constituencies);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            var or__3539__auto____$1 = cljs.core.not_empty.call(null, self__.portfolio_companies);
            if (cljs.core.truth_(or__3539__auto____$1)) {
              return or__3539__auto____$1;
            } else {
              return cljs.core.not_empty.call(null, self__.investor_companies);
            }
          }
        }()) ? function() {
          var idx_cons = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, 0), self__.constituencies);
          var idx_pcs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons)), self__.portfolio_companies);
          var idx_invs = cljs.core.map.call(null, cljs.core.vector, cljs.core.iterate.call(null, cljs.core.inc, cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs)), self__.investor_companies);
          var selected_idx = cljs.core.mod.call(null, function() {
            var or__3539__auto__ = (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109)).cljs$core$IFn$_invoke$arity$1(state);
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return 0;
            }
          }(), cljs.core.count.call(null, idx_cons) + cljs.core.count.call(null, idx_pcs) + cljs.core.count.call(null, idx_invs));
          var _ = cljs.core.not_EQ_.call(null, selected_idx, (new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109)).cljs$core$IFn$_invoke$arity$1(state)) ? om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "selected-idx", "selected-idx", 3553242109), selected_idx) : null;
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results"], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", 1013907977), cljs.core.truth_(cljs.core.not_empty.call(null, idx_cons)) ? cljs.core.into.call(null, 
          new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results-header"], null), "Constituencies"], null)], null), function() {
            var iter__4264__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
              return function iter__46375(s__46376) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__46376__$1 = s__46376;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__46376__$1);
                      if (temp__4126__auto__) {
                        var s__46376__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__46376__$2)) {
                          var c__4262__auto__ = cljs.core.chunk_first.call(null, s__46376__$2);
                          var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
                          var b__46378 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
                          if (function() {
                            var i__46377 = 0;
                            while (true) {
                              if (i__46377 < size__4263__auto__) {
                                var vec__46381 = cljs.core._nth.call(null, c__4262__auto__, i__46377);
                                var idx = cljs.core.nth.call(null, vec__46381, 0, null);
                                var con = cljs.core.nth.call(null, vec__46381, 1, null);
                                cljs.core.chunk_append.call(null, b__46378, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                1123661827), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(i__46377, vec__46381, idx, con, c__4262__auto__, size__4263__auto__, b__46378, s__46376__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, 
                                map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "constituency:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318))));
                                  };
                                }(i__46377, vec__46381, idx, con, c__4262__auto__, size__4263__auto__, b__46378, s__46376__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), 
                                new cljs.core.Keyword(null, "uid", "uid", 1014020034)], null)));
                                var G__46399 = i__46377 + 1;
                                i__46377 = G__46399;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46378), iter__46375.call(null, cljs.core.chunk_rest.call(null, s__46376__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46378), null);
                          }
                        } else {
                          var vec__46382 = cljs.core.first.call(null, s__46376__$2);
                          var idx = cljs.core.nth.call(null, vec__46382, 0, null);
                          var con = cljs.core.nth.call(null, vec__46382, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, con, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(vec__46382, idx, con, s__46376__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, 
                          map__46369__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "constituency:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318))));
                            };
                          }(vec__46382, idx, con, s__46376__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "uid", "uid", 1014020034)], 
                          null)), iter__46375.call(null, cljs.core.rest.call(null, s__46376__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
            return iter__4264__auto__.call(null, idx_cons);
          }()) : null, cljs.core.truth_(cljs.core.not_empty.call(null, idx_pcs)) ? cljs.core.into.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results-header"], 
          null), "Investor-backed companies"], null)], null), function() {
            var iter__4264__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
              return function iter__46383(s__46384) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__46384__$1 = s__46384;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__46384__$1);
                      if (temp__4126__auto__) {
                        var s__46384__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__46384__$2)) {
                          var c__4262__auto__ = cljs.core.chunk_first.call(null, s__46384__$2);
                          var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
                          var b__46386 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
                          if (function() {
                            var i__46385 = 0;
                            while (true) {
                              if (i__46385 < size__4263__auto__) {
                                var vec__46389 = cljs.core._nth.call(null, c__4262__auto__, i__46385);
                                var idx = cljs.core.nth.call(null, vec__46389, 0, null);
                                var pc = cljs.core.nth.call(null, vec__46389, 1, null);
                                cljs.core.chunk_append.call(null, b__46386, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), 
                                new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(i__46385, vec__46389, idx, pc, c__4262__auto__, size__4263__auto__, b__46386, s__46384__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, 
                                investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "portfolio-company:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389))));
                                  };
                                }(i__46385, vec__46389, idx, pc, c__4262__auto__, size__4263__auto__, b__46386, s__46384__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), 
                                new cljs.core.Keyword(null, "uid", "uid", 1014020034)], null)));
                                var G__46400 = i__46385 + 1;
                                i__46385 = G__46400;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46386), iter__46383.call(null, cljs.core.chunk_rest.call(null, s__46384__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46386), null);
                          }
                        } else {
                          var vec__46390 = cljs.core.first.call(null, s__46384__$2);
                          var idx = cljs.core.nth.call(null, vec__46390, 0, null);
                          var pc = cljs.core.nth.call(null, vec__46390, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, pc, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(vec__46390, idx, pc, s__46384__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, 
                          map__46369__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "portfolio-company:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "company_no", "company_no", 4461198389))));
                            };
                          }(vec__46390, idx, pc, s__46384__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "uid", "uid", 1014020034)], 
                          null)), iter__46383.call(null, cljs.core.rest.call(null, s__46384__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
            return iter__4264__auto__.call(null, idx_pcs);
          }()) : null, cljs.core.truth_(cljs.core.not_empty.call(null, idx_invs)) ? cljs.core.into.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "search-results-header"], 
          null), "Investors"], null)], null), function() {
            var iter__4264__auto__ = function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
              return function iter__46391(s__46392) {
                return new cljs.core.LazySeq(null, function(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
                  return function() {
                    var s__46392__$1 = s__46392;
                    while (true) {
                      var temp__4126__auto__ = cljs.core.seq.call(null, s__46392__$1);
                      if (temp__4126__auto__) {
                        var s__46392__$2 = temp__4126__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__46392__$2)) {
                          var c__4262__auto__ = cljs.core.chunk_first.call(null, s__46392__$2);
                          var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
                          var b__46394 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
                          if (function() {
                            var i__46393 = 0;
                            while (true) {
                              if (i__46393 < size__4263__auto__) {
                                var vec__46397 = cljs.core._nth.call(null, c__4262__auto__, i__46393);
                                var idx = cljs.core.nth.call(null, vec__46397, 0, null);
                                var inv = cljs.core.nth.call(null, vec__46397, 1, null);
                                cljs.core.chunk_append.call(null, b__46394, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 
                                1123661827), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(i__46393, vec__46397, idx, inv, c__4262__auto__, size__4263__auto__, b__46394, s__46392__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, 
                                map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
                                  return function(data) {
                                    return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "investor-company:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                                    data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593))));
                                  };
                                }(i__46393, vec__46397, idx, inv, c__4262__auto__, size__4263__auto__, b__46394, s__46392__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), 
                                new cljs.core.Keyword(null, "uid", "uid", 1014020034)], null)));
                                var G__46401 = i__46393 + 1;
                                i__46393 = G__46401;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46394), iter__46391.call(null, cljs.core.chunk_rest.call(null, s__46392__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__46394), null);
                          }
                        } else {
                          var vec__46398 = cljs.core.first.call(null, s__46392__$2);
                          var idx = cljs.core.nth.call(null, vec__46398, 0, null);
                          var inv = cljs.core.nth.call(null, vec__46398, 1, null);
                          return cljs.core.cons.call(null, om.core.build.call(null, clustermap.components.search.search_result_link, inv, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), self__.comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), self__.path_fn], null), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.PersistentArrayMap(null, 
                          1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, idx, selected_idx)], null), new cljs.core.Keyword(null, "fn", "fn", 1013907514), function(vec__46398, idx, inv, s__46392__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, 
                          map__46369__$1, selection_type, selection_value, view, search_results) {
                            return function(data) {
                              return cljs.core.assoc.call(null, data, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.get.call(null, data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593)), new cljs.core.Keyword(null, "uid", "uid", 1014020034), "investor-company:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, 
                              data, new cljs.core.Keyword(null, "investor_company_uid", "investor_company_uid", 4184005593))));
                            };
                          }(vec__46398, idx, inv, s__46392__$2, temp__4126__auto__, idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), new cljs.core.Keyword(null, "key", "key", 1014010321), new cljs.core.Keyword(null, "uid", "uid", 1014020034)], 
                          null)), iter__46391.call(null, cljs.core.rest.call(null, s__46392__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results), null, null);
              };
            }(idx_cons, idx_pcs, idx_invs, selected_idx, _, this$__$1, map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
            return iter__4264__auto__.call(null, idx_invs);
          }()) : null], null)], null);
        }() : null));
      };
    }(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t46372.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
      return function(_46374) {
        var self__ = this;
        var _46374__$1 = this;
        return self__.meta46373;
      };
    }(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.t46372.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
      return function(_46374, meta46373__$1) {
        var self__ = this;
        var _46374__$1 = this;
        return new clustermap.components.search.t46372(self__.map__46368, self__.search_results, self__.search_component, self__.owner, self__.path_fn, self__.view, self__.portfolio_companies, self__.map__46369, self__.map__46371, self__.constituencies, self__.investor_companies, self__.map__46370, self__.selection_value, self__.comm, self__.p__46336, self__.selection_type, meta46373__$1);
      };
    }(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
    clustermap.components.search.__GT_t46372 = function(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results) {
      return function __GT_t46372(map__46368__$2, search_results__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, map__46369__$2, map__46371__$2, constituencies__$1, investor_companies__$1, map__46370__$2, selection_value__$1, comm__$1, p__46336__$1, selection_type__$1, meta46373) {
        return new clustermap.components.search.t46372(map__46368__$2, search_results__$1, search_component__$1, owner__$1, path_fn__$2, view__$1, portfolio_companies__$1, map__46369__$2, map__46371__$2, constituencies__$1, investor_companies__$1, map__46370__$2, selection_value__$1, comm__$1, p__46336__$1, selection_type__$1, meta46373);
      };
    }(map__46370, map__46370__$1, path_fn, comm, path_fn__$1, map__46371, map__46371__$1, investor_companies, portfolio_companies, constituencies, map__46368, map__46368__$1, map__46369, map__46369__$1, selection_type, selection_value, view, search_results);
  }
  return new clustermap.components.search.t46372(map__46368__$1, search_results, search_component, owner, path_fn__$1, view, portfolio_companies, map__46369__$1, map__46371__$1, constituencies, investor_companies, map__46370__$1, selection_value, comm, p__46336, selection_type, null);
};
clustermap.components.search.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.search.search_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared, new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || (el.disabled || el.tagName.toLowerCase() == "fieldset")) {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && (el.type && el.type.toLowerCase() == "file")) {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els.type) {
    return goog.dom.forms.getValue(els);
  } else {
    for (var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if (val) {
        return val;
      }
    }
    return null;
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("goog.dom");
var div_51742 = document.createElement("div");
var test_html_51743 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_51742.innerHTML = test_html_51743;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_51742.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_51742.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_51742.getElementsByTagName("link").length, 0);
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && (a.right == b.right && (a.bottom == b.bottom && a.left == b.left));
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && (other.right <= box.right && (other.top >= box.top && other.bottom <= box.bottom));
  }
  return other.x >= box.left && (other.x <= box.right && (other.y >= box.top && other.y <= box.bottom));
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && (b.left <= a.right && (a.top <= b.bottom && b.top <= a.bottom));
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && (b.left <= a.right + padding && (a.top <= b.bottom + padding && b.top <= a.bottom + padding));
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && (a.width == b.width && (a.top == b.top && a.height == b.height));
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && (b.left <= a.left + a.width && (a.top <= b.top + b.height && b.top <= a.top + a.height));
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || (!intersection.height || !intersection.width)) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && (this.left + this.width >= another.left + another.width && (this.top <= another.top && this.top + this.height >= another.top + another.height));
  } else {
    return another.x >= this.left && (another.x <= this.left + this.width && (another.y >= this.top && another.y <= this.top + this.height));
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value;
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || (styles.getPropertyValue(property) || "");
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || (goog.style.getCascadedStyle(element, style) || element.style && element.style[style]);
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && ((goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9"));
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && (!goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode())) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.supportsGetBoundingClientRect_ = function(el) {
  if (goog.userAgent.MOBILE && goog.userAgent.WEBKIT) {
    var win = el.ownerDocument.defaultView;
    if (win != win.top) {
      return false;
    }
  }
  return!!el.getBoundingClientRect;
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if (goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && (positionStyle == "static" && (parent != doc.documentElement && parent != doc.body));
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || (parent.scrollHeight > parent.clientHeight || (positionStyle == "fixed" || (positionStyle == "absolute" || positionStyle == "relative"))))) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && ((!goog.userAgent.WEBKIT || (el.clientHeight != 0 || el != body)) && (el != body && (el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")))) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && (visibleRect.left >= 0 && (visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left)) ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && (doc.getBoxObjectFor && (!el.getBoundingClientRect && (positionStyle == "absolute" && ((box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0)))));
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.supportsGetBoundingClientRect_(el)) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && (parent != doc.body && parent != viewportElement);) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && (currentWin != relativeWin && ((currentEl = currentWin.frameElement) && (currentWin = currentWin.parent))));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if (goog.style.supportsGetBoundingClientRect_(el)) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top;
    } else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y;
    }
    if (goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
    }
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0];
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY;
  }
  return pos;
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && (!offsetWidth && !offsetHeight);
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if (goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || (styleSheet.owningElement || (styleSheet));
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && (goog.dom.getDomHelper(doc).isCss1CompatMode() && (ieCurrentStyle.width != "auto" && (ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing)))) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft");
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && (el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if (goog.userAgent.IE) {
    property = "-ms-transform";
  } else {
    if (goog.userAgent.WEBKIT) {
      property = "-webkit-transform";
    } else {
      if (goog.userAgent.OPERA) {
        property = "-o-transform";
      } else {
        if (goog.userAgent.GECKO) {
          property = "-moz-transform";
        }
      }
    }
  }
  var transform;
  if (property) {
    transform = goog.style.getStyle_(element, property);
  }
  if (!transform) {
    transform = goog.style.getStyle_(element, "transform");
  }
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.string");
goog.require("domina.support");
goog.require("goog.style");
goog.require("goog.style");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_51292 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_51293 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_51294 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", 2558708147), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_51294, opt_wrapper_51292, table_section_wrapper_51293, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 
5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_51292, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_51293, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_51293, cell_wrapper_51294, table_section_wrapper_51293, table_section_wrapper_51293]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__3527__auto__ = div.firstChild;
    if (cljs.core.truth_(and__3527__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__3527__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var seq__51299 = cljs.core.seq.call(null, tbody);
  var chunk__51300 = null;
  var count__51301 = 0;
  var i__51302 = 0;
  while (true) {
    if (i__51302 < count__51301) {
      var child = cljs.core._nth.call(null, chunk__51300, i__51302);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__51303 = seq__51299;
      var G__51304 = chunk__51300;
      var G__51305 = count__51301;
      var G__51306 = i__51302 + 1;
      seq__51299 = G__51303;
      chunk__51300 = G__51304;
      count__51301 = G__51305;
      i__51302 = G__51306;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__51299);
      if (temp__4126__auto__) {
        var seq__51299__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51299__$1)) {
          var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__51299__$1);
          var G__51307 = cljs.core.chunk_rest.call(null, seq__51299__$1);
          var G__51308 = c__4295__auto__;
          var G__51309 = cljs.core.count.call(null, c__4295__auto__);
          var G__51310 = 0;
          seq__51299 = G__51307;
          chunk__51300 = G__51308;
          count__51301 = G__51309;
          i__51302 = G__51310;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__51299__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__51311 = cljs.core.next.call(null, seq__51299__$1);
          var G__51312 = null;
          var G__51313 = 0;
          var G__51314 = 0;
          seq__51299 = G__51311;
          chunk__51300 = G__51312;
          count__51301 = G__51313;
          i__51302 = G__51314;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))).toLowerCase();
  var vec__51316 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__51316, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__51316, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__51316, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(start_wrap) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(html__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(end_wrap);
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__51317 = wrapper.lastChild;
        var G__51318 = level - 1;
        wrapper = G__51317;
        level = G__51318;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if (and__3527__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__3527__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj51320 = {};
  return obj51320;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__3527__auto__ = content;
    if (and__3527__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__4166__auto__ = content == null ? null : content;
    return function() {
      var or__3539__auto__ = domina.nodes[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.nodes["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__3527__auto__ = nodeseq;
    if (and__3527__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__4166__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3539__auto__ = domina.single_node[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.single_node["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__3527__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined);
      } else {
        return and__3527__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__51321) {
    var mesg = cljs.core.seq(arglist__51321);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__51322) {
    var mesg = cljs.core.seq(arglist__51322);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      contents = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__51323) {
    var contents = cljs.core.seq(arglist__51323);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__51324_SHARP_) {
    return p1__51324_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__51325_SHARP_, p2__51326_SHARP_) {
    return goog.dom.insertChildAt(p1__51325_SHARP_, p2__51326_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__51328_SHARP_, p2__51327_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__51327_SHARP_, p1__51328_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__51330_SHARP_, p2__51329_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__51329_SHARP_, p1__51330_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__51332_SHARP_, p2__51331_SHARP_) {
    return goog.dom.replaceNode(p2__51331_SHARP_, p1__51332_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__51337_51341 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__51338_51342 = null;
    var count__51339_51343 = 0;
    var i__51340_51344 = 0;
    while (true) {
      if (i__51340_51344 < count__51339_51343) {
        var n_51345 = cljs.core._nth.call(null, chunk__51338_51342, i__51340_51344);
        goog.style.setStyle(n_51345, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__51346 = seq__51337_51341;
        var G__51347 = chunk__51338_51342;
        var G__51348 = count__51339_51343;
        var G__51349 = i__51340_51344 + 1;
        seq__51337_51341 = G__51346;
        chunk__51338_51342 = G__51347;
        count__51339_51343 = G__51348;
        i__51340_51344 = G__51349;
        continue;
      } else {
        var temp__4126__auto___51350 = cljs.core.seq.call(null, seq__51337_51341);
        if (temp__4126__auto___51350) {
          var seq__51337_51351__$1 = temp__4126__auto___51350;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51337_51351__$1)) {
            var c__4295__auto___51352 = cljs.core.chunk_first.call(null, seq__51337_51351__$1);
            var G__51353 = cljs.core.chunk_rest.call(null, seq__51337_51351__$1);
            var G__51354 = c__4295__auto___51352;
            var G__51355 = cljs.core.count.call(null, c__4295__auto___51352);
            var G__51356 = 0;
            seq__51337_51341 = G__51353;
            chunk__51338_51342 = G__51354;
            count__51339_51343 = G__51355;
            i__51340_51344 = G__51356;
            continue;
          } else {
            var n_51357 = cljs.core.first.call(null, seq__51337_51351__$1);
            goog.style.setStyle(n_51357, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__51358 = cljs.core.next.call(null, seq__51337_51351__$1);
            var G__51359 = null;
            var G__51360 = 0;
            var G__51361 = 0;
            seq__51337_51341 = G__51358;
            chunk__51338_51342 = G__51359;
            count__51339_51343 = G__51360;
            i__51340_51344 = G__51361;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__51362) {
    var content = cljs.core.first(arglist__51362);
    arglist__51362 = cljs.core.next(arglist__51362);
    var name = cljs.core.first(arglist__51362);
    var value = cljs.core.rest(arglist__51362);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__51367_51371 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__51368_51372 = null;
    var count__51369_51373 = 0;
    var i__51370_51374 = 0;
    while (true) {
      if (i__51370_51374 < count__51369_51373) {
        var n_51375 = cljs.core._nth.call(null, chunk__51368_51372, i__51370_51374);
        n_51375.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__51376 = seq__51367_51371;
        var G__51377 = chunk__51368_51372;
        var G__51378 = count__51369_51373;
        var G__51379 = i__51370_51374 + 1;
        seq__51367_51371 = G__51376;
        chunk__51368_51372 = G__51377;
        count__51369_51373 = G__51378;
        i__51370_51374 = G__51379;
        continue;
      } else {
        var temp__4126__auto___51380 = cljs.core.seq.call(null, seq__51367_51371);
        if (temp__4126__auto___51380) {
          var seq__51367_51381__$1 = temp__4126__auto___51380;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51367_51381__$1)) {
            var c__4295__auto___51382 = cljs.core.chunk_first.call(null, seq__51367_51381__$1);
            var G__51383 = cljs.core.chunk_rest.call(null, seq__51367_51381__$1);
            var G__51384 = c__4295__auto___51382;
            var G__51385 = cljs.core.count.call(null, c__4295__auto___51382);
            var G__51386 = 0;
            seq__51367_51371 = G__51383;
            chunk__51368_51372 = G__51384;
            count__51369_51373 = G__51385;
            i__51370_51374 = G__51386;
            continue;
          } else {
            var n_51387 = cljs.core.first.call(null, seq__51367_51381__$1);
            n_51387.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__51388 = cljs.core.next.call(null, seq__51367_51381__$1);
            var G__51389 = null;
            var G__51390 = 0;
            var G__51391 = 0;
            seq__51367_51371 = G__51388;
            chunk__51368_51372 = G__51389;
            count__51369_51373 = G__51390;
            i__51370_51374 = G__51391;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__51392) {
    var content = cljs.core.first(arglist__51392);
    arglist__51392 = cljs.core.next(arglist__51392);
    var name = cljs.core.first(arglist__51392);
    var value = cljs.core.rest(arglist__51392);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__51397_51401 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51398_51402 = null;
  var count__51399_51403 = 0;
  var i__51400_51404 = 0;
  while (true) {
    if (i__51400_51404 < count__51399_51403) {
      var n_51405 = cljs.core._nth.call(null, chunk__51398_51402, i__51400_51404);
      n_51405.removeAttribute(cljs.core.name.call(null, name));
      var G__51406 = seq__51397_51401;
      var G__51407 = chunk__51398_51402;
      var G__51408 = count__51399_51403;
      var G__51409 = i__51400_51404 + 1;
      seq__51397_51401 = G__51406;
      chunk__51398_51402 = G__51407;
      count__51399_51403 = G__51408;
      i__51400_51404 = G__51409;
      continue;
    } else {
      var temp__4126__auto___51410 = cljs.core.seq.call(null, seq__51397_51401);
      if (temp__4126__auto___51410) {
        var seq__51397_51411__$1 = temp__4126__auto___51410;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51397_51411__$1)) {
          var c__4295__auto___51412 = cljs.core.chunk_first.call(null, seq__51397_51411__$1);
          var G__51413 = cljs.core.chunk_rest.call(null, seq__51397_51411__$1);
          var G__51414 = c__4295__auto___51412;
          var G__51415 = cljs.core.count.call(null, c__4295__auto___51412);
          var G__51416 = 0;
          seq__51397_51401 = G__51413;
          chunk__51398_51402 = G__51414;
          count__51399_51403 = G__51415;
          i__51400_51404 = G__51416;
          continue;
        } else {
          var n_51417 = cljs.core.first.call(null, seq__51397_51411__$1);
          n_51417.removeAttribute(cljs.core.name.call(null, name));
          var G__51418 = cljs.core.next.call(null, seq__51397_51411__$1);
          var G__51419 = null;
          var G__51420 = 0;
          var G__51421 = 0;
          seq__51397_51401 = G__51418;
          chunk__51398_51402 = G__51419;
          count__51399_51403 = G__51420;
          i__51400_51404 = G__51421;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__51423 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__51423, 0, null);
    var v = cljs.core.nth.call(null, vec__51423, 1, null);
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = k;
      if (cljs.core.truth_(and__3527__auto__)) {
        return v;
      } else {
        return and__3527__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.PersistentArrayMap.EMPTY;
        } else {
          return null;
        }
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs__$1) {
    return function(p1__51424_SHARP_) {
      var attr = attrs__$1.item(p1__51424_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.call(null, attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__51431_51437 = cljs.core.seq.call(null, styles);
  var chunk__51432_51438 = null;
  var count__51433_51439 = 0;
  var i__51434_51440 = 0;
  while (true) {
    if (i__51434_51440 < count__51433_51439) {
      var vec__51435_51441 = cljs.core._nth.call(null, chunk__51432_51438, i__51434_51440);
      var name_51442 = cljs.core.nth.call(null, vec__51435_51441, 0, null);
      var value_51443 = cljs.core.nth.call(null, vec__51435_51441, 1, null);
      domina.set_style_BANG_.call(null, content, name_51442, value_51443);
      var G__51444 = seq__51431_51437;
      var G__51445 = chunk__51432_51438;
      var G__51446 = count__51433_51439;
      var G__51447 = i__51434_51440 + 1;
      seq__51431_51437 = G__51444;
      chunk__51432_51438 = G__51445;
      count__51433_51439 = G__51446;
      i__51434_51440 = G__51447;
      continue;
    } else {
      var temp__4126__auto___51448 = cljs.core.seq.call(null, seq__51431_51437);
      if (temp__4126__auto___51448) {
        var seq__51431_51449__$1 = temp__4126__auto___51448;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51431_51449__$1)) {
          var c__4295__auto___51450 = cljs.core.chunk_first.call(null, seq__51431_51449__$1);
          var G__51451 = cljs.core.chunk_rest.call(null, seq__51431_51449__$1);
          var G__51452 = c__4295__auto___51450;
          var G__51453 = cljs.core.count.call(null, c__4295__auto___51450);
          var G__51454 = 0;
          seq__51431_51437 = G__51451;
          chunk__51432_51438 = G__51452;
          count__51433_51439 = G__51453;
          i__51434_51440 = G__51454;
          continue;
        } else {
          var vec__51436_51455 = cljs.core.first.call(null, seq__51431_51449__$1);
          var name_51456 = cljs.core.nth.call(null, vec__51436_51455, 0, null);
          var value_51457 = cljs.core.nth.call(null, vec__51436_51455, 1, null);
          domina.set_style_BANG_.call(null, content, name_51456, value_51457);
          var G__51458 = cljs.core.next.call(null, seq__51431_51449__$1);
          var G__51459 = null;
          var G__51460 = 0;
          var G__51461 = 0;
          seq__51431_51437 = G__51458;
          chunk__51432_51438 = G__51459;
          count__51433_51439 = G__51460;
          i__51434_51440 = G__51461;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__51468_51474 = cljs.core.seq.call(null, attrs);
  var chunk__51469_51475 = null;
  var count__51470_51476 = 0;
  var i__51471_51477 = 0;
  while (true) {
    if (i__51471_51477 < count__51470_51476) {
      var vec__51472_51478 = cljs.core._nth.call(null, chunk__51469_51475, i__51471_51477);
      var name_51479 = cljs.core.nth.call(null, vec__51472_51478, 0, null);
      var value_51480 = cljs.core.nth.call(null, vec__51472_51478, 1, null);
      domina.set_attr_BANG_.call(null, content, name_51479, value_51480);
      var G__51481 = seq__51468_51474;
      var G__51482 = chunk__51469_51475;
      var G__51483 = count__51470_51476;
      var G__51484 = i__51471_51477 + 1;
      seq__51468_51474 = G__51481;
      chunk__51469_51475 = G__51482;
      count__51470_51476 = G__51483;
      i__51471_51477 = G__51484;
      continue;
    } else {
      var temp__4126__auto___51485 = cljs.core.seq.call(null, seq__51468_51474);
      if (temp__4126__auto___51485) {
        var seq__51468_51486__$1 = temp__4126__auto___51485;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51468_51486__$1)) {
          var c__4295__auto___51487 = cljs.core.chunk_first.call(null, seq__51468_51486__$1);
          var G__51488 = cljs.core.chunk_rest.call(null, seq__51468_51486__$1);
          var G__51489 = c__4295__auto___51487;
          var G__51490 = cljs.core.count.call(null, c__4295__auto___51487);
          var G__51491 = 0;
          seq__51468_51474 = G__51488;
          chunk__51469_51475 = G__51489;
          count__51470_51476 = G__51490;
          i__51471_51477 = G__51491;
          continue;
        } else {
          var vec__51473_51492 = cljs.core.first.call(null, seq__51468_51486__$1);
          var name_51493 = cljs.core.nth.call(null, vec__51473_51492, 0, null);
          var value_51494 = cljs.core.nth.call(null, vec__51473_51492, 1, null);
          domina.set_attr_BANG_.call(null, content, name_51493, value_51494);
          var G__51495 = cljs.core.next.call(null, seq__51468_51486__$1);
          var G__51496 = null;
          var G__51497 = 0;
          var G__51498 = 0;
          seq__51468_51474 = G__51495;
          chunk__51469_51475 = G__51496;
          count__51470_51476 = G__51497;
          i__51471_51477 = G__51498;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__51503_51507 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51504_51508 = null;
  var count__51505_51509 = 0;
  var i__51506_51510 = 0;
  while (true) {
    if (i__51506_51510 < count__51505_51509) {
      var node_51511 = cljs.core._nth.call(null, chunk__51504_51508, i__51506_51510);
      goog.dom.classes.add(node_51511, class$);
      var G__51512 = seq__51503_51507;
      var G__51513 = chunk__51504_51508;
      var G__51514 = count__51505_51509;
      var G__51515 = i__51506_51510 + 1;
      seq__51503_51507 = G__51512;
      chunk__51504_51508 = G__51513;
      count__51505_51509 = G__51514;
      i__51506_51510 = G__51515;
      continue;
    } else {
      var temp__4126__auto___51516 = cljs.core.seq.call(null, seq__51503_51507);
      if (temp__4126__auto___51516) {
        var seq__51503_51517__$1 = temp__4126__auto___51516;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51503_51517__$1)) {
          var c__4295__auto___51518 = cljs.core.chunk_first.call(null, seq__51503_51517__$1);
          var G__51519 = cljs.core.chunk_rest.call(null, seq__51503_51517__$1);
          var G__51520 = c__4295__auto___51518;
          var G__51521 = cljs.core.count.call(null, c__4295__auto___51518);
          var G__51522 = 0;
          seq__51503_51507 = G__51519;
          chunk__51504_51508 = G__51520;
          count__51505_51509 = G__51521;
          i__51506_51510 = G__51522;
          continue;
        } else {
          var node_51523 = cljs.core.first.call(null, seq__51503_51517__$1);
          goog.dom.classes.add(node_51523, class$);
          var G__51524 = cljs.core.next.call(null, seq__51503_51517__$1);
          var G__51525 = null;
          var G__51526 = 0;
          var G__51527 = 0;
          seq__51503_51507 = G__51524;
          chunk__51504_51508 = G__51525;
          count__51505_51509 = G__51526;
          i__51506_51510 = G__51527;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__51532_51536 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51533_51537 = null;
  var count__51534_51538 = 0;
  var i__51535_51539 = 0;
  while (true) {
    if (i__51535_51539 < count__51534_51538) {
      var node_51540 = cljs.core._nth.call(null, chunk__51533_51537, i__51535_51539);
      goog.dom.classes.remove(node_51540, class$);
      var G__51541 = seq__51532_51536;
      var G__51542 = chunk__51533_51537;
      var G__51543 = count__51534_51538;
      var G__51544 = i__51535_51539 + 1;
      seq__51532_51536 = G__51541;
      chunk__51533_51537 = G__51542;
      count__51534_51538 = G__51543;
      i__51535_51539 = G__51544;
      continue;
    } else {
      var temp__4126__auto___51545 = cljs.core.seq.call(null, seq__51532_51536);
      if (temp__4126__auto___51545) {
        var seq__51532_51546__$1 = temp__4126__auto___51545;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51532_51546__$1)) {
          var c__4295__auto___51547 = cljs.core.chunk_first.call(null, seq__51532_51546__$1);
          var G__51548 = cljs.core.chunk_rest.call(null, seq__51532_51546__$1);
          var G__51549 = c__4295__auto___51547;
          var G__51550 = cljs.core.count.call(null, c__4295__auto___51547);
          var G__51551 = 0;
          seq__51532_51536 = G__51548;
          chunk__51533_51537 = G__51549;
          count__51534_51538 = G__51550;
          i__51535_51539 = G__51551;
          continue;
        } else {
          var node_51552 = cljs.core.first.call(null, seq__51532_51546__$1);
          goog.dom.classes.remove(node_51552, class$);
          var G__51553 = cljs.core.next.call(null, seq__51532_51546__$1);
          var G__51554 = null;
          var G__51555 = 0;
          var G__51556 = 0;
          seq__51532_51536 = G__51553;
          chunk__51533_51537 = G__51554;
          count__51534_51538 = G__51555;
          i__51535_51539 = G__51556;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__51561_51565 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51562_51566 = null;
  var count__51563_51567 = 0;
  var i__51564_51568 = 0;
  while (true) {
    if (i__51564_51568 < count__51563_51567) {
      var node_51569 = cljs.core._nth.call(null, chunk__51562_51566, i__51564_51568);
      goog.dom.classes.toggle(node_51569, class$);
      var G__51570 = seq__51561_51565;
      var G__51571 = chunk__51562_51566;
      var G__51572 = count__51563_51567;
      var G__51573 = i__51564_51568 + 1;
      seq__51561_51565 = G__51570;
      chunk__51562_51566 = G__51571;
      count__51563_51567 = G__51572;
      i__51564_51568 = G__51573;
      continue;
    } else {
      var temp__4126__auto___51574 = cljs.core.seq.call(null, seq__51561_51565);
      if (temp__4126__auto___51574) {
        var seq__51561_51575__$1 = temp__4126__auto___51574;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51561_51575__$1)) {
          var c__4295__auto___51576 = cljs.core.chunk_first.call(null, seq__51561_51575__$1);
          var G__51577 = cljs.core.chunk_rest.call(null, seq__51561_51575__$1);
          var G__51578 = c__4295__auto___51576;
          var G__51579 = cljs.core.count.call(null, c__4295__auto___51576);
          var G__51580 = 0;
          seq__51561_51565 = G__51577;
          chunk__51562_51566 = G__51578;
          count__51563_51567 = G__51579;
          i__51564_51568 = G__51580;
          continue;
        } else {
          var node_51581 = cljs.core.first.call(null, seq__51561_51575__$1);
          goog.dom.classes.toggle(node_51581, class$);
          var G__51582 = cljs.core.next.call(null, seq__51561_51575__$1);
          var G__51583 = null;
          var G__51584 = 0;
          var G__51585 = 0;
          seq__51561_51565 = G__51582;
          chunk__51562_51566 = G__51583;
          count__51563_51567 = G__51584;
          i__51564_51568 = G__51585;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_51594__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__51590_51595 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51591_51596 = null;
  var count__51592_51597 = 0;
  var i__51593_51598 = 0;
  while (true) {
    if (i__51593_51598 < count__51592_51597) {
      var node_51599 = cljs.core._nth.call(null, chunk__51591_51596, i__51593_51598);
      goog.dom.classes.set(node_51599, classes_51594__$1);
      var G__51600 = seq__51590_51595;
      var G__51601 = chunk__51591_51596;
      var G__51602 = count__51592_51597;
      var G__51603 = i__51593_51598 + 1;
      seq__51590_51595 = G__51600;
      chunk__51591_51596 = G__51601;
      count__51592_51597 = G__51602;
      i__51593_51598 = G__51603;
      continue;
    } else {
      var temp__4126__auto___51604 = cljs.core.seq.call(null, seq__51590_51595);
      if (temp__4126__auto___51604) {
        var seq__51590_51605__$1 = temp__4126__auto___51604;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51590_51605__$1)) {
          var c__4295__auto___51606 = cljs.core.chunk_first.call(null, seq__51590_51605__$1);
          var G__51607 = cljs.core.chunk_rest.call(null, seq__51590_51605__$1);
          var G__51608 = c__4295__auto___51606;
          var G__51609 = cljs.core.count.call(null, c__4295__auto___51606);
          var G__51610 = 0;
          seq__51590_51595 = G__51607;
          chunk__51591_51596 = G__51608;
          count__51592_51597 = G__51609;
          i__51593_51598 = G__51610;
          continue;
        } else {
          var node_51611 = cljs.core.first.call(null, seq__51590_51605__$1);
          goog.dom.classes.set(node_51611, classes_51594__$1);
          var G__51612 = cljs.core.next.call(null, seq__51590_51605__$1);
          var G__51613 = null;
          var G__51614 = 0;
          var G__51615 = 0;
          seq__51590_51595 = G__51612;
          chunk__51591_51596 = G__51613;
          count__51592_51597 = G__51614;
          i__51593_51598 = G__51615;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__51620_51624 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51621_51625 = null;
  var count__51622_51626 = 0;
  var i__51623_51627 = 0;
  while (true) {
    if (i__51623_51627 < count__51622_51626) {
      var node_51628 = cljs.core._nth.call(null, chunk__51621_51625, i__51623_51627);
      goog.dom.setTextContent(node_51628, value);
      var G__51629 = seq__51620_51624;
      var G__51630 = chunk__51621_51625;
      var G__51631 = count__51622_51626;
      var G__51632 = i__51623_51627 + 1;
      seq__51620_51624 = G__51629;
      chunk__51621_51625 = G__51630;
      count__51622_51626 = G__51631;
      i__51623_51627 = G__51632;
      continue;
    } else {
      var temp__4126__auto___51633 = cljs.core.seq.call(null, seq__51620_51624);
      if (temp__4126__auto___51633) {
        var seq__51620_51634__$1 = temp__4126__auto___51633;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51620_51634__$1)) {
          var c__4295__auto___51635 = cljs.core.chunk_first.call(null, seq__51620_51634__$1);
          var G__51636 = cljs.core.chunk_rest.call(null, seq__51620_51634__$1);
          var G__51637 = c__4295__auto___51635;
          var G__51638 = cljs.core.count.call(null, c__4295__auto___51635);
          var G__51639 = 0;
          seq__51620_51624 = G__51636;
          chunk__51621_51625 = G__51637;
          count__51622_51626 = G__51638;
          i__51623_51627 = G__51639;
          continue;
        } else {
          var node_51640 = cljs.core.first.call(null, seq__51620_51634__$1);
          goog.dom.setTextContent(node_51640, value);
          var G__51641 = cljs.core.next.call(null, seq__51620_51634__$1);
          var G__51642 = null;
          var G__51643 = 0;
          var G__51644 = 0;
          seq__51620_51624 = G__51641;
          chunk__51621_51625 = G__51642;
          count__51622_51626 = G__51643;
          i__51623_51627 = G__51644;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__51649_51653 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__51650_51654 = null;
  var count__51651_51655 = 0;
  var i__51652_51656 = 0;
  while (true) {
    if (i__51652_51656 < count__51651_51655) {
      var node_51657 = cljs.core._nth.call(null, chunk__51650_51654, i__51652_51656);
      goog.dom.forms.setValue(node_51657, value);
      var G__51658 = seq__51649_51653;
      var G__51659 = chunk__51650_51654;
      var G__51660 = count__51651_51655;
      var G__51661 = i__51652_51656 + 1;
      seq__51649_51653 = G__51658;
      chunk__51650_51654 = G__51659;
      count__51651_51655 = G__51660;
      i__51652_51656 = G__51661;
      continue;
    } else {
      var temp__4126__auto___51662 = cljs.core.seq.call(null, seq__51649_51653);
      if (temp__4126__auto___51662) {
        var seq__51649_51663__$1 = temp__4126__auto___51662;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51649_51663__$1)) {
          var c__4295__auto___51664 = cljs.core.chunk_first.call(null, seq__51649_51663__$1);
          var G__51665 = cljs.core.chunk_rest.call(null, seq__51649_51663__$1);
          var G__51666 = c__4295__auto___51664;
          var G__51667 = cljs.core.count.call(null, c__4295__auto___51664);
          var G__51668 = 0;
          seq__51649_51653 = G__51665;
          chunk__51650_51654 = G__51666;
          count__51651_51655 = G__51667;
          i__51652_51656 = G__51668;
          continue;
        } else {
          var node_51669 = cljs.core.first.call(null, seq__51649_51663__$1);
          goog.dom.forms.setValue(node_51669, value);
          var G__51670 = cljs.core.next.call(null, seq__51649_51663__$1);
          var G__51671 = null;
          var G__51672 = 0;
          var G__51673 = 0;
          seq__51649_51653 = G__51670;
          chunk__51650_51654 = G__51671;
          count__51651_51655 = G__51672;
          i__51652_51656 = G__51673;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))).toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = allows_inner_html_QMARK_;
    if (and__3527__auto__) {
      var and__3527__auto____$1 = function() {
        var or__3539__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__3539__auto__)) {
          return or__3539__auto__;
        } else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__3527__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__3527__auto____$1;
      }
    } else {
      return and__3527__auto__;
    }
  }())) {
    var value_51684 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__51680_51685 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__51681_51686 = null;
      var count__51682_51687 = 0;
      var i__51683_51688 = 0;
      while (true) {
        if (i__51683_51688 < count__51682_51687) {
          var node_51689 = cljs.core._nth.call(null, chunk__51681_51686, i__51683_51688);
          node_51689.innerHTML = value_51684;
          var G__51690 = seq__51680_51685;
          var G__51691 = chunk__51681_51686;
          var G__51692 = count__51682_51687;
          var G__51693 = i__51683_51688 + 1;
          seq__51680_51685 = G__51690;
          chunk__51681_51686 = G__51691;
          count__51682_51687 = G__51692;
          i__51683_51688 = G__51693;
          continue;
        } else {
          var temp__4126__auto___51694 = cljs.core.seq.call(null, seq__51680_51685);
          if (temp__4126__auto___51694) {
            var seq__51680_51695__$1 = temp__4126__auto___51694;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__51680_51695__$1)) {
              var c__4295__auto___51696 = cljs.core.chunk_first.call(null, seq__51680_51695__$1);
              var G__51697 = cljs.core.chunk_rest.call(null, seq__51680_51695__$1);
              var G__51698 = c__4295__auto___51696;
              var G__51699 = cljs.core.count.call(null, c__4295__auto___51696);
              var G__51700 = 0;
              seq__51680_51685 = G__51697;
              chunk__51681_51686 = G__51698;
              count__51682_51687 = G__51699;
              i__51683_51688 = G__51700;
              continue;
            } else {
              var node_51701 = cljs.core.first.call(null, seq__51680_51695__$1);
              node_51701.innerHTML = value_51684;
              var G__51702 = cljs.core.next.call(null, seq__51680_51695__$1);
              var G__51703 = null;
              var G__51704 = 0;
              var G__51705 = 0;
              seq__51680_51685 = G__51702;
              chunk__51681_51686 = G__51703;
              count__51682_51687 = G__51704;
              i__51683_51688 = G__51705;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e51679) {
      if (e51679 instanceof Error) {
        var e_51706 = e51679;
        domina.replace_children_BANG_.call(null, content, value_51684);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e51679;
        } else {
        }
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if (cljs.core.truth_(function() {
      var and__3527__auto__ = bubble;
      if (cljs.core.truth_(and__3527__auto__)) {
        return value == null;
      } else {
        return and__3527__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node.call(null, node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.call(null, parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__3539__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__51713_51717 = cljs.core.seq.call(null, children);
    var chunk__51714_51718 = null;
    var count__51715_51719 = 0;
    var i__51716_51720 = 0;
    while (true) {
      if (i__51716_51720 < count__51715_51719) {
        var child_51721 = cljs.core._nth.call(null, chunk__51714_51718, i__51716_51720);
        frag.appendChild(child_51721);
        var G__51722 = seq__51713_51717;
        var G__51723 = chunk__51714_51718;
        var G__51724 = count__51715_51719;
        var G__51725 = i__51716_51720 + 1;
        seq__51713_51717 = G__51722;
        chunk__51714_51718 = G__51723;
        count__51715_51719 = G__51724;
        i__51716_51720 = G__51725;
        continue;
      } else {
        var temp__4126__auto___51726 = cljs.core.seq.call(null, seq__51713_51717);
        if (temp__4126__auto___51726) {
          var seq__51713_51727__$1 = temp__4126__auto___51726;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51713_51727__$1)) {
            var c__4295__auto___51728 = cljs.core.chunk_first.call(null, seq__51713_51727__$1);
            var G__51729 = cljs.core.chunk_rest.call(null, seq__51713_51727__$1);
            var G__51730 = c__4295__auto___51728;
            var G__51731 = cljs.core.count.call(null, c__4295__auto___51728);
            var G__51732 = 0;
            seq__51713_51717 = G__51729;
            chunk__51714_51718 = G__51730;
            count__51715_51719 = G__51731;
            i__51716_51720 = G__51732;
            continue;
          } else {
            var child_51733 = cljs.core.first.call(null, seq__51713_51727__$1);
            frag.appendChild(child_51733);
            var G__51734 = cljs.core.next.call(null, seq__51713_51727__$1);
            var G__51735 = null;
            var G__51736 = 0;
            var G__51737 = 0;
            seq__51713_51717 = G__51734;
            chunk__51714_51718 = G__51735;
            count__51715_51719 = G__51736;
            i__51716_51720 = G__51737;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__51707_SHARP_, p2__51708_SHARP_) {
        return f.call(null, p1__51707_SHARP_, p2__51708_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3527__auto__ = obj;
  if (cljs.core.truth_(and__3527__auto__)) {
    var and__3527__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__3527__auto____$1) {
      return obj.length;
    } else {
      return and__3527__auto____$1;
    }
  } else {
    return and__3527__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__51739 = list_thing;
      if (G__51739) {
        var bit__4189__auto__ = G__51739.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4189__auto__ || G__51739.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__51739.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__51739);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__51739);
      }
    }()) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
        } else {
          return null;
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__51740 = content;
      if (G__51740) {
        var bit__4189__auto__ = G__51740.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4189__auto__ || G__51740.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__51740.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__51740);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__51740);
      }
    }()) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
        } else {
          return null;
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__51741 = content;
      if (G__51741) {
        var bit__4189__auto__ = G__51741.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4189__auto__ || G__51741.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__51741.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__51741);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__51741);
      }
    }()) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return content;
        } else {
          return null;
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("goog.object");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = function() {
  var obj51102 = {};
  return obj51102;
}();
domina.events.prevent_default = function prevent_default(evt) {
  if (function() {
    var and__3527__auto__ = evt;
    if (and__3527__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt);
  } else {
    var x__4166__auto__ = evt == null ? null : evt;
    return function() {
      var or__3539__auto__ = domina.events.prevent_default[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.events.prevent_default["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if (function() {
    var and__3527__auto__ = evt;
    if (and__3527__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt);
  } else {
    var x__4166__auto__ = evt == null ? null : evt;
    return function() {
      var or__3539__auto__ = domina.events.stop_propagation[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.events.stop_propagation["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.target = function target(evt) {
  if (function() {
    var and__3527__auto__ = evt;
    if (and__3527__auto__) {
      return evt.domina$events$Event$target$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt);
  } else {
    var x__4166__auto__ = evt == null ? null : evt;
    return function() {
      var or__3539__auto__ = domina.events.target[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.events.target["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.current_target = function current_target(evt) {
  if (function() {
    var and__3527__auto__ = evt;
    if (and__3527__auto__) {
      return evt.domina$events$Event$current_target$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt);
  } else {
    var x__4166__auto__ = evt == null ? null : evt;
    return function() {
      var or__3539__auto__ = domina.events.current_target[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.events.current_target["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.event_type = function event_type(evt) {
  if (function() {
    var and__3527__auto__ = evt;
    if (and__3527__auto__) {
      return evt.domina$events$Event$event_type$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt);
  } else {
    var x__4166__auto__ = evt == null ? null : evt;
    return function() {
      var or__3539__auto__ = domina.events.event_type[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.events.event_type["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.raw_event = function raw_event(evt) {
  if (function() {
    var and__3527__auto__ = evt;
    if (and__3527__auto__) {
      return evt.domina$events$Event$raw_event$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt);
  } else {
    var x__4166__auto__ = evt == null ? null : evt;
    return function() {
      var or__3539__auto__ = domina.events.raw_event[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = domina.events.raw_event["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.root_element = window.document.documentElement;
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if (typeof domina.events.t51106 !== "undefined") {
      } else {
        domina.events.t51106 = function(evt, f, create_listener_function, meta51107) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta51107 = meta51107;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472;
        };
        domina.events.t51106.cljs$lang$type = true;
        domina.events.t51106.cljs$lang$ctorStr = "domina.events/t51106";
        domina.events.t51106.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
          return cljs.core._write.call(null, writer__4107__auto__, "domina.events/t51106");
        };
        domina.events.t51106.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var o__$1 = this;
          var temp__4124__auto__ = self__.evt[k];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var val = temp__4124__auto__;
            return val;
          } else {
            return self__.evt[cljs.core.name.call(null, k)];
          }
        };
        domina.events.t51106.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var o__$1 = this;
          var or__3539__auto__ = cljs.core._lookup.call(null, o__$1, k);
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return not_found;
          }
        };
        domina.events.t51106.prototype.domina$events$Event$ = true;
        domina.events.t51106.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.preventDefault();
        };
        domina.events.t51106.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.stopPropagation();
        };
        domina.events.t51106.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.target;
        };
        domina.events.t51106.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.currentTarget;
        };
        domina.events.t51106.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.type;
        };
        domina.events.t51106.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt;
        };
        domina.events.t51106.prototype.cljs$core$IMeta$_meta$arity$1 = function(_51108) {
          var self__ = this;
          var _51108__$1 = this;
          return self__.meta51107;
        };
        domina.events.t51106.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_51108, meta51107__$1) {
          var self__ = this;
          var _51108__$1 = this;
          return new domina.events.t51106(self__.evt, self__.f, self__.create_listener_function, meta51107__$1);
        };
        domina.events.__GT_t51106 = function __GT_t51106(evt__$1, f__$1, create_listener_function__$1, meta51107) {
          return new domina.events.t51106(evt__$1, f__$1, create_listener_function__$1, meta51107);
        };
      }
      return new domina.events.t51106(evt, f, create_listener_function, null);
    }());
    return true;
  };
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = cljs.core.name.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__4264__auto__ = function(f, t) {
      return function iter__51113(s__51114) {
        return new cljs.core.LazySeq(null, function(f, t) {
          return function() {
            var s__51114__$1 = s__51114;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__51114__$1);
              if (temp__4126__auto__) {
                var s__51114__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__51114__$2)) {
                  var c__4262__auto__ = cljs.core.chunk_first.call(null, s__51114__$2);
                  var size__4263__auto__ = cljs.core.count.call(null, c__4262__auto__);
                  var b__51116 = cljs.core.chunk_buffer.call(null, size__4263__auto__);
                  if (function() {
                    var i__51115 = 0;
                    while (true) {
                      if (i__51115 < size__4263__auto__) {
                        var node = cljs.core._nth.call(null, c__4262__auto__, i__51115);
                        cljs.core.chunk_append.call(null, b__51116, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                        var G__51117 = i__51115 + 1;
                        i__51115 = G__51117;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__51116), iter__51113.call(null, cljs.core.chunk_rest.call(null, s__51114__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__51116), null);
                  }
                } else {
                  var node = cljs.core.first.call(null, s__51114__$2);
                  return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__51113.call(null, cljs.core.rest.call(null, s__51114__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(f, t), null, null);
      };
    }(f, t);
    return iter__4264__auto__.call(null, domina.nodes.call(null, content));
  }());
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false);
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false);
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_;
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true);
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_;
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true);
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_;
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element);
  };
  var unlisten_BANG___1 = function(content) {
    var seq__51126 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__51127 = null;
    var count__51128 = 0;
    var i__51129 = 0;
    while (true) {
      if (i__51129 < count__51128) {
        var node = cljs.core._nth.call(null, chunk__51127, i__51129);
        goog.events.removeAll(node);
        var G__51134 = seq__51126;
        var G__51135 = chunk__51127;
        var G__51136 = count__51128;
        var G__51137 = i__51129 + 1;
        seq__51126 = G__51134;
        chunk__51127 = G__51135;
        count__51128 = G__51136;
        i__51129 = G__51137;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__51126);
        if (temp__4126__auto__) {
          var seq__51126__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51126__$1)) {
            var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__51126__$1);
            var G__51138 = cljs.core.chunk_rest.call(null, seq__51126__$1);
            var G__51139 = c__4295__auto__;
            var G__51140 = cljs.core.count.call(null, c__4295__auto__);
            var G__51141 = 0;
            seq__51126 = G__51138;
            chunk__51127 = G__51139;
            count__51128 = G__51140;
            i__51129 = G__51141;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__51126__$1);
            goog.events.removeAll(node);
            var G__51142 = cljs.core.next.call(null, seq__51126__$1);
            var G__51143 = null;
            var G__51144 = 0;
            var G__51145 = 0;
            seq__51126 = G__51142;
            chunk__51127 = G__51143;
            count__51128 = G__51144;
            i__51129 = G__51145;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = cljs.core.name.call(null, type);
    var seq__51130 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__51131 = null;
    var count__51132 = 0;
    var i__51133 = 0;
    while (true) {
      if (i__51133 < count__51132) {
        var node = cljs.core._nth.call(null, chunk__51131, i__51133);
        goog.events.removeAll(node, type__$1);
        var G__51146 = seq__51130;
        var G__51147 = chunk__51131;
        var G__51148 = count__51132;
        var G__51149 = i__51133 + 1;
        seq__51130 = G__51146;
        chunk__51131 = G__51147;
        count__51132 = G__51148;
        i__51133 = G__51149;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__51130);
        if (temp__4126__auto__) {
          var seq__51130__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51130__$1)) {
            var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__51130__$1);
            var G__51150 = cljs.core.chunk_rest.call(null, seq__51130__$1);
            var G__51151 = c__4295__auto__;
            var G__51152 = cljs.core.count.call(null, c__4295__auto__);
            var G__51153 = 0;
            seq__51130 = G__51150;
            chunk__51131 = G__51151;
            count__51132 = G__51152;
            i__51133 = G__51153;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__51130__$1);
            goog.events.removeAll(node, type__$1);
            var G__51154 = cljs.core.next.call(null, seq__51130__$1);
            var G__51155 = null;
            var G__51156 = 0;
            var G__51157 = 0;
            seq__51130 = G__51154;
            chunk__51131 = G__51155;
            count__51132 = G__51156;
            i__51133 = G__51157;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_;
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null));
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while (true) {
      var temp__4124__auto__ = n.parentNode;
      if (cljs.core.truth_(temp__4124__auto__)) {
        var parent = temp__4124__auto__;
        var G__51158 = parent;
        var G__51159 = cljs.core.cons.call(null, parent, so_far);
        n = G__51158;
        so_far = G__51159;
        continue;
      } else {
        return so_far;
      }
      break;
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes;
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__51168_51176 = cljs.core.seq.call(null, ancestors);
  var chunk__51169_51177 = null;
  var count__51170_51178 = 0;
  var i__51171_51179 = 0;
  while (true) {
    if (i__51171_51179 < count__51170_51178) {
      var n_51180 = cljs.core._nth.call(null, chunk__51169_51177, i__51171_51179);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_51180;
        goog.events.fireListeners(n_51180, evt.type, true, evt);
      }
      var G__51181 = seq__51168_51176;
      var G__51182 = chunk__51169_51177;
      var G__51183 = count__51170_51178;
      var G__51184 = i__51171_51179 + 1;
      seq__51168_51176 = G__51181;
      chunk__51169_51177 = G__51182;
      count__51170_51178 = G__51183;
      i__51171_51179 = G__51184;
      continue;
    } else {
      var temp__4126__auto___51185 = cljs.core.seq.call(null, seq__51168_51176);
      if (temp__4126__auto___51185) {
        var seq__51168_51186__$1 = temp__4126__auto___51185;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51168_51186__$1)) {
          var c__4295__auto___51187 = cljs.core.chunk_first.call(null, seq__51168_51186__$1);
          var G__51188 = cljs.core.chunk_rest.call(null, seq__51168_51186__$1);
          var G__51189 = c__4295__auto___51187;
          var G__51190 = cljs.core.count.call(null, c__4295__auto___51187);
          var G__51191 = 0;
          seq__51168_51176 = G__51188;
          chunk__51169_51177 = G__51189;
          count__51170_51178 = G__51190;
          i__51171_51179 = G__51191;
          continue;
        } else {
          var n_51192 = cljs.core.first.call(null, seq__51168_51186__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_51192;
            goog.events.fireListeners(n_51192, evt.type, true, evt);
          }
          var G__51193 = cljs.core.next.call(null, seq__51168_51186__$1);
          var G__51194 = null;
          var G__51195 = 0;
          var G__51196 = 0;
          seq__51168_51176 = G__51193;
          chunk__51169_51177 = G__51194;
          count__51170_51178 = G__51195;
          i__51171_51179 = G__51196;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__51172_51197 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__51173_51198 = null;
  var count__51174_51199 = 0;
  var i__51175_51200 = 0;
  while (true) {
    if (i__51175_51200 < count__51174_51199) {
      var n_51201 = cljs.core._nth.call(null, chunk__51173_51198, i__51175_51200);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_51201;
        goog.events.fireListeners(n_51201, evt.type, false, evt);
      }
      var G__51202 = seq__51172_51197;
      var G__51203 = chunk__51173_51198;
      var G__51204 = count__51174_51199;
      var G__51205 = i__51175_51200 + 1;
      seq__51172_51197 = G__51202;
      chunk__51173_51198 = G__51203;
      count__51174_51199 = G__51204;
      i__51175_51200 = G__51205;
      continue;
    } else {
      var temp__4126__auto___51206 = cljs.core.seq.call(null, seq__51172_51197);
      if (temp__4126__auto___51206) {
        var seq__51172_51207__$1 = temp__4126__auto___51206;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__51172_51207__$1)) {
          var c__4295__auto___51208 = cljs.core.chunk_first.call(null, seq__51172_51207__$1);
          var G__51209 = cljs.core.chunk_rest.call(null, seq__51172_51207__$1);
          var G__51210 = c__4295__auto___51208;
          var G__51211 = cljs.core.count.call(null, c__4295__auto___51208);
          var G__51212 = 0;
          seq__51172_51197 = G__51209;
          chunk__51173_51198 = G__51210;
          count__51174_51199 = G__51211;
          i__51175_51200 = G__51212;
          continue;
        } else {
          var n_51213 = cljs.core.first.call(null, seq__51172_51207__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_51213;
            goog.events.fireListeners(n_51213, evt.type, false, evt);
          }
          var G__51214 = cljs.core.next.call(null, seq__51172_51207__$1);
          var G__51215 = null;
          var G__51216 = 0;
          var G__51217 = 0;
          seq__51172_51197 = G__51214;
          chunk__51173_51198 = G__51215;
          count__51174_51199 = G__51216;
          i__51175_51200 = G__51217;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return evt.returnValue_;
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt);
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3527__auto__ = o.getParentEventTarget;
  if (cljs.core.truth_(and__3527__auto__)) {
    return o.dispatchEvent;
  } else {
    return and__3527__auto__;
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map);
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(cljs.core.name.call(null, type));
    var seq__51224_51230 = cljs.core.seq.call(null, evt_map);
    var chunk__51225_51231 = null;
    var count__51226_51232 = 0;
    var i__51227_51233 = 0;
    while (true) {
      if (i__51227_51233 < count__51226_51232) {
        var vec__51228_51234 = cljs.core._nth.call(null, chunk__51225_51231, i__51227_51233);
        var k_51235 = cljs.core.nth.call(null, vec__51228_51234, 0, null);
        var v_51236 = cljs.core.nth.call(null, vec__51228_51234, 1, null);
        evt[k_51235] = v_51236;
        var G__51237 = seq__51224_51230;
        var G__51238 = chunk__51225_51231;
        var G__51239 = count__51226_51232;
        var G__51240 = i__51227_51233 + 1;
        seq__51224_51230 = G__51237;
        chunk__51225_51231 = G__51238;
        count__51226_51232 = G__51239;
        i__51227_51233 = G__51240;
        continue;
      } else {
        var temp__4126__auto___51241 = cljs.core.seq.call(null, seq__51224_51230);
        if (temp__4126__auto___51241) {
          var seq__51224_51242__$1 = temp__4126__auto___51241;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__51224_51242__$1)) {
            var c__4295__auto___51243 = cljs.core.chunk_first.call(null, seq__51224_51242__$1);
            var G__51244 = cljs.core.chunk_rest.call(null, seq__51224_51242__$1);
            var G__51245 = c__4295__auto___51243;
            var G__51246 = cljs.core.count.call(null, c__4295__auto___51243);
            var G__51247 = 0;
            seq__51224_51230 = G__51244;
            chunk__51225_51231 = G__51245;
            count__51226_51232 = G__51246;
            i__51227_51233 = G__51247;
            continue;
          } else {
            var vec__51229_51248 = cljs.core.first.call(null, seq__51224_51242__$1);
            var k_51249 = cljs.core.nth.call(null, vec__51229_51248, 0, null);
            var v_51250 = cljs.core.nth.call(null, vec__51229_51248, 1, null);
            evt[k_51249] = v_51250;
            var G__51251 = cljs.core.next.call(null, seq__51224_51242__$1);
            var G__51252 = null;
            var G__51253 = 0;
            var G__51254 = 0;
            seq__51224_51230 = G__51251;
            chunk__51225_51231 = G__51252;
            count__51226_51232 = G__51253;
            i__51227_51233 = G__51254;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt);
    } else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt);
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_;
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key);
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = cljs.core.name.call(null, type);
  return cljs.core.mapcat.call(null, function(type__$1) {
    return function(p1__51255_SHARP_) {
      return goog.events.getListeners(p1__51255_SHARP_, type__$1, false);
    };
  }(type__$1), domina.nodes.call(null, content));
};
goog.provide("clustermap.formats.string");
goog.require("cljs.core");
clustermap.formats.string.pluralize = function() {
  var pluralize__delegate = function(n, word, p__46508) {
    var vec__46510 = p__46508;
    var irreg = cljs.core.nth.call(null, vec__46510, 0, null);
    if (n === 1) {
      return word;
    } else {
      var or__3539__auto__ = irreg;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(word) + "s";
      }
    }
  };
  var pluralize = function(n, word, var_args) {
    var p__46508 = null;
    if (arguments.length > 2) {
      p__46508 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return pluralize__delegate.call(this, n, word, p__46508);
  };
  pluralize.cljs$lang$maxFixedArity = 2;
  pluralize.cljs$lang$applyTo = function(arglist__46511) {
    var n = cljs.core.first(arglist__46511);
    arglist__46511 = cljs.core.next(arglist__46511);
    var word = cljs.core.first(arglist__46511);
    var p__46508 = cljs.core.rest(arglist__46511);
    return pluralize__delegate(n, word, p__46508);
  };
  pluralize.cljs$core$IFn$_invoke$arity$variadic = pluralize__delegate;
  return pluralize;
}();
goog.provide("clustermap.components.reset_selection_button");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
clustermap.components.reset_selection_button.reset_selection_button = function reset_selection_button(path_fn) {
  return React.DOM.a({"href":path_fn.call(null, null, null)}, React.DOM.button({"className":"btn btn-link btn-reset", "type":"reset"}, "Reset to UK wide"));
};
goog.provide("clustermap.components.map_report");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.string");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.formats.string");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("domina.events");
goog.require("domina.events");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.string");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.map_report.full_report_button = function full_report_button(comm) {
  return React.DOM.button({"className":"btn", "type":"button", "onClick":function(e) {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), "lists"], null));
  }}, React.DOM.i({"className":"icon-lists-sm"}), "Full report");
};
clustermap.components.map_report.type_counts = function type_counts(site_stats) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783), function() {
    var G__46038 = site_stats;
    var G__46038__$1 = G__46038 == null ? null : (new cljs.core.Keyword(null, "portfolio_company_count", "portfolio_company_count", 1780206472)).cljs$core$IFn$_invoke$arity$1(G__46038);
    return G__46038__$1;
  }(), new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326), function() {
    var G__46039 = site_stats;
    var G__46039__$1 = G__46039 == null ? null : (new cljs.core.Keyword(null, "investor_company_count", "investor_company_count", 2333064920)).cljs$core$IFn$_invoke$arity$1(G__46039);
    return G__46039__$1;
  }(), new cljs.core.Keyword(null, "const-count", "const-count", 1728788887), function() {
    var G__46040 = site_stats;
    var G__46040__$1 = G__46040 == null ? null : (new cljs.core.Keyword(null, "constituency_count", "constituency_count", 621528264)).cljs$core$IFn$_invoke$arity$1(G__46040);
    return G__46040__$1;
  }()], null);
};
clustermap.components.map_report.all_portfolio_companies_summary_report = function all_portfolio_companies_summary_report(site_stats, comm) {
  var map__46072 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__46072__$1 = cljs.core.seq_QMARK_.call(null, map__46072) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46072) : map__46072;
  var const_count = cljs.core.get.call(null, map__46072__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__46072__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__46072__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t46073 !== "undefined") {
  } else {
    clustermap.components.map_report.t46073 = function(pc_count, ic_count, const_count, map__46072, comm, site_stats, all_portfolio_companies_summary_report, meta46074) {
      this.pc_count = pc_count;
      this.ic_count = ic_count;
      this.const_count = const_count;
      this.map__46072 = map__46072;
      this.comm = comm;
      this.site_stats = site_stats;
      this.all_portfolio_companies_summary_report = all_portfolio_companies_summary_report;
      this.meta46074 = meta46074;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t46073.cljs$lang$type = true;
    clustermap.components.map_report.t46073.cljs$lang$ctorStr = "clustermap.components.map-report/t46073";
    clustermap.components.map_report.t46073.cljs$lang$ctorPrWriter = function(map__46072, map__46072__$1, const_count, ic_count, pc_count) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.map-report/t46073");
      };
    }(map__46072, map__46072__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46073.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t46073.prototype.om$core$IRender$render$arity$1 = function(map__46072, map__46072__$1, const_count, ic_count, pc_count) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.div(null, React.DOM.header({"className":"secondary"}, React.DOM.h2(null, "All investor-backed companies"), React.DOM.h3(null, "UK wide")), React.DOM.ul(null, function() {
          var attrs46078 = clustermap.formats.number.fnum.call(null, self__.pc_count, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46078) ? sablono.interpreter.attributes.call(null, attrs46078) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46078) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Investor-backed companies")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46078), React.DOM.small(null, "Investor-backed companies")], null)));
        }(), function() {
          var attrs46083 = clustermap.formats.number.fnum.call(null, self__.ic_count, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46083) ? sablono.interpreter.attributes.call(null, attrs46083) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46083) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Investors")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46083), React.DOM.small(null, "Investors")], null)));
        }(), function() {
          var attrs46088 = clustermap.formats.number.fnum.call(null, self__.const_count, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46088) ? sablono.interpreter.attributes.call(null, attrs46088) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46088) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46089 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46089) ? sablono.interpreter.attributes.call(null, attrs46089) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46089) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46089)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46088), function() {
            var attrs46090 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46090) ? sablono.interpreter.attributes.call(null, attrs46090) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46090) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46090)], null)));
          }()], null)));
        }(), function() {
          var attrs46091 = clustermap.formats.money.fmoney.call(null, function() {
            var G__46101 = self__.site_stats;
            var G__46101__$1 = G__46101 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__46101);
            var G__46101__$2 = G__46101__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46101__$1);
            return G__46101__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46091) ? sablono.interpreter.attributes.call(null, attrs46091) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46091) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46091), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs46096 = clustermap.formats.number.fnum.call(null, function() {
            var G__46102 = self__.site_stats;
            var G__46102__$1 = G__46102 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__46102);
            var G__46102__$2 = G__46102__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46102__$1);
            return G__46102__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46096) ? sablono.interpreter.attributes.call(null, attrs46096) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46096) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46096), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm)));
      };
    }(map__46072, map__46072__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46073.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46072, map__46072__$1, const_count, ic_count, pc_count) {
      return function(_46075) {
        var self__ = this;
        var _46075__$1 = this;
        return self__.meta46074;
      };
    }(map__46072, map__46072__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46073.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46072, map__46072__$1, const_count, ic_count, pc_count) {
      return function(_46075, meta46074__$1) {
        var self__ = this;
        var _46075__$1 = this;
        return new clustermap.components.map_report.t46073(self__.pc_count, self__.ic_count, self__.const_count, self__.map__46072, self__.comm, self__.site_stats, self__.all_portfolio_companies_summary_report, meta46074__$1);
      };
    }(map__46072, map__46072__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t46073 = function(map__46072, map__46072__$1, const_count, ic_count, pc_count) {
      return function __GT_t46073(pc_count__$1, ic_count__$1, const_count__$1, map__46072__$2, comm__$1, site_stats__$1, all_portfolio_companies_summary_report__$1, meta46074) {
        return new clustermap.components.map_report.t46073(pc_count__$1, ic_count__$1, const_count__$1, map__46072__$2, comm__$1, site_stats__$1, all_portfolio_companies_summary_report__$1, meta46074);
      };
    }(map__46072, map__46072__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t46073(pc_count, ic_count, const_count, map__46072__$1, comm, site_stats, all_portfolio_companies_summary_report, null);
};
clustermap.components.map_report.portfolio_company_report = function portfolio_company_report(portfolio_company, site_stats, comm, path_fn) {
  var map__46128 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__46128__$1 = cljs.core.seq_QMARK_.call(null, map__46128) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46128) : map__46128;
  var const_count = cljs.core.get.call(null, map__46128__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__46128__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__46128__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t46129 !== "undefined") {
  } else {
    clustermap.components.map_report.t46129 = function(pc_count, ic_count, const_count, map__46128, path_fn, comm, site_stats, portfolio_company, portfolio_company_report, meta46130) {
      this.pc_count = pc_count;
      this.ic_count = ic_count;
      this.const_count = const_count;
      this.map__46128 = map__46128;
      this.path_fn = path_fn;
      this.comm = comm;
      this.site_stats = site_stats;
      this.portfolio_company = portfolio_company;
      this.portfolio_company_report = portfolio_company_report;
      this.meta46130 = meta46130;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t46129.cljs$lang$type = true;
    clustermap.components.map_report.t46129.cljs$lang$ctorStr = "clustermap.components.map-report/t46129";
    clustermap.components.map_report.t46129.cljs$lang$ctorPrWriter = function(map__46128, map__46128__$1, const_count, ic_count, pc_count) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.map-report/t46129");
      };
    }(map__46128, map__46128__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46129.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t46129.prototype.om$core$IRender$render$arity$1 = function(map__46128, map__46128__$1, const_count, ic_count, pc_count) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.div(null, React.DOM.header({"className":"secondary"}, React.DOM.h2(null, "Investor-backed company"), function() {
          var attrs46134 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.portfolio_company);
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs46134) ? sablono.interpreter.attributes.call(null, attrs46134) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46134) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46134)], null)));
        }(), sablono.interpreter.interpret.call(null, clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn))), React.DOM.ul(null, function() {
          var attrs46135 = clustermap.formats.number.fnum.call(null, self__.ic_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46135) ? sablono.interpreter.attributes.call(null, attrs46135) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46135) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46136 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46136) ? sablono.interpreter.attributes.call(null, attrs46136) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46136) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46136)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46135), function() {
            var attrs46137 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46137) ? sablono.interpreter.attributes.call(null, attrs46137) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46137) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46137)], null)));
          }()], null)));
        }(), function() {
          var attrs46138 = clustermap.formats.number.fnum.call(null, self__.const_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46138) ? sablono.interpreter.attributes.call(null, attrs46138) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46138) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46139 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46139) ? sablono.interpreter.attributes.call(null, attrs46139) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46139) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46139)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46138), function() {
            var attrs46140 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46140) ? sablono.interpreter.attributes.call(null, attrs46140) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46140) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46140)], null)));
          }()], null)));
        }(), function() {
          var attrs46141 = clustermap.formats.money.fmoney.call(null, function() {
            var G__46151 = self__.site_stats;
            var G__46151__$1 = G__46151 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__46151);
            var G__46151__$2 = G__46151__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46151__$1);
            return G__46151__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46141) ? sablono.interpreter.attributes.call(null, attrs46141) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46141) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46141), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs46146 = clustermap.formats.number.fnum.call(null, function() {
            var G__46152 = self__.site_stats;
            var G__46152__$1 = G__46152 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__46152);
            var G__46152__$2 = G__46152__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46152__$1);
            return G__46152__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46146) ? sablono.interpreter.attributes.call(null, attrs46146) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46146) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46146), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm)));
      };
    }(map__46128, map__46128__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46129.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46128, map__46128__$1, const_count, ic_count, pc_count) {
      return function(_46131) {
        var self__ = this;
        var _46131__$1 = this;
        return self__.meta46130;
      };
    }(map__46128, map__46128__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46129.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46128, map__46128__$1, const_count, ic_count, pc_count) {
      return function(_46131, meta46130__$1) {
        var self__ = this;
        var _46131__$1 = this;
        return new clustermap.components.map_report.t46129(self__.pc_count, self__.ic_count, self__.const_count, self__.map__46128, self__.path_fn, self__.comm, self__.site_stats, self__.portfolio_company, self__.portfolio_company_report, meta46130__$1);
      };
    }(map__46128, map__46128__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t46129 = function(map__46128, map__46128__$1, const_count, ic_count, pc_count) {
      return function __GT_t46129(pc_count__$1, ic_count__$1, const_count__$1, map__46128__$2, path_fn__$1, comm__$1, site_stats__$1, portfolio_company__$1, portfolio_company_report__$1, meta46130) {
        return new clustermap.components.map_report.t46129(pc_count__$1, ic_count__$1, const_count__$1, map__46128__$2, path_fn__$1, comm__$1, site_stats__$1, portfolio_company__$1, portfolio_company_report__$1, meta46130);
      };
    }(map__46128, map__46128__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t46129(pc_count, ic_count, const_count, map__46128__$1, path_fn, comm, site_stats, portfolio_company, portfolio_company_report, null);
};
clustermap.components.map_report.investor_company_report = function investor_company_report(investor_company, site_stats, comm, path_fn) {
  var map__46178 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__46178__$1 = cljs.core.seq_QMARK_.call(null, map__46178) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46178) : map__46178;
  var const_count = cljs.core.get.call(null, map__46178__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__46178__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__46178__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t46179 !== "undefined") {
  } else {
    clustermap.components.map_report.t46179 = function(pc_count, ic_count, const_count, map__46178, path_fn, comm, site_stats, investor_company, investor_company_report, meta46180) {
      this.pc_count = pc_count;
      this.ic_count = ic_count;
      this.const_count = const_count;
      this.map__46178 = map__46178;
      this.path_fn = path_fn;
      this.comm = comm;
      this.site_stats = site_stats;
      this.investor_company = investor_company;
      this.investor_company_report = investor_company_report;
      this.meta46180 = meta46180;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t46179.cljs$lang$type = true;
    clustermap.components.map_report.t46179.cljs$lang$ctorStr = "clustermap.components.map-report/t46179";
    clustermap.components.map_report.t46179.cljs$lang$ctorPrWriter = function(map__46178, map__46178__$1, const_count, ic_count, pc_count) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.map-report/t46179");
      };
    }(map__46178, map__46178__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46179.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t46179.prototype.om$core$IRender$render$arity$1 = function(map__46178, map__46178__$1, const_count, ic_count, pc_count) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.div(null, React.DOM.header({"className":"secondary"}, React.DOM.h2(null, "Investor"), function() {
          var attrs46184 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.investor_company);
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs46184) ? sablono.interpreter.attributes.call(null, attrs46184) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46184) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46184)], null)));
        }(), sablono.interpreter.interpret.call(null, clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn))), React.DOM.ul(null, function() {
          var attrs46185 = clustermap.formats.number.fnum.call(null, self__.pc_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46185) ? sablono.interpreter.attributes.call(null, attrs46185) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46185) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46186 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46186) ? sablono.interpreter.attributes.call(null, attrs46186) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46186) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46186)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46185), function() {
            var attrs46187 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46187) ? sablono.interpreter.attributes.call(null, attrs46187) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46187) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46187)], null)));
          }()], null)));
        }(), function() {
          var attrs46188 = clustermap.formats.number.fnum.call(null, self__.const_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46188) ? sablono.interpreter.attributes.call(null, attrs46188) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46188) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46189 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46189) ? sablono.interpreter.attributes.call(null, attrs46189) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46189) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46189)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46188), function() {
            var attrs46190 = clustermap.formats.string.pluralize.call(null, self__.const_count, "Constituency", "Constituencies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46190) ? sablono.interpreter.attributes.call(null, attrs46190) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46190) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46190)], null)));
          }()], null)));
        }(), function() {
          var attrs46191 = clustermap.formats.money.fmoney.call(null, function() {
            var G__46201 = self__.site_stats;
            var G__46201__$1 = G__46201 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__46201);
            var G__46201__$2 = G__46201__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46201__$1);
            return G__46201__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46191) ? sablono.interpreter.attributes.call(null, attrs46191) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46191) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46191), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs46196 = clustermap.formats.number.fnum.call(null, function() {
            var G__46202 = self__.site_stats;
            var G__46202__$1 = G__46202 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__46202);
            var G__46202__$2 = G__46202__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46202__$1);
            return G__46202__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46196) ? sablono.interpreter.attributes.call(null, attrs46196) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46196) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46196), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm)));
      };
    }(map__46178, map__46178__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46179.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46178, map__46178__$1, const_count, ic_count, pc_count) {
      return function(_46181) {
        var self__ = this;
        var _46181__$1 = this;
        return self__.meta46180;
      };
    }(map__46178, map__46178__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46179.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46178, map__46178__$1, const_count, ic_count, pc_count) {
      return function(_46181, meta46180__$1) {
        var self__ = this;
        var _46181__$1 = this;
        return new clustermap.components.map_report.t46179(self__.pc_count, self__.ic_count, self__.const_count, self__.map__46178, self__.path_fn, self__.comm, self__.site_stats, self__.investor_company, self__.investor_company_report, meta46180__$1);
      };
    }(map__46178, map__46178__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t46179 = function(map__46178, map__46178__$1, const_count, ic_count, pc_count) {
      return function __GT_t46179(pc_count__$1, ic_count__$1, const_count__$1, map__46178__$2, path_fn__$1, comm__$1, site_stats__$1, investor_company__$1, investor_company_report__$1, meta46180) {
        return new clustermap.components.map_report.t46179(pc_count__$1, ic_count__$1, const_count__$1, map__46178__$2, path_fn__$1, comm__$1, site_stats__$1, investor_company__$1, investor_company_report__$1, meta46180);
      };
    }(map__46178, map__46178__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t46179(pc_count, ic_count, const_count, map__46178__$1, path_fn, comm, site_stats, investor_company, investor_company_report, null);
};
clustermap.components.map_report.constituency_report = function constituency_report(constituency, site_stats, comm, path_fn) {
  var map__46232 = clustermap.components.map_report.type_counts.call(null, site_stats);
  var map__46232__$1 = cljs.core.seq_QMARK_.call(null, map__46232) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46232) : map__46232;
  var const_count = cljs.core.get.call(null, map__46232__$1, new cljs.core.Keyword(null, "const-count", "const-count", 1728788887));
  var ic_count = cljs.core.get.call(null, map__46232__$1, new cljs.core.Keyword(null, "ic-count", "ic-count", 2672077326));
  var pc_count = cljs.core.get.call(null, map__46232__$1, new cljs.core.Keyword(null, "pc-count", "pc-count", 1986847783));
  if (typeof clustermap.components.map_report.t46233 !== "undefined") {
  } else {
    clustermap.components.map_report.t46233 = function(pc_count, ic_count, const_count, map__46232, path_fn, comm, site_stats, constituency, constituency_report, meta46234) {
      this.pc_count = pc_count;
      this.ic_count = ic_count;
      this.const_count = const_count;
      this.map__46232 = map__46232;
      this.path_fn = path_fn;
      this.comm = comm;
      this.site_stats = site_stats;
      this.constituency = constituency;
      this.constituency_report = constituency_report;
      this.meta46234 = meta46234;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map_report.t46233.cljs$lang$type = true;
    clustermap.components.map_report.t46233.cljs$lang$ctorStr = "clustermap.components.map-report/t46233";
    clustermap.components.map_report.t46233.cljs$lang$ctorPrWriter = function(map__46232, map__46232__$1, const_count, ic_count, pc_count) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.map-report/t46233");
      };
    }(map__46232, map__46232__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46233.prototype.om$core$IRender$ = true;
    clustermap.components.map_report.t46233.prototype.om$core$IRender$render$arity$1 = function(map__46232, map__46232__$1, const_count, ic_count, pc_count) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.div(null, React.DOM.header({"className":"secondary"}, React.DOM.h2(null, "Constituency"), function() {
          var attrs46238 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs46238) ? sablono.interpreter.attributes.call(null, attrs46238) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46238) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.br(null), cljs.core.truth_(function() {
            var or__3539__auto__ = (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return(new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            }
          }()) ? React.DOM.small(null, "(", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ", ", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ")") : null], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46238), React.DOM.br(null), cljs.core.truth_(function() {
            var or__3539__auto__ = (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return(new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency);
            }
          }()) ? React.DOM.small(null, "(", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ", ", sablono.interpreter.interpret.call(null, (new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.constituency)), ")") : null], null)));
        }(), sablono.interpreter.interpret.call(null, clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn))), React.DOM.ul(null, function() {
          var attrs46243 = clustermap.formats.number.fnum.call(null, self__.pc_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46243) ? sablono.interpreter.attributes.call(null, attrs46243) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46243) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46244 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46244) ? sablono.interpreter.attributes.call(null, attrs46244) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46244) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46244)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46243), function() {
            var attrs46245 = clustermap.formats.string.pluralize.call(null, self__.pc_count, "Investor-backed company", "Investor-backed companies");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46245) ? sablono.interpreter.attributes.call(null, attrs46245) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46245) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46245)], null)));
          }()], null)));
        }(), function() {
          var attrs46246 = clustermap.formats.number.fnum.call(null, self__.ic_count);
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46246) ? sablono.interpreter.attributes.call(null, attrs46246) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46246) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var attrs46247 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46247) ? sablono.interpreter.attributes.call(null, attrs46247) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46247) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46247)], null)));
          }()], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46246), function() {
            var attrs46248 = clustermap.formats.string.pluralize.call(null, self__.ic_count, "Investor");
            return cljs.core.apply.call(null, React.DOM.small, cljs.core.map_QMARK_.call(null, attrs46248) ? sablono.interpreter.attributes.call(null, attrs46248) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46248) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46248)], null)));
          }()], null)));
        }(), function() {
          var attrs46249 = clustermap.formats.money.fmoney.call(null, function() {
            var G__46259 = self__.site_stats;
            var G__46259__$1 = G__46259 == null ? null : (new cljs.core.Keyword(null, "turnover", "turnover", 1148922435)).cljs$core$IFn$_invoke$arity$1(G__46259);
            var G__46259__$2 = G__46259__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46259__$1);
            return G__46259__$2;
          }(), new cljs.core.Keyword(null, "sf", "sf", 1013907909), 2, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46249) ? sablono.interpreter.attributes.call(null, attrs46249) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46249) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total revenue")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46249), React.DOM.small(null, "Total revenue")], null)));
        }(), function() {
          var attrs46254 = clustermap.formats.number.fnum.call(null, function() {
            var G__46260 = self__.site_stats;
            var G__46260__$1 = G__46260 == null ? null : (new cljs.core.Keyword(null, "employee_count", "employee_count", 2542621616)).cljs$core$IFn$_invoke$arity$1(G__46260);
            var G__46260__$2 = G__46260__$1 == null ? null : (new cljs.core.Keyword(null, "total", "total", 1124454070)).cljs$core$IFn$_invoke$arity$1(G__46260__$1);
            return G__46260__$2;
          }(), new cljs.core.Keyword(null, "dec", "dec", 1014003572), 0, new cljs.core.Keyword(null, "default", "default", 2558708147), "-");
          return cljs.core.apply.call(null, React.DOM.li, cljs.core.map_QMARK_.call(null, attrs46254) ? sablono.interpreter.attributes.call(null, attrs46254) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46254) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.small(null, "Total employees")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46254), React.DOM.small(null, "Total employees")], null)));
        }()), sablono.interpreter.interpret.call(null, clustermap.components.map_report.full_report_button.call(null, self__.comm)));
      };
    }(map__46232, map__46232__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46233.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46232, map__46232__$1, const_count, ic_count, pc_count) {
      return function(_46235) {
        var self__ = this;
        var _46235__$1 = this;
        return self__.meta46234;
      };
    }(map__46232, map__46232__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.t46233.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46232, map__46232__$1, const_count, ic_count, pc_count) {
      return function(_46235, meta46234__$1) {
        var self__ = this;
        var _46235__$1 = this;
        return new clustermap.components.map_report.t46233(self__.pc_count, self__.ic_count, self__.const_count, self__.map__46232, self__.path_fn, self__.comm, self__.site_stats, self__.constituency, self__.constituency_report, meta46234__$1);
      };
    }(map__46232, map__46232__$1, const_count, ic_count, pc_count);
    clustermap.components.map_report.__GT_t46233 = function(map__46232, map__46232__$1, const_count, ic_count, pc_count) {
      return function __GT_t46233(pc_count__$1, ic_count__$1, const_count__$1, map__46232__$2, path_fn__$1, comm__$1, site_stats__$1, constituency__$1, constituency_report__$1, meta46234) {
        return new clustermap.components.map_report.t46233(pc_count__$1, ic_count__$1, const_count__$1, map__46232__$2, path_fn__$1, comm__$1, site_stats__$1, constituency__$1, constituency_report__$1, meta46234);
      };
    }(map__46232, map__46232__$1, const_count, ic_count, pc_count);
  }
  return new clustermap.components.map_report.t46233(pc_count, ic_count, const_count, map__46232__$1, path_fn, comm, site_stats, constituency, constituency_report, null);
};
clustermap.components.map_report.map_report_component = function map_report_component(data, owner) {
  var map__46265 = om.core.get_shared.call(null, owner);
  var map__46265__$1 = cljs.core.seq_QMARK_.call(null, map__46265) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46265) : map__46265;
  var path_fn = cljs.core.get.call(null, map__46265__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__46265__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "map", "map", 1014012110));
  var type = cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.Keyword(null, "type", "type", 1017479852)], null));
  var value = cljs.core.get_in.call(null, data, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
  var site_stats = (new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", 4568560312)).cljs$core$IFn$_invoke$arity$1(data);
  var pred__46266 = cljs.core._EQ__EQ_;
  var expr__46267 = type;
  if (cljs.core.truth_(pred__46266.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__46267))) {
    return clustermap.components.map_report.portfolio_company_report.call(null, value, site_stats, comm, path_fn__$1);
  } else {
    if (cljs.core.truth_(pred__46266.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__46267))) {
      return clustermap.components.map_report.investor_company_report.call(null, value, site_stats, comm, path_fn__$1);
    } else {
      if (cljs.core.truth_(pred__46266.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__46267))) {
        return clustermap.components.map_report.constituency_report.call(null, value, site_stats, comm, path_fn__$1);
      } else {
        return clustermap.components.map_report.all_portfolio_companies_summary_report.call(null, site_stats, comm);
      }
    }
  }
};
clustermap.components.map_report.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.map_report.map_report_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared, new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj50698 = {};
  return obj50698;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = secretary.core.route_matches[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = secretary.core.route_matches["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj50700 = {};
  return obj50700;
}();
secretary.core.route_value = function route_value(this$) {
  if (function() {
    var and__3527__auto__ = this$;
    if (and__3527__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__3527__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4166__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3539__auto__ = secretary.core.route_value[goog.typeOf(x__4166__auto__)];
      if (or__3539__auto__) {
        return or__3539__auto__;
      } else {
        var or__3539__auto____$1 = secretary.core.route_value["_"];
        if (or__3539__auto____$1) {
          return or__3539__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj50702 = {};
  return obj50702;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = secretary.core.render_route[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = secretary.core.render_route["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3527__auto__ = this$;
      if (and__3527__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3527__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4166__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3539__auto__ = secretary.core.render_route[goog.typeOf(x__4166__auto__)];
        if (or__3539__auto__) {
          return or__3539__auto__;
        } else {
          var or__3539__auto____$1 = secretary.core.render_route["_"];
          if (or__3539__auto____$1) {
            return or__3539__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.encode_pair = function() {
  var method_table__4405__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4406__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4407__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4408__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4409__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("encode-pair", function(method_table__4405__auto__, prefer_table__4406__auto__, method_cache__4407__auto__, cached_hierarchy__4408__auto__, hierarchy__4409__auto__) {
    return function(p__50703) {
      var vec__50704 = p__50703;
      var k = cljs.core.nth.call(null, vec__50704, 0, null);
      var v = cljs.core.nth.call(null, vec__50704, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
        return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", 1410725665);
      } else {
        if (function() {
          var or__3539__auto__ = cljs.core.map_QMARK_.call(null, v);
          if (or__3539__auto__) {
            return or__3539__auto__;
          } else {
            var G__50706 = v;
            if (G__50706) {
              var bit__4189__auto__ = G__50706.cljs$lang$protocol_mask$partition0$ & 67108864;
              if (bit__4189__auto__ || G__50706.cljs$core$IRecord$) {
                return true;
              } else {
                if (!G__50706.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__50706);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__50706);
            }
          }
        }()) {
          return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", 572371848);
        } else {
          return null;
        }
      }
    };
  }(method_table__4405__auto__, prefer_table__4406__auto__, method_cache__4407__auto__, cached_hierarchy__4408__auto__, hierarchy__4409__auto__), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4409__auto__, method_table__4405__auto__, prefer_table__4406__auto__, method_cache__4407__auto__, cached_hierarchy__4408__auto__);
}();
secretary.core.key_index = function() {
  var key_index = null;
  var key_index__1 = function(k) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[]";
  };
  var key_index__2 = function(k, index) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "[" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(index) + "]";
  };
  key_index = function(k, index) {
    switch(arguments.length) {
      case 1:
        return key_index__1.call(this, k);
      case 2:
        return key_index__2.call(this, k, index);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  key_index.cljs$core$IFn$_invoke$arity$1 = key_index__1;
  key_index.cljs$core$IFn$_invoke$arity$2 = key_index__2;
  return key_index;
}();
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", 1410725665), function(p__50707) {
  var vec__50708 = p__50707;
  var k = cljs.core.nth.call(null, vec__50708, 0, null);
  var v = cljs.core.nth.call(null, vec__50708, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__50708, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__50708, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", 572371848), function(p__50709) {
  var vec__50710 = p__50709;
  var k = cljs.core.nth.call(null, vec__50710, 0, null);
  var v = cljs.core.nth.call(null, vec__50710, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__50710, k, v) {
    return function(p__50711) {
      var vec__50712 = p__50711;
      var ik = cljs.core.nth.call(null, vec__50712, 0, null);
      var iv = cljs.core.nth.call(null, vec__50712, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__50710, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", 2558708147), function(p__50713) {
  var vec__50714 = p__50713;
  var k = cljs.core.nth.call(null, vec__50714, 0, null);
  var v = cljs.core.nth.call(null, vec__50714, 1, null);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, k)) + "\x3d" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.encode.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)));
});
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__50717) {
      var vec__50718 = p__50717;
      var _ = cljs.core.nth.call(null, vec__50718, 0, null);
      var part = cljs.core.nth.call(null, vec__50718, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return part;
          } else {
            return null;
          }
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__50720 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__50720, 0, null);
  var key = cljs.core.nth.call(null, vec__50720, 1, null);
  var path = cljs.core.nth.call(null, vec__50720, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__50722 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__50722, 0, null);
      var v = cljs.core.nth.call(null, vec__50722, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + "\\" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    } else {
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s__$1) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__50726) {
    var vec__50727 = p__50726;
    var re = cljs.core.nth.call(null, vec__50727, 0, null);
    var action = cljs.core.nth.call(null, vec__50727, 1, null);
    var temp__4126__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__50728 = temp__4126__auto__;
      var m = cljs.core.nth.call(null, vec__50728, 0, null);
      var c = cljs.core.nth.call(null, vec__50728, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__50731 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__50731, 0, null);
      var vec__50732 = cljs.core.nth.call(null, vec__50731, 1, null);
      var r = cljs.core.nth.call(null, vec__50732, 0, null);
      var p = cljs.core.nth.call(null, vec__50732, 1, null);
      var G__50733 = s__$2;
      var G__50734 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(r);
      var G__50735 = cljs.core.conj.call(null, params, p);
      s__$1 = G__50733;
      pattern = G__50734;
      params = G__50735;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, "^" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pattern) + "$"), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", 1013904284);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__50741 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__50741, 0, null);
  var params = cljs.core.nth.call(null, vec__50741, 1, null);
  if (typeof secretary.core.t50742 !== "undefined") {
  } else {
    secretary.core.t50742 = function(params, re, vec__50741, clauses, orig_route, compile_route, meta50743) {
      this.params = params;
      this.re = re;
      this.vec__50741 = vec__50741;
      this.clauses = clauses;
      this.orig_route = orig_route;
      this.compile_route = compile_route;
      this.meta50743 = meta50743;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t50742.cljs$lang$type = true;
    secretary.core.t50742.cljs$lang$ctorStr = "secretary.core/t50742";
    secretary.core.t50742.cljs$lang$ctorPrWriter = function(clauses, vec__50741, re, params) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "secretary.core/t50742");
      };
    }(clauses, vec__50741, re, params);
    secretary.core.t50742.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t50742.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__50741, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4126__auto__)) {
          var vec__50745 = temp__4126__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__50745, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__50745, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__50741, re, params);
    secretary.core.t50742.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t50742.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__50741, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__50741, re, params);
    secretary.core.t50742.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__50741, re, params) {
      return function(_50744) {
        var self__ = this;
        var _50744__$1 = this;
        return self__.meta50743;
      };
    }(clauses, vec__50741, re, params);
    secretary.core.t50742.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__50741, re, params) {
      return function(_50744, meta50743__$1) {
        var self__ = this;
        var _50744__$1 = this;
        return new secretary.core.t50742(self__.params, self__.re, self__.vec__50741, self__.clauses, self__.orig_route, self__.compile_route, meta50743__$1);
      };
    }(clauses, vec__50741, re, params);
    secretary.core.__GT_t50742 = function(clauses, vec__50741, re, params) {
      return function __GT_t50742(params__$1, re__$1, vec__50741__$1, clauses__$1, orig_route__$1, compile_route__$1, meta50743) {
        return new secretary.core.t50742(params__$1, re__$1, vec__50741__$1, clauses__$1, orig_route__$1, compile_route__$1, meta50743);
      };
    }(clauses, vec__50741, re, params);
  }
  return new secretary.core.t50742(params, re, vec__50741, clauses, orig_route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__50747 = obj;
      if (G__50747) {
        var bit__4189__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3539__auto__ = bit__4189__auto__;
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return G__50747.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__50747.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__50747);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__50747);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__50748) {
    var obj = cljs.core.first(arglist__50748);
    var args = cljs.core.rest(arglist__50748);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__50751) {
      var vec__50752 = p__50751;
      var x = cljs.core.nth.call(null, vec__50752, 0, null);
      var _ = cljs.core.nth.call(null, vec__50752, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__50755) {
    var vec__50756 = p__50755;
    var compiled_route = cljs.core.nth.call(null, vec__50756, 0, null);
    var action = cljs.core.nth.call(null, vec__50756, 1, null);
    var temp__4126__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var params = temp__4126__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", 3885920680), action, new cljs.core.Keyword(null, "params", "params", 4313443576), params, new cljs.core.Keyword(null, "route", "route", 1122608571), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 1122608571)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__50759 = clojure.string.split.call(null, uri, /\?/);
  var uri_path = cljs.core.nth.call(null, vec__50759, 0, null);
  var query_string = cljs.core.nth.call(null, vec__50759, 1, null);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__50760 = secretary.core.locate_route.call(null, uri_path);
  var map__50760__$1 = cljs.core.seq_QMARK_.call(null, map__50760) ? cljs.core.apply.call(null, cljs.core.hash_map, map__50760) : map__50760;
  var params = cljs.core.get.call(null, map__50760__$1, new cljs.core.Keyword(null, "params", "params", 4313443576));
  var action = cljs.core.get.call(null, map__50760__$1, new cljs.core.Keyword(null, "action", "action", 3885920680));
  var action__$1 = function() {
    var or__3539__auto__ = action;
    if (cljs.core.truth_(or__3539__auto__)) {
      return or__3539__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4126__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__50761 = temp__4126__auto__;
    var _ = cljs.core.nth.call(null, vec__50761, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__50761, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__50762 = params;
  var map__50762__$1 = cljs.core.seq_QMARK_.call(null, map__50762) ? cljs.core.apply.call(null, cljs.core.hash_map, map__50762) : map__50762;
  var m = map__50762__$1;
  var query_params = cljs.core.get.call(null, map__50762__$1, new cljs.core.Keyword(null, "query-params", "query-params", 1080249757));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__50762, map__50762__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.deref.call(null, a).call(null, lookup);
      var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
      }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
      return replacement;
    };
  }(map__50762, map__50762__$1, m, query_params, a));
  var path__$1 = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836)], null))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path);
  var temp__4124__auto__ = function() {
    var and__3527__auto__ = query_params;
    if (cljs.core.truth_(and__3527__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3527__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var query_string = temp__4124__auto__;
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(path__$1) + "?" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_string);
  } else {
    return path__$1;
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = "\x3e~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if (specials.indexOf(query.slice(-1)) >= 0) {
      query += " * ";
    } else {
      query += " ";
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e));
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if (inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if (specials.indexOf(tv) < 0) {
          currentPart.tag = tv;
        } else {
          currentPart.oper = tv;
        }
        inTag = -1;
      }
    };
    var endId = function() {
      if (inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1;
      }
    };
    var endClass = function() {
      if (inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1;
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass();
    };
    var endPart = function() {
      endAll();
      if (inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)});
      }
      currentPart.loops = currentPart.pseudos.length || (currentPart.attrs.length || currentPart.classes.length);
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if (currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase();
      }
      if (queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query;
      }
      queryParts.push(currentPart);
      currentPart = null;
    };
    for (;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if (lc == "\\") {
        continue;
      }
      if (!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag;
        }};
        inTag = x;
      }
      if (inBrackets >= 0) {
        if (cc == "]") {
          if (!cp.attr) {
            cp.attr = ts(inBrackets + 1, x);
          } else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x);
          }
          var cmf = cp.matchFor;
          if (cmf) {
            if (cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1);
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1;
        } else {
          if (cc == "\x3d") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1;
          }
        }
      } else {
        if (inParens >= 0) {
          if (cc == ")") {
            if (inPseudo >= 0) {
              cp.value = ts(inParens + 1, x);
            }
            inPseudo = inParens = -1;
          }
        } else {
          if (cc == "#") {
            endAll();
            inId = x + 1;
          } else {
            if (cc == ".") {
              endAll();
              inClass = x;
            } else {
              if (cc == ":") {
                endAll();
                inPseudo = x;
              } else {
                if (cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {};
                } else {
                  if (cc == "(") {
                    if (inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp);
                    }
                    inParens = x;
                  } else {
                    if (cc == " " && lc != cc) {
                      endPart();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts;
  };
  var agree = function(first, second) {
    if (!first) {
      return second;
    }
    if (!second) {
      return first;
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments);
    };
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if (i) {
      r.push(i);
    }
    return r;
  }
  var isElement = function(n) {
    return 1 == n.nodeType;
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if (!elem) {
      return blank;
    }
    if (attr == "class") {
      return elem.className || blank;
    }
    if (attr == "for") {
      return elem.htmlFor || blank;
    }
    if (attr == "style") {
      return elem.style.cssText || blank;
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank;
  };
  var attrs = {"*\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0;
    };
  }, "^\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0;
    };
  }, "$\x3d":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length;
    };
  }, "~\x3d":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0;
    };
  }, "|\x3d":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0;
    };
  }, "\x3d":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value;
    };
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while (node = node[pSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var _lookRight = function(node) {
    while (node = node[nSibling]) {
      if (simpleNodeTest(node)) {
        return false;
      }
    }
    return true;
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if (!tret) {
      return-1;
    }
    var l = tret.length;
    if (cl == l && (ci >= 0 && cl >= 0)) {
      return ci;
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for (;te;te = te[nSibling]) {
      if (simpleNodeTest(te)) {
        te["_i"] = ++i;
        if (node === te) {
          ci = i;
        }
      }
    }
    return ci;
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2);
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2;
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"];
    };
  }, "first-child":function() {
    return _lookLeft;
  }, "last-child":function() {
    return _lookRight;
  }, "only-child":function(name, condition) {
    return function(node) {
      if (!_lookLeft(node)) {
        return false;
      }
      if (!_lookRight(node)) {
        return false;
      }
      return true;
    };
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for (var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if (nt === 1 || nt == 3) {
          return false;
        }
      }
      return true;
    };
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if (cz == '"' || cz == "'") {
      condition = condition.slice(1, -1);
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0;
    };
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if (p.tag != "*") {
      ignores.tag = 1;
    }
    if (!p.classes.length) {
      ignores.classes = 1;
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem);
    };
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10);
    }
    if (condition == "odd") {
      return isOdd;
    } else {
      if (condition == "even") {
        return isEven;
      }
    }
    if (condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if (pred > 0) {
        if (idx < 0) {
          idx = idx % pred && pred + idx % pred;
        } else {
          if (idx > 0) {
            if (idx >= pred) {
              lb = idx - idx % pred;
            }
            idx = idx % pred;
          }
        }
      } else {
        if (pred < 0) {
          pred *= -1;
          if (idx > 0) {
            ub = idx;
            idx = idx % pred;
          }
        }
      }
      if (pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && ((ub < 0 || i <= ub) && i % pred == idx);
        };
      } else {
        condition = idx;
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount;
    };
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if (clc == "class") {
      cond = "className";
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc];
    };
  } : function(cond) {
    return function(elem) {
      return elem && (elem.getAttribute && elem.hasAttribute(cond));
    };
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if (!query) {
      return goog.functions.TRUE;
    }
    ignores = ignores || {};
    var ff = null;
    if (!ignores.el) {
      ff = agree(ff, isElement);
    }
    if (!ignores.tag) {
      if (query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag();
        });
      }
    }
    if (!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className);
        });
        ff.count = idx;
      });
    }
    if (!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if (pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value));
        }
      });
    }
    if (!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if (attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor);
        } else {
          if (a.length) {
            matcher = defaultGetter(a);
          }
        }
        if (matcher) {
          ff = agree(ff, matcher);
        }
      });
    }
    if (!ignores.id) {
      if (query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id;
        });
      }
    }
    if (!ff) {
      if (!("default" in ignores)) {
        ff = goog.functions.TRUE;
      }
    }
    return ff;
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while (node = node[nSibling]) {
        if (noNextElementSibling && !isElement(node)) {
          continue;
        }
        if ((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node);
        }
        break;
      }
      return ret;
    };
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while (te) {
        if (simpleNodeTest(te)) {
          if (bag && !_isUnique(te, bag)) {
            break;
          }
          if (filterFunc(te)) {
            ret.push(te);
          }
        }
        te = te[nSibling];
      }
      return ret;
    };
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while (te = tret[x++]) {
        if (simpleNodeTest(te) && ((!bag || _isUnique(te, bag)) && filterFunc(te, x))) {
          ret.push(te);
        }
      }
      return ret;
    };
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while (pn) {
      if (pn == root) {
        break;
      }
      pn = pn.parentNode;
    }
    return!!pn;
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if (retFunc) {
      return retFunc;
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if (!oper) {
      if (query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if (!te || !filterFunc(te)) {
            return;
          }
          if (9 == root.nodeType) {
            return getArr(te, arr);
          } else {
            if (_isDescendant(te, root)) {
              return getArr(te, arr);
            }
          }
        };
      } else {
        if (ecs && (/\{\s*\[native code\]\s*\}/.test(String(ecs)) && (query.classes.length && !cssCaseBug))) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while (te = tret[x++]) {
              if (filterFunc(te, root)) {
                ret.push(te);
              }
            }
            return ret;
          };
        } else {
          if (!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                ret.push(te);
              }
              return ret;
            };
          } else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while (te = tret[x++]) {
                if (filterFunc(te, root)) {
                  ret.push(te);
                }
              }
              return ret;
            };
          }
        }
      }
    } else {
      var skipFilters = {el:1};
      if (wildcardTag) {
        skipFilters.tag = 1;
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if ("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc);
      } else {
        if ("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc);
        } else {
          if ("\x3e" == oper) {
            retFunc = _childElements(filterFunc);
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc;
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for (var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if (x > 0) {
        bag = {};
        ret.nozip = true;
      }
      var gef = getElementsFunc(qp);
      for (var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag);
      }
      if (!ret.length) {
        break;
      }
      candidates = ret;
    }
    return ret;
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if (qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if (r) {
          r.nozip = true;
        }
        return r;
      };
    }
    return function(root) {
      return filterDown(root, qparts);
    };
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if (qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if (qsaCached && !opt_forceDOM) {
        return qsaCached;
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if (domCached) {
      return domCached;
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if (query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true;
    }
    var useQSA = qsaAvail && (!opt_forceDOM && (specials.indexOf(qcz) == -1 && ((!goog.userAgent.IE || query.indexOf(":") == -1) && (!(cssCaseBug && query.indexOf(".") >= 0) && (query.indexOf(":contains") == -1 && query.indexOf("|\x3d") == -1)))));
    if (useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if (!(9 == root.nodeType || nospace)) {
            throw "";
          }
          var r = root[qsa](tq);
          if (goog.userAgent.IE) {
            r.commentStrip = true;
          } else {
            r.nozip = true;
          }
          return r;
        } catch (e) {
          return getQueryFunc(query, true)(root);
        }
      };
    } else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while (tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root));
        }
        return ret;
      };
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if (caseSensitive) {
      return node.getAttribute("_uid") || (node.setAttribute("_uid", ++_zipIdx) || _zipIdx);
    } else {
      return node.uniqueID;
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx);
  };
  var _isUnique = function(node, bag) {
    if (!bag) {
      return 1;
    }
    var id = _nodeUID(node);
    if (!bag[id]) {
      return bag[id] = 1;
    }
    return 0;
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if (arr && arr.nozip) {
      return arr;
    }
    var ret = [];
    if (!arr || !arr.length) {
      return ret;
    }
    if (arr[0]) {
      ret.push(arr[0]);
    }
    if (arr.length < 2) {
      return ret;
    }
    _zipIdx++;
    if (goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for (var x = 1, te;te = arr[x];x++) {
        if (arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te);
        }
        te.setAttribute(_zipIdxName, szidx);
      }
    } else {
      if (goog.userAgent.IE && arr.commentStrip) {
        try {
          for (var x = 1, te;te = arr[x];x++) {
            if (isElement(te)) {
              ret.push(te);
            }
          }
        } catch (e) {
        }
      } else {
        if (arr[0]) {
          arr[0][_zipIdxName] = _zipIdx;
        }
        for (var x = 1, te;te = arr[x];x++) {
          if (arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te);
          }
          te[_zipIdxName] = _zipIdx;
        }
      }
    }
    return ret;
  };
  var query = function(query, root) {
    if (!query) {
      return[];
    }
    if (query.constructor == Array) {
      return(query);
    }
    if (!goog.isString(query)) {
      return[query];
    }
    if (goog.isString(root)) {
      root = goog.dom.getElement(root);
      if (!root) {
        return[];
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || (goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion));
    var r = getQueryFunc(query)(root);
    if (r && r.nozip) {
      return r;
    }
    return _zip(r);
  };
  query.pseudos = pseudos;
  return query;
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr);
  };
  var sel__2 = function(base, expr) {
    if (typeof domina.css.t51289 !== "undefined") {
    } else {
      domina.css.t51289 = function(expr, base, sel, meta51290) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta51290 = meta51290;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.css.t51289.cljs$lang$type = true;
      domina.css.t51289.cljs$lang$ctorStr = "domina.css/t51289";
      domina.css.t51289.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "domina.css/t51289");
      };
      domina.css.t51289.prototype.domina$DomContent$ = true;
      domina.css.t51289.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__51284_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__51284_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base));
      };
      domina.css.t51289.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(___$1) {
          return function(p1__51285_SHARP_) {
            return domina.normalize_seq.call(null, goog.dom.query(self__.expr, p1__51285_SHARP_));
          };
        }(___$1), domina.nodes.call(null, self__.base))));
      };
      domina.css.t51289.prototype.cljs$core$IMeta$_meta$arity$1 = function(_51291) {
        var self__ = this;
        var _51291__$1 = this;
        return self__.meta51290;
      };
      domina.css.t51289.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_51291, meta51290__$1) {
        var self__ = this;
        var _51291__$1 = this;
        return new domina.css.t51289(self__.expr, self__.base, self__.sel, meta51290__$1);
      };
      domina.css.__GT_t51289 = function __GT_t51289(expr__$1, base__$1, sel__$1, meta51290) {
        return new domina.css.t51289(expr__$1, base__$1, sel__$1, meta51290);
      };
    }
    return new domina.css.t51289(expr, base, sel, null);
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sel.cljs$core$IFn$_invoke$arity$1 = sel__1;
  sel.cljs$core$IFn$_invoke$arity$2 = sel__2;
  return sel;
}();
goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__3527__auto__)) {
      return doc.setProperty;
    } else {
      return and__3527__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Could not find XPath support in this browser.");
      } else {
        return null;
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__51744 = i + 1;
        var G__51745 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__51744;
        acc = G__51745;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t51749 !== "undefined") {
    } else {
      domina.xpath.t51749 = function(expr, base, xpath, meta51750) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta51750 = meta51750;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t51749.cljs$lang$type = true;
      domina.xpath.t51749.cljs$lang$ctorStr = "domina.xpath/t51749";
      domina.xpath.t51749.cljs$lang$ctorPrWriter = function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "domina.xpath/t51749");
      };
      domina.xpath.t51749.prototype.domina$DomContent$ = true;
      domina.xpath.t51749.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
      };
      domina.xpath.t51749.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
      };
      domina.xpath.t51749.prototype.cljs$core$IMeta$_meta$arity$1 = function(_51751) {
        var self__ = this;
        var _51751__$1 = this;
        return self__.meta51750;
      };
      domina.xpath.t51749.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_51751, meta51750__$1) {
        var self__ = this;
        var _51751__$1 = this;
        return new domina.xpath.t51749(self__.expr, self__.base, self__.xpath, meta51750__$1);
      };
      domina.xpath.__GT_t51749 = function __GT_t51749(expr__$1, base__$1, xpath__$1, meta51750) {
        return new domina.xpath.t51749(expr__$1, base__$1, xpath__$1, meta51750);
      };
    }
    return new domina.xpath.t51749(expr, base, xpath, null);
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("clustermap.nav");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("cljs.core.async");
goog.require("domina.css");
goog.require("domina");
goog.require("jayq.core");
goog.require("domina");
goog.require("cljs.core.async");
goog.require("domina.events");
goog.require("domina.events");
goog.require("jayq.core");
goog.require("domina.css");
goog.require("domina.xpath");
goog.require("domina.xpath");
clustermap.nav.init_bootstrap_tooltips = function init_bootstrap_tooltips() {
  return jayq.core.$.call(null, "[data-toggle\x3d'tooltip']").tooltip();
};
clustermap.nav.handle_toggle_nav_search = function handle_toggle_nav_search() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav .search \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(e) {
    var target = domina.events.target.call(null, e);
    var parent = domina.xpath.xpath.call(null, target, "..");
    domina.events.prevent_default.call(null, e);
    domina.toggle_class_BANG_.call(null, parent, "open");
    return jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, domina.css.sel.call(null, "#search")))).toggle();
  });
};
clustermap.nav.handle_hide_show_map_report = function handle_hide_show_map_report() {
  return domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#map-report \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(e) {
    var target = domina.events.target.call(null, e);
    var mr = domina.css.sel.call(null, "#map-report");
    domina.events.prevent_default.call(null, e);
    if (cljs.core.truth_(domina.has_class_QMARK_.call(null, mr, "open"))) {
      domina.remove_class_BANG_.call(null, mr, "open");
      return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "-270px"], null), 400);
    } else {
      if (true) {
        domina.add_class_BANG_.call(null, mr, "open");
        return jayq.core.anim.call(null, jayq.core.$.call(null, cljs.core.first.call(null, domina.nodes.call(null, mr))), new cljs.core.PersistentArrayMap(null, 1, ["right", "0px"], null), 400);
      } else {
        return null;
      }
    }
  });
};
clustermap.nav.body_view_classes = new cljs.core.PersistentArrayMap(null, 2, ["map", "view-map", "lists", "view-lists"], null);
clustermap.nav.change_view = function change_view(view) {
  if (cljs.core.truth_(cljs.core.get.call(null, clustermap.nav.body_view_classes, view))) {
  } else {
    throw new Error("unknown view: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view));
  }
  var body = domina.css.sel.call(null, "body");
  var target_selector = "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(view);
  var target_li = domina.css.sel.call(null, target_selector);
  var ul = domina.xpath.xpath.call(null, target_li, "..");
  var active_li = domina.css.sel.call(null, ul, "\x3e .active");
  domina.remove_class_BANG_.call(null, active_li, "active");
  domina.add_class_BANG_.call(null, target_li, "active");
  var seq__46528_46534 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__46529_46535 = null;
  var count__46530_46536 = 0;
  var i__46531_46537 = 0;
  while (true) {
    if (i__46531_46537 < count__46530_46536) {
      var vec__46532_46538 = cljs.core._nth.call(null, chunk__46529_46535, i__46531_46537);
      var v_46539 = cljs.core.nth.call(null, vec__46532_46538, 0, null);
      var body_class_46540 = cljs.core.nth.call(null, vec__46532_46538, 1, null);
      if (cljs.core._EQ_.call(null, v_46539, view)) {
        domina.add_class_BANG_.call(null, body, body_class_46540);
      } else {
        domina.remove_class_BANG_.call(null, body, body_class_46540);
      }
      var G__46541 = seq__46528_46534;
      var G__46542 = chunk__46529_46535;
      var G__46543 = count__46530_46536;
      var G__46544 = i__46531_46537 + 1;
      seq__46528_46534 = G__46541;
      chunk__46529_46535 = G__46542;
      count__46530_46536 = G__46543;
      i__46531_46537 = G__46544;
      continue;
    } else {
      var temp__4126__auto___46545 = cljs.core.seq.call(null, seq__46528_46534);
      if (temp__4126__auto___46545) {
        var seq__46528_46546__$1 = temp__4126__auto___46545;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46528_46546__$1)) {
          var c__4295__auto___46547 = cljs.core.chunk_first.call(null, seq__46528_46546__$1);
          var G__46548 = cljs.core.chunk_rest.call(null, seq__46528_46546__$1);
          var G__46549 = c__4295__auto___46547;
          var G__46550 = cljs.core.count.call(null, c__4295__auto___46547);
          var G__46551 = 0;
          seq__46528_46534 = G__46548;
          chunk__46529_46535 = G__46549;
          count__46530_46536 = G__46550;
          i__46531_46537 = G__46551;
          continue;
        } else {
          var vec__46533_46552 = cljs.core.first.call(null, seq__46528_46546__$1);
          var v_46553 = cljs.core.nth.call(null, vec__46533_46552, 0, null);
          var body_class_46554 = cljs.core.nth.call(null, vec__46533_46552, 1, null);
          if (cljs.core._EQ_.call(null, v_46553, view)) {
            domina.add_class_BANG_.call(null, body, body_class_46554);
          } else {
            domina.remove_class_BANG_.call(null, body, body_class_46554);
          }
          var G__46555 = cljs.core.next.call(null, seq__46528_46546__$1);
          var G__46556 = null;
          var G__46557 = 0;
          var G__46558 = 0;
          seq__46528_46534 = G__46555;
          chunk__46529_46535 = G__46556;
          count__46530_46536 = G__46557;
          i__46531_46537 = G__46558;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return jayq.core.$.call(null, document).trigger("clustermap-change-view");
};
clustermap.nav.handle_view_switches = function handle_view_switches(comm) {
  var seq__46565 = cljs.core.seq.call(null, clustermap.nav.body_view_classes);
  var chunk__46566 = null;
  var count__46567 = 0;
  var i__46568 = 0;
  while (true) {
    if (i__46568 < count__46567) {
      var vec__46569 = cljs.core._nth.call(null, chunk__46566, i__46568);
      var v = cljs.core.nth.call(null, vec__46569, 0, null);
      var _ = cljs.core.nth.call(null, vec__46569, 1, null);
      domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(seq__46565, chunk__46566, count__46567, i__46568, vec__46569, v, _) {
        return function(e) {
          domina.events.prevent_default.call(null, e);
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), v], null));
        };
      }(seq__46565, chunk__46566, count__46567, i__46568, vec__46569, v, _));
      var G__46571 = seq__46565;
      var G__46572 = chunk__46566;
      var G__46573 = count__46567;
      var G__46574 = i__46568 + 1;
      seq__46565 = G__46571;
      chunk__46566 = G__46572;
      count__46567 = G__46573;
      i__46568 = G__46574;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__46565);
      if (temp__4126__auto__) {
        var seq__46565__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__46565__$1)) {
          var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__46565__$1);
          var G__46575 = cljs.core.chunk_rest.call(null, seq__46565__$1);
          var G__46576 = c__4295__auto__;
          var G__46577 = cljs.core.count.call(null, c__4295__auto__);
          var G__46578 = 0;
          seq__46565 = G__46575;
          chunk__46566 = G__46576;
          count__46567 = G__46577;
          i__46568 = G__46578;
          continue;
        } else {
          var vec__46570 = cljs.core.first.call(null, seq__46565__$1);
          var v = cljs.core.nth.call(null, vec__46570, 0, null);
          var _ = cljs.core.nth.call(null, vec__46570, 1, null);
          domina.events.listen_BANG_.call(null, domina.css.sel.call(null, "#nav ." + cljs.core.str.cljs$core$IFn$_invoke$arity$1(v) + " \x3e a"), new cljs.core.Keyword(null, "click", "click", 1108654330), function(seq__46565, chunk__46566, count__46567, i__46568, vec__46570, v, _, seq__46565__$1, temp__4126__auto__) {
            return function(e) {
              domina.events.prevent_default.call(null, e);
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), v], null));
            };
          }(seq__46565, chunk__46566, count__46567, i__46568, vec__46570, v, _, seq__46565__$1, temp__4126__auto__));
          var G__46579 = cljs.core.next.call(null, seq__46565__$1);
          var G__46580 = null;
          var G__46581 = 0;
          var G__46582 = 0;
          seq__46565 = G__46579;
          chunk__46566 = G__46580;
          count__46567 = G__46581;
          i__46568 = G__46582;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
clustermap.nav.init = function init(comm) {
  clustermap.nav.init_bootstrap_tooltips.call(null);
  clustermap.nav.handle_toggle_nav_search.call(null);
  clustermap.nav.handle_hide_show_map_report.call(null);
  return clustermap.nav.handle_view_switches.call(null, comm);
};
goog.provide("clustermap.components.page_title");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.formats.money");
goog.require("clustermap.formats.number");
goog.require("clustermap.formats.number");
goog.require("clustermap.om");
goog.require("om.dom");
goog.require("clustermap.formats.number");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("clustermap.om");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clustermap.formats.money");
goog.require("clustermap.components.reset_selection_button");
goog.require("clustermap.components.reset_selection_button");
goog.require("om.core");
goog.require("om.core");
goog.require("clustermap.formats.money");
clustermap.components.page_title.describe_type = function describe_type(type) {
  var pred__46272 = cljs.core._EQ_;
  var expr__46273 = type;
  if (cljs.core.truth_(pred__46272.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__46273))) {
    return "Investor-backed company";
  } else {
    if (cljs.core.truth_(pred__46272.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__46273))) {
      return "Investor";
    } else {
      if (cljs.core.truth_(pred__46272.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__46273))) {
        return "Constituency";
      } else {
        throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__46273));
      }
    }
  }
};
clustermap.components.page_title.page_title_component = function page_title_component(p__46275, owner) {
  var map__46286 = p__46275;
  var map__46286__$1 = cljs.core.seq_QMARK_.call(null, map__46286) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46286) : map__46286;
  var selection = map__46286__$1;
  var value = cljs.core.get.call(null, map__46286__$1, new cljs.core.Keyword(null, "value", "value", 1125876963));
  var type = cljs.core.get.call(null, map__46286__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var map__46287 = om.core.get_shared.call(null, owner);
  var map__46287__$1 = cljs.core.seq_QMARK_.call(null, map__46287) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46287) : map__46287;
  var path_fn = cljs.core.get.call(null, map__46287__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
  var comm = cljs.core.get.call(null, map__46287__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
  var path_fn__$1 = cljs.core.partial.call(null, path_fn, new cljs.core.Keyword(null, "lists", "lists", 1116886791));
  var type_descr = function() {
    var G__46288 = selection;
    var G__46288__$1 = G__46288 == null ? null : (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(G__46288);
    var G__46288__$2 = G__46288__$1 == null ? null : clustermap.components.page_title.describe_type.call(null, G__46288__$1);
    return G__46288__$2;
  }();
  var name = function() {
    var G__46289 = selection;
    var G__46289__$1 = G__46289 == null ? null : (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__46289);
    var G__46289__$2 = G__46289__$1 == null ? null : (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(G__46289__$1);
    return G__46289__$2;
  }();
  var url = function() {
    var G__46290 = selection;
    var G__46290__$1 = G__46290 == null ? null : (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__46290);
    var G__46290__$2 = G__46290__$1 == null ? null : (new cljs.core.Keyword(null, "web_url", "web_url", 2237655414)).cljs$core$IFn$_invoke$arity$1(G__46290__$1);
    return G__46290__$2;
  }();
  if (typeof clustermap.components.page_title.t46291 !== "undefined") {
  } else {
    clustermap.components.page_title.t46291 = function(selection, owner, path_fn, type_descr, map__46286, value, name, comm, page_title_component, type, p__46275, map__46287, url, meta46292) {
      this.selection = selection;
      this.owner = owner;
      this.path_fn = path_fn;
      this.type_descr = type_descr;
      this.map__46286 = map__46286;
      this.value = value;
      this.name = name;
      this.comm = comm;
      this.page_title_component = page_title_component;
      this.type = type;
      this.p__46275 = p__46275;
      this.map__46287 = map__46287;
      this.url = url;
      this.meta46292 = meta46292;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.page_title.t46291.cljs$lang$type = true;
    clustermap.components.page_title.t46291.cljs$lang$ctorStr = "clustermap.components.page-title/t46291";
    clustermap.components.page_title.t46291.cljs$lang$ctorPrWriter = function(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.page-title/t46291");
      };
    }(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type);
    clustermap.components.page_title.t46291.prototype.om$core$IRender$ = true;
    clustermap.components.page_title.t46291.prototype.om$core$IRender$render$arity$1 = function(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type) {
      return function(this__9410__auto__) {
        var self__ = this;
        var this__9410__auto____$1 = this;
        return React.DOM.div({"id":"page-title"}, React.DOM.button({"className":"btn", "type":"button", "onClick":function(this__9410__auto____$1, map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type) {
          return function(e) {
            return cljs.core.async.put_BANG_.call(null, self__.comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), "map"], null));
          };
        }(this__9410__auto____$1, map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type)}, "View on map"), sablono.interpreter.interpret.call(null, cljs.core.truth_(self__.type_descr) ? clustermap.components.reset_selection_button.reset_selection_button.call(null, self__.path_fn) : null), function() {
          var attrs46294 = function() {
            var or__3539__auto__ = self__.type_descr;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return "All investor-backed companies";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h2, cljs.core.map_QMARK_.call(null, attrs46294) ? sablono.interpreter.attributes.call(null, attrs46294) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46294) ? cljs.core.PersistentVector.EMPTY : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs46294)], null)));
        }(), function() {
          var attrs46295 = function() {
            var or__3539__auto__ = self__.name;
            if (cljs.core.truth_(or__3539__auto__)) {
              return or__3539__auto__;
            } else {
              return "UK wide";
            }
          }();
          return cljs.core.apply.call(null, React.DOM.h3, cljs.core.map_QMARK_.call(null, attrs46295) ? sablono.interpreter.attributes.call(null, attrs46295) : null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map_QMARK_.call(null, attrs46295) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696)) ? new cljs.core.PersistentVector(null, 
          6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 1123453049), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 2564439702)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, 
          attrs46295), sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696)) ? new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 1123453049), "\u00a0(", (new cljs.core.Keyword(null, "mp", "mp", 1013907733)).cljs$core$IFn$_invoke$arity$1(self__.value), ", ", (new cljs.core.Keyword(null, "political_party", "political_party", 
          2564439702)).cljs$core$IFn$_invoke$arity$1(self__.value), ")"], null) : null)], null)));
        }(), cljs.core.truth_(self__.url) ? React.DOM.a({"href":self__.url, "target":"_blank"}, sablono.interpreter.interpret.call(null, self__.url)) : null);
      };
    }(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type);
    clustermap.components.page_title.t46291.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type) {
      return function(_46293) {
        var self__ = this;
        var _46293__$1 = this;
        return self__.meta46292;
      };
    }(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type);
    clustermap.components.page_title.t46291.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type) {
      return function(_46293, meta46292__$1) {
        var self__ = this;
        var _46293__$1 = this;
        return new clustermap.components.page_title.t46291(self__.selection, self__.owner, self__.path_fn, self__.type_descr, self__.map__46286, self__.value, self__.name, self__.comm, self__.page_title_component, self__.type, self__.p__46275, self__.map__46287, self__.url, meta46292__$1);
      };
    }(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type);
    clustermap.components.page_title.__GT_t46291 = function(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type) {
      return function __GT_t46291(selection__$1, owner__$1, path_fn__$2, type_descr__$1, map__46286__$2, value__$1, name__$1, comm__$1, page_title_component__$1, type__$1, p__46275__$1, map__46287__$2, url__$1, meta46292) {
        return new clustermap.components.page_title.t46291(selection__$1, owner__$1, path_fn__$2, type_descr__$1, map__46286__$2, value__$1, name__$1, comm__$1, page_title_component__$1, type__$1, p__46275__$1, map__46287__$2, url__$1, meta46292);
      };
    }(map__46287, map__46287__$1, path_fn, comm, path_fn__$1, type_descr, name, url, map__46286, map__46286__$1, selection, value, type);
  }
  return new clustermap.components.page_title.t46291(selection, owner, path_fn__$1, type_descr, map__46286__$1, value, name, comm, page_title_component, type, p__46275, map__46287__$1, url, null);
};
clustermap.components.page_title.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.om.burrow.call(null, clustermap.components.page_title.page_title_component, new cljs.core.Keyword(null, "selection", "selection", 3592905982)), app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), shared, new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("clustermap.components.map");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("jayq.core");
goog.require("clustermap.boundarylines");
goog.require("clojure.set");
goog.require("om.dom");
goog.require("hiccups.runtime");
goog.require("sablono.core");
goog.require("clustermap.rtree");
goog.require("om.dom");
goog.require("clustermap.rtree");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("clojure.set");
goog.require("clustermap.boundarylines");
goog.require("jayq.core");
goog.require("om.core");
goog.require("om.core");
goog.require("hiccups.runtime");
clustermap.components.map.initial_bounds = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [59.54, 2.3], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [49.29, -11.29], null)], null);
clustermap.components.map.locate_map = function locate_map(m) {
  return m.fitBounds(cljs.core.clj__GT_js.call(null, clustermap.components.map.initial_bounds), cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["paddingTopLeft", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), "paddingBottomRight", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null)));
};
clustermap.components.map.api_key = function() {
  var or__3539__auto__ = function() {
    var G__45897 = config;
    var G__45897__$1 = G__45897 == null ? null : G__45897.components;
    var G__45897__$2 = G__45897__$1 == null ? null : G__45897__$1.map;
    var G__45897__$3 = G__45897__$2 == null ? null : G__45897__$2.api_key;
    return G__45897__$3;
  }();
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return "mccraigmccraig.h4f921b9";
  }
}();
clustermap.components.map.create_map = function create_map(id_or_el) {
  var m = L.map.call(null, id_or_el, {"zoomControl":false});
  var tiles = L.mapbox.tileLayer.call(null, clustermap.components.map.api_key, {"detectRetina":cljs.core.not.call(null, config.repl)});
  var zoom = L.control.zoom.call(null, {"position":"bottomright"});
  m.addLayer(tiles);
  m.addControl(zoom);
  clustermap.components.map.locate_map.call(null, m);
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", 4353500414), m, new cljs.core.Keyword(null, "markers", "markers", 1853155051), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "paths", "paths", 1120343136), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), new cljs.core.Keyword(null, "path-selections", "path-selections", 512369281), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY)], 
  null);
};
clustermap.components.map.geojson_point_bounds = function geojson_point_bounds(longlats) {
  var s = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.last, longlats));
  var w = cljs.core.apply.call(null, cljs.core.min, cljs.core.map.call(null, cljs.core.first, longlats));
  var n = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.last, longlats));
  var e = cljs.core.apply.call(null, cljs.core.max, cljs.core.map.call(null, cljs.core.first, longlats));
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = s;
    if (cljs.core.truth_(and__3527__auto__)) {
      var and__3527__auto____$1 = w;
      if (cljs.core.truth_(and__3527__auto____$1)) {
        var and__3527__auto____$2 = n;
        if (cljs.core.truth_(and__3527__auto____$2)) {
          return e;
        } else {
          return and__3527__auto____$2;
        }
      } else {
        return and__3527__auto____$1;
      }
    } else {
      return and__3527__auto__;
    }
  }())) {
    return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, w], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, e], null)], null)));
  } else {
    return null;
  }
};
clustermap.components.map.pan_to_show = function() {
  var pan_to_show__delegate = function(m, all_bounds) {
    if (cljs.core.truth_(cljs.core.not_empty.call(null, all_bounds))) {
      var fb = cljs.core.first.call(null, all_bounds);
      var fb_copy = new L.LatLngBounds(fb.getSouthWest(), fb.getNorthEast());
      var super_bounds = cljs.core.reduce.call(null, function(fb, fb_copy) {
        return function(sb, bounds) {
          return sb.extend(bounds);
        };
      }(fb, fb_copy), fb_copy, cljs.core.rest.call(null, all_bounds));
      return m.fitBounds(super_bounds);
    } else {
      return null;
    }
  };
  var pan_to_show = function(m, var_args) {
    var all_bounds = null;
    if (arguments.length > 1) {
      all_bounds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pan_to_show__delegate.call(this, m, all_bounds);
  };
  pan_to_show.cljs$lang$maxFixedArity = 1;
  pan_to_show.cljs$lang$applyTo = function(arglist__45898) {
    var m = cljs.core.first(arglist__45898);
    var all_bounds = cljs.core.rest(arglist__45898);
    return pan_to_show__delegate(m, all_bounds);
  };
  pan_to_show.cljs$core$IFn$_invoke$arity$variadic = pan_to_show__delegate;
  return pan_to_show;
}();
clustermap.components.map.marker_popup_content = function marker_popup_content(path_fn, location_sites) {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs45901 = cljs.core.map.call(null, function(site) {
      return "\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", 1017115293), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110), new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), site), new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), null], null))) + 
      "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
        var attrs45902 = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(site);
        if (cljs.core.map_QMARK_.call(null, attrs45902)) {
          return "\x3cli" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), null], null), attrs45902))) + "\x3e\x3c/li\x3e";
        } else {
          return "\x3cli\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs45902)) + "\x3c/li\x3e";
        }
      }()) + "\x3c/a\x3e";
    }, location_sites);
    if (cljs.core.map_QMARK_.call(null, attrs45901)) {
      return "\x3cul" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), "map-marker-popup-location-list"], null), attrs45901))) + "\x3e\x3c/ul\x3e";
    } else {
      return'\x3cul class\x3d"map-marker-popup-location-list"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs45901)) + "\x3c/ul\x3e";
    }
  }());
};
clustermap.components.map.create_marker = function create_marker(path_fn, leaflet_map, location_sites) {
  var temp__4124__auto__ = function() {
    var G__45905 = location_sites;
    var G__45905__$1 = G__45905 == null ? null : cljs.core.first.call(null, G__45905);
    var G__45905__$2 = G__45905__$1 == null ? null : (new cljs.core.Keyword(null, "location", "location", 2914947879)).cljs$core$IFn$_invoke$arity$1(G__45905__$1);
    var G__45905__$3 = G__45905__$2 == null ? null : cljs.core.reverse.call(null, G__45905__$2);
    var G__45905__$4 = G__45905__$3 == null ? null : cljs.core.clj__GT_js.call(null, G__45905__$3);
    return G__45905__$4;
  }();
  if (cljs.core.truth_(temp__4124__auto__)) {
    var latlong = temp__4124__auto__;
    var icon = L.divIcon(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "className", "className", 1004015509), "map-marker", new cljs.core.Keyword(null, "iconSize", "iconSize", 4570914700), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [24, 28], null), new cljs.core.Keyword(null, "iconAnchor", "iconAnchor", 4290568192), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [12, 
    14], null), new cljs.core.Keyword(null, "popupAnchor", "popupAnchor", 1041293811), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, -8], null)], null)));
    var marker = L.marker(latlong, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "icon", "icon", 1017130987), icon], null)));
    var popup_content = clustermap.components.map.marker_popup_content.call(null, path_fn, location_sites);
    marker.bindPopup(popup_content);
    marker.addTo(leaflet_map);
    return marker;
  } else {
    return console.log("missing location: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
      var sb__4466__auto__ = new goog.string.StringBuffer;
      var _STAR_print_fn_STAR_45906_45907 = cljs.core._STAR_print_fn_STAR_;
      try {
        cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_fn_STAR_45906_45907, sb__4466__auto__, temp__4124__auto__) {
          return function(x__4467__auto__) {
            return sb__4466__auto__.append(x__4467__auto__);
          };
        }(_STAR_print_fn_STAR_45906_45907, sb__4466__auto__, temp__4124__auto__);
        cljs.core.pr.call(null, location_sites);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_45906_45907;
      }
      return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4466__auto__);
    }()));
  }
};
clustermap.components.map.update_marker = function update_marker(path_fn, leaflet_map, marker, location) {
  marker.setPopupContent(clustermap.components.map.marker_popup_content.call(null, path_fn, location));
  return marker;
};
clustermap.components.map.remove_marker = function remove_marker(leaflet_map, marker) {
  return leaflet_map.removeLayer(marker);
};
clustermap.components.map.update_markers = function update_markers(path_fn, leaflet_map, markers_atom, new_locations) {
  var markers = cljs.core.deref.call(null, markers_atom);
  var marker_keys = cljs.core.set.call(null, cljs.core.keys.call(null, markers));
  var location_keys = cljs.core.set.call(null, cljs.core.keys.call(null, new_locations));
  var update_marker_keys = clojure.set.intersection.call(null, marker_keys, location_keys);
  var new_marker_keys = clojure.set.difference.call(null, location_keys, marker_keys);
  var remove_marker_keys = clojure.set.difference.call(null, marker_keys, location_keys);
  var new_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.create_marker.call(null, path_fn, leaflet_map, cljs.core.get.call(null, new_locations, k))], null);
    };
  }(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys), new_marker_keys));
  var updated_markers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers) {
    return function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, clustermap.components.map.update_marker.call(null, path_fn, leaflet_map, cljs.core.get.call(null, markers, k), cljs.core.get.call(null, new_locations, k))], null);
    };
  }(markers, marker_keys, location_keys, update_marker_keys, new_marker_keys, remove_marker_keys, new_markers), update_marker_keys));
  var _ = function() {
    var seq__45912 = cljs.core.seq.call(null, remove_marker_keys);
    var chunk__45913 = null;
    var count__45914 = 0;
    var i__45915 = 0;
    while (true) {
      if (i__45915 < count__45914) {
        var k = cljs.core._nth.call(null, chunk__45913, i__45915);
        clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
        var G__45916 = seq__45912;
        var G__45917 = chunk__45913;
        var G__45918 = count__45914;
        var G__45919 = i__45915 + 1;
        seq__45912 = G__45916;
        chunk__45913 = G__45917;
        count__45914 = G__45918;
        i__45915 = G__45919;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__45912);
        if (temp__4126__auto__) {
          var seq__45912__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__45912__$1)) {
            var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__45912__$1);
            var G__45920 = cljs.core.chunk_rest.call(null, seq__45912__$1);
            var G__45921 = c__4295__auto__;
            var G__45922 = cljs.core.count.call(null, c__4295__auto__);
            var G__45923 = 0;
            seq__45912 = G__45920;
            chunk__45913 = G__45921;
            count__45914 = G__45922;
            i__45915 = G__45923;
            continue;
          } else {
            var k = cljs.core.first.call(null, seq__45912__$1);
            clustermap.components.map.remove_marker.call(null, leaflet_map, cljs.core.get.call(null, markers, k));
            var G__45924 = cljs.core.next.call(null, seq__45912__$1);
            var G__45925 = null;
            var G__45926 = 0;
            var G__45927 = 0;
            seq__45912 = G__45924;
            chunk__45913 = G__45925;
            count__45914 = G__45926;
            i__45915 = G__45927;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  return cljs.core.reset_BANG_.call(null, markers_atom, cljs.core.merge.call(null, updated_markers, new_markers));
};
clustermap.components.map.postgis_envelope__GT_latlngbounds = function postgis_envelope__GT_latlngbounds(envelope) {
  var map__45936 = cljs.core.js__GT_clj.call(null, envelope);
  var map__45936__$1 = cljs.core.seq_QMARK_.call(null, map__45936) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45936) : map__45936;
  var clj_envelope = map__45936__$1;
  var vec__45937 = cljs.core.get.call(null, map__45936__$1, "coordinates");
  var vec__45938 = cljs.core.nth.call(null, vec__45937, 0, null);
  var vec__45939 = cljs.core.nth.call(null, vec__45938, 0, null);
  var miny0 = cljs.core.nth.call(null, vec__45939, 0, null);
  var minx0 = cljs.core.nth.call(null, vec__45939, 1, null);
  var vec__45940 = cljs.core.nth.call(null, vec__45938, 1, null);
  var maxy1 = cljs.core.nth.call(null, vec__45940, 0, null);
  var minx1 = cljs.core.nth.call(null, vec__45940, 1, null);
  var vec__45941 = cljs.core.nth.call(null, vec__45938, 2, null);
  var maxy2 = cljs.core.nth.call(null, vec__45941, 0, null);
  var maxx2 = cljs.core.nth.call(null, vec__45941, 1, null);
  var vec__45942 = cljs.core.nth.call(null, vec__45938, 3, null);
  var miny3 = cljs.core.nth.call(null, vec__45942, 0, null);
  var maxx3 = cljs.core.nth.call(null, vec__45942, 1, null);
  var vec__45943 = cljs.core.nth.call(null, vec__45938, 4, null);
  var miny4 = cljs.core.nth.call(null, vec__45943, 0, null);
  var minx4 = cljs.core.nth.call(null, vec__45943, 1, null);
  var inner = vec__45938;
  var coords = vec__45937;
  return L.latLngBounds(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [minx0, miny0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [maxx2, maxy2], null)], null)));
};
clustermap.components.map.tolerance_boundaryline = function tolerance_boundaryline(fetch_boundaryline_fn, index, boundaryline_id, zoom) {
  var default_bl = cljs.core.truth_(index) ? index[boundaryline_id] : null;
  var default_tolerance = cljs.core.truth_(default_bl) ? default_bl["tolerance"] : null;
  var default$ = cljs.core.truth_(default_bl) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_tolerance, default_bl], null) : null;
  var or__3539__auto__ = fetch_boundaryline_fn.call(null, boundaryline_id, zoom, new cljs.core.Keyword(null, "min-zoom", "min-zoom", 3894785504), 7);
  if (cljs.core.truth_(or__3539__auto__)) {
    return or__3539__auto__;
  } else {
    return default$;
  }
};
clustermap.components.map.style_leaflet_path = function style_leaflet_path(leaflet_path, p__45944) {
  var map__45946 = p__45944;
  var map__45946__$1 = cljs.core.seq_QMARK_.call(null, map__45946) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45946) : map__45946;
  var highlighted = cljs.core.get.call(null, map__45946__$1, new cljs.core.Keyword(null, "highlighted", "highlighted", 3500421061));
  var selected = cljs.core.get.call(null, map__45946__$1, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = selected;
    if (cljs.core.truth_(and__3527__auto__)) {
      return highlighted;
    } else {
      return and__3527__auto__;
    }
  }())) {
    return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#0000aa", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 1, new cljs.core.Keyword(null, "fill", "fill", 1017047285), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 960226426), 0.2], null)));
  } else {
    if (cljs.core.truth_(selected)) {
      return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#0000aa", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 1, new cljs.core.Keyword(null, "fill", "fill", 1017047285), true, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 960226426), 0.2], null)));
    } else {
      if (cljs.core.truth_(highlighted)) {
        return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#000000", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 1, new cljs.core.Keyword(null, "fill", "fill", 1017047285), false], null)));
      } else {
        if (true) {
          return leaflet_path.setStyle(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1108746965), "#ff0000", new cljs.core.Keyword(null, "weight", "weight", 4517279210), 2, new cljs.core.Keyword(null, "opacity", "opacity", 4041665405), 0, new cljs.core.Keyword(null, "fill", "fill", 1017047285), false, new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 960226426), 0], null)));
        } else {
          return null;
        }
      }
    }
  }
};
clustermap.components.map.create_path = function create_path(comm, leaflet_map, boundaryline_id, js_boundaryline, p__45947) {
  var map__45949 = p__45947;
  var map__45949__$1 = cljs.core.seq_QMARK_.call(null, map__45949) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45949) : map__45949;
  var path_attrs = map__45949__$1;
  var selected = cljs.core.get.call(null, map__45949__$1, new cljs.core.Keyword(null, "selected", "selected", 2205476365));
  var tolerance = js_boundaryline["tolerance"];
  var bounds = clustermap.components.map.postgis_envelope__GT_latlngbounds.call(null, js_boundaryline["envelope"]);
  var leaflet_path = L.geoJson(js_boundaryline["geojson"]);
  clustermap.components.map.style_leaflet_path.call(null, leaflet_path, path_attrs);
  leaflet_path.addTo(leaflet_map);
  leaflet_path.on("click", function(tolerance, bounds, leaflet_path, map__45949, map__45949__$1, path_attrs, selected) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), boundaryline_id], null)], null));
    };
  }(tolerance, bounds, leaflet_path, map__45949, map__45949__$1, path_attrs, selected));
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", 1013907597), boundaryline_id, new cljs.core.Keyword(null, "tolerance", "tolerance", 2046976895), tolerance, new cljs.core.Keyword(null, "selected", "selected", 2205476365), selected, new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071), leaflet_path, new cljs.core.Keyword(null, "bounds", "bounds", 3925666343), bounds], null);
};
clustermap.components.map.fetch_create_path = function fetch_create_path(comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, boundaryline_id, path_attrs) {
  var temp__4124__auto__ = clustermap.components.map.tolerance_boundaryline.call(null, fetch_boundaryline_fn, js_boundaryline_index, boundaryline_id, leaflet_map.getZoom());
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__45951 = temp__4124__auto__;
    var tolerance = cljs.core.nth.call(null, vec__45951, 0, null);
    var js_boundaryline = cljs.core.nth.call(null, vec__45951, 1, null);
    return clustermap.components.map.create_path.call(null, comm, leaflet_map, boundaryline_id, js_boundaryline, path_attrs);
  } else {
    return null;
  }
};
clustermap.components.map.replace_path = function replace_path(comm, leaflet_map, boundaryline_id, old_path, js_boundaryline, path_attrs) {
  leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071)).cljs$core$IFn$_invoke$arity$1(old_path));
  return clustermap.components.map.create_path.call(null, comm, leaflet_map, (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(old_path), js_boundaryline, path_attrs);
};
clustermap.components.map.update_path = function update_path(comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, p__45952, path_attrs) {
  var map__45955 = p__45952;
  var map__45955__$1 = cljs.core.seq_QMARK_.call(null, map__45955) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45955) : map__45955;
  var path = map__45955__$1;
  var boundaryline_id = cljs.core.get.call(null, map__45955__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var temp__4124__auto__ = clustermap.components.map.tolerance_boundaryline.call(null, fetch_boundaryline_fn, js_boundaryline_index, boundaryline_id, leaflet_map.getZoom());
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__45956 = temp__4124__auto__;
    var tolerance = cljs.core.nth.call(null, vec__45956, 0, null);
    var js_boundaryline = cljs.core.nth.call(null, vec__45956, 1, null);
    if (cljs.core.not_EQ_.call(null, tolerance, (new cljs.core.Keyword(null, "tolerance", "tolerance", 2046976895)).cljs$core$IFn$_invoke$arity$1(path))) {
      return clustermap.components.map.replace_path.call(null, comm, leaflet_map, boundaryline_id, path, js_boundaryline, path_attrs);
    } else {
      clustermap.components.map.style_leaflet_path.call(null, (new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071)).cljs$core$IFn$_invoke$arity$1(path), path_attrs);
      return path;
    }
  } else {
    return path;
  }
};
clustermap.components.map.delete_path = function delete_path(leaflet_map, path) {
  return leaflet_map.removeLayer((new cljs.core.Keyword(null, "leaflet-path", "leaflet-path", 1462260071)).cljs$core$IFn$_invoke$arity$1(path));
};
clustermap.components.map.update_paths = function update_paths(comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, paths_atom, path_selections_atom, new_path_highlights, new_selection_locations) {
  if (cljs.core.truth_(js_boundaryline_index)) {
    var paths = cljs.core.deref.call(null, paths_atom);
    var path_keys = cljs.core.set.call(null, cljs.core.keys.call(null, paths));
    var old_selection_path_keys = cljs.core.deref.call(null, path_selections_atom);
    var new_selection_path_keys = cljs.core.set.call(null, cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "uk_constituencies", "uk_constituencies", 575411487), new cljs.core.Keyword(null, "boundarylinecolls", "boundarylinecolls", 2038297115)), cljs.core.apply.call(null, cljs.core.concat, cljs.core.vals.call(null, new_selection_locations)))));
    var live_path_keys = clojure.set.union.call(null, new_selection_path_keys, new_path_highlights);
    var create_path_keys = clojure.set.difference.call(null, live_path_keys, path_keys);
    var delete_path_keys = clojure.set.difference.call(null, path_keys, live_path_keys);
    var update_path_keys = clojure.set.intersection.call(null, path_keys, live_path_keys);
    var created_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys) {
      return function(k) {
        return clustermap.components.map.fetch_create_path.call(null, comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, k, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 3500421061), cljs.core.contains_QMARK_.call(null, new_path_highlights, k)], null));
      };
    }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys), create_path_keys);
    var updated_paths = cljs.core.map.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths) {
      return function(k) {
        return clustermap.components.map.update_path.call(null, comm, fetch_boundaryline_fn, js_boundaryline_index, leaflet_map, cljs.core.get.call(null, paths, k), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core.contains_QMARK_.call(null, new_selection_path_keys, k), new cljs.core.Keyword(null, "highlighted", "highlighted", 3500421061), cljs.core.contains_QMARK_.call(null, new_path_highlights, k)], null));
      };
    }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths), update_path_keys);
    var _ = function() {
      var seq__45963 = cljs.core.seq.call(null, delete_path_keys);
      var chunk__45964 = null;
      var count__45965 = 0;
      var i__45966 = 0;
      while (true) {
        if (i__45966 < count__45965) {
          var k = cljs.core._nth.call(null, chunk__45964, i__45966);
          var temp__4124__auto___45969 = cljs.core.get.call(null, paths, k);
          if (cljs.core.truth_(temp__4124__auto___45969)) {
            var path_45970 = temp__4124__auto___45969;
            clustermap.components.map.delete_path.call(null, leaflet_map, path_45970);
          } else {
          }
          var G__45971 = seq__45963;
          var G__45972 = chunk__45964;
          var G__45973 = count__45965;
          var G__45974 = i__45966 + 1;
          seq__45963 = G__45971;
          chunk__45964 = G__45972;
          count__45965 = G__45973;
          i__45966 = G__45974;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq.call(null, seq__45963);
          if (temp__4126__auto__) {
            var seq__45963__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__45963__$1)) {
              var c__4295__auto__ = cljs.core.chunk_first.call(null, seq__45963__$1);
              var G__45975 = cljs.core.chunk_rest.call(null, seq__45963__$1);
              var G__45976 = c__4295__auto__;
              var G__45977 = cljs.core.count.call(null, c__4295__auto__);
              var G__45978 = 0;
              seq__45963 = G__45975;
              chunk__45964 = G__45976;
              count__45965 = G__45977;
              i__45966 = G__45978;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__45963__$1);
              var temp__4124__auto___45979 = cljs.core.get.call(null, paths, k);
              if (cljs.core.truth_(temp__4124__auto___45979)) {
                var path_45980 = temp__4124__auto___45979;
                clustermap.components.map.delete_path.call(null, leaflet_map, path_45980);
              } else {
              }
              var G__45981 = cljs.core.next.call(null, seq__45963__$1);
              var G__45982 = null;
              var G__45983 = 0;
              var G__45984 = 0;
              seq__45963 = G__45981;
              chunk__45964 = G__45982;
              count__45965 = G__45983;
              i__45966 = G__45984;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }();
    var new_paths = cljs.core.reduce.call(null, function(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths, updated_paths, _) {
      return function(m, p__45967) {
        var map__45968 = p__45967;
        var map__45968__$1 = cljs.core.seq_QMARK_.call(null, map__45968) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45968) : map__45968;
        var path = map__45968__$1;
        var id = cljs.core.get.call(null, map__45968__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
        return cljs.core.assoc.call(null, m, id, path);
      };
    }(paths, path_keys, old_selection_path_keys, new_selection_path_keys, live_path_keys, create_path_keys, delete_path_keys, update_path_keys, created_paths, updated_paths, _), cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, cljs.core.identity, cljs.core.concat.call(null, created_paths, updated_paths)));
    cljs.core.reset_BANG_.call(null, path_selections_atom, new_selection_path_keys);
    return cljs.core.reset_BANG_.call(null, paths_atom, new_paths);
  } else {
    return null;
  }
};
clustermap.components.map.pan_to_selection = function pan_to_selection(owner, leaflet_map, paths_atom, path_selections_atom) {
  var paths = cljs.core.deref.call(null, paths_atom);
  var path_selections = cljs.core.deref.call(null, path_selections_atom);
  if (cljs.core.empty_QMARK_.call(null, path_selections)) {
    return clustermap.components.map.locate_map.call(null, leaflet_map);
  } else {
    if (cljs.core.empty_QMARK_.call(null, paths)) {
      return om.core.set_state.call(null, owner, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121), true);
    } else {
      if (cljs.core.truth_(om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121)))) {
        om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121), false);
      } else {
      }
      var temp__4124__auto__ = function() {
        var G__45986 = cljs.core.select_keys.call(null, paths, path_selections);
        var G__45986__$1 = G__45986 == null ? null : cljs.core.vals.call(null, G__45986);
        var G__45986__$2 = G__45986__$1 == null ? null : cljs.core.map.call(null, new cljs.core.Keyword(null, "bounds", "bounds", 3925666343), G__45986__$1);
        var G__45986__$3 = G__45986__$2 == null ? null : cljs.core.not_empty.call(null, G__45986__$2);
        return G__45986__$3;
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var bounds = temp__4124__auto__;
        return cljs.core.apply.call(null, clustermap.components.map.pan_to_show, leaflet_map, bounds);
      } else {
        return clustermap.components.map.pan_to_show.call(null, clustermap.components.map.initial_bounds);
      }
    }
  }
};
clustermap.components.map.constituency_marker_popup_content = function constituency_marker_popup_content(path_fn, constituency) {
  var bl_id = function() {
    var G__45990 = constituency;
    var G__45990__$1 = G__45990 == null ? null : G__45990.properties;
    var G__45990__$2 = G__45990__$1 == null ? null : G__45990__$1.id;
    return G__45990__$2;
  }();
  var bl_name = function() {
    var G__45991 = constituency;
    var G__45991__$1 = G__45991 == null ? null : G__45991.properties;
    var G__45991__$2 = G__45991__$1 == null ? null : G__45991__$1.compact_name;
    return G__45991__$2;
  }();
  return "\x3ca" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "href", "href", 1017115293), path_fn.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110), new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "boundaryline_id", "boundaryline_id", 3312170318), bl_id, new cljs.core.Keyword(null, 
  "compact_name", "compact_name", 1128032665), bl_name], null)), new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), null], null))) + "\x3e" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
    var attrs45992 = bl_name;
    if (cljs.core.map_QMARK_.call(null, attrs45992)) {
      return "\x3cp" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "class", "class", 1108647146), "map-marker-constituency-name"], null), attrs45992))) + " /\x3e";
    } else {
      return'\x3cp class\x3d"map-marker-constituency-name"\x3e' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccups.runtime.render_html.call(null, attrs45992)) + "\x3c/p\x3e";
    }
  }()) + "\x3c/a\x3e";
};
clustermap.components.map.map_component = function map_component(p__45993, owner) {
  var map__46012 = p__45993;
  var map__46012__$1 = cljs.core.seq_QMARK_.call(null, map__46012) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46012) : map__46012;
  var app_state = map__46012__$1;
  var selection = cljs.core.get.call(null, map__46012__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
  if (typeof clustermap.components.map.t46013 !== "undefined") {
  } else {
    clustermap.components.map.t46013 = function(selection, app_state, map__46012, owner, p__45993, map_component, meta46014) {
      this.selection = selection;
      this.app_state = app_state;
      this.map__46012 = map__46012;
      this.owner = owner;
      this.p__45993 = p__45993;
      this.map_component = map_component;
      this.meta46014 = meta46014;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clustermap.components.map.t46013.cljs$lang$type = true;
    clustermap.components.map.t46013.cljs$lang$ctorStr = "clustermap.components.map/t46013";
    clustermap.components.map.t46013.cljs$lang$ctorPrWriter = function(map__46012, map__46012__$1, app_state, selection) {
      return function(this__4106__auto__, writer__4107__auto__, opt__4108__auto__) {
        return cljs.core._write.call(null, writer__4107__auto__, "clustermap.components.map/t46013");
      };
    }(map__46012, map__46012__$1, app_state, selection);
    clustermap.components.map.t46013.prototype.om$core$IWillUpdate$ = true;
    clustermap.components.map.t46013.prototype.om$core$IWillUpdate$will_update$arity$3 = function(map__46012, map__46012__$1, app_state, selection) {
      return function(this$, p__46016, p__46017) {
        var self__ = this;
        var map__46018 = p__46016;
        var map__46018__$1 = cljs.core.seq_QMARK_.call(null, map__46018) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46018) : map__46018;
        var next_selection = cljs.core.get.call(null, map__46018__$1, new cljs.core.Keyword(null, "selection", "selection", 3592905982));
        var next_locations = cljs.core.get.call(null, map__46018__$1, new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", 1821239162));
        var next_uk_constituencies = cljs.core.get.call(null, map__46018__$1, new cljs.core.Keyword(null, "uk-constituencies", "uk-constituencies", 2507232365));
        var next_uk_constituencies_rtree = cljs.core.get.call(null, map__46018__$1, new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600));
        var next_boundarylines = cljs.core.get.call(null, map__46018__$1, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847));
        var next_zoom = cljs.core.get.call(null, map__46018__$1, new cljs.core.Keyword(null, "zoom", "zoom", 1017648965));
        var map__46019 = p__46017;
        var map__46019__$1 = cljs.core.seq_QMARK_.call(null, map__46019) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46019) : map__46019;
        var next_path_highlights = cljs.core.get.call(null, map__46019__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745));
        var this$__$1 = this;
        var map__46020 = om.core.get_props.call(null, self__.owner);
        var map__46020__$1 = cljs.core.seq_QMARK_.call(null, map__46020) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46020) : map__46020;
        var uk_constituencies_rtree = cljs.core.get.call(null, map__46020__$1, new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600));
        var map__46021 = om.core.get_shared.call(null, self__.owner);
        var map__46021__$1 = cljs.core.seq_QMARK_.call(null, map__46021) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46021) : map__46021;
        var path_fn = cljs.core.get.call(null, map__46021__$1, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570));
        var link_fn = cljs.core.get.call(null, map__46021__$1, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301));
        var fetch_boundaryline_fn = cljs.core.get.call(null, map__46021__$1, new cljs.core.Keyword(null, "fetch-boundaryline-fn", "fetch-boundaryline-fn", 3464186934));
        var comm = cljs.core.get.call(null, map__46021__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
        var map__46022 = om.core.get_state.call(null, self__.owner);
        var map__46022__$1 = cljs.core.seq_QMARK_.call(null, map__46022) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46022) : map__46022;
        var map__46023 = cljs.core.get.call(null, map__46022__$1, new cljs.core.Keyword(null, "map", "map", 1014012110));
        var map__46023__$1 = cljs.core.seq_QMARK_.call(null, map__46023) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46023) : map__46023;
        var path_selections = cljs.core.get.call(null, map__46023__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", 512369281));
        var paths = cljs.core.get.call(null, map__46023__$1, new cljs.core.Keyword(null, "paths", "paths", 1120343136));
        var markers = cljs.core.get.call(null, map__46023__$1, new cljs.core.Keyword(null, "markers", "markers", 1853155051));
        var leaflet_map = cljs.core.get.call(null, map__46023__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", 4353500414));
        var pan_pending = cljs.core.get.call(null, map__46022__$1, new cljs.core.Keyword(null, "pan-pending", "pan-pending", 3214812121));
        var path_highlights = cljs.core.get.call(null, map__46022__$1, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745));
        var mousemove_listener = cljs.core.get.call(null, map__46022__$1, new cljs.core.Keyword(null, "mousemove-listener", "mousemove-listener", 3228037661));
        var click_listener = cljs.core.get.call(null, map__46022__$1, new cljs.core.Keyword(null, "click-listener", "click-listener", 1807691467));
        clustermap.components.map.update_markers.call(null, path_fn, leaflet_map, markers, next_locations);
        if (cljs.core.not_EQ_.call(null, next_uk_constituencies_rtree, uk_constituencies_rtree)) {
          om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "mousemove-listener", "mousemove-listener", 3228037661), function(map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, 
          next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__46019, map__46019__$1, next_path_highlights, map__46012, map__46012__$1, app_state, selection) {
            return function(e) {
              var lat = e.latlng.lat;
              var lng = e.latlng.lng;
              var hits = clustermap.rtree.point_in_polygons.call(null, next_uk_constituencies_rtree, lng, lat);
              var hit_path_ids = cljs.core.map.call(null, function(lat, lng, hits, map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, 
              next_boundarylines, next_zoom, map__46019, map__46019__$1, next_path_highlights, map__46012, map__46012__$1, app_state, selection) {
                return function(hit) {
                  return hit.properties.id;
                };
              }(lat, lng, hits, map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__46019, map__46019__$1, 
              next_path_highlights, map__46012, map__46012__$1, app_state, selection), hits);
              var highlight_hit = cljs.core.first.call(null, hits);
              var highlight_path_ids = cljs.core.set.call(null, cljs.core.take.call(null, 1, hit_path_ids));
              var old_path_highlights = om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745));
              if (cljs.core.truth_(function() {
                var and__3527__auto__ = highlight_hit;
                if (cljs.core.truth_(and__3527__auto__)) {
                  return cljs.core.not_EQ_.call(null, old_path_highlights, highlight_path_ids) && cljs.core.not.call(null, om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 4726192654)));
                } else {
                  return and__3527__auto__;
                }
              }())) {
                var G__46024_46030 = L.popup();
                G__46024_46030.setLatLng(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lat, lng], null)));
                G__46024_46030.setContent(clustermap.components.map.constituency_marker_popup_content.call(null, path_fn, highlight_hit));
                G__46024_46030.openOn(leaflet_map);
              } else {
              }
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745), highlight_path_ids);
            };
          }(map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__46019, map__46019__$1, next_path_highlights, 
          map__46012, map__46012__$1, app_state, selection));
          if (cljs.core.truth_(mousemove_listener)) {
            leaflet_map.off("mousemove", mousemove_listener);
          } else {
          }
          leaflet_map.on("mousemove", om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "mousemove-listener", "mousemove-listener", 3228037661)));
          om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "click-listener", "click-listener", 1807691467), function(map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, 
          next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__46019, map__46019__$1, next_path_highlights, map__46012, map__46012__$1, app_state, selection) {
            return function(e) {
              var hits = clustermap.rtree.point_in_polygons.call(null, next_uk_constituencies_rtree, e.latlng.lng, e.latlng.lat);
              var hit_path_ids = cljs.core.map.call(null, function(hits, map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, 
              next_zoom, map__46019, map__46019__$1, next_path_highlights, map__46012, map__46012__$1, app_state, selection) {
                return function(hit) {
                  return hit.properties.id;
                };
              }(hits, map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__46019, map__46019__$1, 
              next_path_highlights, map__46012, map__46012__$1, app_state, selection), hits);
              return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), cljs.core.first.call(null, hit_path_ids)], null)], null));
            };
          }(map__46020, map__46020__$1, uk_constituencies_rtree, map__46021, map__46021__$1, path_fn, link_fn, fetch_boundaryline_fn, comm, map__46022, map__46022__$1, map__46023, map__46023__$1, path_selections, paths, markers, leaflet_map, pan_pending, path_highlights, mousemove_listener, click_listener, this$__$1, map__46018, map__46018__$1, next_selection, next_locations, next_uk_constituencies, next_uk_constituencies_rtree, next_boundarylines, next_zoom, map__46019, map__46019__$1, next_path_highlights, 
          map__46012, map__46012__$1, app_state, selection));
          if (cljs.core.truth_(click_listener)) {
            leaflet_map.off("click", click_listener);
          } else {
          }
          leaflet_map.on("click", om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "click-listener", "click-listener", 1807691467)));
        } else {
        }
        if (cljs.core.truth_(next_uk_constituencies)) {
          clustermap.components.map.update_paths.call(null, comm, fetch_boundaryline_fn, next_uk_constituencies, leaflet_map, paths, path_selections, next_path_highlights, next_locations);
        } else {
        }
        if (cljs.core.truth_(function() {
          var or__3539__auto__ = pan_pending;
          if (cljs.core.truth_(or__3539__auto__)) {
            return or__3539__auto__;
          } else {
            return cljs.core.not_EQ_.call(null, next_selection, self__.selection);
          }
        }())) {
          return clustermap.components.map.pan_to_selection.call(null, self__.owner, leaflet_map, paths, path_selections);
        } else {
          return null;
        }
      };
    }(map__46012, map__46012__$1, app_state, selection);
    clustermap.components.map.t46013.prototype.om$core$IDidMount$ = true;
    clustermap.components.map.t46013.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__46012, map__46012__$1, app_state, selection) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        var node = om.core.get_node.call(null, self__.owner);
        var map__46025 = clustermap.components.map.create_map.call(null, node);
        var map__46025__$1 = cljs.core.seq_QMARK_.call(null, map__46025) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46025) : map__46025;
        var map = map__46025__$1;
        var path = cljs.core.get.call(null, map__46025__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
        var markers = cljs.core.get.call(null, map__46025__$1, new cljs.core.Keyword(null, "markers", "markers", 1853155051));
        var leaflet_map = cljs.core.get.call(null, map__46025__$1, new cljs.core.Keyword(null, "leaflet-map", "leaflet-map", 4353500414));
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "map", "map", 1014012110), map);
        om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "path-highlights", "path-highlights", 2524998745), cljs.core.PersistentHashSet.EMPTY);
        leaflet_map.on("zoomend", function(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection) {
          return function(e) {
            return cljs.core.swap_BANG_.call(null, om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "app-state", "app-state", 1424976215)), cljs.core.assoc, new cljs.core.Keyword(null, "zoom", "zoom", 1017648965), leaflet_map.getZoom());
          };
        }(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection));
        leaflet_map.on("popupopen", function(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection) {
          return function(e) {
            var popup_el = e.popup._container;
            var marker_popup_location_list_cnt = jayq.core.$.call(null, popup_el).find(".map-marker-popup-location-list").length;
            if (marker_popup_location_list_cnt > 0) {
              om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 4726192654), true);
            } else {
            }
            return jayq.core.$.call(null, popup_el).on("mousemove", function(popup_el, marker_popup_location_list_cnt, node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection) {
              return function(e__$1) {
                e__$1.preventDefault();
                return false;
              };
            }(popup_el, marker_popup_location_list_cnt, node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection));
          };
        }(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection));
        leaflet_map.on("popupclose", function(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection) {
          return function(e) {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "popup-selected", "popup-selected", 4726192654), null);
          };
        }(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection));
        jayq.core.$.call(null, document).on("clustermap-change-view", function(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection) {
          return function(e) {
            var map__46026 = om.core.get_state.call(null, self__.owner);
            var map__46026__$1 = cljs.core.seq_QMARK_.call(null, map__46026) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46026) : map__46026;
            var map__46027 = cljs.core.get.call(null, map__46026__$1, new cljs.core.Keyword(null, "map", "map", 1014012110));
            var map__46027__$1 = cljs.core.seq_QMARK_.call(null, map__46027) ? cljs.core.apply.call(null, cljs.core.hash_map, map__46027) : map__46027;
            var path_selections = cljs.core.get.call(null, map__46027__$1, new cljs.core.Keyword(null, "path-selections", "path-selections", 512369281));
            var paths = cljs.core.get.call(null, map__46027__$1, new cljs.core.Keyword(null, "paths", "paths", 1120343136));
            leaflet_map.invalidateSize();
            return clustermap.components.map.pan_to_selection.call(null, self__.owner, leaflet_map, paths, path_selections);
          };
        }(node, map__46025, map__46025__$1, map, path, markers, leaflet_map, this$__$1, map__46012, map__46012__$1, app_state, selection));
        return om.core.update_BANG_.call(null, self__.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "zoom", "zoom", 1017648965), leaflet_map.getZoom());
      };
    }(map__46012, map__46012__$1, app_state, selection);
    clustermap.components.map.t46013.prototype.om$core$IRender$ = true;
    clustermap.components.map.t46013.prototype.om$core$IRender$render$arity$1 = function(map__46012, map__46012__$1, app_state, selection) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return React.DOM.div({"className":"map", "ref":"map"});
      };
    }(map__46012, map__46012__$1, app_state, selection);
    clustermap.components.map.t46013.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__46012, map__46012__$1, app_state, selection) {
      return function(_46015) {
        var self__ = this;
        var _46015__$1 = this;
        return self__.meta46014;
      };
    }(map__46012, map__46012__$1, app_state, selection);
    clustermap.components.map.t46013.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__46012, map__46012__$1, app_state, selection) {
      return function(_46015, meta46014__$1) {
        var self__ = this;
        var _46015__$1 = this;
        return new clustermap.components.map.t46013(self__.selection, self__.app_state, self__.map__46012, self__.owner, self__.p__45993, self__.map_component, meta46014__$1);
      };
    }(map__46012, map__46012__$1, app_state, selection);
    clustermap.components.map.__GT_t46013 = function(map__46012, map__46012__$1, app_state, selection) {
      return function __GT_t46013(selection__$1, app_state__$1, map__46012__$2, owner__$1, p__45993__$1, map_component__$1, meta46014) {
        return new clustermap.components.map.t46013(selection__$1, app_state__$1, map__46012__$2, owner__$1, p__45993__$1, map_component__$1, meta46014);
      };
    }(map__46012, map__46012__$1, app_state, selection);
  }
  return new clustermap.components.map.t46013(selection, app_state, map__46012__$1, owner, p__45993, map_component, null);
};
clustermap.components.map.mount = function mount(app_state, elem_id, shared) {
  return om.core.root.call(null, clustermap.components.map.map_component, app_state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), cljs.core.merge.call(null, shared, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "app-state", "app-state", 1424976215), app_state, new cljs.core.Keyword(null, "fetch-boundaryline-fn", "fetch-boundaryline-fn", 3464186934), cljs.core.partial.call(null, clustermap.boundarylines.get_or_fetch_best_boundaryline, 
  app_state, new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847))], null)), new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById(elem_id)], null));
};
goog.provide("clustermap.app");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clustermap.boundarylines");
goog.require("secretary.core");
goog.require("clustermap.components.map");
goog.require("clustermap.nav");
goog.require("om.dom");
goog.require("goog.history.EventType");
goog.require("clustermap.rtree");
goog.require("clustermap.routes");
goog.require("om.dom");
goog.require("clustermap.api");
goog.require("clustermap.rtree");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.full_report");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("goog.events");
goog.require("clustermap.boundarylines");
goog.require("clustermap.ganalytics");
goog.require("clustermap.components.search");
goog.require("clustermap.components.map_report");
goog.require("clustermap.components.map_report");
goog.require("clustermap.routes");
goog.require("clustermap.components.full_report");
goog.require("clustermap.components.search");
goog.require("om.core");
goog.require("om.core");
goog.require("secretary.core");
goog.require("clustermap.components.page_title");
goog.require("clustermap.nav");
goog.require("clustermap.components.page_title");
goog.require("goog.events");
goog.require("clustermap.components.map");
goog.require("clustermap.api");
clustermap.app.state = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "selector", "selector", 2205476689), new cljs.core.Keyword(null, "zoom", "zoom", 1017648965), new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600), new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 2486056771), new cljs.core.Keyword(null, "uk-constituencies", "uk-constituencies", 2507232365), new cljs.core.Keyword(null, 
"selection-investment-stats", "selection-investment-stats", 4568560312), new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", 1821239162), new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 1845704779), new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", 4566552504), new cljs.core.Keyword(null, "all-portfolio-company-site-stats", 
"all-portfolio-company-site-stats", 1130880684), new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685), new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 4247521796), new cljs.core.Keyword(null, "search-results", "search-results", 1025331267), new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.Keyword(null, "boundarylines", "boundarylines", 2397299847), new cljs.core.Keyword(null, 
"selection-investments", "selection-investments", 2385751217), new cljs.core.Keyword(null, "view", "view", 1017523735)], [null, null, null, null, null, null, null, null, null, null, null, null, cljs.core.PersistentArrayMap.EMPTY, null, null, null, new cljs.core.Keyword(null, "map", "map", 1014012110)]));
clustermap.app.new_state = function new_state(state, path_values) {
  return cljs.core.reduce.call(null, function(s, p__45202) {
    var vec__45203 = p__45202;
    var key_or_path = cljs.core.nth.call(null, vec__45203, 0, null);
    var value_or_fn = cljs.core.nth.call(null, vec__45203, 1, null);
    var path = cljs.core.sequential_QMARK_.call(null, key_or_path) ? key_or_path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_path], null);
    return cljs.core.update_in.call(null, s, path, cljs.core.fn_QMARK_.call(null, value_or_fn) ? value_or_fn : function(path, vec__45203, key_or_path, value_or_fn) {
      return function(ov) {
        return value_or_fn;
      };
    }(path, vec__45203, key_or_path, value_or_fn));
  }, state, path_values);
};
clustermap.app.set_state = function() {
  var set_state__delegate = function(p__45204) {
    var map__45206 = p__45204;
    var map__45206__$1 = cljs.core.seq_QMARK_.call(null, map__45206) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45206) : map__45206;
    var path_values = map__45206__$1;
    return cljs.core.swap_BANG_.call(null, clustermap.app.state, clustermap.app.new_state, path_values);
  };
  var set_state = function(var_args) {
    var p__45204 = null;
    if (arguments.length > 0) {
      p__45204 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return set_state__delegate.call(this, p__45204);
  };
  set_state.cljs$lang$maxFixedArity = 0;
  set_state.cljs$lang$applyTo = function(arglist__45207) {
    var p__45204 = cljs.core.seq(arglist__45207);
    return set_state__delegate(p__45204);
  };
  set_state.cljs$core$IFn$_invoke$arity$variadic = set_state__delegate;
  return set_state;
}();
clustermap.app.load_uk_constituencies = function load_uk_constituencies() {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_45229) {
            var state_val_45230 = state_45229[1];
            if (state_val_45230 === 2) {
              var inst_45225 = state_45229[2];
              var inst_45226 = clustermap.rtree.rtree_index.call(null, inst_45225);
              var inst_45227 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "uk-constituencies", "uk-constituencies", 2507232365), inst_45225, new cljs.core.Keyword(null, "uk-constituencies-rtree", "uk-constituencies-rtree", 3542903600), inst_45226);
              var state_45229__$1 = state_45229;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45229__$1, inst_45227);
            } else {
              if (state_val_45230 === 1) {
                var inst_45223 = clustermap.api.boundaryline_collection_index.call(null, "uk_constituencies", new cljs.core.Keyword(null, "raw", "raw", 1014016922), true);
                var state_45229__$1 = state_45229;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45229__$1, 2, inst_45223);
              } else {
                return null;
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_45234 = [null, null, null, null, null, null, null];
              statearr_45234[0] = state_machine__5675__auto__;
              statearr_45234[1] = 1;
              return statearr_45234;
            };
            var state_machine__5675__auto____1 = function(state_45229) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_45229);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e45235) {
                    if (e45235 instanceof Object) {
                      var ex__5678__auto__ = e45235;
                      var statearr_45236_45238 = state_45229;
                      statearr_45236_45238[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45229);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45235;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45239 = state_45229;
                  state_45229 = G__45239;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_45229) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_45229);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_45237 = f__5690__auto__.call(null);
        statearr_45237[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_45237;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
clustermap.app.load_all_investment_stats = function load_all_investment_stats() {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_45259) {
            var state_val_45260 = state_45259[1];
            if (state_val_45260 === 2) {
              var inst_45256 = state_45259[2];
              var inst_45257 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "all-investment-stats", "all-investment-stats", 2486056771), inst_45256);
              var state_45259__$1 = state_45259;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45259__$1, inst_45257);
            } else {
              if (state_val_45260 === 1) {
                var inst_45254 = clustermap.api.investment_stats.call(null);
                var state_45259__$1 = state_45259;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45259__$1, 2, inst_45254);
              } else {
                return null;
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_45264 = [null, null, null, null, null, null, null];
              statearr_45264[0] = state_machine__5675__auto__;
              statearr_45264[1] = 1;
              return statearr_45264;
            };
            var state_machine__5675__auto____1 = function(state_45259) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_45259);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e45265) {
                    if (e45265 instanceof Object) {
                      var ex__5678__auto__ = e45265;
                      var statearr_45266_45268 = state_45259;
                      statearr_45266_45268[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45259);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45265;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45269 = state_45259;
                  state_45259 = G__45269;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_45259) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_45259);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_45267 = f__5690__auto__.call(null);
        statearr_45267[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_45267;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
clustermap.app.process_search_results = function process_search_results(results) {
  return clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "search-results", "search-results", 1025331267), cljs.core.js__GT_clj.call(null, results));
};
clustermap.app.process_selection = function process_selection(p__45270, type) {
  var vec__45272 = p__45270;
  var selection = cljs.core.nth.call(null, vec__45272, 0, null);
  var selection_investment_stats = cljs.core.nth.call(null, vec__45272, 1, null);
  var selection_investment_account_timelines = cljs.core.nth.call(null, vec__45272, 2, null);
  var selection_investment_aggs = cljs.core.nth.call(null, vec__45272, 3, null);
  var selection_investments = cljs.core.nth.call(null, vec__45272, 4, null);
  var selection_portfolio_company_locations = cljs.core.nth.call(null, vec__45272, 5, null);
  return clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection", "selection", 3592905982), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), type, new cljs.core.Keyword(null, "value", "value", 1125876963), selection], null), new cljs.core.Keyword(null, "selection-investment-stats", "selection-investment-stats", 4568560312), selection_investment_stats, new cljs.core.Keyword(null, "selection-investment-account-timelines", "selection-investment-account-timelines", 
  1845704779), selection_investment_account_timelines, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685), selection_investment_aggs, new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217), selection_investments, new cljs.core.Keyword(null, "selection-portfolio-company-locations", "selection-portfolio-company-locations", 1821239162), selection_portfolio_company_locations);
};
clustermap.app.make_selection = function make_selection(p__45273) {
  var vec__45278 = p__45273;
  var type = cljs.core.nth.call(null, vec__45278, 0, null);
  var id = cljs.core.nth.call(null, vec__45278, 1, null);
  var selector = cljs.core.truth_(type) ? new cljs.core.PersistentArrayMap.fromArray([type, id], true, false) : cljs.core.PersistentArrayMap.EMPTY;
  var old_selector = (new cljs.core.Keyword(null, "selector", "selector", 2205476689)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state));
  if (cljs.core.not_EQ_.call(null, selector, old_selector)) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selector", "selector", 2205476689), selector);
    var pred__45279 = cljs.core._EQ_;
    var expr__45280 = type;
    if (cljs.core.truth_(pred__45279.call(null, new cljs.core.Keyword(null, "portfolio-company", "portfolio-company", 3606204522), expr__45280))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.portfolio_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
      selector)], null), type], null);
    } else {
      if (cljs.core.truth_(pred__45279.call(null, new cljs.core.Keyword(null, "investor-company", "investor-company", 3983736762), expr__45280))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.investor_company.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
        selector)], null), type], null);
      } else {
        if (cljs.core.truth_(pred__45279.call(null, new cljs.core.Keyword(null, "constituency", "constituency", 3902864696), expr__45280))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [clustermap.api.constituency.call(null, id), clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), clustermap.api.portfolio_company_locations.call(null, 
          selector)], null), type], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, clustermap.api.investment_stats.call(null, selector), clustermap.api.investment_account_timelines.call(null, selector), clustermap.api.investment_aggs.call(null, selector), clustermap.api.investments.call(null, selector), null], null), type], null);
        }
      }
    }
  } else {
    return null;
  }
};
clustermap.app.change_view = function change_view(view) {
  var view__$1 = cljs.core.keyword.call(null, view);
  if (cljs.core.not_EQ_.call(null, view__$1, (new cljs.core.Keyword(null, "view", "view", 1017523735)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, clustermap.app.state)))) {
    clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "view", "view", 1017523735), view__$1);
    return clustermap.nav.change_view.call(null, cljs.core.name.call(null, view__$1));
  } else {
    return null;
  }
};
clustermap.app.history = new goog.History;
clustermap.app.set_route = function set_route(view, type, id) {
  if (cljs.core.truth_(function() {
    var and__3527__auto__ = type;
    if (cljs.core.truth_(and__3527__auto__)) {
      return id;
    } else {
      return and__3527__auto__;
    }
  }())) {
    return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, function() {
      var or__3539__auto__ = view;
      if (cljs.core.truth_(or__3539__auto__)) {
        return or__3539__auto__;
      } else {
        return "map";
      }
    }())) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, type)) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, id)));
  } else {
    if (cljs.core.truth_(view)) {
      return clustermap.app.history.setToken("/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name.call(null, view)));
    } else {
      if (true) {
        return clustermap.app.history.setToken("");
      } else {
        return null;
      }
    }
  }
};
clustermap.app.parse_route = function parse_route() {
  var fragment = clustermap.app.history.getToken();
  var vec__45283 = cljs.core.re_matches.call(null, /\/([^\/]+)(?:\/([^\/]+)\/(.+))?$/, fragment);
  var _ = cljs.core.nth.call(null, vec__45283, 0, null);
  var view = cljs.core.nth.call(null, vec__45283, 1, null);
  var type = cljs.core.nth.call(null, vec__45283, 2, null);
  var id = cljs.core.nth.call(null, vec__45283, 3, null);
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "view", "view", 1017523735), view, new cljs.core.Keyword(null, "type", "type", 1017479852), type, new cljs.core.Keyword(null, "id", "id", 1013907597), id], null);
};
clustermap.app.set_selection_route = function set_selection_route(p__45284) {
  var vec__45287 = p__45284;
  var type = cljs.core.nth.call(null, vec__45287, 0, null);
  var id = cljs.core.nth.call(null, vec__45287, 1, null);
  var map__45288 = clustermap.app.parse_route.call(null);
  var map__45288__$1 = cljs.core.seq_QMARK_.call(null, map__45288) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45288) : map__45288;
  var view = cljs.core.get.call(null, map__45288__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.set_view_route = function set_view_route(view) {
  var map__45290 = clustermap.app.parse_route.call(null);
  var map__45290__$1 = cljs.core.seq_QMARK_.call(null, map__45290) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45290) : map__45290;
  var id = cljs.core.get.call(null, map__45290__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var type = cljs.core.get.call(null, map__45290__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  return clustermap.app.set_route.call(null, view, type, id);
};
clustermap.app.update_selection_investment_aggs_table_view = function update_selection_investment_aggs_table_view(table_view) {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_45323) {
            var state_val_45324 = state_45323[1];
            if (state_val_45324 === 2) {
              var inst_45314 = state_45323[7];
              var inst_45320 = state_45323[2];
              var inst_45321 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", 4566552504), inst_45314, new cljs.core.Keyword(null, "selection-investment-aggs", "selection-investment-aggs", 989474685), inst_45320);
              var state_45323__$1 = state_45323;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45323__$1, inst_45321);
            } else {
              if (state_val_45324 === 1) {
                var inst_45314 = state_45323[7];
                var inst_45312 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_45313 = (new cljs.core.Keyword(null, "selection-investment-aggs-table-view", "selection-investment-aggs-table-view", 4566552504)).cljs$core$IFn$_invoke$arity$1(inst_45312);
                var inst_45314__$1 = cljs.core.merge.call(null, inst_45313, table_view);
                var inst_45315 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_45316 = (new cljs.core.Keyword(null, "selector", "selector", 2205476689)).cljs$core$IFn$_invoke$arity$1(inst_45315);
                var inst_45317 = cljs.core.merge.call(null, inst_45316, inst_45314__$1);
                var inst_45318 = clustermap.api.investment_aggs.call(null, inst_45317);
                var state_45323__$1 = function() {
                  var statearr_45325 = state_45323;
                  statearr_45325[7] = inst_45314__$1;
                  return statearr_45325;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45323__$1, 2, inst_45318);
              } else {
                return null;
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_45329 = [null, null, null, null, null, null, null, null];
              statearr_45329[0] = state_machine__5675__auto__;
              statearr_45329[1] = 1;
              return statearr_45329;
            };
            var state_machine__5675__auto____1 = function(state_45323) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_45323);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e45330) {
                    if (e45330 instanceof Object) {
                      var ex__5678__auto__ = e45330;
                      var statearr_45331_45333 = state_45323;
                      statearr_45331_45333[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45323);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45330;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45334 = state_45323;
                  state_45323 = G__45334;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_45323) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_45323);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_45332 = f__5690__auto__.call(null);
        statearr_45332[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_45332;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
clustermap.app.update_selection_investments_table_view = function update_selection_investments_table_view(table_view) {
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__) {
          return function(state_45367) {
            var state_val_45368 = state_45367[1];
            if (state_val_45368 === 2) {
              var inst_45358 = state_45367[7];
              var inst_45364 = state_45367[2];
              var inst_45365 = clustermap.app.set_state.call(null, new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 4247521796), inst_45358, new cljs.core.Keyword(null, "selection-investments", "selection-investments", 2385751217), inst_45364);
              var state_45367__$1 = state_45367;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45367__$1, inst_45365);
            } else {
              if (state_val_45368 === 1) {
                var inst_45358 = state_45367[7];
                var inst_45356 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_45357 = (new cljs.core.Keyword(null, "selection-investments-table-view", "selection-investments-table-view", 4247521796)).cljs$core$IFn$_invoke$arity$1(inst_45356);
                var inst_45358__$1 = cljs.core.merge.call(null, inst_45357, table_view);
                var inst_45359 = cljs.core.deref.call(null, clustermap.app.state);
                var inst_45360 = (new cljs.core.Keyword(null, "selector", "selector", 2205476689)).cljs$core$IFn$_invoke$arity$1(inst_45359);
                var inst_45361 = cljs.core.merge.call(null, inst_45360, inst_45358__$1);
                var inst_45362 = clustermap.api.investments.call(null, inst_45361);
                var state_45367__$1 = function() {
                  var statearr_45369 = state_45367;
                  statearr_45369[7] = inst_45358__$1;
                  return statearr_45369;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45367__$1, 2, inst_45362);
              } else {
                return null;
              }
            }
          };
        }(c__5689__auto__);
        return function(switch__5674__auto__, c__5689__auto__) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_45373 = [null, null, null, null, null, null, null, null];
              statearr_45373[0] = state_machine__5675__auto__;
              statearr_45373[1] = 1;
              return statearr_45373;
            };
            var state_machine__5675__auto____1 = function(state_45367) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_45367);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e45374) {
                    if (e45374 instanceof Object) {
                      var ex__5678__auto__ = e45374;
                      var statearr_45375_45377 = state_45367;
                      statearr_45375_45377[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45367);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45374;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45378 = state_45367;
                  state_45367 = G__45378;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_45367) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_45367);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__);
      }();
      var state__5691__auto__ = function() {
        var statearr_45376 = f__5690__auto__.call(null);
        statearr_45376[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_45376;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__));
  return c__5689__auto__;
};
clustermap.app.event_handlers = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "search", "search", 4402534682), clustermap.api.ordered_api.call(null, clustermap.api.search, clustermap.app.process_search_results), new cljs.core.Keyword(null, "select", "select", 4402849902), clustermap.app.set_selection_route, new cljs.core.Keyword(null, "route-select", "route-select", 529886322), clustermap.api.ordered_api.call(null, clustermap.app.make_selection, clustermap.app.process_selection), 
new cljs.core.Keyword(null, "change-view", "change-view", 3608283668), clustermap.app.set_view_route, new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), clustermap.app.change_view, new cljs.core.Keyword(null, "update-selection-investment-aggs-table-view", "update-selection-investment-aggs-table-view", 4073717308), clustermap.app.update_selection_investment_aggs_table_view, new cljs.core.Keyword(null, "update-selection-investments-table-view", "update-selection-investments-table-view", 
4277131912), clustermap.app.update_selection_investments_table_view], null);
clustermap.app.handle_event = function handle_event(type, val) {
  var handler = cljs.core.get.call(null, clustermap.app.event_handlers, type);
  if (cljs.core.not.call(null, handler)) {
    throw new Error("no handler for event-type: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type));
  } else {
  }
  return handler.call(null, val);
};
clustermap.app.init_routes = function init_routes(comm) {
  var action__9443__auto___45395 = function(params__9444__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9444__auto__)) {
      var map__45387 = params__9444__auto__;
      var map__45387__$1 = cljs.core.seq_QMARK_.call(null, map__45387) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45387) : map__45387;
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9444__auto__)) {
        var vec__45388 = params__9444__auto__;
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "", action__9443__auto___45395);
  var action__9443__auto___45396 = function(params__9444__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9444__auto__)) {
      var map__45389 = params__9444__auto__;
      var map__45389__$1 = cljs.core.seq_QMARK_.call(null, map__45389) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45389) : map__45389;
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9444__auto__)) {
        var vec__45390 = params__9444__auto__;
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/", action__9443__auto___45396);
  var action__9443__auto___45397 = function(params__9444__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9444__auto__)) {
      var map__45391 = params__9444__auto__;
      var map__45391__$1 = cljs.core.seq_QMARK_.call(null, map__45391) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45391) : map__45391;
      var view = cljs.core.get.call(null, map__45391__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
      cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9444__auto__)) {
        var vec__45392 = params__9444__auto__;
        var view = cljs.core.nth.call(null, vec__45392, 0, null);
        cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), null], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view", action__9443__auto___45397);
  var action__9443__auto___45398 = function(params__9444__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__9444__auto__)) {
      var map__45393 = params__9444__auto__;
      var map__45393__$1 = cljs.core.seq_QMARK_.call(null, map__45393) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45393) : map__45393;
      var id = cljs.core.get.call(null, map__45393__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
      var type = cljs.core.get.call(null, map__45393__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
      var view = cljs.core.get.call(null, map__45393__$1, new cljs.core.Keyword(null, "view", "view", 1017523735));
      cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, type), id], null)], null));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__9444__auto__)) {
        var vec__45394 = params__9444__auto__;
        var view = cljs.core.nth.call(null, vec__45394, 0, null);
        var type = cljs.core.nth.call(null, vec__45394, 1, null);
        var id = cljs.core.nth.call(null, vec__45394, 2, null);
        cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-change-view", "route-change-view", 1856546960), view], null));
        return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "route-select", "route-select", 529886322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, type), id], null)], null));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/:view/:type/:id", action__9443__auto___45398);
  goog.events.listen(clustermap.app.history, goog.history.EventType.NAVIGATE, function(e) {
    var token = e.token;
    clustermap.ganalytics.send_pageview.call(null, token);
    return secretary.core.dispatch_BANG_.call(null, token);
  });
  return clustermap.app.history.setEnabled(true);
};
clustermap.app.init = function init() {
  var comm = cljs.core.async.chan.call(null);
  var path_fn = clustermap.routes.path_for;
  var link_fn = clustermap.routes.link_for;
  var shared = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), comm, new cljs.core.Keyword(null, "path-fn", "path-fn", 4517369570), path_fn, new cljs.core.Keyword(null, "link-fn", "link-fn", 1190936301), link_fn], null);
  clustermap.nav.init.call(null, comm);
  clustermap.app.init_routes.call(null, comm);
  clustermap.app.load_uk_constituencies.call(null);
  clustermap.app.load_all_investment_stats.call(null);
  clustermap.components.map.mount.call(null, clustermap.app.state, "map-component", shared);
  clustermap.components.search.mount.call(null, clustermap.app.state, "search-component", shared);
  clustermap.components.map_report.mount.call(null, clustermap.app.state, "map-report-component", shared);
  clustermap.components.page_title.mount.call(null, clustermap.app.state, "page-title-component", shared);
  clustermap.components.full_report.mount.call(null, clustermap.app.state, "full-report-component", shared);
  var c__5689__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto__, comm, path_fn, link_fn, shared) {
    return function() {
      var f__5690__auto__ = function() {
        var switch__5674__auto__ = function(c__5689__auto__, comm, path_fn, link_fn, shared) {
          return function(state_45445) {
            var state_val_45446 = state_45445[1];
            if (state_val_45446 === 7) {
              var inst_45434 = state_45445[2];
              var inst_45435 = cljs.core.nth.call(null, inst_45434, 0, null);
              var inst_45436 = cljs.core.nth.call(null, inst_45434, 1, null);
              var inst_45437 = clustermap.app.handle_event.call(null, inst_45435, inst_45436);
              var state_45445__$1 = function() {
                var statearr_45447 = state_45445;
                statearr_45447[7] = inst_45437;
                return statearr_45447;
              }();
              var statearr_45448_45461 = state_45445__$1;
              statearr_45448_45461[2] = null;
              statearr_45448_45461[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_45446 === 6) {
                var inst_45441 = state_45445[2];
                var state_45445__$1 = state_45445;
                var statearr_45449_45462 = state_45445__$1;
                statearr_45449_45462[2] = inst_45441;
                statearr_45449_45462[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_45446 === 5) {
                  var state_45445__$1 = state_45445;
                  var statearr_45450_45463 = state_45445__$1;
                  statearr_45450_45463[2] = null;
                  statearr_45450_45463[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_45446 === 4) {
                    var state_45445__$1 = state_45445;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45445__$1, 7, comm);
                  } else {
                    if (state_val_45446 === 3) {
                      var inst_45443 = state_45445[2];
                      var state_45445__$1 = state_45445;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45445__$1, inst_45443);
                    } else {
                      if (state_val_45446 === 2) {
                        var state_45445__$1 = state_45445;
                        if (true) {
                          var statearr_45451_45464 = state_45445__$1;
                          statearr_45451_45464[1] = 4;
                        } else {
                          var statearr_45452_45465 = state_45445__$1;
                          statearr_45452_45465[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_45446 === 1) {
                          var state_45445__$1 = state_45445;
                          var statearr_45453_45466 = state_45445__$1;
                          statearr_45453_45466[2] = null;
                          statearr_45453_45466[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5689__auto__, comm, path_fn, link_fn, shared);
        return function(switch__5674__auto__, c__5689__auto__, comm, path_fn, link_fn, shared) {
          return function() {
            var state_machine__5675__auto__ = null;
            var state_machine__5675__auto____0 = function() {
              var statearr_45457 = [null, null, null, null, null, null, null, null];
              statearr_45457[0] = state_machine__5675__auto__;
              statearr_45457[1] = 1;
              return statearr_45457;
            };
            var state_machine__5675__auto____1 = function(state_45445) {
              while (true) {
                var ret_value__5676__auto__ = function() {
                  try {
                    while (true) {
                      var result__5677__auto__ = switch__5674__auto__.call(null, state_45445);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__5677__auto__;
                      }
                      break;
                    }
                  } catch (e45458) {
                    if (e45458 instanceof Object) {
                      var ex__5678__auto__ = e45458;
                      var statearr_45459_45467 = state_45445;
                      statearr_45459_45467[5] = ex__5678__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45445);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e45458;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__45468 = state_45445;
                  state_45445 = G__45468;
                  continue;
                } else {
                  return ret_value__5676__auto__;
                }
                break;
              }
            };
            state_machine__5675__auto__ = function(state_45445) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5675__auto____0.call(this);
                case 1:
                  return state_machine__5675__auto____1.call(this, state_45445);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
            state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
            return state_machine__5675__auto__;
          }();
        }(switch__5674__auto__, c__5689__auto__, comm, path_fn, link_fn, shared);
      }();
      var state__5691__auto__ = function() {
        var statearr_45460 = f__5690__auto__.call(null);
        statearr_45460[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto__;
        return statearr_45460;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
    };
  }(c__5689__auto__, comm, path_fn, link_fn, shared));
  return c__5689__auto__;
};
goog.provide("clustermap.core");
goog.require("cljs.core");
goog.require("clustermap.app");
goog.require("clustermap.app");
goog.require("clojure.browser.repl");
clustermap.core.init = function init() {
  return clustermap.app.init.call(null);
};
if (cljs.core.truth_(config.repl)) {
  setTimeout(clustermap.core.init, 2E3);
} else {
  if (true) {
    clustermap.core.init.call(null);
  } else {
  }
}
;goog.provide("clustermap.async");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
clustermap.async.map_async = function() {
  var map_async__delegate = function(f, colls) {
    var coll_chs = cljs.core.map.call(null, function(coll) {
      var ch = cljs.core.async.chan.call(null);
      cljs.core.async.onto_chan.call(null, ch, coll);
      return ch;
    }, colls);
    return cljs.core.async.map.call(null, f, coll_chs);
  };
  var map_async = function(f, var_args) {
    var colls = null;
    if (arguments.length > 1) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map_async__delegate.call(this, f, colls);
  };
  map_async.cljs$lang$maxFixedArity = 1;
  map_async.cljs$lang$applyTo = function(arglist__45469) {
    var f = cljs.core.first(arglist__45469);
    var colls = cljs.core.rest(arglist__45469);
    return map_async__delegate(f, colls);
  };
  map_async.cljs$core$IFn$_invoke$arity$variadic = map_async__delegate;
  return map_async;
}();
clustermap.async.dorun_async = function() {
  var dorun_async__delegate = function(ch, p__45470) {
    var map__45530 = p__45470;
    var map__45530__$1 = cljs.core.seq_QMARK_.call(null, map__45530) ? cljs.core.apply.call(null, cljs.core.hash_map, map__45530) : map__45530;
    var delay = cljs.core.get.call(null, map__45530__$1, new cljs.core.Keyword(null, "delay", "delay", 1109372149));
    var log = cljs.core.get.call(null, map__45530__$1, new cljs.core.Keyword(null, "log", "log", 1014011574));
    var c__5689__auto___45589 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5689__auto___45589, map__45530, map__45530__$1, delay, log) {
      return function() {
        var f__5690__auto__ = function() {
          var switch__5674__auto__ = function(c__5689__auto___45589, map__45530, map__45530__$1, delay, log) {
            return function(state_45559) {
              var state_val_45560 = state_45559[1];
              if (state_val_45560 === 7) {
                var inst_45550 = state_45559[2];
                var state_45559__$1 = state_45559;
                if (cljs.core.truth_(inst_45550)) {
                  var statearr_45561_45590 = state_45559__$1;
                  statearr_45561_45590[1] = 15;
                } else {
                  var statearr_45562_45591 = state_45559__$1;
                  statearr_45562_45591[1] = 16;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_45560 === 1) {
                  var state_45559__$1 = state_45559;
                  var statearr_45563_45592 = state_45559__$1;
                  statearr_45563_45592[2] = null;
                  statearr_45563_45592[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_45560 === 4) {
                    var inst_45533 = state_45559[7];
                    var inst_45533__$1 = state_45559[2];
                    var state_45559__$1 = function() {
                      var statearr_45564 = state_45559;
                      statearr_45564[7] = inst_45533__$1;
                      return statearr_45564;
                    }();
                    if (cljs.core.truth_(inst_45533__$1)) {
                      var statearr_45565_45593 = state_45559__$1;
                      statearr_45565_45593[1] = 5;
                    } else {
                      var statearr_45566_45594 = state_45559__$1;
                      statearr_45566_45594[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_45560 === 15) {
                      var state_45559__$1 = state_45559;
                      var statearr_45567_45595 = state_45559__$1;
                      statearr_45567_45595[2] = null;
                      statearr_45567_45595[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_45560 === 13) {
                        var state_45559__$1 = state_45559;
                        var statearr_45568_45596 = state_45559__$1;
                        statearr_45568_45596[2] = null;
                        statearr_45568_45596[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_45560 === 6) {
                          var state_45559__$1 = state_45559;
                          var statearr_45569_45597 = state_45559__$1;
                          statearr_45569_45597[2] = null;
                          statearr_45569_45597[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_45560 === 17) {
                            var inst_45555 = state_45559[2];
                            var state_45559__$1 = state_45559;
                            var statearr_45570_45598 = state_45559__$1;
                            statearr_45570_45598[2] = inst_45555;
                            statearr_45570_45598[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_45560 === 3) {
                              var inst_45557 = state_45559[2];
                              var state_45559__$1 = state_45559;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_45559__$1, inst_45557);
                            } else {
                              if (state_val_45560 === 12) {
                                var inst_45533 = state_45559[7];
                                var inst_45543 = cljs.core.clj__GT_js.call(null, inst_45533);
                                var inst_45544 = console.log(inst_45543);
                                var state_45559__$1 = state_45559;
                                var statearr_45571_45599 = state_45559__$1;
                                statearr_45571_45599[2] = inst_45544;
                                statearr_45571_45599[1] = 14;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_45560 === 2) {
                                  var state_45559__$1 = state_45559;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45559__$1, 4, ch);
                                } else {
                                  if (state_val_45560 === 11) {
                                    var inst_45538 = state_45559[2];
                                    var state_45559__$1 = state_45559;
                                    var statearr_45572_45600 = state_45559__$1;
                                    statearr_45572_45600[2] = inst_45538;
                                    statearr_45572_45600[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_45560 === 9) {
                                      var state_45559__$1 = state_45559;
                                      var statearr_45573_45601 = state_45559__$1;
                                      statearr_45573_45601[2] = null;
                                      statearr_45573_45601[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_45560 === 5) {
                                        var state_45559__$1 = state_45559;
                                        if (cljs.core.truth_(delay)) {
                                          var statearr_45574_45602 = state_45559__$1;
                                          statearr_45574_45602[1] = 8;
                                        } else {
                                          var statearr_45575_45603 = state_45559__$1;
                                          statearr_45575_45603[1] = 9;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_45560 === 14) {
                                          var inst_45533 = state_45559[7];
                                          var inst_45547 = state_45559[2];
                                          var state_45559__$1 = function() {
                                            var statearr_45576 = state_45559;
                                            statearr_45576[8] = inst_45547;
                                            return statearr_45576;
                                          }();
                                          var statearr_45577_45604 = state_45559__$1;
                                          statearr_45577_45604[2] = inst_45533;
                                          statearr_45577_45604[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_45560 === 16) {
                                            var state_45559__$1 = state_45559;
                                            var statearr_45578_45605 = state_45559__$1;
                                            statearr_45578_45605[2] = null;
                                            statearr_45578_45605[1] = 17;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_45560 === 10) {
                                              var inst_45541 = state_45559[2];
                                              var state_45559__$1 = function() {
                                                var statearr_45579 = state_45559;
                                                statearr_45579[9] = inst_45541;
                                                return statearr_45579;
                                              }();
                                              if (cljs.core.truth_(log)) {
                                                var statearr_45580_45606 = state_45559__$1;
                                                statearr_45580_45606[1] = 12;
                                              } else {
                                                var statearr_45581_45607 = state_45559__$1;
                                                statearr_45581_45607[1] = 13;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_45560 === 8) {
                                                var inst_45536 = cljs.core.async.timeout.call(null, delay);
                                                var state_45559__$1 = state_45559;
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_45559__$1, 11, inst_45536);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5689__auto___45589, map__45530, map__45530__$1, delay, log);
          return function(switch__5674__auto__, c__5689__auto___45589, map__45530, map__45530__$1, delay, log) {
            return function() {
              var state_machine__5675__auto__ = null;
              var state_machine__5675__auto____0 = function() {
                var statearr_45585 = [null, null, null, null, null, null, null, null, null, null];
                statearr_45585[0] = state_machine__5675__auto__;
                statearr_45585[1] = 1;
                return statearr_45585;
              };
              var state_machine__5675__auto____1 = function(state_45559) {
                while (true) {
                  var ret_value__5676__auto__ = function() {
                    try {
                      while (true) {
                        var result__5677__auto__ = switch__5674__auto__.call(null, state_45559);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5677__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__5677__auto__;
                        }
                        break;
                      }
                    } catch (e45586) {
                      if (e45586 instanceof Object) {
                        var ex__5678__auto__ = e45586;
                        var statearr_45587_45608 = state_45559;
                        statearr_45587_45608[5] = ex__5678__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_45559);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e45586;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5676__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__45609 = state_45559;
                    state_45559 = G__45609;
                    continue;
                  } else {
                    return ret_value__5676__auto__;
                  }
                  break;
                }
              };
              state_machine__5675__auto__ = function(state_45559) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5675__auto____0.call(this);
                  case 1:
                    return state_machine__5675__auto____1.call(this, state_45559);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5675__auto____0;
              state_machine__5675__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5675__auto____1;
              return state_machine__5675__auto__;
            }();
          }(switch__5674__auto__, c__5689__auto___45589, map__45530, map__45530__$1, delay, log);
        }();
        var state__5691__auto__ = function() {
          var statearr_45588 = f__5690__auto__.call(null);
          statearr_45588[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5689__auto___45589;
          return statearr_45588;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5691__auto__);
      };
    }(c__5689__auto___45589, map__45530, map__45530__$1, delay, log));
    return null;
  };
  var dorun_async = function(ch, var_args) {
    var p__45470 = null;
    if (arguments.length > 1) {
      p__45470 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dorun_async__delegate.call(this, ch, p__45470);
  };
  dorun_async.cljs$lang$maxFixedArity = 1;
  dorun_async.cljs$lang$applyTo = function(arglist__45610) {
    var ch = cljs.core.first(arglist__45610);
    var p__45470 = cljs.core.rest(arglist__45610);
    return dorun_async__delegate(ch, p__45470);
  };
  dorun_async.cljs$core$IFn$_invoke$arity$variadic = dorun_async__delegate;
  return dorun_async;
}();

//# sourceMappingURL=clustermap.js.map